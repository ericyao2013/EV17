

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Aug 11 22:25:29 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 1.42
    84                           ; Generated 13/04/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F45K22 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  001E9C                     __pidataCOMRAM:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _COBS_DECODE_DST_BUF_LEN_MAX
   123  001E9C  001E               	dw	30
   124                           
   125                           ;initializer for _COBS_ENCODE_DST_BUF_LEN_MAX
   126  001E9E  001E               	dw	30
   127                           
   128                           ;initializer for _readwhat
   129  001EA0  0001               	dw	1
   130                           
   131                           ;initializer for _Transmit_stall
   132  001EA2  01                 	db	1
   133  0000                     _CCPTMRS1bits	set	3912
   134  0000                     _ANSELCbits	set	3898
   135  0000                     _ANSELE	set	3900
   136  0000                     _ANSELD	set	3899
   137  0000                     _ANSELC	set	3898
   138  0000                     _ANSELB	set	3897
   139  0000                     _ANSELA	set	3896
   140  0000                     _ANSB4	set	31180
   141  0000                     _ANSD7	set	31199
   142  0000                     _ANSB3	set	31179
   143  0000                     _RC1STAbits	set	4011
   144  0000                     _RCREG1	set	4014
   145  0000                     _TXREG1	set	4013
   146  0000                     _SPBRGH1	set	4016
   147  0000                     _SPBRG1	set	4015
   148  0000                     _TX1STA	set	4012
   149  0000                     _RC1STA	set	4011
   150  0000                     _BAUD1CON	set	4024
   151  0000                     _T2CONbits	set	4026
   152  0000                     _TMR2	set	4028
   153  0000                     _PR2	set	4027
   154  0000                     _T2CON	set	4026
   155  0000                     _CCPR2H	set	3944
   156  0000                     _CCPR2L	set	3943
   157  0000                     _CCP2CON	set	3942
   158  0000                     _T1GCONbits	set	4044
   159  0000                     _T1CONbits	set	4045
   160  0000                     _TMR1L	set	4046
   161  0000                     _TMR1H	set	4047
   162  0000                     _T1GCON	set	4044
   163  0000                     _T1CON	set	4045
   164  0000                     _TRISDbits	set	3989
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _LATCbits	set	3979
   167  0000                     _TRISCbits	set	3988
   168  0000                     _TRISE	set	3990
   169  0000                     _LATE	set	3981
   170  0000                     _TRISD	set	3989
   171  0000                     _LATD	set	3980
   172  0000                     _TRISC	set	3988
   173  0000                     _LATC	set	3979
   174  0000                     _WPUB	set	3937
   175  0000                     _TRISB	set	3987
   176  0000                     _LATB	set	3978
   177  0000                     _TRISA	set	3986
   178  0000                     _LATA	set	3977
   179  0000                     _EEDATA	set	4008
   180  0000                     _EEADR	set	4009
   181  0000                     _EECON2	set	4007
   182  0000                     _EECON1bits	set	4006
   183  0000                     _INTCONbits	set	4082
   184  0000                     _TABLAT	set	4085
   185  0000                     _TBLPTRL	set	4086
   186  0000                     _TBLPTRH	set	4087
   187  0000                     _TBLPTRU	set	4088
   188  0000                     _OSCTUNE	set	3995
   189  0000                     _OSCCON2	set	4050
   190  0000                     _OSCCON	set	4051
   191  0000                     _PIE1bits	set	3997
   192  0000                     _IPR1bits	set	3999
   193  0000                     _RCONbits	set	4048
   194  0000                     _PIR1bits	set	3998
   195  0000                     _ADCON0bits	set	4034
   196  0000                     _ADRESH	set	4036
   197  0000                     _ADRESL	set	4035
   198  0000                     _ADCON2bits	set	4032
   199  0000                     _ADCON2	set	4032
   200  0000                     _ADCON1	set	4033
   201  0000                     _ADCON0	set	4034
   202  0000                     _LATC5	set	31837
   203  0000                     _LATB3	set	31827
   204  0000                     _LATB5	set	31829
   205  0000                     _LATD6	set	31846
   206  0000                     _LATD4	set	31844
   207  0000                     _LATD7	set	31847
   208  0000                     _LATB0	set	31824
   209  0000                     _LATD5	set	31845
   210  0000                     _TRISB5	set	31901
   211  0000                     _TRISB3	set	31899
   212  0000                     _TRISB4	set	31900
   213  0000                     _LATB4	set	31828
   214                           
   215                           ; #config settings
   216  0000                     
   217                           	psect	cinit
   218  001846                     __pcinit:
   219                           	opt stack 0
   220  001846                     start_initialization:
   221                           	opt stack 0
   222  001846                     __initialization:
   223                           	opt stack 0
   224                           
   225                           ; Initialize objects allocated to COMRAM (7 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  001846  0E9C               	movlw	low __pidataCOMRAM
   228  001848  6EF6               	movwf	tblptrl,c
   229  00184A  0E1E               	movlw	high __pidataCOMRAM
   230  00184C  6EF7               	movwf	tblptrh,c
   231  00184E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  001850  6EF8               	movwf	tblptru,c
   233  001852  EE00  F03C         	lfsr	0,__pdataCOMRAM
   234  001856  EE10 F007          	lfsr	1,7
   235  00185A                     copy_data0:
   236  00185A  0009               	tblrd		*+
   237  00185C  CFF5 FFEE          	movff	tablat,postinc0
   238  001860  50E5               	movf	postdec1,w,c
   239  001862  50E1               	movf	fsr1l,w,c
   240  001864  E1FA               	bnz	copy_data0
   241                           
   242                           ; Clear objects allocated to BANK3 (206 bytes)
   243  001866  EE03  F000         	lfsr	0,__pbssBANK3
   244  00186A  0ECE               	movlw	206
   245  00186C                     clear_0:
   246  00186C  6AEE               	clrf	postinc0,c
   247  00186E  06E8               	decf	wreg,f,c
   248  001870  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BANK2 (206 bytes)
   251  001872  EE02  F000         	lfsr	0,__pbssBANK2
   252  001876  0ECE               	movlw	206
   253  001878                     clear_1:
   254  001878  6AEE               	clrf	postinc0,c
   255  00187A  06E8               	decf	wreg,f,c
   256  00187C  E1FD               	bnz	clear_1
   257                           
   258                           ; Clear objects allocated to BANK1 (108 bytes)
   259  00187E  EE01  F000         	lfsr	0,__pbssBANK1
   260  001882  0E6C               	movlw	108
   261  001884                     clear_2:
   262  001884  6AEE               	clrf	postinc0,c
   263  001886  06E8               	decf	wreg,f,c
   264  001888  E1FD               	bnz	clear_2
   265                           
   266                           ; Clear objects allocated to BANK0 (66 bytes)
   267  00188A  EE00  F0BE         	lfsr	0,__pbssBANK0
   268  00188E  0E42               	movlw	66
   269  001890                     clear_3:
   270  001890  6AEE               	clrf	postinc0,c
   271  001892  06E8               	decf	wreg,f,c
   272  001894  E1FD               	bnz	clear_3
   273                           
   274                           ; Clear objects allocated to COMRAM (14 bytes)
   275  001896  EE00  F02E         	lfsr	0,__pbssCOMRAM
   276  00189A  0E0E               	movlw	14
   277  00189C                     clear_4:
   278  00189C  6AEE               	clrf	postinc0,c
   279  00189E  06E8               	decf	wreg,f,c
   280  0018A0  E1FD               	bnz	clear_4
   281  0018A2                     end_of_initialization:
   282                           	opt stack 0
   283  0018A2                     __end_of__initialization:
   284                           	opt stack 0
   285  0018A2  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  0018A4  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  0018A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  0018A8  6EF8               	movwf	tblptru,c
   289  0018AA  0100               	movlb	0
   290  0018AC  EFF5  F005         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssCOMRAM
   301  00002E                     __pbssCOMRAM:
   302                           	opt stack 0
   303  00002E                     _DataTableArrayTwo:
   304                           	opt stack 0
   305  00002E                     	ds	3
   306  000031                     cobs_decode@F192:
   307                           	opt stack 0
   308  000031                     	ds	3
   309  000034                     cobs_encode@F180:
   310                           	opt stack 0
   311  000034                     	ds	3
   312  000037                     _prev_pos:
   313                           	opt stack 0
   314  000037                     	ds	2
   315  000039                     _timer1ReloadVal:
   316                           	opt stack 0
   317  000039                     	ds	2
   318  00003B                     _MCSOn:
   319                           	opt stack 0
   320  00003B                     	ds	1
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	dataCOMRAM
   331  00003C                     __pdataCOMRAM:
   332                           	opt stack 0
   333  00003C                     _COBS_DECODE_DST_BUF_LEN_MAX:
   334                           	opt stack 0
   335  00003C                     	ds	2
   336  00003E                     _COBS_ENCODE_DST_BUF_LEN_MAX:
   337                           	opt stack 0
   338  00003E                     	ds	2
   339  000040                     _readwhat:
   340                           	opt stack 0
   341  000040                     	ds	2
   342  000042                     _Transmit_stall:
   343                           	opt stack 0
   344  000042                     	ds	1
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	bssBANK0
   355  0000BE                     __pbssBANK0:
   356                           	opt stack 0
   357  0000BE                     _Current:
   358                           	opt stack 0
   359  0000BE                     	ds	12
   360  0000CA                     _CurrentADC:
   361                           	opt stack 0
   362  0000CA                     	ds	12
   363  0000D6                     _data:
   364                           	opt stack 0
   365  0000D6                     	ds	12
   366  0000E2                     _Currentcomp:
   367                           	opt stack 0
   368  0000E2                     	ds	12
   369  0000EE                     _DataTableArrayOne:
   370                           	opt stack 0
   371  0000EE                     	ds	10
   372  0000F8                     _PDUFalult:
   373                           	opt stack 0
   374  0000F8                     	ds	8
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssBANK1
   385  000100                     __pbssBANK1:
   386                           	opt stack 0
   387  000100                     _registers:
   388                           	opt stack 0
   389  000100                     	ds	48
   390  000130                     _ProcessArray:
   391                           	opt stack 0
   392  000130                     	ds	30
   393  00014E                     _ReciveArray:
   394                           	opt stack 0
   395  00014E                     	ds	30
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1l	equ	0xFE1
   404                           
   405                           	psect	bssBANK2
   406  000200                     __pbssBANK2:
   407                           	opt stack 0
   408  000200                     _input_buffer:
   409                           	opt stack 0
   410  000200                     	ds	206
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420                           	psect	bssBANK3
   421  000300                     __pbssBANK3:
   422                           	opt stack 0
   423  000300                     _output_buffer:
   424                           	opt stack 0
   425  000300                     	ds	206
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	cstackBANK1
   436  00016C                     __pcstackBANK1:
   437                           	opt stack 0
   438  00016C                     ComController@DataToSend:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x0
   442  00016C                     	ds	4
   443  000170                     ??_receiveData:
   444                           
   445                           ; 1 bytes @ 0x4
   446  000170                     	ds	5
   447  000175                     receiveData@CS:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x9
   451  000175                     	ds	1
   452  000176                     receiveData@i:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456  000176                     	ds	2
   457  000178                     receiveData@Data:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xC
   461  000178                     	ds	1
   462  000179                     receiveData@result:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0xD
   466  000179                     	ds	3
   467  00017C                     main@j:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471  00017C                     	ds	2
   472  00017E                     main@i:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x12
   476  00017E                     	ds	2
   477  000180                     main@UP:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x14
   481  000180                     	ds	1
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	cstackBANK0
   492  000060                     __pcstackBANK0:
   493                           	opt stack 0
   494  000060                     PotSetpoint@set_point:
   495                           	opt stack 0
   496  000060                     cobs_encode@src_end_ptr:
   497                           	opt stack 0
   498  000060                     cobs_decode@src_end_ptr:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x0
   502  000060                     	ds	2
   503  000062                     cobs_encode@src_byte:
   504                           	opt stack 0
   505  000062                     PotSetpoint@x:
   506                           	opt stack 0
   507  000062                     cobs_decode@dst_buf_end_ptr:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x2
   511  000062                     	ds	1
   512  000063                     cobs_encode@dst_buf_end_ptr:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x3
   516  000063                     	ds	1
   517  000064                     cobs_decode@src_byte:
   518                           	opt stack 0
   519  000064                     PotSetpoint@new_pos:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x4
   523  000064                     	ds	1
   524  000065                     cobs_encode@search_len:
   525                           	opt stack 0
   526  000065                     cobs_decode@i:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x5
   530  000065                     	ds	1
   531  000066                     cobs_encode@dst_code_write_ptr:
   532                           	opt stack 0
   533  000066                     cobs_decode@remaining_bytes:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x6
   537  000066                     	ds	2
   538  000068                     cobs_encode@dst_write_ptr:
   539                           	opt stack 0
   540  000068                     cobs_decode@dst_write_ptr:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  000068                     	ds	2
   545  00006A                     cobs_decode@len_code:
   546                           	opt stack 0
   547  00006A                     cobs_encode@result:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0xA
   551  00006A                     	ds	1
   552  00006B                     cobs_decode@result:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0xB
   556  00006B                     	ds	2
   557  00006D                     sendData@ComandByte:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0xD
   561  00006D                     	ds	1
   562  00006E                     sendData@DataTable:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xE
   566  00006E                     	ds	1
   567  00006F                     sendData@DataTableIndex:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0xF
   571  00006F                     	ds	1
   572  000070                     sendData@DTS:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x10
   576  000070                     	ds	2
   577  000072                     sendData@lenth:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x12
   581  000072                     	ds	2
   582  000074                     sendData@COBSArray:
   583                           	opt stack 0
   584                           
   585                           ; 30 bytes @ 0x14
   586  000074                     	ds	30
   587  000092                     sendData@SendArray:
   588                           	opt stack 0
   589                           
   590                           ; 30 bytes @ 0x32
   591  000092                     	ds	30
   592  0000B0                     sendData@DataLenth:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x50
   596  0000B0                     	ds	1
   597  0000B1                     sendData@whereToSend:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x51
   601  0000B1                     	ds	1
   602  0000B2                     sendData@count:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x52
   606  0000B2                     	ds	2
   607  0000B4                     sendData@CS:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x54
   611  0000B4                     	ds	1
   612  0000B5                     sendData@result:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x55
   616  0000B5                     	ds	3
   617  0000B8                     sendData@i:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x58
   621  0000B8                     	ds	2
   622  0000BA                     ComController@DTI:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x5A
   626  0000BA                     	ds	2
   627  0000BC                     ComController@lenth:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x5C
   631  0000BC                     	ds	2
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1l	equ	0xFE1
   640                           
   641                           	psect	cstackCOMRAM
   642  000001                     __pcstackCOMRAM:
   643                           	opt stack 0
   644  000001                     ?_ADC_GetConversion:
   645                           	opt stack 0
   646  000001                     ?___wmul:
   647                           	opt stack 0
   648  000001                     ?i2_UART_buff_size:
   649                           	opt stack 0
   650  000001                     ?i2_UART_buff_modulo_inc:
   651                           	opt stack 0
   652  000001                     ___wmul@multiplier:
   653                           	opt stack 0
   654  000001                     i2SetPin595@Reg:
   655                           	opt stack 0
   656  000001                     i2UART_buff_size@_this:
   657                           	opt stack 0
   658  000001                     i2UART_buff_modulo_inc@value:
   659                           	opt stack 0
   660  000001                     i2Delay@wait:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x0
   664  000001                     	ds	2
   665  000003                     ??_ADC_GetConversion:
   666  000003                     ___wmul@multiplicand:
   667                           	opt stack 0
   668  000003                     i2SetPin595@pin:
   669                           	opt stack 0
   670  000003                     i2UART_buff_modulo_inc@modulus:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x2
   674  000003                     	ds	2
   675  000005                     ??i2_Delay:
   676  000005                     ADC_GetConversion@channel:
   677                           	opt stack 0
   678  000005                     ___wmul@product:
   679                           	opt stack 0
   680  000005                     i2SetPin595@value:
   681                           	opt stack 0
   682  000005                     i2UART_buff_modulo_inc@my_value:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x4
   686  000005                     	ds	1
   687  000006                     i2Delay@i:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x5
   691  000006                     	ds	1
   692  000007                     ??i2_SetPin595:
   693  000007                     FuseSystem@i_1200:
   694                           	opt stack 0
   695  000007                     i2UART_buff_put@_this:
   696                           	opt stack 0
   697  000007                     i2UART_buff_get@_this:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x6
   701  000007                     	ds	2
   702  000009                     ??i2_UART_buff_get:
   703  000009                     i2UART_buff_put@c:
   704                           	opt stack 0
   705  000009                     FuseSystem@i:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x8
   709  000009                     	ds	1
   710  00000A                     ??i2_UART_buff_put:
   711  00000A                     i2writeRegisters@val:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x9
   715  00000A                     	ds	1
   716  00000B                     i2UART_buff_get@c:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0xA
   720  00000B                     	ds	1
   721  00000C                     EUSART1_Receive_ISR@data:
   722                           	opt stack 0
   723  00000C                     i2writeRegisters@i:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0xB
   727  00000C                     	ds	2
   728  00000E                     ReadCurrent@gather:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0xD
   732  00000E                     	ds	1
   733  00000F                     ??_INTERRUPT_InterruptManager:
   734                           
   735                           ; 1 bytes @ 0xE
   736  00000F                     	ds	14
   737  00001D                     ?_UART_buff_modulo_inc:
   738                           	opt stack 0
   739  00001D                     ?_UART_buff_size:
   740                           	opt stack 0
   741  00001D                     ?_cobs_encode:
   742                           	opt stack 0
   743  00001D                     ?_cobs_decode:
   744                           	opt stack 0
   745  00001D                     DATAEE_WriteByte@bData:
   746                           	opt stack 0
   747  00001D                     DATAEE_ReadByte@bAdd:
   748                           	opt stack 0
   749  00001D                     GetDataDict@DataTableIndex:
   750                           	opt stack 0
   751  00001D                     PWM4_LoadDutyValue@dutyValue:
   752                           	opt stack 0
   753  00001D                     SetPin595@Reg:
   754                           	opt stack 0
   755  00001D                     UART_buff_size@_this:
   756                           	opt stack 0
   757  00001D                     UART_buff_modulo_inc@value:
   758                           	opt stack 0
   759  00001D                     CRC8@data:
   760                           	opt stack 0
   761  00001D                     cobs_encode@dst_buf_ptr:
   762                           	opt stack 0
   763  00001D                     cobs_decode@dst_buf_ptr:
   764                           	opt stack 0
   765  00001D                     memset@p1:
   766                           	opt stack 0
   767  00001D                     Delay@wait:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x1C
   771  00001D                     	ds	1
   772  00001E                     ??_ComputeStorageData:
   773  00001E                     DATAEE_WriteByte@bAdd:
   774                           	opt stack 0
   775  00001E                     GetDataDict@DataArray:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x1D
   779  00001E                     	ds	1
   780  00001F                     ??_PWM4_LoadDutyValue:
   781  00001F                     ?_Receive_available:
   782                           	opt stack 0
   783  00001F                     DATAEE_WriteByte@GIEBitValue:
   784                           	opt stack 0
   785  00001F                     CRC8@len:
   786                           	opt stack 0
   787  00001F                     SetPin595@pin:
   788                           	opt stack 0
   789  00001F                     UART_buff_modulo_inc@modulus:
   790                           	opt stack 0
   791  00001F                     cobs_encode@dst_buf_len:
   792                           	opt stack 0
   793  00001F                     cobs_decode@dst_buf_len:
   794                           	opt stack 0
   795  00001F                     memset@c:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x1E
   799  00001F                     	ds	1
   800  000020                     CRC8@sum:
   801                           	opt stack 0
   802  000020                     GetDataDict@numbofbytes:
   803                           	opt stack 0
   804  000020                     ComputeStorageData@i:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x1F
   808  000020                     	ds	1
   809  000021                     ??_Delay:
   810  000021                     CRC8@extract:
   811                           	opt stack 0
   812  000021                     GetDataDict@Error:
   813                           	opt stack 0
   814  000021                     SetPin595@value:
   815                           	opt stack 0
   816  000021                     UART_buff_modulo_inc@my_value:
   817                           	opt stack 0
   818  000021                     cobs_encode@src_ptr:
   819                           	opt stack 0
   820  000021                     cobs_decode@src_ptr:
   821                           	opt stack 0
   822  000021                     memset@n:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x20
   826  000021                     	ds	1
   827  000022                     CRC8@tempI:
   828                           	opt stack 0
   829  000022                     GetDataDict@DataTable:
   830                           	opt stack 0
   831  000022                     Delay@i:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x21
   835  000022                     	ds	1
   836  000023                     ??_SetPin595:
   837  000023                     CRC8@crc:
   838                           	opt stack 0
   839  000023                     GetDataDict@DataCount:
   840                           	opt stack 0
   841  000023                     UART_buff_put@_this:
   842                           	opt stack 0
   843  000023                     UART_buff_get@_this:
   844                           	opt stack 0
   845  000023                     cobs_encode@src_len:
   846                           	opt stack 0
   847  000023                     cobs_decode@src_len:
   848                           	opt stack 0
   849  000023                     memset@p:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x22
   853  000023                     	ds	1
   854  000024                     GetDataDict@ReturnCounter:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x23
   858  000024                     	ds	1
   859  000025                     ??_cobs_encode:
   860  000025                     ??_cobs_decode:
   861  000025                     ??_UART_buff_get:
   862  000025                     UART_buff_put@c:
   863                           	opt stack 0
   864  000025                     UART_buff_init@_this:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x24
   868  000025                     	ds	1
   869  000026                     ??_UART_buff_put:
   870  000026                     writeRegisters@val:
   871                           	opt stack 0
   872  000026                     PotSetpoint@new_point:
   873                           	opt stack 0
   874  000026                     PotClear@x:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x25
   878  000026                     	ds	1
   879  000027                     UART_buff_get@c:
   880                           	opt stack 0
   881  000027                     EnableSlavePower@onof:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x26
   885  000027                     	ds	1
   886  000028                     ??_PotSetpoint:
   887  000028                     Send_put@_data:
   888                           	opt stack 0
   889  000028                     writeRegisters@i:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x27
   893  000028                     	ds	1
   894  000029                     ??_sendData:
   895  000029                     EnableSlavePower@slave:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x28
   899  000029                     	ds	1
   900  00002A                     Clear595@i:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x29
   904  00002A                     	ds	2
   905  00002C                     
   906                           ; 1 bytes @ 0x2B
   907  00002C                     	ds	1
   908  00002D                     ??_ComController:
   909                           
   910                           ; 1 bytes @ 0x2C
   911  00002D                     	ds	1
   912  00002E                     tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           
   921                           ; 1 bytes @ 0x2D
   922 ;;
   923 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   924 ;;
   925 ;; *************** function _main *****************
   926 ;; Defined at:
   927 ;;		line 11 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  i               2   18[BANK1 ] int 
   932 ;;  j               2   16[BANK1 ] int 
   933 ;;  UP              1   20[BANK1 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   943 ;;      Params:         0       0       0       0       0       0       0
   944 ;;      Locals:         0       0       5       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0
   946 ;;      Totals:         0       0       5       0       0       0       0
   947 ;;Total ram usage:        5 bytes
   948 ;; Hardware stack levels required when called:   13
   949 ;; This function calls:
   950 ;;		_ComputeStorageData
   951 ;;		_CoolingCheck
   952 ;;		_CoolingStart
   953 ;;		_CoolingStop
   954 ;;		_DATAEE_WriteByte
   955 ;;		_PDUStartup
   956 ;;		_PWM4_LoadDutyValue
   957 ;;		_PotSetpoint
   958 ;;		_SYSTEM_Initialize
   959 ;;		_updateComms
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text0
   966  000BEA                     __ptext0:
   967                           	opt stack 0
   968  000BEA                     _main:
   969                           	opt stack 18
   970                           
   971                           ;main.c: 13: SYSTEM_Initialize();
   972                           
   973                           ;incstack = 0
   974  000BEA  EC96  F00E         	call	_SYSTEM_Initialize	;wreg free
   975                           
   976                           ;main.c: 14: PDUStartup();
   977  000BEE  EC58  F00C         	call	_PDUStartup	;wreg free
   978                           
   979                           ;main.c: 33: (INTCONbits.GIE = 1);
   980  000BF2  8EF2               	bsf	intcon,7,c	;volatile
   981                           
   982                           ;main.c: 36: (INTCONbits.PEIE = 1);
   983  000BF4  8CF2               	bsf	intcon,6,c	;volatile
   984                           
   985                           ;main.c: 43: DATAEE_WriteByte(0, 0x03);
   986  000BF6  0E03               	movlw	3
   987  000BF8  6E1D               	movwf	DATAEE_WriteByte@bData,c
   988  000BFA  0E00               	movlw	0
   989  000BFC  EC95  F00D         	call	_DATAEE_WriteByte
   990                           
   991                           ;main.c: 44: DATAEE_WriteByte(1, 0xE8);
   992  000C00  0EE8               	movlw	232
   993  000C02  6E1D               	movwf	DATAEE_WriteByte@bData,c
   994  000C04  0E01               	movlw	1
   995  000C06  EC95  F00D         	call	_DATAEE_WriteByte
   996                           
   997                           ;main.c: 45: DATAEE_WriteByte(2, 0x03);
   998  000C0A  0E03               	movlw	3
   999  000C0C  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1000  000C0E  0E02               	movlw	2
  1001  000C10  EC95  F00D         	call	_DATAEE_WriteByte
  1002                           
  1003                           ;main.c: 46: DATAEE_WriteByte(3, 0xE8);
  1004  000C14  0EE8               	movlw	232
  1005  000C16  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1006  000C18  0E03               	movlw	3
  1007  000C1A  EC95  F00D         	call	_DATAEE_WriteByte
  1008                           
  1009                           ;main.c: 47: DATAEE_WriteByte(4, 0x03);
  1010  000C1E  0E03               	movlw	3
  1011  000C20  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1012  000C22  0E04               	movlw	4
  1013  000C24  EC95  F00D         	call	_DATAEE_WriteByte
  1014                           
  1015                           ;main.c: 48: DATAEE_WriteByte(5, 0xE8);
  1016  000C28  0EE8               	movlw	232
  1017  000C2A  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1018  000C2C  0E05               	movlw	5
  1019  000C2E  EC95  F00D         	call	_DATAEE_WriteByte
  1020                           
  1021                           ;main.c: 49: DATAEE_WriteByte(6, 0x03);
  1022  000C32  0E03               	movlw	3
  1023  000C34  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1024  000C36  0E06               	movlw	6
  1025  000C38  EC95  F00D         	call	_DATAEE_WriteByte
  1026                           
  1027                           ;main.c: 50: DATAEE_WriteByte(7, 0xE8);
  1028  000C3C  0EE8               	movlw	232
  1029  000C3E  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1030  000C40  0E07               	movlw	7
  1031  000C42  EC95  F00D         	call	_DATAEE_WriteByte
  1032                           
  1033                           ;main.c: 51: DATAEE_WriteByte(8, 0x03);
  1034  000C46  0E03               	movlw	3
  1035  000C48  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1036  000C4A  0E08               	movlw	8
  1037  000C4C  EC95  F00D         	call	_DATAEE_WriteByte
  1038                           
  1039                           ;main.c: 52: DATAEE_WriteByte(9, 0xE8);
  1040  000C50  0EE8               	movlw	232
  1041  000C52  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1042  000C54  0E09               	movlw	9
  1043  000C56  EC95  F00D         	call	_DATAEE_WriteByte
  1044                           
  1045                           ;main.c: 53: DATAEE_WriteByte(10, 0x03);
  1046  000C5A  0E03               	movlw	3
  1047  000C5C  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1048  000C5E  0E0A               	movlw	10
  1049  000C60  EC95  F00D         	call	_DATAEE_WriteByte
  1050                           
  1051                           ;main.c: 54: DATAEE_WriteByte(11, 0xE8);
  1052  000C64  0EE8               	movlw	232
  1053  000C66  6E1D               	movwf	DATAEE_WriteByte@bData,c
  1054  000C68  0E0B               	movlw	11
  1055  000C6A  EC95  F00D         	call	_DATAEE_WriteByte
  1056                           
  1057                           ;main.c: 56: PotSetpoint(0);
  1058  000C6E  0E00               	movlw	0
  1059  000C70  6E27               	movwf	PotSetpoint@new_point+1,c
  1060  000C72  0E00               	movlw	0
  1061  000C74  6E26               	movwf	PotSetpoint@new_point,c
  1062  000C76  EC29  F008         	call	_PotSetpoint	;wreg free
  1063                           
  1064                           ;main.c: 57: PWM4_LoadDutyValue(0);
  1065  000C7A  0E00               	movlw	0
  1066  000C7C  6E1E               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  1067  000C7E  0E00               	movlw	0
  1068  000C80  6E1D               	movwf	PWM4_LoadDutyValue@dutyValue,c
  1069  000C82  ECFC  F00D         	call	_PWM4_LoadDutyValue	;wreg free
  1070                           
  1071                           ;main.c: 58: LATCbits.LATC5 = 0;
  1072  000C86  9A8B               	bcf	3979,5,c	;volatile
  1073                           
  1074                           ;main.c: 59: int i = 0;
  1075  000C88  0E00               	movlw	0
  1076  000C8A  0101               	movlb	1	; () banked
  1077  000C8C  6F7F               	movwf	(main@i+1)& (0+255),b
  1078  000C8E  0E00               	movlw	0
  1079  000C90  6F7E               	movwf	main@i& (0+255),b
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;main.c: 60: bool UP = 0;
  1083  000C92  0E00               	movlw	0
  1084  000C94  0101               	movlb	1	; () banked
  1085  000C96  6F80               	movwf	main@UP& (0+255),b
  1086                           
  1087                           ;main.c: 61: ComputeStorageData();
  1088  000C98  EC19  F009         	call	_ComputeStorageData	;wreg free
  1089                           
  1090                           ;main.c: 63: int j = 1;
  1091  000C9C  0E00               	movlw	0
  1092  000C9E  0101               	movlb	1	; () banked
  1093  000CA0  6F7D               	movwf	(main@j+1)& (0+255),b
  1094  000CA2  0E01               	movlw	1
  1095  000CA4  6F7C               	movwf	main@j& (0+255),b
  1096  000CA6                     l4365:
  1097                           
  1098                           ; BSR set to: 1
  1099                           ;main.c: 65: updateComms();
  1100  000CA6  EC52  F00F         	call	_updateComms	;wreg free
  1101                           
  1102                           ;main.c: 66: if(CoolingCheck() && UP == 0){
  1103  000CAA  EC5F  F00F         	call	_CoolingCheck	;wreg free
  1104  000CAE  0900               	iorlw	0
  1105  000CB0  B4D8               	btfsc	status,2,c
  1106  000CB2  D00A               	goto	l4375
  1107  000CB4  0101               	movlb	1	; () banked
  1108  000CB6  5180               	movf	main@UP& (0+255),w,b
  1109  000CB8  0101               	movlb	1	; () banked
  1110  000CBA  A4D8               	btfss	status,2,c
  1111  000CBC  D005               	goto	l4375
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 67: UP = 1;
  1115  000CBE  0E01               	movlw	1
  1116  000CC0  0101               	movlb	1	; () banked
  1117  000CC2  6F80               	movwf	main@UP& (0+255),b
  1118                           
  1119                           ; BSR set to: 1
  1120                           ;main.c: 68: CoolingStart();
  1121  000CC4  ECD8  F00E         	call	_CoolingStart	;wreg free
  1122  000CC8                     l4375:
  1123                           
  1124                           ;main.c: 69: }
  1125                           ;main.c: 70: if(!CoolingCheck() && UP == 1){
  1126  000CC8  EC5F  F00F         	call	_CoolingCheck	;wreg free
  1127  000CCC  0900               	iorlw	0
  1128  000CCE  A4D8               	btfss	status,2,c
  1129  000CD0  D009               	goto	l4383
  1130  000CD2  0101               	movlb	1	; () banked
  1131  000CD4  0580               	decf	main@UP& (0+255),w,b
  1132  000CD6  A4D8               	btfss	status,2,c
  1133  000CD8  D005               	goto	l4383
  1134                           
  1135                           ; BSR set to: 1
  1136                           ;main.c: 71: UP = 0;
  1137  000CDA  0E00               	movlw	0
  1138  000CDC  0101               	movlb	1	; () banked
  1139  000CDE  6F80               	movwf	main@UP& (0+255),b
  1140                           
  1141                           ; BSR set to: 1
  1142                           ;main.c: 72: CoolingStop();
  1143  000CE0  EC32  F00F         	call	_CoolingStop	;wreg free
  1144  000CE4                     l4383:
  1145                           
  1146                           ;main.c: 73: }
  1147                           ;main.c: 74: i++;
  1148  000CE4  0101               	movlb	1	; () banked
  1149  000CE6  4B7E               	infsnz	main@i& (0+255),f,b
  1150  000CE8  2B7F               	incf	(main@i+1)& (0+255),f,b
  1151                           
  1152                           ; BSR set to: 1
  1153                           ;main.c: 75: PWM4_LoadDutyValue(i);
  1154  000CEA  C17E  F01D         	movff	main@i,PWM4_LoadDutyValue@dutyValue
  1155  000CEE  C17F  F01E         	movff	main@i+1,PWM4_LoadDutyValue@dutyValue+1
  1156  000CF2  ECFC  F00D         	call	_PWM4_LoadDutyValue	;wreg free
  1157                           
  1158                           ;main.c: 76: if(i>500){
  1159  000CF6  0101               	movlb	1	; () banked
  1160  000CF8  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  1161  000CFA  D7D5               	goto	l4365
  1162  000CFC  0EF5               	movlw	245
  1163  000CFE  0101               	movlb	1	; () banked
  1164  000D00  5D7E               	subwf	main@i& (0+255),w,b
  1165  000D02  0E01               	movlw	1
  1166  000D04  0101               	movlb	1	; () banked
  1167  000D06  597F               	subwfb	(main@i+1)& (0+255),w,b
  1168  000D08  A0D8               	btfss	status,0,c
  1169  000D0A  D7CD               	goto	l4365
  1170                           
  1171                           ; BSR set to: 1
  1172                           ;main.c: 77: i = 0;
  1173  000D0C  0E00               	movlw	0
  1174  000D0E  0101               	movlb	1	; () banked
  1175  000D10  6F7F               	movwf	(main@i+1)& (0+255),b
  1176  000D12  0E00               	movlw	0
  1177  000D14  6F7E               	movwf	main@i& (0+255),b
  1178                           
  1179                           ; BSR set to: 1
  1180                           
  1181                           ; BSR set to: 1
  1182  000D16  D7C7               	goto	l4365
  1183  000D18                     __end_of_main:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           intcon	equ	0xFF2
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec1	equ	0xFE5
  1193                           fsr1l	equ	0xFE1
  1194                           status	equ	0xFD8
  1195                           
  1196 ;; *************** function _updateComms *****************
  1197 ;; Defined at:
  1198 ;;		line 21 in file "Communications.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         0       0       0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:   12
  1219 ;; This function calls:
  1220 ;;		_receiveData
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text1
  1227  001EA4                     __ptext1:
  1228                           	opt stack 0
  1229  001EA4                     _updateComms:
  1230                           	opt stack 18
  1231                           
  1232                           ;Communications.c: 22: if (receiveData()) {
  1233                           
  1234                           ; BSR set to: 1
  1235                           ;incstack = 0
  1236  001EA4  ECA6  F007         	call	_receiveData	;wreg free
  1237  001EA8  0012               	return	
  1238  001EAA                     __end_of_updateComms:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           intcon	equ	0xFF2
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _receiveData *****************
  1252 ;; Defined at:
  1253 ;;		line 96 in file "CarCom.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  result          3   13[BANK1 ] struct .
  1258 ;;  i               2   10[BANK1 ] int 
  1259 ;;  Data            1   12[BANK1 ] unsigned char 
  1260 ;;  CS              1    9[BANK1 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      unsigned char 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         0       0       0       0       0       0       0
  1271 ;;      Locals:         0       0       7       0       0       0       0
  1272 ;;      Temps:          0       0       5       0       0       0       0
  1273 ;;      Totals:         0       0      12       0       0       0       0
  1274 ;;Total ram usage:       12 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:   11
  1277 ;; This function calls:
  1278 ;;		_CRC8
  1279 ;;		_ComController
  1280 ;;		_Receive_available
  1281 ;;		_Receive_get
  1282 ;;		_cobs_decode
  1283 ;; This function is called by:
  1284 ;;		_updateComms
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text2
  1289  000F4C                     __ptext2:
  1290                           	opt stack 0
  1291  000F4C                     _receiveData:
  1292                           	opt stack 18
  1293                           
  1294                           ;CarCom.c: 98: if(Receive_available()>5){
  1295                           
  1296                           ;incstack = 0
  1297  000F4C  ECF3  F00E         	call	_Receive_available	;wreg free
  1298  000F50  BE20               	btfsc	?_Receive_available+1,7,c
  1299  000F52  D07D               	goto	l4131
  1300  000F54  5020               	movf	?_Receive_available+1,w,c
  1301  000F56  E104               	bnz	u2520
  1302  000F58  0E06               	movlw	6
  1303  000F5A  5C1F               	subwf	?_Receive_available,w,c
  1304  000F5C  A0D8               	btfss	status,0,c
  1305  000F5E  D077               	goto	l4131
  1306  000F60                     u2520:
  1307                           
  1308                           ;CarCom.c: 99: if(Receive_get() == 5){
  1309  000F60  EC3B  F00F         	call	_Receive_get	;wreg free
  1310  000F64  0A05               	xorlw	5
  1311  000F66  A4D8               	btfss	status,2,c
  1312  000F68  D072               	goto	l4131
  1313                           
  1314                           ;CarCom.c: 100: int i = 0;
  1315  000F6A  0E00               	movlw	0
  1316  000F6C  0101               	movlb	1	; () banked
  1317  000F6E  6F77               	movwf	(receiveData@i+1)& (0+255),b
  1318  000F70  0E00               	movlw	0
  1319  000F72  6F76               	movwf	receiveData@i& (0+255),b
  1320                           
  1321                           ;CarCom.c: 101: char Data = 0;
  1322  000F74  0E00               	movlw	0
  1323  000F76  0101               	movlb	1	; () banked
  1324  000F78  6F78               	movwf	receiveData@Data& (0+255),b
  1325  000F7A                     l4111:
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;CarCom.c: 103: Data = Receive_get();
  1329  000F7A  EC3B  F00F         	call	_Receive_get	;wreg free
  1330  000F7E  0101               	movlb	1	; () banked
  1331  000F80  6F78               	movwf	receiveData@Data& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;CarCom.c: 104: ReciveArray[i] = Data;
  1335  000F82  0E4E               	movlw	low _ReciveArray
  1336  000F84  0101               	movlb	1	; () banked
  1337  000F86  2576               	addwf	receiveData@i& (0+255),w,b
  1338  000F88  6ED9               	movwf	fsr2l,c
  1339  000F8A  0E01               	movlw	high _ReciveArray
  1340  000F8C  0101               	movlb	1	; () banked
  1341  000F8E  2177               	addwfc	(receiveData@i+1)& (0+255),w,b
  1342  000F90  6EDA               	movwf	fsr2h,c
  1343  000F92  C178  FFDF         	movff	receiveData@Data,indf2
  1344                           
  1345                           ; BSR set to: 1
  1346                           ;CarCom.c: 105: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1347  000F96  0E42               	movlw	66
  1348  000F98                     u2767:
  1349  000F98  2EE8               	decfsz	wreg,f,c
  1350  000F9A  D7FE               	bra	u2767
  1351  000F9C  D000               	nop2	
  1352                           
  1353                           ;CarCom.c: 106: i++;
  1354  000F9E  0101               	movlb	1	; () banked
  1355  000FA0  4B76               	infsnz	receiveData@i& (0+255),f,b
  1356  000FA2  2B77               	incf	(receiveData@i+1)& (0+255),f,b
  1357                           
  1358                           ; BSR set to: 1
  1359                           ;CarCom.c: 107: }while(Data != 0x00);
  1360  000FA4  0101               	movlb	1	; () banked
  1361  000FA6  5178               	movf	receiveData@Data& (0+255),w,b
  1362  000FA8  0101               	movlb	1	; () banked
  1363  000FAA  A4D8               	btfss	status,2,c
  1364  000FAC  D7E6               	goto	l4111
  1365                           
  1366                           ; BSR set to: 1
  1367                           ;CarCom.c: 109: cobs_decode_result result;
  1368                           ;CarCom.c: 111: result = cobs_decode(ProcessArray, sizeof(ProcessArray), ReciveArray, i)
      +                          ;
  1369                           
  1370                           ; BSR set to: 1
  1371  000FAE  0E30               	movlw	low _ProcessArray
  1372  000FB0  6E1D               	movwf	cobs_decode@dst_buf_ptr,c
  1373  000FB2  0E01               	movlw	high _ProcessArray
  1374  000FB4  6E1E               	movwf	cobs_decode@dst_buf_ptr+1,c
  1375  000FB6  0E00               	movlw	0
  1376  000FB8  6E20               	movwf	cobs_decode@dst_buf_len+1,c
  1377  000FBA  0E1E               	movlw	30
  1378  000FBC  6E1F               	movwf	cobs_decode@dst_buf_len,c
  1379  000FBE  0E4E               	movlw	low _ReciveArray
  1380  000FC0  6E21               	movwf	cobs_decode@src_ptr,c
  1381  000FC2  0E01               	movlw	high _ReciveArray
  1382  000FC4  6E22               	movwf	cobs_decode@src_ptr+1,c
  1383  000FC6  C176  F023         	movff	receiveData@i,cobs_decode@src_len
  1384  000FCA  C177  F024         	movff	receiveData@i+1,cobs_decode@src_len+1
  1385  000FCE  ECA0  F003         	call	_cobs_decode	;wreg free
  1386  000FD2  C01D  F179         	movff	?_cobs_decode,receiveData@result
  1387  000FD6  C01E  F17A         	movff	?_cobs_decode+1,receiveData@result+1
  1388  000FDA  C01F  F17B         	movff	?_cobs_decode+2,receiveData@result+2
  1389                           
  1390                           ;CarCom.c: 113: char CS = CRC8(ProcessArray, result.out_len-1);
  1391  000FDE  0E30               	movlw	low _ProcessArray
  1392  000FE0  6E1D               	movwf	CRC8@data,c
  1393  000FE2  0E01               	movlw	high _ProcessArray
  1394  000FE4  6E1E               	movwf	CRC8@data+1,c
  1395  000FE6  0101               	movlb	1	; () banked
  1396  000FE8  0579               	decf	receiveData@result& (0+255),w,b
  1397  000FEA  6E1F               	movwf	CRC8@len,c
  1398  000FEC  EC08  F00D         	call	_CRC8	;wreg free
  1399  000FF0  0101               	movlb	1	; () banked
  1400  000FF2  6F75               	movwf	receiveData@CS& (0+255),b
  1401                           
  1402                           ; BSR set to: 1
  1403                           ;CarCom.c: 115: if(ProcessArray[result.out_len-1] == CS){
  1404  000FF4  0EFF               	movlw	255
  1405  000FF6  0101               	movlb	1	; () banked
  1406  000FF8  6F70               	movwf	??_receiveData& (0+255),b
  1407  000FFA  0EFF               	movlw	255
  1408  000FFC  0101               	movlb	1	; () banked
  1409  000FFE  6F71               	movwf	(??_receiveData+1)& (0+255),b
  1410  001000  C179  F172         	movff	receiveData@result,??_receiveData+2
  1411  001004  C17A  F173         	movff	receiveData@result+1,??_receiveData+3
  1412  001008  0101               	movlb	1	; () banked
  1413  00100A  5170               	movf	??_receiveData& (0+255),w,b
  1414  00100C  0101               	movlb	1	; () banked
  1415  00100E  2772               	addwf	(??_receiveData+2)& (0+255),f,b
  1416  001010  0101               	movlb	1	; () banked
  1417  001012  5171               	movf	(??_receiveData+1)& (0+255),w,b
  1418  001014  0101               	movlb	1	; () banked
  1419  001016  2373               	addwfc	(??_receiveData+3)& (0+255),f,b
  1420  001018  0E30               	movlw	low _ProcessArray
  1421  00101A  0101               	movlb	1	; () banked
  1422  00101C  2572               	addwf	(??_receiveData+2)& (0+255),w,b
  1423  00101E  6ED9               	movwf	fsr2l,c
  1424  001020  0E01               	movlw	high _ProcessArray
  1425  001022  0101               	movlb	1	; () banked
  1426  001024  2173               	addwfc	(??_receiveData+3)& (0+255),w,b
  1427  001026  6EDA               	movwf	fsr2h,c
  1428  001028  0101               	movlb	1	; () banked
  1429  00102A  5175               	movf	receiveData@CS& (0+255),w,b
  1430  00102C  18DE               	xorwf	postinc2,w,c
  1431  00102E  A4D8               	btfss	status,2,c
  1432  001030  D00E               	goto	l4131
  1433                           
  1434                           ; BSR set to: 1
  1435                           ;CarCom.c: 116: ComController(ProcessArray,result.out_len);
  1436  001032  0E30               	movlw	low _ProcessArray
  1437  001034  0100               	movlb	0	; () banked
  1438  001036  6FBA               	movwf	ComController@DTI& (0+255),b
  1439  001038  0E01               	movlw	high _ProcessArray
  1440  00103A  0100               	movlb	0	; () banked
  1441  00103C  6FBB               	movwf	(ComController@DTI+1)& (0+255),b
  1442  00103E  C179  F0BC         	movff	receiveData@result,ComController@lenth
  1443  001042  C17A  F0BD         	movff	receiveData@result+1,ComController@lenth+1
  1444  001046  ECEB  F009         	call	_ComController	;wreg free
  1445                           
  1446                           ;CarCom.c: 117: return 1;
  1447  00104A  0E01               	movlw	1
  1448  00104C  0012               	return	
  1449  00104E                     l4131:
  1450                           
  1451                           ;CarCom.c: 126: }
  1452                           ;CarCom.c: 128: return 0;
  1453  00104E  0E00               	movlw	0
  1454  001050  0012               	return	
  1455  001052                     __end_of_receiveData:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           intcon	equ	0xFF2
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           indf2	equ	0xFDF
  1467                           postinc2	equ	0xFDE
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _cobs_decode *****************
  1473 ;; Defined at:
  1474 ;;		line 115 in file "COBS.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  dst_buf_ptr     2   28[COMRAM] PTR unsigned char 
  1477 ;;		 -> ProcessArray(30), 
  1478 ;;  dst_buf_len     2   30[COMRAM] unsigned int 
  1479 ;;  src_ptr         2   32[COMRAM] PTR const unsigned char 
  1480 ;;		 -> ReciveArray(30), 
  1481 ;;  src_len         2   34[COMRAM] unsigned int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  result          3   11[BANK0 ] struct .
  1484 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  1485 ;;		 -> ProcessArray(30), 
  1486 ;;  remaining_by    2    6[BANK0 ] unsigned int 
  1487 ;;  dst_buf_end_    2    2[BANK0 ] PTR unsigned char 
  1488 ;;		 -> ProcessArray(30), 
  1489 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  1490 ;;		 -> ReciveArray(30), 
  1491 ;;  len_code        1   10[BANK0 ] unsigned char 
  1492 ;;  i               1    5[BANK0 ] unsigned char 
  1493 ;;  src_byte        1    4[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  3   28[COMRAM] struct .
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1503 ;;      Params:         8       0       0       0       0       0       0
  1504 ;;      Locals:         0      14       0       0       0       0       0
  1505 ;;      Temps:          2       0       0       0       0       0       0
  1506 ;;      Totals:        10      14       0       0       0       0       0
  1507 ;;Total ram usage:       24 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    6
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_receiveData
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text3
  1518  000740                     __ptext3:
  1519                           	opt stack 0
  1520  000740                     _cobs_decode:
  1521                           	opt stack 22
  1522                           
  1523                           ;COBS.c: 117: cobs_decode_result result = { 0, COBS_DECODE_OK };
  1524                           
  1525                           ;incstack = 0
  1526  000740  C031  F06B         	movff	cobs_decode@F192,cobs_decode@result
  1527  000744  C032  F06C         	movff	cobs_decode@F192+1,cobs_decode@result+1
  1528  000748  C033  F06D         	movff	cobs_decode@F192+2,cobs_decode@result+2
  1529                           
  1530                           ;COBS.c: 118: const uint8_t * src_end_ptr = src_ptr + src_len;
  1531  00074C  5023               	movf	cobs_decode@src_len,w,c
  1532  00074E  2421               	addwf	cobs_decode@src_ptr,w,c
  1533  000750  0100               	movlb	0	; () banked
  1534  000752  6F60               	movwf	cobs_decode@src_end_ptr& (0+255),b
  1535  000754  5024               	movf	cobs_decode@src_len+1,w,c
  1536  000756  2022               	addwfc	cobs_decode@src_ptr+1,w,c
  1537  000758  0100               	movlb	0	; () banked
  1538  00075A  6F61               	movwf	(cobs_decode@src_end_ptr+1)& (0+255),b
  1539                           
  1540                           ;COBS.c: 119: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  1541  00075C  501F               	movf	cobs_decode@dst_buf_len,w,c
  1542  00075E  241D               	addwf	cobs_decode@dst_buf_ptr,w,c
  1543  000760  0100               	movlb	0	; () banked
  1544  000762  6F62               	movwf	cobs_decode@dst_buf_end_ptr& (0+255),b
  1545  000764  5020               	movf	cobs_decode@dst_buf_len+1,w,c
  1546  000766  201E               	addwfc	cobs_decode@dst_buf_ptr+1,w,c
  1547  000768  0100               	movlb	0	; () banked
  1548  00076A  6F63               	movwf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),b
  1549                           
  1550                           ;COBS.c: 120: uint8_t * dst_write_ptr = dst_buf_ptr;
  1551  00076C  C01D  F068         	movff	cobs_decode@dst_buf_ptr,cobs_decode@dst_write_ptr
  1552  000770  C01E  F069         	movff	cobs_decode@dst_buf_ptr+1,cobs_decode@dst_write_ptr+1
  1553                           
  1554                           ;COBS.c: 121: size_t remaining_bytes;
  1555                           ;COBS.c: 122: uint8_t src_byte;
  1556                           ;COBS.c: 123: uint8_t i;
  1557                           ;COBS.c: 124: uint8_t len_code;
  1558                           ;COBS.c: 128: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  1559  000774  501D               	movf	cobs_decode@dst_buf_ptr,w,c
  1560  000776  101E               	iorwf	cobs_decode@dst_buf_ptr+1,w,c
  1561  000778  B4D8               	btfsc	status,2,c
  1562  00077A  D004               	goto	l3943
  1563                           
  1564                           ; BSR set to: 0
  1565  00077C  5021               	movf	cobs_decode@src_ptr,w,c
  1566  00077E  1022               	iorwf	cobs_decode@src_ptr+1,w,c
  1567  000780  A4D8               	btfss	status,2,c
  1568  000782  D00A               	goto	l3949
  1569  000784                     l3943:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;COBS.c: 129: {
  1573                           ;COBS.c: 130: result.status = COBS_DECODE_NULL_POINTER;
  1574  000784  0E01               	movlw	1
  1575  000786  0100               	movlb	0	; () banked
  1576  000788  6F6D               	movwf	(cobs_decode@result+2)& (0+255),b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;COBS.c: 131: return result;
  1580  00078A  C06B  F01D         	movff	cobs_decode@result,?_cobs_decode
  1581  00078E  C06C  F01E         	movff	cobs_decode@result+1,?_cobs_decode+1
  1582  000792  C06D  F01F         	movff	cobs_decode@result+2,?_cobs_decode+2
  1583                           
  1584                           ; BSR set to: 0
  1585  000796  0012               	return	
  1586  000798                     l3949:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;COBS.c: 132: }
  1590                           ;COBS.c: 134: if (src_len != 0)
  1591  000798  5023               	movf	cobs_decode@src_len,w,c
  1592  00079A  1024               	iorwf	cobs_decode@src_len+1,w,c
  1593  00079C  B4D8               	btfsc	status,2,c
  1594  00079E  D096               	goto	l4013
  1595  0007A0                     l3951:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;COBS.c: 137: {
  1599                           ;COBS.c: 138: len_code = *src_ptr++;
  1600  0007A0  C021  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  1601  0007A4  C022  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  1602  0007A8  50DF               	movf	indf2,w,c
  1603  0007AA  0100               	movlb	0	; () banked
  1604  0007AC  6F6A               	movwf	cobs_decode@len_code& (0+255),b
  1605                           
  1606                           ; BSR set to: 0
  1607  0007AE  4A21               	infsnz	cobs_decode@src_ptr,f,c
  1608  0007B0  2A22               	incf	cobs_decode@src_ptr+1,f,c
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;COBS.c: 139: if (len_code == 0)
  1612  0007B2  0100               	movlb	0	; () banked
  1613  0007B4  516A               	movf	cobs_decode@len_code& (0+255),w,b
  1614  0007B6  0100               	movlb	0	; () banked
  1615  0007B8  A4D8               	btfss	status,2,c
  1616  0007BA  D003               	goto	l3959
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;COBS.c: 140: {
  1620                           ;COBS.c: 141: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  1621  0007BC  0100               	movlb	0	; () banked
  1622  0007BE  856D               	bsf	(cobs_decode@result+2)& (0+255),2,b
  1623                           
  1624                           ;COBS.c: 142: break;
  1625  0007C0  D085               	goto	l4013
  1626  0007C2                     l3959:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;COBS.c: 143: }
  1630                           ;COBS.c: 144: len_code--;
  1631  0007C2  0100               	movlb	0	; () banked
  1632  0007C4  076A               	decf	cobs_decode@len_code& (0+255),f,b
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;COBS.c: 147: remaining_bytes = src_end_ptr - src_ptr;
  1636  0007C6  C021  F025         	movff	cobs_decode@src_ptr,??_cobs_decode
  1637  0007CA  C022  F026         	movff	cobs_decode@src_ptr+1,??_cobs_decode+1
  1638  0007CE  1E25               	comf	??_cobs_decode,f,c
  1639  0007D0  1E26               	comf	??_cobs_decode+1,f,c
  1640  0007D2  4A25               	infsnz	??_cobs_decode,f,c
  1641  0007D4  2A26               	incf	??_cobs_decode+1,f,c
  1642  0007D6  0100               	movlb	0	; () banked
  1643  0007D8  5160               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  1644  0007DA  2425               	addwf	??_cobs_decode,w,c
  1645  0007DC  0100               	movlb	0	; () banked
  1646  0007DE  6F66               	movwf	cobs_decode@remaining_bytes& (0+255),b
  1647  0007E0  0100               	movlb	0	; () banked
  1648  0007E2  5161               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  1649  0007E4  2026               	addwfc	??_cobs_decode+1,w,c
  1650  0007E6  0100               	movlb	0	; () banked
  1651  0007E8  6F67               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;COBS.c: 148: if (len_code > remaining_bytes)
  1655  0007EA  0100               	movlb	0	; () banked
  1656  0007EC  516A               	movf	cobs_decode@len_code& (0+255),w,b
  1657  0007EE  0100               	movlb	0	; () banked
  1658  0007F0  5D66               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  1659  0007F2  0E00               	movlw	0
  1660  0007F4  5967               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  1661  0007F6  B0D8               	btfsc	status,0,c
  1662  0007F8  D004               	goto	l3969
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;COBS.c: 149: {
  1666                           ;COBS.c: 150: result.status |= COBS_DECODE_INPUT_TOO_SHORT;
  1667  0007FA  0100               	movlb	0	; () banked
  1668  0007FC  876D               	bsf	(cobs_decode@result+2)& (0+255),3,b
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;COBS.c: 151: len_code = remaining_bytes;
  1672  0007FE  C066  F06A         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  1673  000802                     l3969:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;COBS.c: 152: }
  1677                           ;COBS.c: 155: remaining_bytes = dst_buf_end_ptr - dst_write_ptr;
  1678  000802  C068  F025         	movff	cobs_decode@dst_write_ptr,??_cobs_decode
  1679  000806  C069  F026         	movff	cobs_decode@dst_write_ptr+1,??_cobs_decode+1
  1680  00080A  1E25               	comf	??_cobs_decode,f,c
  1681  00080C  1E26               	comf	??_cobs_decode+1,f,c
  1682  00080E  4A25               	infsnz	??_cobs_decode,f,c
  1683  000810  2A26               	incf	??_cobs_decode+1,f,c
  1684  000812  0100               	movlb	0	; () banked
  1685  000814  5162               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  1686  000816  2425               	addwf	??_cobs_decode,w,c
  1687  000818  0100               	movlb	0	; () banked
  1688  00081A  6F66               	movwf	cobs_decode@remaining_bytes& (0+255),b
  1689  00081C  0100               	movlb	0	; () banked
  1690  00081E  5163               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  1691  000820  2026               	addwfc	??_cobs_decode+1,w,c
  1692  000822  0100               	movlb	0	; () banked
  1693  000824  6F67               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;COBS.c: 156: if (len_code > remaining_bytes)
  1697  000826  0100               	movlb	0	; () banked
  1698  000828  516A               	movf	cobs_decode@len_code& (0+255),w,b
  1699  00082A  0100               	movlb	0	; () banked
  1700  00082C  5D66               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  1701  00082E  0E00               	movlw	0
  1702  000830  5967               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  1703  000832  B0D8               	btfsc	status,0,c
  1704  000834  D004               	goto	l3977
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;COBS.c: 157: {
  1708                           ;COBS.c: 158: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  1709  000836  0100               	movlb	0	; () banked
  1710  000838  836D               	bsf	(cobs_decode@result+2)& (0+255),1,b
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;COBS.c: 159: len_code = remaining_bytes;
  1714  00083A  C066  F06A         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  1715  00083E                     l3977:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;COBS.c: 160: }
  1719                           ;COBS.c: 162: for (i = len_code; i != 0; i--)
  1720  00083E  C06A  F065         	movff	cobs_decode@len_code,cobs_decode@i
  1721  000842                     l3979:
  1722                           
  1723                           ; BSR set to: 0
  1724  000842  0100               	movlb	0	; () banked
  1725  000844  5165               	movf	cobs_decode@i& (0+255),w,b
  1726  000846  0100               	movlb	0	; () banked
  1727  000848  B4D8               	btfsc	status,2,c
  1728  00084A  D01C               	goto	l3999
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;COBS.c: 163: {
  1732                           ;COBS.c: 164: src_byte = *src_ptr++;
  1733                           
  1734                           ; BSR set to: 0
  1735                           
  1736                           ; BSR set to: 0
  1737  00084C  C021  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  1738  000850  C022  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  1739  000854  50DF               	movf	indf2,w,c
  1740  000856  0100               	movlb	0	; () banked
  1741  000858  6F64               	movwf	cobs_decode@src_byte& (0+255),b
  1742                           
  1743                           ; BSR set to: 0
  1744  00085A  4A21               	infsnz	cobs_decode@src_ptr,f,c
  1745  00085C  2A22               	incf	cobs_decode@src_ptr+1,f,c
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;COBS.c: 165: if (src_byte == 0)
  1749  00085E  0100               	movlb	0	; () banked
  1750  000860  5164               	movf	cobs_decode@src_byte& (0+255),w,b
  1751  000862  0100               	movlb	0	; () banked
  1752  000864  A4D8               	btfss	status,2,c
  1753  000866  D002               	goto	l3991
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;COBS.c: 166: {
  1757                           ;COBS.c: 167: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  1758  000868  0100               	movlb	0	; () banked
  1759  00086A  856D               	bsf	(cobs_decode@result+2)& (0+255),2,b
  1760  00086C                     l3991:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;COBS.c: 168: }
  1764                           ;COBS.c: 169: *dst_write_ptr++ = src_byte;
  1765  00086C  C068  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  1766  000870  C069  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  1767  000874  C064  FFDF         	movff	cobs_decode@src_byte,indf2
  1768                           
  1769                           ; BSR set to: 0
  1770  000878  0100               	movlb	0	; () banked
  1771  00087A  4B68               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  1772  00087C  2B69               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  1773                           
  1774                           ; BSR set to: 0
  1775  00087E  0100               	movlb	0	; () banked
  1776  000880  0765               	decf	cobs_decode@i& (0+255),f,b
  1777  000882  D7DF               	goto	l3979
  1778  000884                     l3999:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;COBS.c: 170: }
  1782                           ;COBS.c: 172: if (src_ptr >= src_end_ptr)
  1783  000884  0100               	movlb	0	; () banked
  1784  000886  5160               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  1785  000888  5C21               	subwf	cobs_decode@src_ptr,w,c
  1786  00088A  0100               	movlb	0	; () banked
  1787  00088C  5161               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  1788  00088E  5822               	subwfb	cobs_decode@src_ptr+1,w,c
  1789  000890  B0D8               	btfsc	status,0,c
  1790  000892  D01C               	goto	l4013
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;COBS.c: 175: }
  1794                           ;COBS.c: 178: if (len_code != 0xFE)
  1795                           
  1796                           ; BSR set to: 0
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;COBS.c: 173: {
  1800                           ;COBS.c: 174: break;
  1801  000894  0EFE               	movlw	254
  1802  000896  0100               	movlb	0	; () banked
  1803  000898  196A               	xorwf	cobs_decode@len_code& (0+255),w,b
  1804  00089A  B4D8               	btfsc	status,2,c
  1805  00089C  D781               	goto	l3951
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;COBS.c: 179: {
  1809                           ;COBS.c: 180: if (dst_write_ptr >= dst_buf_end_ptr)
  1810  00089E  0100               	movlb	0	; () banked
  1811  0008A0  5162               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  1812  0008A2  0100               	movlb	0	; () banked
  1813  0008A4  5D68               	subwf	cobs_decode@dst_write_ptr& (0+255),w,b
  1814  0008A6  0100               	movlb	0	; () banked
  1815  0008A8  5163               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  1816  0008AA  0100               	movlb	0	; () banked
  1817  0008AC  5969               	subwfb	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  1818  0008AE  A0D8               	btfss	status,0,c
  1819  0008B0  D003               	goto	l4009
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;COBS.c: 181: {
  1823                           ;COBS.c: 182: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  1824  0008B2  0100               	movlb	0	; () banked
  1825  0008B4  836D               	bsf	(cobs_decode@result+2)& (0+255),1,b
  1826                           
  1827                           ;COBS.c: 183: break;
  1828  0008B6  D00A               	goto	l4013
  1829  0008B8                     l4009:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;COBS.c: 184: }
  1833                           ;COBS.c: 185: *dst_write_ptr++ = 0;
  1834  0008B8  C068  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  1835  0008BC  C069  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  1836  0008C0  0E00               	movlw	0
  1837  0008C2  6EDF               	movwf	indf2,c
  1838                           
  1839                           ; BSR set to: 0
  1840  0008C4  0100               	movlb	0	; () banked
  1841  0008C6  4B68               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  1842  0008C8  2B69               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;COBS.c: 186: }
  1846                           ;COBS.c: 187: }
  1847  0008CA  D76A               	goto	l3951
  1848  0008CC                     l4013:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;COBS.c: 188: }
  1852                           ;COBS.c: 190: result.out_len = dst_write_ptr - dst_buf_ptr;
  1853  0008CC  C01D  F025         	movff	cobs_decode@dst_buf_ptr,??_cobs_decode
  1854  0008D0  C01E  F026         	movff	cobs_decode@dst_buf_ptr+1,??_cobs_decode+1
  1855  0008D4  1E25               	comf	??_cobs_decode,f,c
  1856  0008D6  1E26               	comf	??_cobs_decode+1,f,c
  1857  0008D8  4A25               	infsnz	??_cobs_decode,f,c
  1858  0008DA  2A26               	incf	??_cobs_decode+1,f,c
  1859  0008DC  0100               	movlb	0	; () banked
  1860  0008DE  5168               	movf	cobs_decode@dst_write_ptr& (0+255),w,b
  1861  0008E0  2425               	addwf	??_cobs_decode,w,c
  1862  0008E2  0100               	movlb	0	; () banked
  1863  0008E4  6F6B               	movwf	cobs_decode@result& (0+255),b
  1864  0008E6  0100               	movlb	0	; () banked
  1865  0008E8  5169               	movf	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  1866  0008EA  2026               	addwfc	??_cobs_decode+1,w,c
  1867  0008EC  0100               	movlb	0	; () banked
  1868  0008EE  6F6C               	movwf	(cobs_decode@result+1)& (0+255),b
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;COBS.c: 192: return result;
  1872  0008F0  C06B  F01D         	movff	cobs_decode@result,?_cobs_decode
  1873  0008F4  C06C  F01E         	movff	cobs_decode@result+1,?_cobs_decode+1
  1874  0008F8  C06D  F01F         	movff	cobs_decode@result+2,?_cobs_decode+2
  1875  0008FC  0012               	return	
  1876  0008FE                     __end_of_cobs_decode:
  1877                           	opt stack 0
  1878                           tblptru	equ	0xFF8
  1879                           tblptrh	equ	0xFF7
  1880                           tblptrl	equ	0xFF6
  1881                           tablat	equ	0xFF5
  1882                           intcon	equ	0xFF2
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1l	equ	0xFE1
  1887                           indf2	equ	0xFDF
  1888                           postinc2	equ	0xFDE
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _Receive_get *****************
  1894 ;; Defined at:
  1895 ;;		line 128 in file "UART.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      unsigned char 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1909 ;;      Params:         0       0       0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    8
  1916 ;; This function calls:
  1917 ;;		_UART_buff_get
  1918 ;; This function is called by:
  1919 ;;		_receiveData
  1920 ;;		_getch
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text4
  1925  001E76                     __ptext4:
  1926                           	opt stack 0
  1927  001E76                     _Receive_get:
  1928                           	opt stack 20
  1929                           
  1930                           ;UART.c: 129: return UART_buff_get(&input_buffer);
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;incstack = 0
  1934  001E76  0E00               	movlw	low _input_buffer
  1935  001E78  6E23               	movwf	UART_buff_get@_this,c
  1936  001E7A  0E02               	movlw	high _input_buffer
  1937  001E7C  6E24               	movwf	UART_buff_get@_this+1,c
  1938  001E7E  EC97  F00A         	call	_UART_buff_get	;wreg free
  1939  001E82  0012               	return	
  1940  001E84                     __end_of_Receive_get:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           intcon	equ	0xFF2
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1l	equ	0xFE1
  1951                           indf2	equ	0xFDF
  1952                           postinc2	equ	0xFDE
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _Receive_available *****************
  1958 ;; Defined at:
  1959 ;;		line 124 in file "UART.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  2   30[COMRAM] int 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         2       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0
  1976 ;;      Totals:         2       0       0       0       0       0       0
  1977 ;;Total ram usage:        2 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    7
  1980 ;; This function calls:
  1981 ;;		_UART_buff_size
  1982 ;; This function is called by:
  1983 ;;		_receiveData
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text5
  1988  001DE6                     __ptext5:
  1989                           	opt stack 0
  1990  001DE6                     _Receive_available:
  1991                           	opt stack 21
  1992                           
  1993                           ;UART.c: 125: return UART_buff_size(&input_buffer);
  1994                           
  1995                           ;incstack = 0
  1996  001DE6  0E00               	movlw	low _input_buffer
  1997  001DE8  6E1D               	movwf	UART_buff_size@_this,c
  1998  001DEA  0E02               	movlw	high _input_buffer
  1999  001DEC  6E1E               	movwf	UART_buff_size@_this+1,c
  2000  001DEE  ECFE  F00E         	call	_UART_buff_size	;wreg free
  2001  001DF2  C01D  F01F         	movff	?_UART_buff_size,?_Receive_available
  2002  001DF6  C01E  F020         	movff	?_UART_buff_size+1,?_Receive_available+1
  2003  001DFA  0012               	return	
  2004  001DFC                     __end_of_Receive_available:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           intcon	equ	0xFF2
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1l	equ	0xFE1
  2015                           indf2	equ	0xFDF
  2016                           postinc2	equ	0xFDE
  2017                           fsr2h	equ	0xFDA
  2018                           fsr2l	equ	0xFD9
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _UART_buff_size *****************
  2022 ;; Defined at:
  2023 ;;		line 104 in file "UART.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  _this           2   28[COMRAM] PTR struct UART_ring_buf
  2026 ;;		 -> output_buffer(206), input_buffer(206), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2   28[COMRAM] int 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2038 ;;      Params:         2       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    6
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_Receive_available
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text6
  2053  001DFC                     __ptext6:
  2054                           	opt stack 0
  2055  001DFC                     _UART_buff_size:
  2056                           	opt stack 21
  2057                           
  2058                           ;UART.c: 105: return (_this->count);
  2059                           
  2060                           ;incstack = 0
  2061  001DFC  EE20 F0CC          	lfsr	2,204
  2062  001E00  501D               	movf	UART_buff_size@_this,w,c
  2063  001E02  26D9               	addwf	fsr2l,f,c
  2064  001E04  501E               	movf	UART_buff_size@_this+1,w,c
  2065  001E06  22DA               	addwfc	fsr2h,f,c
  2066  001E08  CFDE F01D          	movff	postinc2,?_UART_buff_size
  2067  001E0C  CFDD F01E          	movff	postdec2,?_UART_buff_size+1
  2068  001E10  0012               	return	
  2069  001E12                     __end_of_UART_buff_size:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           intcon	equ	0xFF2
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           postdec1	equ	0xFE5
  2079                           fsr1l	equ	0xFE1
  2080                           indf2	equ	0xFDF
  2081                           postinc2	equ	0xFDE
  2082                           postdec2	equ	0xFDD
  2083                           fsr2h	equ	0xFDA
  2084                           fsr2l	equ	0xFD9
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function _ComController *****************
  2088 ;; Defined at:
  2089 ;;		line 133 in file "CarCom.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  DTI             2   90[BANK0 ] PTR unsigned char 
  2092 ;;		 -> ProcessArray(30), 
  2093 ;;  lenth           2   92[BANK0 ] unsigned int 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  DataToSend      4    0[BANK1 ] unsigned char [4]
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2105 ;;      Params:         0       4       0       0       0       0       0
  2106 ;;      Locals:         0       0       4       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0
  2108 ;;      Totals:         1       4       4       0       0       0       0
  2109 ;;Total ram usage:        9 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:   10
  2112 ;; This function calls:
  2113 ;;		_Delay
  2114 ;;		_GetDataDict
  2115 ;;		_sendData
  2116 ;; This function is called by:
  2117 ;;		_receiveData
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text7
  2122  0013D6                     __ptext7:
  2123                           	opt stack 0
  2124  0013D6                     _ComController:
  2125                           	opt stack 18
  2126                           
  2127                           ;CarCom.c: 134: if(DTI[1] == 1){
  2128                           
  2129                           ;incstack = 0
  2130  0013D6  0100               	movlb	0	; () banked
  2131  0013D8  EE20 F001          	lfsr	2,1
  2132  0013DC  51BA               	movf	ComController@DTI& (0+255),w,b
  2133  0013DE  26D9               	addwf	fsr2l,f,c
  2134  0013E0  51BB               	movf	(ComController@DTI+1)& (0+255),w,b
  2135  0013E2  22DA               	addwfc	fsr2h,f,c
  2136  0013E4  04DE               	decf	postinc2,w,c
  2137  0013E6  A4D8               	btfss	status,2,c
  2138  0013E8  0012               	return	
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;CarCom.c: 135: unsigned char DataToSend[4];
  2142                           ;CarCom.c: 136: GetDataDict(DTI[2], DTI[3], DataToSend, DTI[4]);
  2143  0013EA  0100               	movlb	0	; () banked
  2144  0013EC  EE20 F003          	lfsr	2,3
  2145  0013F0  51BA               	movf	ComController@DTI& (0+255),w,b
  2146  0013F2  26D9               	addwf	fsr2l,f,c
  2147  0013F4  51BB               	movf	(ComController@DTI+1)& (0+255),w,b
  2148  0013F6  22DA               	addwfc	fsr2h,f,c
  2149  0013F8  50DF               	movf	indf2,w,c
  2150  0013FA  6E1D               	movwf	GetDataDict@DataTableIndex,c
  2151  0013FC  0E6C               	movlw	low ComController@DataToSend
  2152  0013FE  6E1E               	movwf	GetDataDict@DataArray,c
  2153  001400  0E01               	movlw	high ComController@DataToSend
  2154  001402  6E1F               	movwf	GetDataDict@DataArray+1,c
  2155  001404  0100               	movlb	0	; () banked
  2156  001406  EE20 F004          	lfsr	2,4
  2157  00140A  51BA               	movf	ComController@DTI& (0+255),w,b
  2158  00140C  26D9               	addwf	fsr2l,f,c
  2159  00140E  51BB               	movf	(ComController@DTI+1)& (0+255),w,b
  2160  001410  22DA               	addwfc	fsr2h,f,c
  2161  001412  50DF               	movf	indf2,w,c
  2162  001414  6E20               	movwf	GetDataDict@numbofbytes,c
  2163  001416  0100               	movlb	0	; () banked
  2164  001418  EE20 F002          	lfsr	2,2
  2165  00141C  51BA               	movf	ComController@DTI& (0+255),w,b
  2166  00141E  26D9               	addwf	fsr2l,f,c
  2167  001420  51BB               	movf	(ComController@DTI+1)& (0+255),w,b
  2168  001422  22DA               	addwfc	fsr2h,f,c
  2169  001424  50DF               	movf	indf2,w,c
  2170  001426  EC4B  F00A         	call	_GetDataDict
  2171                           
  2172                           ;CarCom.c: 137: do { LATC5 = 1; } while(0);
  2173  00142A  8A8B               	bsf	3979,5,c	;volatile
  2174                           
  2175                           ;CarCom.c: 138: Delay(5);
  2176  00142C  0E05               	movlw	5
  2177  00142E  6E1D               	movwf	Delay@wait,c
  2178  001430  0E00               	movlw	0
  2179  001432  6E1E               	movwf	Delay@wait+1,c
  2180  001434  0E00               	movlw	0
  2181  001436  6E1F               	movwf	Delay@wait+2,c
  2182  001438  0E00               	movlw	0
  2183  00143A  6E20               	movwf	Delay@wait+3,c
  2184  00143C  EC2D  F00D         	call	_Delay	;wreg free
  2185                           
  2186                           ;CarCom.c: 139: sendData(1, 1, 1, 1, DataToSend, DTI[4]);
  2187  001440  0E01               	movlw	1
  2188  001442  0100               	movlb	0	; () banked
  2189  001444  6F6D               	movwf	sendData@ComandByte& (0+255),b
  2190  001446  0E01               	movlw	1
  2191  001448  0100               	movlb	0	; () banked
  2192  00144A  6F6E               	movwf	sendData@DataTable& (0+255),b
  2193  00144C  0E01               	movlw	1
  2194  00144E  0100               	movlb	0	; () banked
  2195  001450  6F6F               	movwf	sendData@DataTableIndex& (0+255),b
  2196  001452  0E6C               	movlw	low ComController@DataToSend
  2197  001454  0100               	movlb	0	; () banked
  2198  001456  6F70               	movwf	sendData@DTS& (0+255),b
  2199  001458  0E01               	movlw	high ComController@DataToSend
  2200  00145A  0100               	movlb	0	; () banked
  2201  00145C  6F71               	movwf	(sendData@DTS+1)& (0+255),b
  2202  00145E  0100               	movlb	0	; () banked
  2203  001460  EE20 F004          	lfsr	2,4
  2204  001464  51BA               	movf	ComController@DTI& (0+255),w,b
  2205  001466  26D9               	addwf	fsr2l,f,c
  2206  001468  51BB               	movf	(ComController@DTI+1)& (0+255),w,b
  2207  00146A  22DA               	addwfc	fsr2h,f,c
  2208  00146C  50DF               	movf	indf2,w,c
  2209  00146E  6E2D               	movwf	??_ComController& (0+255),c
  2210  001470  502D               	movf	??_ComController,w,c
  2211  001472  0100               	movlb	0	; () banked
  2212  001474  6F72               	movwf	sendData@lenth& (0+255),b
  2213  001476  6B73               	clrf	(sendData@lenth+1)& (0+255),b
  2214  001478  0E01               	movlw	1
  2215  00147A  EC4B  F005         	call	_sendData
  2216                           
  2217                           ;CarCom.c: 140: Delay(3);
  2218  00147E  0E03               	movlw	3
  2219  001480  6E1D               	movwf	Delay@wait,c
  2220  001482  0E00               	movlw	0
  2221  001484  6E1E               	movwf	Delay@wait+1,c
  2222  001486  0E00               	movlw	0
  2223  001488  6E1F               	movwf	Delay@wait+2,c
  2224  00148A  0E00               	movlw	0
  2225  00148C  6E20               	movwf	Delay@wait+3,c
  2226  00148E  EC2D  F00D         	call	_Delay	;wreg free
  2227                           
  2228                           ;CarCom.c: 141: do { LATC5 = 0; } while(0);
  2229  001492  9A8B               	bcf	3979,5,c	;volatile
  2230  001494  0012               	return	
  2231  001496                     __end_of_ComController:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           intcon	equ	0xFF2
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1l	equ	0xFE1
  2242                           indf2	equ	0xFDF
  2243                           postinc2	equ	0xFDE
  2244                           postdec2	equ	0xFDD
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _sendData *****************
  2250 ;; Defined at:
  2251 ;;		line 41 in file "CarCom.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  whereToSend     1    wreg     unsigned char 
  2254 ;;  ComandByte      1   13[BANK0 ] unsigned char 
  2255 ;;  DataTable       1   14[BANK0 ] unsigned char 
  2256 ;;  DataTableInd    1   15[BANK0 ] unsigned char 
  2257 ;;  DTS             2   16[BANK0 ] PTR unsigned char 
  2258 ;;		 -> ComController@DataToSend(4), 
  2259 ;;  lenth           2   18[BANK0 ] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  whereToSend     1   81[BANK0 ] unsigned char 
  2262 ;;  SendArray      30   50[BANK0 ] unsigned char [30]
  2263 ;;  COBSArray      30   20[BANK0 ] unsigned char [30]
  2264 ;;  result          3   85[BANK0 ] struct .
  2265 ;;  i               2   88[BANK0 ] unsigned int 
  2266 ;;  count           2   82[BANK0 ] int 
  2267 ;;  CS              1   84[BANK0 ] unsigned char 
  2268 ;;  DataLenth       1   80[BANK0 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         0       7       0       0       0       0       0
  2279 ;;      Locals:         0      70       0       0       0       0       0
  2280 ;;      Temps:          4       0       0       0       0       0       0
  2281 ;;      Totals:         4      77       0       0       0       0       0
  2282 ;;Total ram usage:       81 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    9
  2285 ;; This function calls:
  2286 ;;		_CRC8
  2287 ;;		_Send_put
  2288 ;;		_cobs_encode
  2289 ;; This function is called by:
  2290 ;;		_ComController
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text8
  2295  000A96                     __ptext8:
  2296                           	opt stack 0
  2297  000A96                     _sendData:
  2298                           	opt stack 18
  2299                           
  2300                           ;incstack = 0
  2301                           ;sendData@whereToSend stored from wreg
  2302  000A96  0100               	movlb	0	; () banked
  2303  000A98  6FB1               	movwf	sendData@whereToSend& (0+255),b
  2304                           
  2305                           ;CarCom.c: 46: unsigned char SendArray[30];
  2306                           ;CarCom.c: 47: unsigned char COBSArray[30];
  2307                           ;CarCom.c: 49: unsigned char DataLenth = 1;
  2308  000A9A  0E01               	movlw	1
  2309  000A9C  0100               	movlb	0	; () banked
  2310  000A9E  6FB0               	movwf	sendData@DataLenth& (0+255),b
  2311                           
  2312                           ;CarCom.c: 51: cobs_encode_result result;
  2313                           ;CarCom.c: 53: SendArray[0] = 4+1;
  2314  000AA0  0E05               	movlw	5
  2315  000AA2  0100               	movlb	0	; () banked
  2316  000AA4  6F92               	movwf	sendData@SendArray& (0+255),b
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;CarCom.c: 54: SendArray[1] = ComandByte;
  2320  000AA6  C06D  F093         	movff	sendData@ComandByte,sendData@SendArray+1
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;CarCom.c: 55: SendArray[2] = DataTable;
  2324  000AAA  C06E  F094         	movff	sendData@DataTable,sendData@SendArray+2
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;CarCom.c: 56: SendArray[3] = DataTableIndex;
  2328  000AAE  C06F  F095         	movff	sendData@DataTableIndex,sendData@SendArray+3
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;CarCom.c: 57: SendArray[4] = lenth;
  2332  000AB2  C072  F096         	movff	sendData@lenth,sendData@SendArray+4
  2333                           
  2334                           ;CarCom.c: 62: unsigned int i;
  2335                           ;CarCom.c: 63: int count = 5;
  2336  000AB6  0E00               	movlw	0
  2337  000AB8  0100               	movlb	0	; () banked
  2338  000ABA  6FB3               	movwf	(sendData@count+1)& (0+255),b
  2339  000ABC  0E05               	movlw	5
  2340  000ABE  6FB2               	movwf	sendData@count& (0+255),b
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;CarCom.c: 64: i = count;
  2344  000AC0  C0B2  F0B8         	movff	sendData@count,sendData@i
  2345  000AC4  C0B3  F0B9         	movff	sendData@count+1,sendData@i+1
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;CarCom.c: 66: SendArray[5] = DTS[0];
  2349  000AC8  C070  FFD9         	movff	sendData@DTS,fsr2l
  2350  000ACC  C071  FFDA         	movff	sendData@DTS+1,fsr2h
  2351  000AD0  50DF               	movf	indf2,w,c
  2352  000AD2  0100               	movlb	0	; () banked
  2353  000AD4  6F97               	movwf	(sendData@SendArray+5)& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;CarCom.c: 68: SendArray[6] = DTS[1];
  2357  000AD6  0100               	movlb	0	; () banked
  2358  000AD8  EE20 F001          	lfsr	2,1
  2359  000ADC  5170               	movf	sendData@DTS& (0+255),w,b
  2360  000ADE  26D9               	addwf	fsr2l,f,c
  2361  000AE0  5171               	movf	(sendData@DTS+1)& (0+255),w,b
  2362  000AE2  22DA               	addwfc	fsr2h,f,c
  2363  000AE4  50DF               	movf	indf2,w,c
  2364  000AE6  0100               	movlb	0	; () banked
  2365  000AE8  6F98               	movwf	(sendData@SendArray+6)& (0+255),b
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;CarCom.c: 71: unsigned char CS = CRC8(SendArray, 7);
  2369  000AEA  0E92               	movlw	low sendData@SendArray
  2370  000AEC  6E1D               	movwf	CRC8@data,c
  2371  000AEE  0E00               	movlw	high sendData@SendArray
  2372  000AF0  6E1E               	movwf	CRC8@data+1,c
  2373  000AF2  0E07               	movlw	7
  2374  000AF4  6E1F               	movwf	CRC8@len,c
  2375  000AF6  EC08  F00D         	call	_CRC8	;wreg free
  2376  000AFA  0100               	movlb	0	; () banked
  2377  000AFC  6FB4               	movwf	sendData@CS& (0+255),b
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;CarCom.c: 75: SendArray[7] = CS;
  2381  000AFE  C0B4  F099         	movff	sendData@CS,sendData@SendArray+7
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;CarCom.c: 77: result = cobs_encode(COBSArray, sizeof(COBSArray), SendArray, 8);
  2385  000B02  0E74               	movlw	low sendData@COBSArray
  2386  000B04  6E1D               	movwf	cobs_encode@dst_buf_ptr,c
  2387  000B06  0E00               	movlw	high sendData@COBSArray
  2388  000B08  6E1E               	movwf	cobs_encode@dst_buf_ptr+1,c
  2389  000B0A  0E00               	movlw	0
  2390  000B0C  6E20               	movwf	cobs_encode@dst_buf_len+1,c
  2391  000B0E  0E1E               	movlw	30
  2392  000B10  6E1F               	movwf	cobs_encode@dst_buf_len,c
  2393  000B12  0E92               	movlw	low sendData@SendArray
  2394  000B14  6E21               	movwf	cobs_encode@src_ptr,c
  2395  000B16  0E00               	movlw	high sendData@SendArray
  2396  000B18  6E22               	movwf	cobs_encode@src_ptr+1,c
  2397  000B1A  0E00               	movlw	0
  2398  000B1C  6E24               	movwf	cobs_encode@src_len+1,c
  2399  000B1E  0E08               	movlw	8
  2400  000B20  6E23               	movwf	cobs_encode@src_len,c
  2401  000B22  EC7F  F004         	call	_cobs_encode	;wreg free
  2402  000B26  C01D  F0B5         	movff	?_cobs_encode,sendData@result
  2403  000B2A  C01E  F0B6         	movff	?_cobs_encode+1,sendData@result+1
  2404  000B2E  C01F  F0B7         	movff	?_cobs_encode+2,sendData@result+2
  2405                           
  2406                           ;CarCom.c: 79: SendArray[0] = whereToSend;
  2407  000B32  C0B1  F092         	movff	sendData@whereToSend,sendData@SendArray
  2408                           
  2409                           ;CarCom.c: 81: for(i = 1;i<result.out_len+1;i++){
  2410  000B36  0E00               	movlw	0
  2411  000B38  0100               	movlb	0	; () banked
  2412  000B3A  6FB9               	movwf	(sendData@i+1)& (0+255),b
  2413  000B3C  0E01               	movlw	1
  2414  000B3E  6FB8               	movwf	sendData@i& (0+255),b
  2415  000B40  D01F               	goto	l3857
  2416  000B42                     l3853:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;CarCom.c: 82: SendArray[i] = COBSArray[i-1];
  2420  000B42  0EFF               	movlw	255
  2421  000B44  6E29               	movwf	??_sendData& (0+255),c
  2422  000B46  0EFF               	movlw	255
  2423  000B48  6E2A               	movwf	(??_sendData+1)& (0+255),c
  2424  000B4A  C0B8  F02B         	movff	sendData@i,??_sendData+2
  2425  000B4E  C0B9  F02C         	movff	sendData@i+1,??_sendData+3
  2426  000B52  5029               	movf	??_sendData,w,c
  2427  000B54  262B               	addwf	??_sendData+2,f,c
  2428  000B56  502A               	movf	??_sendData+1,w,c
  2429  000B58  222C               	addwfc	??_sendData+3,f,c
  2430  000B5A  0E74               	movlw	low sendData@COBSArray
  2431  000B5C  242B               	addwf	??_sendData+2,w,c
  2432  000B5E  6ED9               	movwf	fsr2l,c
  2433  000B60  0E00               	movlw	high sendData@COBSArray
  2434  000B62  202C               	addwfc	??_sendData+3,w,c
  2435  000B64  6EDA               	movwf	fsr2h,c
  2436  000B66  0E92               	movlw	low sendData@SendArray
  2437  000B68  0100               	movlb	0	; () banked
  2438  000B6A  25B8               	addwf	sendData@i& (0+255),w,b
  2439  000B6C  6EE1               	movwf	fsr1l,c
  2440  000B6E  0E00               	movlw	high sendData@SendArray
  2441  000B70  0100               	movlb	0	; () banked
  2442  000B72  21B9               	addwfc	(sendData@i+1)& (0+255),w,b
  2443  000B74  6EE2               	movwf	fsr1h,c
  2444  000B76  CFDF FFE7          	movff	indf2,indf1
  2445                           
  2446                           ; BSR set to: 0
  2447  000B7A  0100               	movlb	0	; () banked
  2448  000B7C  4BB8               	infsnz	sendData@i& (0+255),f,b
  2449  000B7E  2BB9               	incf	(sendData@i+1)& (0+255),f,b
  2450  000B80                     l3857:
  2451                           
  2452                           ; BSR set to: 0
  2453  000B80  0E01               	movlw	1
  2454  000B82  0100               	movlb	0	; () banked
  2455  000B84  25B5               	addwf	sendData@result& (0+255),w,b
  2456  000B86  6E29               	movwf	??_sendData& (0+255),c
  2457  000B88  0E00               	movlw	0
  2458  000B8A  0100               	movlb	0	; () banked
  2459  000B8C  21B6               	addwfc	(sendData@result+1)& (0+255),w,b
  2460  000B8E  6E2A               	movwf	(??_sendData+1)& (0+255),c
  2461  000B90  5029               	movf	??_sendData,w,c
  2462  000B92  0100               	movlb	0	; () banked
  2463  000B94  5DB8               	subwf	sendData@i& (0+255),w,b
  2464  000B96  502A               	movf	??_sendData+1,w,c
  2465  000B98  0100               	movlb	0	; () banked
  2466  000B9A  59B9               	subwfb	(sendData@i+1)& (0+255),w,b
  2467  000B9C  A0D8               	btfss	status,0,c
  2468  000B9E  D7D1               	goto	l3853
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;CarCom.c: 83: }
  2472                           ;CarCom.c: 85: for(i = 0;i<result.out_len+2;i++){
  2473                           
  2474                           ; BSR set to: 0
  2475  000BA0  0E00               	movlw	0
  2476  000BA2  0100               	movlb	0	; () banked
  2477  000BA4  6FB9               	movwf	(sendData@i+1)& (0+255),b
  2478  000BA6  0E00               	movlw	0
  2479  000BA8  6FB8               	movwf	sendData@i& (0+255),b
  2480  000BAA  D00E               	goto	l3865
  2481  000BAC                     l3861:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;CarCom.c: 86: Send_put(SendArray[i]);
  2485  000BAC  0E92               	movlw	low sendData@SendArray
  2486  000BAE  0100               	movlb	0	; () banked
  2487  000BB0  25B8               	addwf	sendData@i& (0+255),w,b
  2488  000BB2  6ED9               	movwf	fsr2l,c
  2489  000BB4  0E00               	movlw	high sendData@SendArray
  2490  000BB6  0100               	movlb	0	; () banked
  2491  000BB8  21B9               	addwfc	(sendData@i+1)& (0+255),w,b
  2492  000BBA  6EDA               	movwf	fsr2h,c
  2493  000BBC  50DF               	movf	indf2,w,c
  2494  000BBE  EC2C  F00E         	call	_Send_put
  2495  000BC2  0100               	movlb	0	; () banked
  2496  000BC4  4BB8               	infsnz	sendData@i& (0+255),f,b
  2497  000BC6  2BB9               	incf	(sendData@i+1)& (0+255),f,b
  2498  000BC8                     l3865:
  2499                           
  2500                           ; BSR set to: 0
  2501  000BC8  0E02               	movlw	2
  2502  000BCA  0100               	movlb	0	; () banked
  2503  000BCC  25B5               	addwf	sendData@result& (0+255),w,b
  2504  000BCE  6E29               	movwf	??_sendData& (0+255),c
  2505  000BD0  0E00               	movlw	0
  2506  000BD2  0100               	movlb	0	; () banked
  2507  000BD4  21B6               	addwfc	(sendData@result+1)& (0+255),w,b
  2508  000BD6  6E2A               	movwf	(??_sendData+1)& (0+255),c
  2509  000BD8  5029               	movf	??_sendData,w,c
  2510  000BDA  0100               	movlb	0	; () banked
  2511  000BDC  5DB8               	subwf	sendData@i& (0+255),w,b
  2512  000BDE  502A               	movf	??_sendData+1,w,c
  2513  000BE0  0100               	movlb	0	; () banked
  2514  000BE2  59B9               	subwfb	(sendData@i+1)& (0+255),w,b
  2515  000BE4  B0D8               	btfsc	status,0,c
  2516  000BE6  0012               	return	
  2517  000BE8  D7E1               	goto	l3861
  2518  000BEA                     __end_of_sendData:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           indf1	equ	0xFE7
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           postinc2	equ	0xFDE
  2533                           postdec2	equ	0xFDD
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _cobs_encode *****************
  2539 ;; Defined at:
  2540 ;;		line 29 in file "COBS.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  dst_buf_ptr     2   28[COMRAM] PTR unsigned char 
  2543 ;;		 -> sendData@COBSArray(30), 
  2544 ;;  dst_buf_len     2   30[COMRAM] unsigned int 
  2545 ;;  src_ptr         2   32[COMRAM] PTR const unsigned char 
  2546 ;;		 -> sendData@SendArray(30), 
  2547 ;;  src_len         2   34[COMRAM] unsigned int 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  result          3   10[BANK0 ] struct .
  2550 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  2551 ;;		 -> sendData@COBSArray(30), 
  2552 ;;  dst_code_wri    2    6[BANK0 ] PTR unsigned char 
  2553 ;;		 -> sendData@COBSArray(30), 
  2554 ;;  dst_buf_end_    2    3[BANK0 ] PTR unsigned char 
  2555 ;;		 -> sendData@COBSArray(30), 
  2556 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  2557 ;;		 -> sendData@SendArray(30), 
  2558 ;;  search_len      1    5[BANK0 ] unsigned char 
  2559 ;;  src_byte        1    2[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  3   28[COMRAM] struct .
  2562 ;; Registers used:
  2563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2569 ;;      Params:         8       0       0       0       0       0       0
  2570 ;;      Locals:         0      13       0       0       0       0       0
  2571 ;;      Temps:          2       0       0       0       0       0       0
  2572 ;;      Totals:        10      13       0       0       0       0       0
  2573 ;;Total ram usage:       23 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    6
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_sendData
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text9
  2584  0008FE                     __ptext9:
  2585                           	opt stack 0
  2586  0008FE                     _cobs_encode:
  2587                           	opt stack 20
  2588                           
  2589                           ;COBS.c: 31: cobs_encode_result result = { 0, COBS_ENCODE_OK };
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;incstack = 0
  2593  0008FE  C034  F06A         	movff	cobs_encode@F180,cobs_encode@result
  2594  000902  C035  F06B         	movff	cobs_encode@F180+1,cobs_encode@result+1
  2595  000906  C036  F06C         	movff	cobs_encode@F180+2,cobs_encode@result+2
  2596                           
  2597                           ;COBS.c: 32: const uint8_t * src_end_ptr = src_ptr + src_len;
  2598  00090A  5023               	movf	cobs_encode@src_len,w,c
  2599  00090C  2421               	addwf	cobs_encode@src_ptr,w,c
  2600  00090E  0100               	movlb	0	; () banked
  2601  000910  6F60               	movwf	cobs_encode@src_end_ptr& (0+255),b
  2602  000912  5024               	movf	cobs_encode@src_len+1,w,c
  2603  000914  2022               	addwfc	cobs_encode@src_ptr+1,w,c
  2604  000916  0100               	movlb	0	; () banked
  2605  000918  6F61               	movwf	(cobs_encode@src_end_ptr+1)& (0+255),b
  2606                           
  2607                           ;COBS.c: 33: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  2608  00091A  501F               	movf	cobs_encode@dst_buf_len,w,c
  2609  00091C  241D               	addwf	cobs_encode@dst_buf_ptr,w,c
  2610  00091E  0100               	movlb	0	; () banked
  2611  000920  6F63               	movwf	cobs_encode@dst_buf_end_ptr& (0+255),b
  2612  000922  5020               	movf	cobs_encode@dst_buf_len+1,w,c
  2613  000924  201E               	addwfc	cobs_encode@dst_buf_ptr+1,w,c
  2614  000926  0100               	movlb	0	; () banked
  2615  000928  6F64               	movwf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),b
  2616                           
  2617                           ;COBS.c: 34: uint8_t * dst_code_write_ptr = dst_buf_ptr;
  2618  00092A  C01D  F066         	movff	cobs_encode@dst_buf_ptr,cobs_encode@dst_code_write_ptr
  2619  00092E  C01E  F067         	movff	cobs_encode@dst_buf_ptr+1,cobs_encode@dst_code_write_ptr+1
  2620                           
  2621                           ;COBS.c: 35: uint8_t * dst_write_ptr = dst_code_write_ptr + 1;
  2622  000932  0E01               	movlw	1
  2623  000934  0100               	movlb	0	; () banked
  2624  000936  2566               	addwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  2625  000938  0100               	movlb	0	; () banked
  2626  00093A  6F68               	movwf	cobs_encode@dst_write_ptr& (0+255),b
  2627  00093C  0E00               	movlw	0
  2628  00093E  0100               	movlb	0	; () banked
  2629  000940  2167               	addwfc	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  2630  000942  0100               	movlb	0	; () banked
  2631  000944  6F69               	movwf	(cobs_encode@dst_write_ptr+1)& (0+255),b
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;COBS.c: 36: uint8_t src_byte = 0;
  2635  000946  0E00               	movlw	0
  2636  000948  0100               	movlb	0	; () banked
  2637  00094A  6F62               	movwf	cobs_encode@src_byte& (0+255),b
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;COBS.c: 37: uint8_t search_len = 1;
  2641  00094C  0E01               	movlw	1
  2642  00094E  0100               	movlb	0	; () banked
  2643  000950  6F65               	movwf	cobs_encode@search_len& (0+255),b
  2644                           
  2645                           ;COBS.c: 41: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  2646  000952  501D               	movf	cobs_encode@dst_buf_ptr,w,c
  2647  000954  101E               	iorwf	cobs_encode@dst_buf_ptr+1,w,c
  2648  000956  B4D8               	btfsc	status,2,c
  2649  000958  D004               	goto	l3729
  2650                           
  2651                           ; BSR set to: 0
  2652  00095A  5021               	movf	cobs_encode@src_ptr,w,c
  2653  00095C  1022               	iorwf	cobs_encode@src_ptr+1,w,c
  2654  00095E  A4D8               	btfss	status,2,c
  2655  000960  D00A               	goto	l3735
  2656  000962                     l3729:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;COBS.c: 42: {
  2660                           ;COBS.c: 43: result.status = COBS_ENCODE_NULL_POINTER;
  2661  000962  0E01               	movlw	1
  2662  000964  0100               	movlb	0	; () banked
  2663  000966  6F6C               	movwf	(cobs_encode@result+2)& (0+255),b
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;COBS.c: 44: return result;
  2667  000968  C06A  F01D         	movff	cobs_encode@result,?_cobs_encode
  2668  00096C  C06B  F01E         	movff	cobs_encode@result+1,?_cobs_encode+1
  2669  000970  C06C  F01F         	movff	cobs_encode@result+2,?_cobs_encode+2
  2670                           
  2671                           ; BSR set to: 0
  2672  000974  0012               	return	
  2673  000976                     l3735:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;COBS.c: 45: }
  2677                           ;COBS.c: 47: if (src_len != 0)
  2678  000976  5023               	movf	cobs_encode@src_len,w,c
  2679  000978  1024               	iorwf	cobs_encode@src_len+1,w,c
  2680  00097A  B4D8               	btfsc	status,2,c
  2681  00097C  D05C               	goto	l3779
  2682  00097E                     l3737:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;COBS.c: 51: {
  2686                           ;COBS.c: 53: if (dst_write_ptr >= dst_buf_end_ptr)
  2687  00097E  0100               	movlb	0	; () banked
  2688  000980  5163               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  2689  000982  0100               	movlb	0	; () banked
  2690  000984  5D68               	subwf	cobs_encode@dst_write_ptr& (0+255),w,b
  2691  000986  0100               	movlb	0	; () banked
  2692  000988  5164               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  2693  00098A  0100               	movlb	0	; () banked
  2694  00098C  5969               	subwfb	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  2695  00098E  A0D8               	btfss	status,0,c
  2696  000990  D003               	goto	l3741
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;COBS.c: 54: {
  2700                           ;COBS.c: 55: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  2701  000992  0100               	movlb	0	; () banked
  2702  000994  836C               	bsf	(cobs_encode@result+2)& (0+255),1,b
  2703                           
  2704                           ;COBS.c: 56: break;
  2705  000996  D04F               	goto	l3779
  2706  000998                     l3741:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;COBS.c: 57: }
  2710                           ;COBS.c: 59: src_byte = *src_ptr++;
  2711  000998  C021  FFD9         	movff	cobs_encode@src_ptr,fsr2l
  2712  00099C  C022  FFDA         	movff	cobs_encode@src_ptr+1,fsr2h
  2713  0009A0  50DF               	movf	indf2,w,c
  2714  0009A2  0100               	movlb	0	; () banked
  2715  0009A4  6F62               	movwf	cobs_encode@src_byte& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718  0009A6  4A21               	infsnz	cobs_encode@src_ptr,f,c
  2719  0009A8  2A22               	incf	cobs_encode@src_ptr+1,f,c
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;COBS.c: 60: if (src_byte == 0)
  2723  0009AA  0100               	movlb	0	; () banked
  2724  0009AC  5162               	movf	cobs_encode@src_byte& (0+255),w,b
  2725  0009AE  0100               	movlb	0	; () banked
  2726  0009B0  A4D8               	btfss	status,2,c
  2727  0009B2  D019               	goto	l3759
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;COBS.c: 61: {
  2731                           ;COBS.c: 63: *dst_code_write_ptr = search_len;
  2732  0009B4  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  2733  0009B8  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  2734  0009BC  C065  FFDF         	movff	cobs_encode@search_len,indf2
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;COBS.c: 64: dst_code_write_ptr = dst_write_ptr++;
  2738  0009C0  C068  F066         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  2739  0009C4  C069  F067         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  2740                           
  2741                           ; BSR set to: 0
  2742  0009C8  0100               	movlb	0	; () banked
  2743  0009CA  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  2744  0009CC  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;COBS.c: 65: search_len = 1;
  2748  0009CE  0E01               	movlw	1
  2749  0009D0  0100               	movlb	0	; () banked
  2750  0009D2  6F65               	movwf	cobs_encode@search_len& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;COBS.c: 66: if (src_ptr >= src_end_ptr)
  2754  0009D4  0100               	movlb	0	; () banked
  2755  0009D6  5160               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  2756  0009D8  5C21               	subwf	cobs_encode@src_ptr,w,c
  2757  0009DA  0100               	movlb	0	; () banked
  2758  0009DC  5161               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  2759  0009DE  5822               	subwfb	cobs_encode@src_ptr+1,w,c
  2760  0009E0  B0D8               	btfsc	status,0,c
  2761  0009E2  D029               	goto	l3779
  2762  0009E4  D7CC               	goto	l3737
  2763  0009E6                     l3759:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;COBS.c: 71: else
  2767                           ;COBS.c: 72: {
  2768                           ;COBS.c: 74: *dst_write_ptr++ = src_byte;
  2769  0009E6  C068  FFD9         	movff	cobs_encode@dst_write_ptr,fsr2l
  2770  0009EA  C069  FFDA         	movff	cobs_encode@dst_write_ptr+1,fsr2h
  2771  0009EE  C062  FFDF         	movff	cobs_encode@src_byte,indf2
  2772                           
  2773                           ; BSR set to: 0
  2774  0009F2  0100               	movlb	0	; () banked
  2775  0009F4  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  2776  0009F6  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;COBS.c: 75: search_len++;
  2780  0009F8  0100               	movlb	0	; () banked
  2781  0009FA  2B65               	incf	cobs_encode@search_len& (0+255),f,b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;COBS.c: 76: if (src_ptr >= src_end_ptr)
  2785  0009FC  0100               	movlb	0	; () banked
  2786  0009FE  5160               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  2787  000A00  5C21               	subwf	cobs_encode@src_ptr,w,c
  2788  000A02  0100               	movlb	0	; () banked
  2789  000A04  5161               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  2790  000A06  5822               	subwfb	cobs_encode@src_ptr+1,w,c
  2791  000A08  B0D8               	btfsc	status,0,c
  2792  000A0A  D015               	goto	l3779
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;COBS.c: 79: }
  2796                           ;COBS.c: 80: if (search_len == 0xFF)
  2797                           
  2798                           ; BSR set to: 0
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;COBS.c: 77: {
  2802                           ;COBS.c: 78: break;
  2803  000A0C  0100               	movlb	0	; () banked
  2804  000A0E  2965               	incf	cobs_encode@search_len& (0+255),w,b
  2805  000A10  A4D8               	btfss	status,2,c
  2806  000A12  D7B5               	goto	l3737
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;COBS.c: 81: {
  2810                           ;COBS.c: 84: *dst_code_write_ptr = search_len;
  2811  000A14  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  2812  000A18  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  2813  000A1C  C065  FFDF         	movff	cobs_encode@search_len,indf2
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;COBS.c: 85: dst_code_write_ptr = dst_write_ptr++;
  2817  000A20  C068  F066         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  2818  000A24  C069  F067         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  2819                           
  2820                           ; BSR set to: 0
  2821  000A28  0100               	movlb	0	; () banked
  2822  000A2A  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  2823  000A2C  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;COBS.c: 86: search_len = 1;
  2827  000A2E  0E01               	movlw	1
  2828  000A30  0100               	movlb	0	; () banked
  2829  000A32  6F65               	movwf	cobs_encode@search_len& (0+255),b
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;COBS.c: 87: }
  2833                           ;COBS.c: 88: }
  2834                           ;COBS.c: 89: }
  2835                           
  2836                           ; BSR set to: 0
  2837  000A34  D7A4               	goto	l3737
  2838  000A36                     l3779:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;COBS.c: 90: }
  2842                           ;COBS.c: 96: if (dst_code_write_ptr >= dst_buf_end_ptr)
  2843  000A36  0100               	movlb	0	; () banked
  2844  000A38  5163               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  2845  000A3A  0100               	movlb	0	; () banked
  2846  000A3C  5D66               	subwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  2847  000A3E  0100               	movlb	0	; () banked
  2848  000A40  5164               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  2849  000A42  0100               	movlb	0	; () banked
  2850  000A44  5967               	subwfb	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  2851  000A46  A0D8               	btfss	status,0,c
  2852  000A48  D007               	goto	l3785
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;COBS.c: 97: {
  2856                           ;COBS.c: 99: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  2857  000A4A  0100               	movlb	0	; () banked
  2858  000A4C  836C               	bsf	(cobs_encode@result+2)& (0+255),1,b
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;COBS.c: 100: dst_write_ptr = dst_buf_end_ptr;
  2862  000A4E  C063  F068         	movff	cobs_encode@dst_buf_end_ptr,cobs_encode@dst_write_ptr
  2863  000A52  C064  F069         	movff	cobs_encode@dst_buf_end_ptr+1,cobs_encode@dst_write_ptr+1
  2864                           
  2865                           ;COBS.c: 101: }
  2866  000A56  D006               	goto	l3787
  2867  000A58                     l3785:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;COBS.c: 102: else
  2871                           ;COBS.c: 103: {
  2872                           ;COBS.c: 105: *dst_code_write_ptr = search_len;
  2873  000A58  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  2874  000A5C  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  2875  000A60  C065  FFDF         	movff	cobs_encode@search_len,indf2
  2876  000A64                     l3787:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;COBS.c: 106: }
  2880                           ;COBS.c: 109: result.out_len = dst_write_ptr - dst_buf_ptr;
  2881  000A64  C01D  F025         	movff	cobs_encode@dst_buf_ptr,??_cobs_encode
  2882  000A68  C01E  F026         	movff	cobs_encode@dst_buf_ptr+1,??_cobs_encode+1
  2883  000A6C  1E25               	comf	??_cobs_encode,f,c
  2884  000A6E  1E26               	comf	??_cobs_encode+1,f,c
  2885  000A70  4A25               	infsnz	??_cobs_encode,f,c
  2886  000A72  2A26               	incf	??_cobs_encode+1,f,c
  2887  000A74  0100               	movlb	0	; () banked
  2888  000A76  5168               	movf	cobs_encode@dst_write_ptr& (0+255),w,b
  2889  000A78  2425               	addwf	??_cobs_encode,w,c
  2890  000A7A  0100               	movlb	0	; () banked
  2891  000A7C  6F6A               	movwf	cobs_encode@result& (0+255),b
  2892  000A7E  0100               	movlb	0	; () banked
  2893  000A80  5169               	movf	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  2894  000A82  2026               	addwfc	??_cobs_encode+1,w,c
  2895  000A84  0100               	movlb	0	; () banked
  2896  000A86  6F6B               	movwf	(cobs_encode@result+1)& (0+255),b
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;COBS.c: 111: return result;
  2900  000A88  C06A  F01D         	movff	cobs_encode@result,?_cobs_encode
  2901  000A8C  C06B  F01E         	movff	cobs_encode@result+1,?_cobs_encode+1
  2902  000A90  C06C  F01F         	movff	cobs_encode@result+2,?_cobs_encode+2
  2903  000A94  0012               	return	
  2904  000A96                     __end_of_cobs_encode:
  2905                           	opt stack 0
  2906                           tblptru	equ	0xFF8
  2907                           tblptrh	equ	0xFF7
  2908                           tblptrl	equ	0xFF6
  2909                           tablat	equ	0xFF5
  2910                           intcon	equ	0xFF2
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           indf1	equ	0xFE7
  2914                           postdec1	equ	0xFE5
  2915                           fsr1h	equ	0xFE2
  2916                           fsr1l	equ	0xFE1
  2917                           indf2	equ	0xFDF
  2918                           postinc2	equ	0xFDE
  2919                           postdec2	equ	0xFDD
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _Send_put *****************
  2925 ;; Defined at:
  2926 ;;		line 132 in file "UART.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  _data           1    wreg     unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  _data           1   39[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2940 ;;      Params:         0       0       0       0       0       0       0
  2941 ;;      Locals:         1       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0
  2943 ;;      Totals:         1       0       0       0       0       0       0
  2944 ;;Total ram usage:        1 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    8
  2947 ;; This function calls:
  2948 ;;		_UART_buff_get
  2949 ;;		_UART_buff_put
  2950 ;; This function is called by:
  2951 ;;		_sendData
  2952 ;;		_putch
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text10
  2957  001C58                     __ptext10:
  2958                           	opt stack 0
  2959  001C58                     _Send_put:
  2960                           	opt stack 18
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;incstack = 0
  2964                           ;Send_put@_data stored from wreg
  2965  001C58  6E28               	movwf	Send_put@_data,c
  2966                           
  2967                           ;UART.c: 133: UART_buff_put(&output_buffer, _data);
  2968  001C5A  0E00               	movlw	low _output_buffer
  2969  001C5C  6E23               	movwf	UART_buff_put@_this,c
  2970  001C5E  0E03               	movlw	high _output_buffer
  2971  001C60  6E24               	movwf	UART_buff_put@_this+1,c
  2972  001C62  C028  F025         	movff	Send_put@_data,UART_buff_put@c
  2973  001C66  EC8C  F006         	call	_UART_buff_put	;wreg free
  2974                           
  2975                           ;UART.c: 134: if (Transmit_stall == 1) {
  2976  001C6A  0442               	decf	_Transmit_stall,w,c
  2977  001C6C  A4D8               	btfss	status,2,c
  2978  001C6E  0012               	return	
  2979                           
  2980                           ;UART.c: 135: Transmit_stall = 0;
  2981  001C70  0E00               	movlw	0
  2982  001C72  6E42               	movwf	_Transmit_stall,c
  2983                           
  2984                           ;UART.c: 136: TXREG1 = UART_buff_get(&output_buffer);
  2985  001C74  0E00               	movlw	low _output_buffer
  2986  001C76  6E23               	movwf	UART_buff_get@_this,c
  2987  001C78  0E03               	movlw	high _output_buffer
  2988  001C7A  6E24               	movwf	UART_buff_get@_this+1,c
  2989  001C7C  EC97  F00A         	call	_UART_buff_get	;wreg free
  2990  001C80  6EAD               	movwf	4013,c	;volatile
  2991                           
  2992                           ;UART.c: 137: PIE1bits.TX1IE = 1;
  2993  001C82  889D               	bsf	3997,4,c	;volatile
  2994  001C84  0012               	return	
  2995  001C86                     __end_of_Send_put:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           indf1	equ	0xFE7
  3005                           postdec1	equ	0xFE5
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           indf2	equ	0xFDF
  3009                           postinc2	equ	0xFDE
  3010                           postdec2	equ	0xFDD
  3011                           fsr2h	equ	0xFDA
  3012                           fsr2l	equ	0xFD9
  3013                           status	equ	0xFD8
  3014                           
  3015 ;; *************** function _UART_buff_put *****************
  3016 ;; Defined at:
  3017 ;;		line 70 in file "UART.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  3020 ;;		 -> output_buffer(206), input_buffer(206), 
  3021 ;;  c               1   36[COMRAM] const unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3033 ;;      Params:         3       0       0       0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0
  3035 ;;      Temps:          2       0       0       0       0       0       0
  3036 ;;      Totals:         5       0       0       0       0       0       0
  3037 ;;Total ram usage:        5 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    7
  3040 ;; This function calls:
  3041 ;;		_UART_buff_modulo_inc
  3042 ;; This function is called by:
  3043 ;;		_Send_put
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text11
  3048  000D18                     __ptext11:
  3049                           	opt stack 0
  3050  000D18                     _UART_buff_put:
  3051                           	opt stack 18
  3052                           
  3053                           ;UART.c: 71: if (_this->count < 200) {
  3054                           
  3055                           ;incstack = 0
  3056  000D18  EE20 F0CC          	lfsr	2,204
  3057  000D1C  5023               	movf	UART_buff_put@_this,w,c
  3058  000D1E  26D9               	addwf	fsr2l,f,c
  3059  000D20  5024               	movf	UART_buff_put@_this+1,w,c
  3060  000D22  22DA               	addwfc	fsr2h,f,c
  3061  000D24  0E01               	movlw	1
  3062  000D26  BEDB               	btfsc	plusw2,7,c
  3063  000D28  D007               	goto	l3653
  3064  000D2A  0E01               	movlw	1
  3065  000D2C  50DB               	movf	plusw2,w,c
  3066  000D2E  E13A               	bnz	l3659
  3067  000D30  0EC8               	movlw	200
  3068  000D32  5CDE               	subwf	postinc2,w,c
  3069  000D34  B0D8               	btfsc	status,0,c
  3070  000D36  D036               	goto	l3659
  3071  000D38                     l3653:
  3072                           
  3073                           ;UART.c: 72: _this->buf[_this->head] = c;
  3074  000D38  EE20 F0C8          	lfsr	2,200
  3075  000D3C  5023               	movf	UART_buff_put@_this,w,c
  3076  000D3E  26D9               	addwf	fsr2l,f,c
  3077  000D40  5024               	movf	UART_buff_put@_this+1,w,c
  3078  000D42  22DA               	addwfc	fsr2h,f,c
  3079  000D44  CFDE F026          	movff	postinc2,??_UART_buff_put
  3080  000D48  CFDD F027          	movff	postdec2,??_UART_buff_put+1
  3081  000D4C  5026               	movf	??_UART_buff_put,w,c
  3082  000D4E  2423               	addwf	UART_buff_put@_this,w,c
  3083  000D50  6ED9               	movwf	fsr2l,c
  3084  000D52  5027               	movf	??_UART_buff_put+1,w,c
  3085  000D54  2024               	addwfc	UART_buff_put@_this+1,w,c
  3086  000D56  6EDA               	movwf	fsr2h,c
  3087  000D58  C025  FFDF         	movff	UART_buff_put@c,indf2
  3088                           
  3089                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3090  000D5C  EE20 F0C8          	lfsr	2,200
  3091  000D60  5023               	movf	UART_buff_put@_this,w,c
  3092  000D62  26D9               	addwf	fsr2l,f,c
  3093  000D64  5024               	movf	UART_buff_put@_this+1,w,c
  3094  000D66  22DA               	addwfc	fsr2h,f,c
  3095  000D68  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  3096  000D6C  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  3097  000D70  0E00               	movlw	0
  3098  000D72  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  3099  000D74  0EC8               	movlw	200
  3100  000D76  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  3101  000D78  EC59  F00E         	call	_UART_buff_modulo_inc	;wreg free
  3102  000D7C  EE20 F0C8          	lfsr	2,200
  3103  000D80  5023               	movf	UART_buff_put@_this,w,c
  3104  000D82  26D9               	addwf	fsr2l,f,c
  3105  000D84  5024               	movf	UART_buff_put@_this+1,w,c
  3106  000D86  22DA               	addwfc	fsr2h,f,c
  3107  000D88  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3108  000D8C  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3109                           
  3110                           ;UART.c: 74: ++_this->count;
  3111  000D90  EE20 F0CC          	lfsr	2,204
  3112  000D94  5023               	movf	UART_buff_put@_this,w,c
  3113  000D96  26D9               	addwf	fsr2l,f,c
  3114  000D98  5024               	movf	UART_buff_put@_this+1,w,c
  3115  000D9A  22DA               	addwfc	fsr2h,f,c
  3116  000D9C  2ADE               	incf	postinc2,f,c
  3117  000D9E  0E00               	movlw	0
  3118  000DA0  22DD               	addwfc	postdec2,f,c
  3119                           
  3120                           ;UART.c: 75: } else {
  3121  000DA2  0012               	return	
  3122  000DA4                     l3659:
  3123                           
  3124                           ;UART.c: 76: _this->buf[_this->head] = c;
  3125  000DA4  EE20 F0C8          	lfsr	2,200
  3126  000DA8  5023               	movf	UART_buff_put@_this,w,c
  3127  000DAA  26D9               	addwf	fsr2l,f,c
  3128  000DAC  5024               	movf	UART_buff_put@_this+1,w,c
  3129  000DAE  22DA               	addwfc	fsr2h,f,c
  3130  000DB0  CFDE F026          	movff	postinc2,??_UART_buff_put
  3131  000DB4  CFDD F027          	movff	postdec2,??_UART_buff_put+1
  3132  000DB8  5026               	movf	??_UART_buff_put,w,c
  3133  000DBA  2423               	addwf	UART_buff_put@_this,w,c
  3134  000DBC  6ED9               	movwf	fsr2l,c
  3135  000DBE  5027               	movf	??_UART_buff_put+1,w,c
  3136  000DC0  2024               	addwfc	UART_buff_put@_this+1,w,c
  3137  000DC2  6EDA               	movwf	fsr2h,c
  3138  000DC4  C025  FFDF         	movff	UART_buff_put@c,indf2
  3139                           
  3140                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3141  000DC8  EE20 F0C8          	lfsr	2,200
  3142  000DCC  5023               	movf	UART_buff_put@_this,w,c
  3143  000DCE  26D9               	addwf	fsr2l,f,c
  3144  000DD0  5024               	movf	UART_buff_put@_this+1,w,c
  3145  000DD2  22DA               	addwfc	fsr2h,f,c
  3146  000DD4  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  3147  000DD8  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  3148  000DDC  0E00               	movlw	0
  3149  000DDE  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  3150  000DE0  0EC8               	movlw	200
  3151  000DE2  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  3152  000DE4  EC59  F00E         	call	_UART_buff_modulo_inc	;wreg free
  3153  000DE8  EE20 F0C8          	lfsr	2,200
  3154  000DEC  5023               	movf	UART_buff_put@_this,w,c
  3155  000DEE  26D9               	addwf	fsr2l,f,c
  3156  000DF0  5024               	movf	UART_buff_put@_this+1,w,c
  3157  000DF2  22DA               	addwfc	fsr2h,f,c
  3158  000DF4  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3159  000DF8  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3160                           
  3161                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3162  000DFC  EE20 F0CA          	lfsr	2,202
  3163  000E00  5023               	movf	UART_buff_put@_this,w,c
  3164  000E02  26D9               	addwf	fsr2l,f,c
  3165  000E04  5024               	movf	UART_buff_put@_this+1,w,c
  3166  000E06  22DA               	addwfc	fsr2h,f,c
  3167  000E08  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  3168  000E0C  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  3169  000E10  0E00               	movlw	0
  3170  000E12  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  3171  000E14  0EC8               	movlw	200
  3172  000E16  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  3173  000E18  EC59  F00E         	call	_UART_buff_modulo_inc	;wreg free
  3174  000E1C  EE20 F0CA          	lfsr	2,202
  3175  000E20  5023               	movf	UART_buff_put@_this,w,c
  3176  000E22  26D9               	addwf	fsr2l,f,c
  3177  000E24  5024               	movf	UART_buff_put@_this+1,w,c
  3178  000E26  22DA               	addwfc	fsr2h,f,c
  3179  000E28  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3180  000E2C  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3181  000E30  0012               	return	
  3182  000E32                     __end_of_UART_buff_put:
  3183                           	opt stack 0
  3184                           tblptru	equ	0xFF8
  3185                           tblptrh	equ	0xFF7
  3186                           tblptrl	equ	0xFF6
  3187                           tablat	equ	0xFF5
  3188                           intcon	equ	0xFF2
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           indf1	equ	0xFE7
  3192                           postdec1	equ	0xFE5
  3193                           fsr1h	equ	0xFE2
  3194                           fsr1l	equ	0xFE1
  3195                           indf2	equ	0xFDF
  3196                           postinc2	equ	0xFDE
  3197                           postdec2	equ	0xFDD
  3198                           plusw2	equ	0xFDB
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _UART_buff_get *****************
  3204 ;; Defined at:
  3205 ;;		line 83 in file "UART.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  3208 ;;		 -> output_buffer(206), input_buffer(206), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  c               1   38[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         2       0       0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0       0       0
  3222 ;;      Temps:          2       0       0       0       0       0       0
  3223 ;;      Totals:         5       0       0       0       0       0       0
  3224 ;;Total ram usage:        5 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    7
  3227 ;; This function calls:
  3228 ;;		_UART_buff_modulo_inc
  3229 ;; This function is called by:
  3230 ;;		_Receive_get
  3231 ;;		_Send_put
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text12
  3236  00152E                     __ptext12:
  3237                           	opt stack 0
  3238  00152E                     _UART_buff_get:
  3239                           	opt stack 20
  3240                           
  3241                           ;UART.c: 84: unsigned char c;
  3242                           ;UART.c: 85: if (_this->count > 0) {
  3243                           
  3244                           ;incstack = 0
  3245  00152E  EE20 F0CC          	lfsr	2,204
  3246  001532  5023               	movf	UART_buff_get@_this,w,c
  3247  001534  26D9               	addwf	fsr2l,f,c
  3248  001536  5024               	movf	UART_buff_get@_this+1,w,c
  3249  001538  22DA               	addwfc	fsr2h,f,c
  3250  00153A  0E01               	movlw	1
  3251  00153C  BEDB               	btfsc	plusw2,7,c
  3252  00153E  D03C               	goto	l3673
  3253  001540  0E01               	movlw	1
  3254  001542  50DB               	movf	plusw2,w,c
  3255  001544  E103               	bnz	u2130
  3256  001546  04DE               	decf	postinc2,w,c
  3257  001548  A0D8               	btfss	status,0,c
  3258  00154A  D036               	goto	l3673
  3259  00154C                     u2130:
  3260                           
  3261                           ;UART.c: 86: c = _this->buf[_this->tail];
  3262  00154C  EE20 F0CA          	lfsr	2,202
  3263  001550  5023               	movf	UART_buff_get@_this,w,c
  3264  001552  26D9               	addwf	fsr2l,f,c
  3265  001554  5024               	movf	UART_buff_get@_this+1,w,c
  3266  001556  22DA               	addwfc	fsr2h,f,c
  3267  001558  CFDE F025          	movff	postinc2,??_UART_buff_get
  3268  00155C  CFDD F026          	movff	postdec2,??_UART_buff_get+1
  3269  001560  5025               	movf	??_UART_buff_get,w,c
  3270  001562  2423               	addwf	UART_buff_get@_this,w,c
  3271  001564  6ED9               	movwf	fsr2l,c
  3272  001566  5026               	movf	??_UART_buff_get+1,w,c
  3273  001568  2024               	addwfc	UART_buff_get@_this+1,w,c
  3274  00156A  6EDA               	movwf	fsr2h,c
  3275  00156C  50DF               	movf	indf2,w,c
  3276  00156E  6E27               	movwf	UART_buff_get@c,c
  3277                           
  3278                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3279  001570  EE20 F0CA          	lfsr	2,202
  3280  001574  5023               	movf	UART_buff_get@_this,w,c
  3281  001576  26D9               	addwf	fsr2l,f,c
  3282  001578  5024               	movf	UART_buff_get@_this+1,w,c
  3283  00157A  22DA               	addwfc	fsr2h,f,c
  3284  00157C  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  3285  001580  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  3286  001584  0E00               	movlw	0
  3287  001586  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  3288  001588  0EC8               	movlw	200
  3289  00158A  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  3290  00158C  EC59  F00E         	call	_UART_buff_modulo_inc	;wreg free
  3291  001590  EE20 F0CA          	lfsr	2,202
  3292  001594  5023               	movf	UART_buff_get@_this,w,c
  3293  001596  26D9               	addwf	fsr2l,f,c
  3294  001598  5024               	movf	UART_buff_get@_this+1,w,c
  3295  00159A  22DA               	addwfc	fsr2h,f,c
  3296  00159C  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3297  0015A0  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3298                           
  3299                           ;UART.c: 88: --_this->count;
  3300  0015A4  EE20 F0CC          	lfsr	2,204
  3301  0015A8  5023               	movf	UART_buff_get@_this,w,c
  3302  0015AA  26D9               	addwf	fsr2l,f,c
  3303  0015AC  5024               	movf	UART_buff_get@_this+1,w,c
  3304  0015AE  22DA               	addwfc	fsr2h,f,c
  3305  0015B0  06DE               	decf	postinc2,f,c
  3306  0015B2  0E00               	movlw	0
  3307  0015B4  5ADD               	subwfb	postdec2,f,c
  3308                           
  3309                           ;UART.c: 89: } else {
  3310  0015B6  D002               	goto	l589
  3311  0015B8                     l3673:
  3312                           
  3313                           ;UART.c: 90: c = 0;
  3314  0015B8  0E00               	movlw	0
  3315  0015BA  6E27               	movwf	UART_buff_get@c,c
  3316  0015BC                     l589:
  3317                           
  3318                           ;UART.c: 91: }
  3319                           ;UART.c: 92: return (c);
  3320  0015BC  5027               	movf	UART_buff_get@c,w,c
  3321  0015BE  0012               	return	
  3322  0015C0                     __end_of_UART_buff_get:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           intcon	equ	0xFF2
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           indf1	equ	0xFE7
  3332                           postdec1	equ	0xFE5
  3333                           fsr1h	equ	0xFE2
  3334                           fsr1l	equ	0xFE1
  3335                           indf2	equ	0xFDF
  3336                           postinc2	equ	0xFDE
  3337                           postdec2	equ	0xFDD
  3338                           plusw2	equ	0xFDB
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _UART_buff_modulo_inc *****************
  3344 ;; Defined at:
  3345 ;;		line 108 in file "UART.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  value           2   28[COMRAM] const unsigned int 
  3348 ;;  modulus         2   30[COMRAM] const unsigned int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  my_value        2   32[COMRAM] unsigned int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2   28[COMRAM] unsigned int 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3360 ;;      Params:         4       0       0       0       0       0       0
  3361 ;;      Locals:         2       0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0
  3363 ;;      Totals:         6       0       0       0       0       0       0
  3364 ;;Total ram usage:        6 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    6
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_UART_buff_put
  3371 ;;		_UART_buff_get
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text13
  3376  001CB2                     __ptext13:
  3377                           	opt stack 0
  3378  001CB2                     _UART_buff_modulo_inc:
  3379                           	opt stack 20
  3380                           
  3381                           ;UART.c: 109: unsigned int my_value = value + 1;
  3382                           
  3383                           ;incstack = 0
  3384  001CB2  0E01               	movlw	1
  3385  001CB4  241D               	addwf	UART_buff_modulo_inc@value,w,c
  3386  001CB6  6E21               	movwf	UART_buff_modulo_inc@my_value,c
  3387  001CB8  0E00               	movlw	0
  3388  001CBA  201E               	addwfc	UART_buff_modulo_inc@value+1,w,c
  3389  001CBC  6E22               	movwf	UART_buff_modulo_inc@my_value+1,c
  3390                           
  3391                           ;UART.c: 110: if (my_value >= modulus) {
  3392  001CBE  501F               	movf	UART_buff_modulo_inc@modulus,w,c
  3393  001CC0  5C21               	subwf	UART_buff_modulo_inc@my_value,w,c
  3394  001CC2  5020               	movf	UART_buff_modulo_inc@modulus+1,w,c
  3395  001CC4  5822               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  3396  001CC6  A0D8               	btfss	status,0,c
  3397  001CC8  D004               	goto	l3647
  3398                           
  3399                           ;UART.c: 111: my_value = 0;
  3400  001CCA  0E00               	movlw	0
  3401  001CCC  6E22               	movwf	UART_buff_modulo_inc@my_value+1,c
  3402  001CCE  0E00               	movlw	0
  3403  001CD0  6E21               	movwf	UART_buff_modulo_inc@my_value,c
  3404  001CD2                     l3647:
  3405                           
  3406                           ;UART.c: 112: }
  3407                           ;UART.c: 113: return (my_value);
  3408  001CD2  C021  F01D         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  3409  001CD6  C022  F01E         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  3410  001CDA  0012               	return	
  3411  001CDC                     __end_of_UART_buff_modulo_inc:
  3412                           	opt stack 0
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           intcon	equ	0xFF2
  3418                           postinc0	equ	0xFEE
  3419                           wreg	equ	0xFE8
  3420                           indf1	equ	0xFE7
  3421                           postdec1	equ	0xFE5
  3422                           fsr1h	equ	0xFE2
  3423                           fsr1l	equ	0xFE1
  3424                           indf2	equ	0xFDF
  3425                           postinc2	equ	0xFDE
  3426                           postdec2	equ	0xFDD
  3427                           plusw2	equ	0xFDB
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _CRC8 *****************
  3433 ;; Defined at:
  3434 ;;		line 23 in file "CarCom.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  data            2   28[COMRAM] PTR const unsigned char 
  3437 ;;		 -> ProcessArray(30), sendData@SendArray(30), 
  3438 ;;  len             1   30[COMRAM] unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  sum             1   31[COMRAM] unsigned char 
  3441 ;;  tempI           1   33[COMRAM] unsigned char 
  3442 ;;  extract         1   32[COMRAM] unsigned char 
  3443 ;;  crc             1   34[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3453 ;;      Params:         3       0       0       0       0       0       0
  3454 ;;      Locals:         4       0       0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0
  3456 ;;      Totals:         7       0       0       0       0       0       0
  3457 ;;Total ram usage:        7 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    6
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_sendData
  3464 ;;		_receiveData
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text14
  3469  001A10                     __ptext14:
  3470                           	opt stack 0
  3471  001A10                     _CRC8:
  3472                           	opt stack 20
  3473                           
  3474                           ;CarCom.c: 24: unsigned char crc = 0x00;
  3475                           
  3476                           ;incstack = 0
  3477  001A10  0E00               	movlw	0
  3478  001A12  6E23               	movwf	CRC8@crc,c
  3479                           
  3480                           ;CarCom.c: 25: while (len--) {
  3481  001A14  D01C               	goto	l3713
  3482  001A16                     l3697:
  3483                           
  3484                           ;CarCom.c: 26: unsigned char extract = *data++;
  3485  001A16  C01D  FFD9         	movff	CRC8@data,fsr2l
  3486  001A1A  C01E  FFDA         	movff	CRC8@data+1,fsr2h
  3487  001A1E  50DF               	movf	indf2,w,c
  3488  001A20  6E21               	movwf	CRC8@extract,c
  3489  001A22  4A1D               	infsnz	CRC8@data,f,c
  3490  001A24  2A1E               	incf	CRC8@data+1,f,c
  3491                           
  3492                           ;CarCom.c: 27: unsigned char tempI;
  3493                           ;CarCom.c: 28: for (tempI = 8; tempI; tempI--) {
  3494  001A26  0E08               	movlw	8
  3495  001A28  6E22               	movwf	CRC8@tempI,c
  3496  001A2A  D00E               	goto	l3711
  3497  001A2C                     l3703:
  3498                           
  3499                           ;CarCom.c: 29: unsigned char sum = (crc ^ extract) & 0x01;
  3500  001A2C  5023               	movf	CRC8@crc,w,c
  3501  001A2E  1821               	xorwf	CRC8@extract,w,c
  3502  001A30  0B01               	andlw	1
  3503  001A32  6E20               	movwf	CRC8@sum,c
  3504                           
  3505                           ;CarCom.c: 30: crc >>= 1;
  3506  001A34  90D8               	bcf	status,0,c
  3507  001A36  3223               	rrcf	CRC8@crc,f,c
  3508                           
  3509                           ;CarCom.c: 31: if (sum) {
  3510  001A38  5020               	movf	CRC8@sum,w,c
  3511  001A3A  B4D8               	btfsc	status,2,c
  3512  001A3C  D002               	goto	l754
  3513                           
  3514                           ;CarCom.c: 32: crc ^= 0x8C;
  3515  001A3E  0E8C               	movlw	140
  3516  001A40  1A23               	xorwf	CRC8@crc,f,c
  3517  001A42                     l754:
  3518                           
  3519                           ;CarCom.c: 33: }
  3520                           ;CarCom.c: 34: extract >>= 1;
  3521  001A42  90D8               	bcf	status,0,c
  3522  001A44  3221               	rrcf	CRC8@extract,f,c
  3523  001A46  0622               	decf	CRC8@tempI,f,c
  3524  001A48                     l3711:
  3525  001A48  5022               	movf	CRC8@tempI,w,c
  3526  001A4A  A4D8               	btfss	status,2,c
  3527  001A4C  D7EF               	goto	l3703
  3528  001A4E                     l3713:
  3529  001A4E  061F               	decf	CRC8@len,f,c
  3530  001A50  281F               	incf	CRC8@len,w,c
  3531  001A52  A4D8               	btfss	status,2,c
  3532  001A54  D7E0               	goto	l3697
  3533                           
  3534                           ;CarCom.c: 35: }
  3535                           ;CarCom.c: 36: }
  3536                           ;CarCom.c: 37: return crc;
  3537  001A56  5023               	movf	CRC8@crc,w,c
  3538  001A58  0012               	return	
  3539  001A5A                     __end_of_CRC8:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           intcon	equ	0xFF2
  3546                           postinc0	equ	0xFEE
  3547                           wreg	equ	0xFE8
  3548                           indf1	equ	0xFE7
  3549                           postdec1	equ	0xFE5
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           plusw2	equ	0xFDB
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _GetDataDict *****************
  3561 ;; Defined at:
  3562 ;;		line 7 in file "CarDataDictionary.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  DataTable       1    wreg     unsigned char 
  3565 ;;  DataTableInd    1   28[COMRAM] unsigned char 
  3566 ;;  DataArray       2   29[COMRAM] PTR unsigned char 
  3567 ;;		 -> ComController@DataToSend(4), 
  3568 ;;  numbofbytes     1   31[COMRAM] unsigned char 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  DataTable       1   33[COMRAM] unsigned char 
  3571 ;;  ReturnCounte    1   35[COMRAM] unsigned char 
  3572 ;;  DataCount       1   34[COMRAM] unsigned char 
  3573 ;;  Error           1   32[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      unsigned char 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3583 ;;      Params:         4       0       0       0       0       0       0
  3584 ;;      Locals:         4       0       0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0
  3586 ;;      Totals:         8       0       0       0       0       0       0
  3587 ;;Total ram usage:        8 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    6
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_ComController
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text15
  3598  001496                     __ptext15:
  3599                           	opt stack 0
  3600  001496                     _GetDataDict:
  3601                           	opt stack 21
  3602                           
  3603                           ;incstack = 0
  3604                           ;GetDataDict@DataTable stored from wreg
  3605  001496  6E22               	movwf	GetDataDict@DataTable,c
  3606                           
  3607                           ;CarDataDictionary.c: 8: unsigned char Error = 0;
  3608  001498  0E00               	movlw	0
  3609  00149A  6E21               	movwf	GetDataDict@Error,c
  3610                           
  3611                           ;CarDataDictionary.c: 9: unsigned char DataCount = 0;
  3612  00149C  0E00               	movlw	0
  3613  00149E  6E23               	movwf	GetDataDict@DataCount,c
  3614                           
  3615                           ;CarDataDictionary.c: 10: unsigned char ReturnCounter = 0;
  3616  0014A0  0E00               	movlw	0
  3617  0014A2  6E24               	movwf	GetDataDict@ReturnCounter,c
  3618                           
  3619                           ;CarDataDictionary.c: 11: switch(DataTable){
  3620  0014A4  D03C               	goto	l3889
  3621  0014A6                     l3869:
  3622                           
  3623                           ;CarDataDictionary.c: 13: DataCount = DataTableIndex + numbofbytes;
  3624  0014A6  501D               	movf	GetDataDict@DataTableIndex,w,c
  3625  0014A8  2420               	addwf	GetDataDict@numbofbytes,w,c
  3626  0014AA  6E23               	movwf	GetDataDict@DataCount,c
  3627  0014AC  D014               	goto	l3877
  3628  0014AE                     l3871:
  3629                           
  3630                           ;CarDataDictionary.c: 15: DataArray[ReturnCounter] = DataTableArrayOne[DataTableIndex];
  3631  0014AE  501D               	movf	GetDataDict@DataTableIndex,w,c
  3632  0014B0  0D01               	mullw	1
  3633  0014B2  0EEE               	movlw	low _DataTableArrayOne
  3634  0014B4  24F3               	addwf	prodl,w,c
  3635  0014B6  6ED9               	movwf	fsr2l,c
  3636  0014B8  0E00               	movlw	high _DataTableArrayOne
  3637  0014BA  20F4               	addwfc	prodh,w,c
  3638  0014BC  6EDA               	movwf	fsr2h,c
  3639  0014BE  5024               	movf	GetDataDict@ReturnCounter,w,c
  3640  0014C0  0D01               	mullw	1
  3641  0014C2  50F3               	movf	prodl,w,c
  3642  0014C4  241E               	addwf	GetDataDict@DataArray,w,c
  3643  0014C6  6EE1               	movwf	fsr1l,c
  3644  0014C8  50F4               	movf	prodh,w,c
  3645  0014CA  201F               	addwfc	GetDataDict@DataArray+1,w,c
  3646  0014CC  6EE2               	movwf	fsr1h,c
  3647  0014CE  CFDF FFE7          	movff	indf2,indf1
  3648                           
  3649                           ;CarDataDictionary.c: 16: ReturnCounter++;
  3650  0014D2  2A24               	incf	GetDataDict@ReturnCounter,f,c
  3651  0014D4  2A1D               	incf	GetDataDict@DataTableIndex,f,c
  3652  0014D6                     l3877:
  3653  0014D6  5023               	movf	GetDataDict@DataCount,w,c
  3654  0014D8  5C1D               	subwf	GetDataDict@DataTableIndex,w,c
  3655  0014DA  B0D8               	btfsc	status,0,c
  3656  0014DC  0012               	return	
  3657  0014DE  D7E7               	goto	l3871
  3658  0014E0                     l3879:
  3659                           
  3660                           ;CarDataDictionary.c: 20: DataCount = DataTableIndex + numbofbytes;
  3661  0014E0  501D               	movf	GetDataDict@DataTableIndex,w,c
  3662  0014E2  2420               	addwf	GetDataDict@numbofbytes,w,c
  3663  0014E4  6E23               	movwf	GetDataDict@DataCount,c
  3664  0014E6  D014               	goto	l3887
  3665  0014E8                     l3881:
  3666                           
  3667                           ;CarDataDictionary.c: 22: DataArray[ReturnCounter] = DataTableArrayTwo[DataTableIndex];
  3668  0014E8  501D               	movf	GetDataDict@DataTableIndex,w,c
  3669  0014EA  0D01               	mullw	1
  3670  0014EC  0E2E               	movlw	low _DataTableArrayTwo
  3671  0014EE  24F3               	addwf	prodl,w,c
  3672  0014F0  6ED9               	movwf	fsr2l,c
  3673  0014F2  0E00               	movlw	high _DataTableArrayTwo
  3674  0014F4  20F4               	addwfc	prodh,w,c
  3675  0014F6  6EDA               	movwf	fsr2h,c
  3676  0014F8  5024               	movf	GetDataDict@ReturnCounter,w,c
  3677  0014FA  0D01               	mullw	1
  3678  0014FC  50F3               	movf	prodl,w,c
  3679  0014FE  241E               	addwf	GetDataDict@DataArray,w,c
  3680  001500  6EE1               	movwf	fsr1l,c
  3681  001502  50F4               	movf	prodh,w,c
  3682  001504  201F               	addwfc	GetDataDict@DataArray+1,w,c
  3683  001506  6EE2               	movwf	fsr1h,c
  3684  001508  CFDF FFE7          	movff	indf2,indf1
  3685                           
  3686                           ;CarDataDictionary.c: 23: ReturnCounter++;
  3687  00150C  2A24               	incf	GetDataDict@ReturnCounter,f,c
  3688  00150E  2A1D               	incf	GetDataDict@DataTableIndex,f,c
  3689  001510                     l3887:
  3690  001510  5023               	movf	GetDataDict@DataCount,w,c
  3691  001512  5C1D               	subwf	GetDataDict@DataTableIndex,w,c
  3692  001514  B0D8               	btfsc	status,0,c
  3693  001516  0012               	return	
  3694  001518  D7E7               	goto	l3881
  3695  00151A                     l854:
  3696                           
  3697                           ;CarDataDictionary.c: 27: Error = -1;
  3698  00151A  6821               	setf	GetDataDict@Error,c
  3699                           
  3700                           ;CarDataDictionary.c: 28: }
  3701  00151C  0012               	return	
  3702  00151E                     l3889:
  3703  00151E  5022               	movf	GetDataDict@DataTable,w,c
  3704                           
  3705                           ; Switch size 1, requested type "space"
  3706                           ; Number of cases is 2, Range of values is 0 to 1
  3707                           ; switch strategies available:
  3708                           ; Name         Instructions Cycles
  3709                           ; simple_byte            7     4 (average)
  3710                           ;	Chosen strategy is simple_byte
  3711  001520  0A00               	xorlw	0	; case 0
  3712  001522  B4D8               	btfsc	status,2,c
  3713  001524  D7C0               	goto	l3869
  3714  001526  0A01               	xorlw	1	; case 1
  3715  001528  B4D8               	btfsc	status,2,c
  3716  00152A  D7DA               	goto	l3879
  3717  00152C  D7F6               	goto	l854
  3718  00152E                     __end_of_GetDataDict:
  3719                           	opt stack 0
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           indf1	equ	0xFE7
  3730                           postdec1	equ	0xFE5
  3731                           fsr1h	equ	0xFE2
  3732                           fsr1l	equ	0xFE1
  3733                           indf2	equ	0xFDF
  3734                           postinc2	equ	0xFDE
  3735                           postdec2	equ	0xFDD
  3736                           plusw2	equ	0xFDB
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _SYSTEM_Initialize *****************
  3742 ;; Defined at:
  3743 ;;		line 113 in file "mcc_generated_files/mcc.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    9
  3764 ;; This function calls:
  3765 ;;		_ADC_Initialize
  3766 ;;		_EUSART1_Initialize
  3767 ;;		_INTERRUPT_Initialize
  3768 ;;		_OSCILLATOR_Initialize
  3769 ;;		_PIN_MANAGER_Initialize
  3770 ;;		_PWM4_Initialize
  3771 ;;		_TMR1_Initialize
  3772 ;;		_TMR2_Initialize
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text16
  3779  001D2C                     __ptext16:
  3780                           	opt stack 0
  3781  001D2C                     _SYSTEM_Initialize:
  3782                           	opt stack 21
  3783                           
  3784                           ;mcc.c: 114: OSCILLATOR_Initialize();
  3785                           
  3786                           ;incstack = 0
  3787  001D2C  EC42  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3788                           
  3789                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3790  001D30  ECE6  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3791                           
  3792                           ;mcc.c: 116: INTERRUPT_Initialize();
  3793  001D34  EC49  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3794                           
  3795                           ;mcc.c: 117: EUSART1_Initialize();
  3796  001D38  EC77  F00D         	call	_EUSART1_Initialize	;wreg free
  3797                           
  3798                           ;mcc.c: 118: PWM4_Initialize();
  3799  001D3C  EC1E  F00F         	call	_PWM4_Initialize	;wreg free
  3800                           
  3801                           ;mcc.c: 119: TMR1_Initialize();
  3802  001D40  ECA8  F00E         	call	_TMR1_Initialize	;wreg free
  3803                           
  3804                           ;mcc.c: 120: TMR2_Initialize();
  3805  001D44  EC14  F00F         	call	_TMR2_Initialize	;wreg free
  3806                           
  3807                           ;mcc.c: 121: LATB4 = 1;
  3808  001D48  888A               	bsf	3978,4,c	;volatile
  3809                           
  3810                           ;mcc.c: 122: ADC_Initialize();
  3811  001D4A  ECE7  F00E         	call	_ADC_Initialize	;wreg free
  3812  001D4E  0012               	return		;funcret
  3813  001D50                     __end_of_SYSTEM_Initialize:
  3814                           	opt stack 0
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           intcon	equ	0xFF2
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           postdec1	equ	0xFE5
  3826                           fsr1h	equ	0xFE2
  3827                           fsr1l	equ	0xFE1
  3828                           indf2	equ	0xFDF
  3829                           postinc2	equ	0xFDE
  3830                           postdec2	equ	0xFDD
  3831                           plusw2	equ	0xFDB
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8
  3835                           
  3836 ;; *************** function _TMR2_Initialize *****************
  3837 ;; Defined at:
  3838 ;;		line 9 in file "mcc_generated_files/tmr2.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3852 ;;      Params:         0       0       0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0
  3855 ;;      Totals:         0       0       0       0       0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    7
  3859 ;; This function calls:
  3860 ;;		_TMR2_StartTimer
  3861 ;; This function is called by:
  3862 ;;		_SYSTEM_Initialize
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text17
  3867  001E28                     __ptext17:
  3868                           	opt stack 0
  3869  001E28                     _TMR2_Initialize:
  3870                           	opt stack 22
  3871                           
  3872                           ;tmr2.c: 14: T2CON = 0x1A;
  3873                           
  3874                           ;incstack = 0
  3875  001E28  0E1A               	movlw	26
  3876  001E2A  6EBA               	movwf	4026,c	;volatile
  3877                           
  3878                           ;tmr2.c: 17: PR2 = 0x7C;
  3879  001E2C  0E7C               	movlw	124
  3880  001E2E  6EBB               	movwf	4027,c	;volatile
  3881                           
  3882                           ;tmr2.c: 20: TMR2 = 0x00;
  3883  001E30  0E00               	movlw	0
  3884  001E32  6EBC               	movwf	4028,c	;volatile
  3885                           
  3886                           ;tmr2.c: 23: PIR1bits.TMR2IF = 0;
  3887  001E34  929E               	bcf	3998,1,c	;volatile
  3888                           
  3889                           ;tmr2.c: 26: TMR2_StartTimer();
  3890  001E36  EC5B  F00F         	call	_TMR2_StartTimer	;wreg free
  3891  001E3A  0012               	return		;funcret
  3892  001E3C                     __end_of_TMR2_Initialize:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           indf1	equ	0xFE7
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           postdec2	equ	0xFDD
  3910                           plusw2	equ	0xFDB
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _TMR2_StartTimer *****************
  3916 ;; Defined at:
  3917 ;;		line 29 in file "mcc_generated_files/tmr2.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		None
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3931 ;;      Params:         0       0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    6
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_TMR2_Initialize
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text18
  3946  001EB6                     __ptext18:
  3947                           	opt stack 0
  3948  001EB6                     _TMR2_StartTimer:
  3949                           	opt stack 22
  3950                           
  3951                           ;tmr2.c: 32: T2CONbits.TMR2ON = 1;
  3952                           
  3953                           ;incstack = 0
  3954  001EB6  84BA               	bsf	4026,2,c	;volatile
  3955  001EB8  0012               	return		;funcret
  3956  001EBA                     __end_of_TMR2_StartTimer:
  3957                           	opt stack 0
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           postinc0	equ	0xFEE
  3966                           wreg	equ	0xFE8
  3967                           indf1	equ	0xFE7
  3968                           postdec1	equ	0xFE5
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           indf2	equ	0xFDF
  3972                           postinc2	equ	0xFDE
  3973                           postdec2	equ	0xFDD
  3974                           plusw2	equ	0xFDB
  3975                           fsr2h	equ	0xFDA
  3976                           fsr2l	equ	0xFD9
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function _TMR1_Initialize *****************
  3980 ;; Defined at:
  3981 ;;		line 66 in file "mcc_generated_files/tmr1.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3995 ;;      Params:         0       0       0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    7
  4002 ;; This function calls:
  4003 ;;		_TMR1_StartTimer
  4004 ;; This function is called by:
  4005 ;;		_SYSTEM_Initialize
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text19
  4010  001D50                     __ptext19:
  4011                           	opt stack 0
  4012  001D50                     _TMR1_Initialize:
  4013                           	opt stack 22
  4014                           
  4015                           ;tmr1.c: 71: T1CON = 0x00;
  4016                           
  4017                           ;incstack = 0
  4018  001D50  0E00               	movlw	0
  4019  001D52  6ECD               	movwf	4045,c	;volatile
  4020                           
  4021                           ;tmr1.c: 75: T1GCON = 0x00;
  4022  001D54  0E00               	movlw	0
  4023  001D56  6ECC               	movwf	4044,c	;volatile
  4024                           
  4025                           ;tmr1.c: 78: TMR1H = 0x00;
  4026  001D58  0E00               	movlw	0
  4027  001D5A  6ECF               	movwf	4047,c	;volatile
  4028                           
  4029                           ;tmr1.c: 81: TMR1L = 0x00;
  4030  001D5C  0E00               	movlw	0
  4031  001D5E  6ECE               	movwf	4046,c	;volatile
  4032                           
  4033                           ;tmr1.c: 84: timer1ReloadVal=0;
  4034  001D60  0E00               	movlw	0
  4035  001D62  6E3A               	movwf	_timer1ReloadVal+1,c	;volatile
  4036  001D64  0E00               	movlw	0
  4037  001D66  6E39               	movwf	_timer1ReloadVal,c	;volatile
  4038                           
  4039                           ;tmr1.c: 87: PIR1bits.TMR1IF = 0;
  4040  001D68  909E               	bcf	3998,0,c	;volatile
  4041                           
  4042                           ;tmr1.c: 90: PIE1bits.TMR1IE = 1;
  4043  001D6A  809D               	bsf	3997,0,c	;volatile
  4044                           
  4045                           ;tmr1.c: 93: TMR1_StartTimer();
  4046  001D6C  EC5D  F00F         	call	_TMR1_StartTimer	;wreg free
  4047  001D70  0012               	return		;funcret
  4048  001D72                     __end_of_TMR1_Initialize:
  4049                           	opt stack 0
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           prodh	equ	0xFF4
  4055                           prodl	equ	0xFF3
  4056                           intcon	equ	0xFF2
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           indf1	equ	0xFE7
  4060                           postdec1	equ	0xFE5
  4061                           fsr1h	equ	0xFE2
  4062                           fsr1l	equ	0xFE1
  4063                           indf2	equ	0xFDF
  4064                           postinc2	equ	0xFDE
  4065                           postdec2	equ	0xFDD
  4066                           plusw2	equ	0xFDB
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _TMR1_StartTimer *****************
  4072 ;; Defined at:
  4073 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		None
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         0       0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    6
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_TMR1_Initialize
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text20
  4102  001EBA                     __ptext20:
  4103                           	opt stack 0
  4104  001EBA                     _TMR1_StartTimer:
  4105                           	opt stack 22
  4106                           
  4107                           ;tmr1.c: 99: T1CONbits.TMR1ON = 1;
  4108                           
  4109                           ;incstack = 0
  4110  001EBA  80CD               	bsf	4045,0,c	;volatile
  4111  001EBC  0012               	return		;funcret
  4112  001EBE                     __end_of_TMR1_StartTimer:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           prodh	equ	0xFF4
  4119                           prodl	equ	0xFF3
  4120                           intcon	equ	0xFF2
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           indf1	equ	0xFE7
  4124                           postdec1	equ	0xFE5
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           postdec2	equ	0xFDD
  4130                           plusw2	equ	0xFDB
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _PWM4_Initialize *****************
  4136 ;; Defined at:
  4137 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    6
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_SYSTEM_Initialize
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text21
  4166  001E3C                     __ptext21:
  4167                           	opt stack 0
  4168  001E3C                     _PWM4_Initialize:
  4169                           	opt stack 23
  4170                           
  4171                           ;pwm4.c: 69: CCP2CON = 0x1C;
  4172                           
  4173                           ;incstack = 0
  4174  001E3C  0E1C               	movlw	28
  4175  001E3E  6E66               	movwf	3942,c	;volatile
  4176                           
  4177                           ;pwm4.c: 72: CCPR2L = 0x3E;
  4178  001E40  0E3E               	movlw	62
  4179  001E42  6E67               	movwf	3943,c	;volatile
  4180                           
  4181                           ;pwm4.c: 75: CCPR2H = 0x00;
  4182  001E44  0E00               	movlw	0
  4183  001E46  6E68               	movwf	3944,c	;volatile
  4184                           
  4185                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  4186  001E48  0EFC               	movlw	-4
  4187  001E4A  010F               	movlb	15	; () banked
  4188  001E4C  1748               	andwf	72,f,b	;volatile
  4189                           
  4190                           ; BSR set to: 15
  4191  001E4E  0012               	return		;funcret
  4192  001E50                     __end_of_PWM4_Initialize:
  4193                           	opt stack 0
  4194                           tblptru	equ	0xFF8
  4195                           tblptrh	equ	0xFF7
  4196                           tblptrl	equ	0xFF6
  4197                           tablat	equ	0xFF5
  4198                           prodh	equ	0xFF4
  4199                           prodl	equ	0xFF3
  4200                           intcon	equ	0xFF2
  4201                           postinc0	equ	0xFEE
  4202                           wreg	equ	0xFE8
  4203                           indf1	equ	0xFE7
  4204                           postdec1	equ	0xFE5
  4205                           fsr1h	equ	0xFE2
  4206                           fsr1l	equ	0xFE1
  4207                           indf2	equ	0xFDF
  4208                           postinc2	equ	0xFDE
  4209                           postdec2	equ	0xFDD
  4210                           plusw2	equ	0xFDB
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _PIN_MANAGER_Initialize *****************
  4216 ;; Defined at:
  4217 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4231 ;;      Params:         0       0       0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    6
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_SYSTEM_Initialize
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text22
  4246  0017CC                     __ptext22:
  4247                           	opt stack 0
  4248  0017CC                     _PIN_MANAGER_Initialize:
  4249                           	opt stack 23
  4250                           
  4251                           ;pin_manager.c: 52: LATA = 0x00;
  4252                           
  4253                           ; BSR set to: 15
  4254                           ;incstack = 0
  4255  0017CC  0E00               	movlw	0
  4256  0017CE  6E89               	movwf	3977,c	;volatile
  4257                           
  4258                           ;pin_manager.c: 53: TRISA = 0xF7;
  4259  0017D0  0EF7               	movlw	247
  4260  0017D2  6E92               	movwf	3986,c	;volatile
  4261                           
  4262                           ;pin_manager.c: 54: ANSELA = 0x27;
  4263  0017D4  0E27               	movlw	39
  4264  0017D6  010F               	movlb	15	; () banked
  4265  0017D8  6F38               	movwf	56,b	;volatile
  4266                           
  4267                           ;pin_manager.c: 56: LATB = 0x01;
  4268  0017DA  0E01               	movlw	1
  4269  0017DC  6E8A               	movwf	3978,c	;volatile
  4270                           
  4271                           ;pin_manager.c: 57: TRISB = 0xFE;
  4272  0017DE  0EFE               	movlw	254
  4273  0017E0  6E93               	movwf	3987,c	;volatile
  4274                           
  4275                           ;pin_manager.c: 58: ANSELB = 0x3E;
  4276  0017E2  0E3E               	movlw	62
  4277  0017E4  010F               	movlb	15	; () banked
  4278  0017E6  6F39               	movwf	57,b	;volatile
  4279                           
  4280                           ;pin_manager.c: 59: WPUB = 0x00;
  4281  0017E8  0E00               	movlw	0
  4282  0017EA  6E61               	movwf	3937,c	;volatile
  4283                           
  4284                           ;pin_manager.c: 61: LATC = 0x00;
  4285  0017EC  0E00               	movlw	0
  4286  0017EE  6E8B               	movwf	3979,c	;volatile
  4287                           
  4288                           ;pin_manager.c: 62: TRISC = 0xDF;
  4289  0017F0  0EDF               	movlw	223
  4290  0017F2  6E94               	movwf	3988,c	;volatile
  4291                           
  4292                           ;pin_manager.c: 63: ANSELC = 0x1C;
  4293  0017F4  0E1C               	movlw	28
  4294  0017F6  010F               	movlb	15	; () banked
  4295  0017F8  6F3A               	movwf	58,b	;volatile
  4296                           
  4297                           ;pin_manager.c: 65: LATD = 0x00;
  4298  0017FA  0E00               	movlw	0
  4299  0017FC  6E8C               	movwf	3980,c	;volatile
  4300                           
  4301                           ;pin_manager.c: 66: TRISD = 0x0F;
  4302  0017FE  0E0F               	movlw	15
  4303  001800  6E95               	movwf	3989,c	;volatile
  4304                           
  4305                           ;pin_manager.c: 67: ANSELD = 0x0F;
  4306  001802  0E0F               	movlw	15
  4307  001804  010F               	movlb	15	; () banked
  4308  001806  6F3B               	movwf	59,b	;volatile
  4309                           
  4310                           ;pin_manager.c: 69: LATE = 0x00;
  4311  001808  0E00               	movlw	0
  4312  00180A  6E8D               	movwf	3981,c	;volatile
  4313                           
  4314                           ;pin_manager.c: 70: TRISE = 0x07;
  4315  00180C  0E07               	movlw	7
  4316  00180E  6E96               	movwf	3990,c	;volatile
  4317                           
  4318                           ;pin_manager.c: 71: ANSELE = 0x07;
  4319  001810  0E07               	movlw	7
  4320  001812  010F               	movlb	15	; () banked
  4321  001814  6F3C               	movwf	60,b	;volatile
  4322                           
  4323                           ; BSR set to: 15
  4324                           ;pin_manager.c: 72: TRISCbits.RC6 = 1;
  4325  001816  8C94               	bsf	3988,6,c	;volatile
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;pin_manager.c: 73: TRISCbits.RC7 = 1;
  4329  001818  8E94               	bsf	3988,7,c	;volatile
  4330                           
  4331                           ; BSR set to: 15
  4332                           ;pin_manager.c: 74: TRISCbits.RC5 = 0;
  4333  00181A  9A94               	bcf	3988,5,c	;volatile
  4334                           
  4335                           ; BSR set to: 15
  4336                           ;pin_manager.c: 75: LATCbits.LATC5 = 1;
  4337  00181C  8A8B               	bsf	3979,5,c	;volatile
  4338                           
  4339                           ; BSR set to: 15
  4340                           ;pin_manager.c: 76: LATCbits.LATC6 = 1;
  4341  00181E  8C8B               	bsf	3979,6,c	;volatile
  4342                           
  4343                           ; BSR set to: 15
  4344                           ;pin_manager.c: 77: LATCbits.LATC7 = 1;
  4345  001820  8E8B               	bsf	3979,7,c	;volatile
  4346                           
  4347                           ; BSR set to: 15
  4348                           ;pin_manager.c: 78: ANSELCbits.ANSC5 =0;
  4349  001822  010F               	movlb	15	; () banked
  4350  001824  9B3A               	bcf	58,5,b	;volatile
  4351                           
  4352                           ; BSR set to: 15
  4353                           ;pin_manager.c: 79: ANSELCbits.ANSC6 =0;
  4354  001826  010F               	movlb	15	; () banked
  4355  001828  9D3A               	bcf	58,6,b	;volatile
  4356                           
  4357                           ; BSR set to: 15
  4358                           ;pin_manager.c: 80: ANSELCbits.ANSC7 =0;
  4359  00182A  010F               	movlb	15	; () banked
  4360  00182C  9F3A               	bcf	58,7,b	;volatile
  4361                           
  4362                           ; BSR set to: 15
  4363                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 0x01;
  4364  00182E  8EF1               	bsf	intcon2,7,c	;volatile
  4365                           
  4366                           ; BSR set to: 15
  4367                           
  4368                           ; BSR set to: 15
  4369                           
  4370                           ;pin_manager.c: 84: do { TRISB4 = 0; } while(0);
  4371  001830  9893               	bcf	3987,4,c	;volatile
  4372                           
  4373                           ; BSR set to: 15
  4374                           
  4375                           ; BSR set to: 15
  4376                           
  4377                           ;pin_manager.c: 85: do { TRISB3 = 0; } while(0);
  4378                           
  4379                           ; BSR set to: 15
  4380  001832  9693               	bcf	3987,3,c	;volatile
  4381                           
  4382                           ; BSR set to: 15
  4383                           
  4384                           ; BSR set to: 15
  4385                           
  4386                           ;pin_manager.c: 86: do { TRISB5 = 0; } while(0);
  4387                           
  4388                           ; BSR set to: 15
  4389  001834  9A93               	bcf	3987,5,c	;volatile
  4390                           
  4391                           ; BSR set to: 15
  4392                           ;pin_manager.c: 88: TRISDbits.RD1 = 0;
  4393                           
  4394                           ; BSR set to: 15
  4395  001836  9295               	bcf	3989,1,c	;volatile
  4396                           
  4397                           ; BSR set to: 15
  4398                           
  4399                           ; BSR set to: 15
  4400                           
  4401                           ;pin_manager.c: 90: do { ANSB3 = 0; } while(0);
  4402  001838  010F               	movlb	15	; () banked
  4403  00183A  9739               	bcf	57,3,b	;volatile
  4404                           
  4405                           ; BSR set to: 15
  4406                           
  4407                           ; BSR set to: 15
  4408                           
  4409                           ;pin_manager.c: 91: do { ANSD7 = 0; } while(0);
  4410                           
  4411                           ; BSR set to: 15
  4412  00183C  010F               	movlb	15	; () banked
  4413  00183E  9F3B               	bcf	59,7,b	;volatile
  4414                           
  4415                           ; BSR set to: 15
  4416                           
  4417                           ; BSR set to: 15
  4418                           
  4419                           ;pin_manager.c: 92: do { ANSB4 = 0; } while(0);
  4420                           
  4421                           ; BSR set to: 15
  4422  001840  010F               	movlb	15	; () banked
  4423  001842  9939               	bcf	57,4,b	;volatile
  4424  001844  0012               	return	
  4425  001846                     __end_of_PIN_MANAGER_Initialize:
  4426                           	opt stack 0
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           prodh	equ	0xFF4
  4432                           prodl	equ	0xFF3
  4433                           intcon	equ	0xFF2
  4434                           intcon2	equ	0xFF1
  4435                           postinc0	equ	0xFEE
  4436                           wreg	equ	0xFE8
  4437                           indf1	equ	0xFE7
  4438                           postdec1	equ	0xFE5
  4439                           fsr1h	equ	0xFE2
  4440                           fsr1l	equ	0xFE1
  4441                           indf2	equ	0xFDF
  4442                           postinc2	equ	0xFDE
  4443                           postdec2	equ	0xFDD
  4444                           plusw2	equ	0xFDB
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _OSCILLATOR_Initialize *****************
  4450 ;; Defined at:
  4451 ;;		line 125 in file "mcc_generated_files/mcc.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4465 ;;      Params:         0       0       0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    6
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_SYSTEM_Initialize
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text23
  4480  001E84                     __ptext23:
  4481                           	opt stack 0
  4482  001E84                     _OSCILLATOR_Initialize:
  4483                           	opt stack 23
  4484                           
  4485                           ;mcc.c: 127: OSCCON = 0x72;
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;incstack = 0
  4489  001E84  0E72               	movlw	114
  4490  001E86  6ED3               	movwf	4051,c	;volatile
  4491                           
  4492                           ;mcc.c: 129: OSCCON2 = 0x04;
  4493  001E88  0E04               	movlw	4
  4494  001E8A  6ED2               	movwf	4050,c	;volatile
  4495                           
  4496                           ;mcc.c: 131: OSCTUNE = 0x00;
  4497  001E8C  0E00               	movlw	0
  4498  001E8E  6E9B               	movwf	3995,c	;volatile
  4499  001E90  0012               	return		;funcret
  4500  001E92                     __end_of_OSCILLATOR_Initialize:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           intcon2	equ	0xFF1
  4510                           postinc0	equ	0xFEE
  4511                           wreg	equ	0xFE8
  4512                           indf1	equ	0xFE7
  4513                           postdec1	equ	0xFE5
  4514                           fsr1h	equ	0xFE2
  4515                           fsr1l	equ	0xFE1
  4516                           indf2	equ	0xFDF
  4517                           postinc2	equ	0xFDE
  4518                           postdec2	equ	0xFDD
  4519                           plusw2	equ	0xFDB
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _INTERRUPT_Initialize *****************
  4525 ;; Defined at:
  4526 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		None
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         0       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    6
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_SYSTEM_Initialize
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text24
  4555  001E92                     __ptext24:
  4556                           	opt stack 0
  4557  001E92                     _INTERRUPT_Initialize:
  4558                           	opt stack 23
  4559                           
  4560                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4561                           
  4562                           ;incstack = 0
  4563  001E92  9ED0               	bcf	4048,7,c	;volatile
  4564                           
  4565                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  4566  001E94  9A9F               	bcf	3999,5,c	;volatile
  4567                           
  4568                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  4569  001E96  989F               	bcf	3999,4,c	;volatile
  4570                           
  4571                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
  4572  001E98  9C9F               	bcf	3999,6,c	;volatile
  4573  001E9A  0012               	return		;funcret
  4574  001E9C                     __end_of_INTERRUPT_Initialize:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           intcon	equ	0xFF2
  4583                           intcon2	equ	0xFF1
  4584                           postinc0	equ	0xFEE
  4585                           wreg	equ	0xFE8
  4586                           indf1	equ	0xFE7
  4587                           postdec1	equ	0xFE5
  4588                           fsr1h	equ	0xFE2
  4589                           fsr1l	equ	0xFE1
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           plusw2	equ	0xFDB
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function _EUSART1_Initialize *****************
  4599 ;; Defined at:
  4600 ;;		line 23 in file "UART.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4614 ;;      Params:         0       0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    8
  4621 ;; This function calls:
  4622 ;;		_UART_buff_init
  4623 ;; This function is called by:
  4624 ;;		_SYSTEM_Initialize
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text25
  4629  001AEE                     __ptext25:
  4630                           	opt stack 0
  4631  001AEE                     _EUSART1_Initialize:
  4632                           	opt stack 21
  4633                           
  4634                           ;UART.c: 25: PIE1bits.RC1IE = 0;
  4635                           
  4636                           ;incstack = 0
  4637  001AEE  9A9D               	bcf	3997,5,c	;volatile
  4638                           
  4639                           ;UART.c: 26: PIE1bits.TX1IE = 0;
  4640  001AF0  989D               	bcf	3997,4,c	;volatile
  4641                           
  4642                           ;UART.c: 31: BAUD1CON = 0x48;
  4643  001AF2  0E48               	movlw	72
  4644  001AF4  6EB8               	movwf	4024,c	;volatile
  4645                           
  4646                           ;UART.c: 34: RC1STA = 0x98;
  4647  001AF6  0E98               	movlw	152
  4648  001AF8  6EAB               	movwf	4011,c	;volatile
  4649                           
  4650                           ;UART.c: 37: TX1STA = 0x26;
  4651  001AFA  0E26               	movlw	38
  4652  001AFC  6EAC               	movwf	4012,c	;volatile
  4653                           
  4654                           ;UART.c: 40: SPBRG1 = (((16000000/38400)/4)-1);
  4655  001AFE  0E67               	movlw	103
  4656  001B00  6EAF               	movwf	4015,c	;volatile
  4657                           
  4658                           ;UART.c: 43: SPBRGH1 = 0x00;
  4659  001B02  0E00               	movlw	0
  4660  001B04  6EB0               	movwf	4016,c	;volatile
  4661                           
  4662                           ;UART.c: 46: TXREG1 = 0x00;
  4663  001B06  0E00               	movlw	0
  4664  001B08  6EAD               	movwf	4013,c	;volatile
  4665                           
  4666                           ;UART.c: 49: RCREG1 = 0x00;
  4667  001B0A  0E00               	movlw	0
  4668  001B0C  6EAE               	movwf	4014,c	;volatile
  4669                           
  4670                           ;UART.c: 51: UART_buff_init(&input_buffer);
  4671  001B0E  0E00               	movlw	low _input_buffer
  4672  001B10  6E25               	movwf	UART_buff_init@_this,c
  4673  001B12  0E02               	movlw	high _input_buffer
  4674  001B14  6E26               	movwf	UART_buff_init@_this+1,c
  4675  001B16  ECC9  F00E         	call	_UART_buff_init	;wreg free
  4676                           
  4677                           ;UART.c: 52: UART_buff_init(&output_buffer);
  4678  001B1A  0E00               	movlw	low _output_buffer
  4679  001B1C  6E25               	movwf	UART_buff_init@_this,c
  4680  001B1E  0E03               	movlw	high _output_buffer
  4681  001B20  6E26               	movwf	UART_buff_init@_this+1,c
  4682  001B22  ECC9  F00E         	call	_UART_buff_init	;wreg free
  4683                           
  4684                           ;UART.c: 54: PIE1bits.RC1IE = 1;
  4685  001B26  8A9D               	bsf	3997,5,c	;volatile
  4686  001B28  0012               	return		;funcret
  4687  001B2A                     __end_of_EUSART1_Initialize:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           intcon2	equ	0xFF1
  4697                           postinc0	equ	0xFEE
  4698                           wreg	equ	0xFE8
  4699                           indf1	equ	0xFE7
  4700                           postdec1	equ	0xFE5
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           plusw2	equ	0xFDB
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _UART_buff_init *****************
  4712 ;; Defined at:
  4713 ;;		line 58 in file "UART.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  _this           2   36[COMRAM] PTR struct UART_ring_buf
  4716 ;;		 -> output_buffer(206), input_buffer(206), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4728 ;;      Params:         2       0       0       0       0       0       0
  4729 ;;      Locals:         0       0       0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0
  4731 ;;      Totals:         2       0       0       0       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    7
  4735 ;; This function calls:
  4736 ;;		_memset
  4737 ;; This function is called by:
  4738 ;;		_EUSART1_Initialize
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text26
  4743  001D92                     __ptext26:
  4744                           	opt stack 0
  4745  001D92                     _UART_buff_init:
  4746                           	opt stack 21
  4747                           
  4748                           ;UART.c: 67: memset(_this, 0, sizeof (*_this));
  4749                           
  4750                           ;incstack = 0
  4751  001D92  C025  F01D         	movff	UART_buff_init@_this,memset@p1
  4752  001D96  C026  F01E         	movff	UART_buff_init@_this+1,memset@p1+1
  4753  001D9A  0E00               	movlw	0
  4754  001D9C  6E20               	movwf	memset@c+1,c
  4755  001D9E  0E00               	movlw	0
  4756  001DA0  6E1F               	movwf	memset@c,c
  4757  001DA2  0E00               	movlw	0
  4758  001DA4  6E22               	movwf	memset@n+1,c
  4759  001DA6  0ECE               	movlw	206
  4760  001DA8  6E21               	movwf	memset@n,c
  4761  001DAA  EC43  F00E         	call	_memset	;wreg free
  4762  001DAE  0012               	return		;funcret
  4763  001DB0                     __end_of_UART_buff_init:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           intcon	equ	0xFF2
  4772                           intcon2	equ	0xFF1
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           indf1	equ	0xFE7
  4776                           postdec1	equ	0xFE5
  4777                           fsr1h	equ	0xFE2
  4778                           fsr1l	equ	0xFE1
  4779                           indf2	equ	0xFDF
  4780                           postinc2	equ	0xFDE
  4781                           postdec2	equ	0xFDD
  4782                           plusw2	equ	0xFDB
  4783                           fsr2h	equ	0xFDA
  4784                           fsr2l	equ	0xFD9
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _memset *****************
  4788 ;; Defined at:
  4789 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  p1              2   28[COMRAM] PTR void 
  4792 ;;		 -> output_buffer(206), input_buffer(206), 
  4793 ;;  c               2   30[COMRAM] int 
  4794 ;;  n               2   32[COMRAM] unsigned int 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  p               2   34[COMRAM] PTR unsigned char 
  4797 ;;		 -> output_buffer(206), input_buffer(206), 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  2   28[COMRAM] PTR void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4807 ;;      Params:         6       0       0       0       0       0       0
  4808 ;;      Locals:         2       0       0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0
  4810 ;;      Totals:         8       0       0       0       0       0       0
  4811 ;;Total ram usage:        8 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    6
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_UART_buff_init
  4818 ;;		_UART_buff_flush
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text27
  4823  001C86                     __ptext27:
  4824                           	opt stack 0
  4825  001C86                     _memset:
  4826                           	opt stack 21
  4827                           
  4828                           ;incstack = 0
  4829  001C86  C01D  F023         	movff	memset@p1,memset@p
  4830  001C8A  C01E  F024         	movff	memset@p1+1,memset@p+1
  4831  001C8E  D008               	goto	l3821
  4832  001C90                     l3817:
  4833  001C90  C023  FFD9         	movff	memset@p,fsr2l
  4834  001C94  C024  FFDA         	movff	memset@p+1,fsr2h
  4835  001C98  C01F  FFDF         	movff	memset@c,indf2
  4836  001C9C  4A23               	infsnz	memset@p,f,c
  4837  001C9E  2A24               	incf	memset@p+1,f,c
  4838  001CA0                     l3821:
  4839  001CA0  0621               	decf	memset@n,f,c
  4840  001CA2  A0D8               	btfss	status,0,c
  4841  001CA4  0622               	decf	memset@n+1,f,c
  4842  001CA6  2821               	incf	memset@n,w,c
  4843  001CA8  E1F3               	bnz	l3817
  4844  001CAA  2822               	incf	memset@n+1,w,c
  4845  001CAC  B4D8               	btfsc	status,2,c
  4846  001CAE  0012               	return	
  4847  001CB0  D7EF               	goto	l3817
  4848  001CB2                     __end_of_memset:
  4849                           	opt stack 0
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           prodh	equ	0xFF4
  4855                           prodl	equ	0xFF3
  4856                           intcon	equ	0xFF2
  4857                           intcon2	equ	0xFF1
  4858                           postinc0	equ	0xFEE
  4859                           wreg	equ	0xFE8
  4860                           indf1	equ	0xFE7
  4861                           postdec1	equ	0xFE5
  4862                           fsr1h	equ	0xFE2
  4863                           fsr1l	equ	0xFE1
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           plusw2	equ	0xFDB
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _ADC_Initialize *****************
  4873 ;; Defined at:
  4874 ;;		line 59 in file "mcc_generated_files/adc.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0
  4891 ;;      Totals:         0       0       0       0       0       0       0
  4892 ;;Total ram usage:        0 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    6
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_SYSTEM_Initialize
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text28
  4903  001DCE                     __ptext28:
  4904                           	opt stack 0
  4905  001DCE                     _ADC_Initialize:
  4906                           	opt stack 23
  4907                           
  4908                           ;adc.c: 64: ADCON0 = 0x01;
  4909                           
  4910                           ;incstack = 0
  4911  001DCE  0E01               	movlw	1
  4912  001DD0  6EC2               	movwf	4034,c	;volatile
  4913                           
  4914                           ;adc.c: 67: ADCON1 = 0x80;
  4915  001DD2  0E80               	movlw	128
  4916  001DD4  6EC1               	movwf	4033,c	;volatile
  4917                           
  4918                           ;adc.c: 70: ADCON2 = 0x12;
  4919  001DD6  0E12               	movlw	18
  4920  001DD8  6EC0               	movwf	4032,c	;volatile
  4921                           
  4922                           ;adc.c: 72: ADCON2bits.ADFM = 1;
  4923  001DDA  8EC0               	bsf	4032,7,c	;volatile
  4924                           
  4925                           ;adc.c: 75: ADRESL = 0x00;
  4926  001DDC  0E00               	movlw	0
  4927  001DDE  6EC3               	movwf	4035,c	;volatile
  4928                           
  4929                           ;adc.c: 78: ADRESH = 0x00;
  4930  001DE0  0E00               	movlw	0
  4931  001DE2  6EC4               	movwf	4036,c	;volatile
  4932  001DE4  0012               	return		;funcret
  4933  001DE6                     __end_of_ADC_Initialize:
  4934                           	opt stack 0
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodh	equ	0xFF4
  4940                           prodl	equ	0xFF3
  4941                           intcon	equ	0xFF2
  4942                           intcon2	equ	0xFF1
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           indf1	equ	0xFE7
  4946                           postdec1	equ	0xFE5
  4947                           fsr1h	equ	0xFE2
  4948                           fsr1l	equ	0xFE1
  4949                           indf2	equ	0xFDF
  4950                           postinc2	equ	0xFDE
  4951                           postdec2	equ	0xFDD
  4952                           plusw2	equ	0xFDB
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _PDUStartup *****************
  4958 ;; Defined at:
  4959 ;;		line 20 in file "PDU.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4973 ;;      Params:         0       0       0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:   10
  4980 ;; This function calls:
  4981 ;;		_ComputeStorageData
  4982 ;;		_EnableSlavePower
  4983 ;;		_StartUp595
  4984 ;;		_Update
  4985 ;; This function is called by:
  4986 ;;		_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text29
  4991  0018B0                     __ptext29:
  4992                           	opt stack 0
  4993  0018B0                     _PDUStartup:
  4994                           	opt stack 20
  4995                           
  4996                           ;PDU.c: 23: StartUp595();
  4997                           
  4998                           ;incstack = 0
  4999  0018B0  EC89  F00C         	call	_StartUp595	;wreg free
  5000                           
  5001                           ;PDU.c: 24: EnableSlavePower(SAS, ON);
  5002  0018B4  0E00               	movlw	0
  5003  0018B6  6E28               	movwf	EnableSlavePower@onof+1,c
  5004  0018B8  0E01               	movlw	1
  5005  0018BA  6E27               	movwf	EnableSlavePower@onof,c
  5006  0018BC  0E03               	movlw	3
  5007  0018BE  ECA7  F008         	call	_EnableSlavePower
  5008                           
  5009                           ;PDU.c: 25: EnableSlavePower(DDS, ON);
  5010  0018C2  0E00               	movlw	0
  5011  0018C4  6E28               	movwf	EnableSlavePower@onof+1,c
  5012  0018C6  0E01               	movlw	1
  5013  0018C8  6E27               	movwf	EnableSlavePower@onof,c
  5014  0018CA  0E01               	movlw	1
  5015  0018CC  ECA7  F008         	call	_EnableSlavePower
  5016                           
  5017                           ;PDU.c: 26: EnableSlavePower(MCS, OFF);
  5018  0018D0  0E00               	movlw	0
  5019  0018D2  6E28               	movwf	EnableSlavePower@onof+1,c
  5020  0018D4  0E00               	movlw	0
  5021  0018D6  6E27               	movwf	EnableSlavePower@onof,c
  5022  0018D8  0E02               	movlw	2
  5023  0018DA  ECA7  F008         	call	_EnableSlavePower
  5024                           
  5025                           ;PDU.c: 27: EnableSlavePower(BMM, ON);
  5026  0018DE  0E00               	movlw	0
  5027  0018E0  6E28               	movwf	EnableSlavePower@onof+1,c
  5028  0018E2  0E01               	movlw	1
  5029  0018E4  6E27               	movwf	EnableSlavePower@onof,c
  5030  0018E6  0E04               	movlw	4
  5031  0018E8  ECA7  F008         	call	_EnableSlavePower
  5032                           
  5033                           ;PDU.c: 28: EnableSlavePower(TSS, OFF);
  5034  0018EC  0E00               	movlw	0
  5035  0018EE  6E28               	movwf	EnableSlavePower@onof+1,c
  5036  0018F0  0E00               	movlw	0
  5037  0018F2  6E27               	movwf	EnableSlavePower@onof,c
  5038  0018F4  0E05               	movlw	5
  5039  0018F6  ECA7  F008         	call	_EnableSlavePower
  5040                           
  5041                           ;PDU.c: 29: EnableSlavePower(AUX, OFF);
  5042  0018FA  0E00               	movlw	0
  5043  0018FC  6E28               	movwf	EnableSlavePower@onof+1,c
  5044  0018FE  0E00               	movlw	0
  5045  001900  6E27               	movwf	EnableSlavePower@onof,c
  5046  001902  0E06               	movlw	6
  5047  001904  ECA7  F008         	call	_EnableSlavePower
  5048                           
  5049                           ;PDU.c: 30: Update();
  5050  001908  EC55  F00F         	call	_Update	;wreg free
  5051                           
  5052                           ;PDU.c: 32: ComputeStorageData();
  5053  00190C  EC19  F009         	call	_ComputeStorageData	;wreg free
  5054  001910  0012               	return		;funcret
  5055  001912                     __end_of_PDUStartup:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           intcon2	equ	0xFF1
  5065                           postinc0	equ	0xFEE
  5066                           wreg	equ	0xFE8
  5067                           indf1	equ	0xFE7
  5068                           postdec1	equ	0xFE5
  5069                           fsr1h	equ	0xFE2
  5070                           fsr1l	equ	0xFE1
  5071                           indf2	equ	0xFDF
  5072                           postinc2	equ	0xFDE
  5073                           postdec2	equ	0xFDD
  5074                           plusw2	equ	0xFDB
  5075                           fsr2h	equ	0xFDA
  5076                           fsr2l	equ	0xFD9
  5077                           status	equ	0xFD8
  5078                           
  5079 ;; *************** function _Update *****************
  5080 ;; Defined at:
  5081 ;;		line 225 in file "PDU.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5095 ;;      Params:         0       0       0       0       0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0
  5098 ;;      Totals:         0       0       0       0       0       0       0
  5099 ;;Total ram usage:        0 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    8
  5102 ;; This function calls:
  5103 ;;		_writeRegisters
  5104 ;; This function is called by:
  5105 ;;		_PDUStartup
  5106 ;;		_processPowerRequest
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text30
  5111  001EAA                     __ptext30:
  5112                           	opt stack 0
  5113  001EAA                     _Update:
  5114                           	opt stack 21
  5115                           
  5116                           ;PDU.c: 226: writeRegisters();
  5117                           
  5118                           ;incstack = 0
  5119  001EAA  EC29  F00B         	call	_writeRegisters	;wreg free
  5120  001EAE  0012               	return		;funcret
  5121  001EB0                     __end_of_Update:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           prodh	equ	0xFF4
  5128                           prodl	equ	0xFF3
  5129                           intcon	equ	0xFF2
  5130                           intcon2	equ	0xFF1
  5131                           postinc0	equ	0xFEE
  5132                           wreg	equ	0xFE8
  5133                           indf1	equ	0xFE7
  5134                           postdec1	equ	0xFE5
  5135                           fsr1h	equ	0xFE2
  5136                           fsr1l	equ	0xFE1
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           plusw2	equ	0xFDB
  5141                           fsr2h	equ	0xFDA
  5142                           fsr2l	equ	0xFD9
  5143                           status	equ	0xFD8
  5144                           
  5145 ;; *************** function _StartUp595 *****************
  5146 ;; Defined at:
  5147 ;;		line 10 in file "Shift595.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5161 ;;      Params:         0       0       0       0       0       0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0
  5164 ;;      Totals:         0       0       0       0       0       0       0
  5165 ;;Total ram usage:        0 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    9
  5168 ;; This function calls:
  5169 ;;		_Clear595
  5170 ;;		_Delay
  5171 ;; This function is called by:
  5172 ;;		_PDUStartup
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text31
  5177  001912                     __ptext31:
  5178                           	opt stack 0
  5179  001912                     _StartUp595:
  5180                           	opt stack 20
  5181                           
  5182                           ;incstack = 0
  5183                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  5184  001912  8A8C               	bsf	3980,5,c	;volatile
  5185                           
  5186                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  5187  001914  808A               	bsf	3978,0,c	;volatile
  5188                           
  5189                           ;Shift595.c: 15: Delay(2);
  5190  001916  0E02               	movlw	2
  5191  001918  6E1D               	movwf	Delay@wait,c
  5192  00191A  0E00               	movlw	0
  5193  00191C  6E1E               	movwf	Delay@wait+1,c
  5194  00191E  0E00               	movlw	0
  5195  001920  6E1F               	movwf	Delay@wait+2,c
  5196  001922  0E00               	movlw	0
  5197  001924  6E20               	movwf	Delay@wait+3,c
  5198  001926  EC2D  F00D         	call	_Delay	;wreg free
  5199                           
  5200                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  5201  00192A  9A8C               	bcf	3980,5,c	;volatile
  5202                           
  5203                           ;Shift595.c: 17: Delay(2);
  5204  00192C  0E02               	movlw	2
  5205  00192E  6E1D               	movwf	Delay@wait,c
  5206  001930  0E00               	movlw	0
  5207  001932  6E1E               	movwf	Delay@wait+1,c
  5208  001934  0E00               	movlw	0
  5209  001936  6E1F               	movwf	Delay@wait+2,c
  5210  001938  0E00               	movlw	0
  5211  00193A  6E20               	movwf	Delay@wait+3,c
  5212  00193C  EC2D  F00D         	call	_Delay	;wreg free
  5213                           
  5214                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  5215  001940  908A               	bcf	3978,0,c	;volatile
  5216                           
  5217                           ;Shift595.c: 19: Delay(2);
  5218  001942  0E02               	movlw	2
  5219  001944  6E1D               	movwf	Delay@wait,c
  5220  001946  0E00               	movlw	0
  5221  001948  6E1E               	movwf	Delay@wait+1,c
  5222  00194A  0E00               	movlw	0
  5223  00194C  6E1F               	movwf	Delay@wait+2,c
  5224  00194E  0E00               	movlw	0
  5225  001950  6E20               	movwf	Delay@wait+3,c
  5226  001952  EC2D  F00D         	call	_Delay	;wreg free
  5227                           
  5228                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  5229  001956  8A8C               	bsf	3980,5,c	;volatile
  5230                           
  5231                           ;Shift595.c: 21: Delay(2);
  5232  001958  0E02               	movlw	2
  5233  00195A  6E1D               	movwf	Delay@wait,c
  5234  00195C  0E00               	movlw	0
  5235  00195E  6E1E               	movwf	Delay@wait+1,c
  5236  001960  0E00               	movlw	0
  5237  001962  6E1F               	movwf	Delay@wait+2,c
  5238  001964  0E00               	movlw	0
  5239  001966  6E20               	movwf	Delay@wait+3,c
  5240  001968  EC2D  F00D         	call	_Delay	;wreg free
  5241                           
  5242                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  5243  00196C  808A               	bsf	3978,0,c	;volatile
  5244                           
  5245                           ;Shift595.c: 24: Clear595();
  5246  00196E  ECB0  F00D         	call	_Clear595	;wreg free
  5247  001972  0012               	return		;funcret
  5248  001974                     __end_of_StartUp595:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           intcon	equ	0xFF2
  5257                           intcon2	equ	0xFF1
  5258                           postinc0	equ	0xFEE
  5259                           wreg	equ	0xFE8
  5260                           indf1	equ	0xFE7
  5261                           postdec1	equ	0xFE5
  5262                           fsr1h	equ	0xFE2
  5263                           fsr1l	equ	0xFE1
  5264                           indf2	equ	0xFDF
  5265                           postinc2	equ	0xFDE
  5266                           postdec2	equ	0xFDD
  5267                           plusw2	equ	0xFDB
  5268                           fsr2h	equ	0xFDA
  5269                           fsr2l	equ	0xFD9
  5270                           status	equ	0xFD8
  5271                           
  5272 ;; *************** function _Clear595 *****************
  5273 ;; Defined at:
  5274 ;;		line 39 in file "Shift595.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  i               2   41[COMRAM] int 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5288 ;;      Params:         0       0       0       0       0       0       0
  5289 ;;      Locals:         2       0       0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0
  5291 ;;      Totals:         2       0       0       0       0       0       0
  5292 ;;Total ram usage:        2 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    8
  5295 ;; This function calls:
  5296 ;;		_writeRegisters
  5297 ;; This function is called by:
  5298 ;;		_StartUp595
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text32
  5303  001B60                     __ptext32:
  5304                           	opt stack 0
  5305  001B60                     _Clear595:
  5306                           	opt stack 20
  5307                           
  5308                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  5309                           
  5310                           ;incstack = 0
  5311  001B60  0E00               	movlw	0
  5312  001B62  6E2B               	movwf	Clear595@i+1,c
  5313  001B64  0E17               	movlw	23
  5314  001B66  6E2A               	movwf	Clear595@i,c
  5315  001B68                     l3915:
  5316  001B68  BE2B               	btfsc	Clear595@i+1,7,c
  5317  001B6A  D011               	goto	l3925
  5318                           
  5319                           ;Shift595.c: 41: registers[i] = 0;
  5320  001B6C  90D8               	bcf	status,0,c
  5321  001B6E  342A               	rlcf	Clear595@i,w,c
  5322  001B70  6ED9               	movwf	fsr2l,c
  5323  001B72  342B               	rlcf	Clear595@i+1,w,c
  5324  001B74  6EDA               	movwf	fsr2h,c
  5325  001B76  0E00               	movlw	low _registers
  5326  001B78  26D9               	addwf	fsr2l,f,c
  5327  001B7A  0E01               	movlw	high _registers
  5328  001B7C  22DA               	addwfc	fsr2h,f,c
  5329  001B7E  0E00               	movlw	0
  5330  001B80  6EDE               	movwf	postinc2,c
  5331  001B82  0E00               	movlw	0
  5332  001B84  6EDD               	movwf	postdec2,c
  5333  001B86  062A               	decf	Clear595@i,f,c
  5334  001B88  A0D8               	btfss	status,0,c
  5335  001B8A  062B               	decf	Clear595@i+1,f,c
  5336  001B8C  D7ED               	goto	l3915
  5337  001B8E                     l3925:
  5338                           
  5339                           ;Shift595.c: 42: }
  5340                           ;Shift595.c: 44: writeRegisters();
  5341  001B8E  EC29  F00B         	call	_writeRegisters	;wreg free
  5342  001B92  0012               	return		;funcret
  5343  001B94                     __end_of_Clear595:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           intcon2	equ	0xFF1
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           indf1	equ	0xFE7
  5356                           postdec1	equ	0xFE5
  5357                           fsr1h	equ	0xFE2
  5358                           fsr1l	equ	0xFE1
  5359                           indf2	equ	0xFDF
  5360                           postinc2	equ	0xFDE
  5361                           postdec2	equ	0xFDD
  5362                           plusw2	equ	0xFDB
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _writeRegisters *****************
  5368 ;; Defined at:
  5369 ;;		line 50 in file "Shift595.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  i               2   39[COMRAM] int 
  5374 ;;  val             2   37[COMRAM] int 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5384 ;;      Params:         0       0       0       0       0       0       0
  5385 ;;      Locals:         4       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0
  5387 ;;      Totals:         4       0       0       0       0       0       0
  5388 ;;Total ram usage:        4 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    7
  5391 ;; This function calls:
  5392 ;;		_Delay
  5393 ;; This function is called by:
  5394 ;;		_Update
  5395 ;;		_Clear595
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text33
  5400  001652                     __ptext33:
  5401                           	opt stack 0
  5402  001652                     _writeRegisters:
  5403                           	opt stack 21
  5404                           
  5405                           ;Shift595.c: 51: int val = 0;
  5406                           
  5407                           ;incstack = 0
  5408  001652  0E00               	movlw	0
  5409  001654  6E27               	movwf	writeRegisters@val+1,c
  5410  001656  0E00               	movlw	0
  5411  001658  6E26               	movwf	writeRegisters@val,c
  5412                           
  5413                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  5414  00165A  0E00               	movlw	0
  5415  00165C  6E29               	movwf	writeRegisters@i+1,c
  5416  00165E  0E17               	movlw	23
  5417  001660  6E28               	movwf	writeRegisters@i,c
  5418  001662                     l3795:
  5419  001662  BE29               	btfsc	writeRegisters@i+1,7,c
  5420  001664  D01D               	goto	l538
  5421                           
  5422                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  5423  001666  9E8C               	bcf	3980,7,c	;volatile
  5424                           
  5425                           ;Shift595.c: 55: val = registers[i];
  5426  001668  90D8               	bcf	status,0,c
  5427  00166A  3428               	rlcf	writeRegisters@i,w,c
  5428  00166C  6ED9               	movwf	fsr2l,c
  5429  00166E  3429               	rlcf	writeRegisters@i+1,w,c
  5430  001670  6EDA               	movwf	fsr2h,c
  5431  001672  0E00               	movlw	low _registers
  5432  001674  26D9               	addwf	fsr2l,f,c
  5433  001676  0E01               	movlw	high _registers
  5434  001678  22DA               	addwfc	fsr2h,f,c
  5435  00167A  CFDE F026          	movff	postinc2,writeRegisters@val
  5436  00167E  CFDD F027          	movff	postdec2,writeRegisters@val+1
  5437                           
  5438                           ;Shift595.c: 56: if (val == 1) {
  5439  001682  0426               	decf	writeRegisters@val,w,c
  5440  001684  1027               	iorwf	writeRegisters@val+1,w,c
  5441  001686  A4D8               	btfss	status,2,c
  5442  001688  D002               	goto	l3803
  5443                           
  5444                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  5445  00168A  888C               	bsf	3980,4,c	;volatile
  5446                           
  5447                           ;Shift595.c: 58: } else if (val == 0) {
  5448  00168C  D004               	goto	l536
  5449  00168E                     l3803:
  5450  00168E  5026               	movf	writeRegisters@val,w,c
  5451  001690  1027               	iorwf	writeRegisters@val+1,w,c
  5452  001692  B4D8               	btfsc	status,2,c
  5453                           
  5454                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  5455  001694  988C               	bcf	3980,4,c	;volatile
  5456  001696                     l536:
  5457  001696  8E8C               	bsf	3980,7,c	;volatile
  5458  001698  0628               	decf	writeRegisters@i,f,c
  5459  00169A  A0D8               	btfss	status,0,c
  5460  00169C  0629               	decf	writeRegisters@i+1,f,c
  5461  00169E  D7E1               	goto	l3795
  5462  0016A0                     l538:
  5463  0016A0  9E8C               	bcf	3980,7,c	;volatile
  5464                           
  5465                           ;Shift595.c: 67: Delay(1);
  5466  0016A2  0E01               	movlw	1
  5467  0016A4  6E1D               	movwf	Delay@wait,c
  5468  0016A6  0E00               	movlw	0
  5469  0016A8  6E1E               	movwf	Delay@wait+1,c
  5470  0016AA  0E00               	movlw	0
  5471  0016AC  6E1F               	movwf	Delay@wait+2,c
  5472  0016AE  0E00               	movlw	0
  5473  0016B0  6E20               	movwf	Delay@wait+3,c
  5474  0016B2  EC2D  F00D         	call	_Delay	;wreg free
  5475                           
  5476                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  5477  0016B6  8C8C               	bsf	3980,6,c	;volatile
  5478                           
  5479                           ;Shift595.c: 69: Delay(1);
  5480  0016B8  0E01               	movlw	1
  5481  0016BA  6E1D               	movwf	Delay@wait,c
  5482  0016BC  0E00               	movlw	0
  5483  0016BE  6E1E               	movwf	Delay@wait+1,c
  5484  0016C0  0E00               	movlw	0
  5485  0016C2  6E1F               	movwf	Delay@wait+2,c
  5486  0016C4  0E00               	movlw	0
  5487  0016C6  6E20               	movwf	Delay@wait+3,c
  5488  0016C8  EC2D  F00D         	call	_Delay	;wreg free
  5489                           
  5490                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  5491  0016CC  9C8C               	bcf	3980,6,c	;volatile
  5492  0016CE  0012               	return	
  5493  0016D0                     __end_of_writeRegisters:
  5494                           	opt stack 0
  5495                           tblptru	equ	0xFF8
  5496                           tblptrh	equ	0xFF7
  5497                           tblptrl	equ	0xFF6
  5498                           tablat	equ	0xFF5
  5499                           prodh	equ	0xFF4
  5500                           prodl	equ	0xFF3
  5501                           intcon	equ	0xFF2
  5502                           intcon2	equ	0xFF1
  5503                           postinc0	equ	0xFEE
  5504                           wreg	equ	0xFE8
  5505                           indf1	equ	0xFE7
  5506                           postdec1	equ	0xFE5
  5507                           fsr1h	equ	0xFE2
  5508                           fsr1l	equ	0xFE1
  5509                           indf2	equ	0xFDF
  5510                           postinc2	equ	0xFDE
  5511                           postdec2	equ	0xFDD
  5512                           plusw2	equ	0xFDB
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function _EnableSlavePower *****************
  5518 ;; Defined at:
  5519 ;;		line 37 in file "PDU.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  slave           1    wreg     enum E6
  5522 ;;  onof            2   38[COMRAM] int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  slave           1   40[COMRAM] enum E6
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5534 ;;      Params:         2       0       0       0       0       0       0
  5535 ;;      Locals:         1       0       0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0
  5537 ;;      Totals:         3       0       0       0       0       0       0
  5538 ;;Total ram usage:        3 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    7
  5541 ;; This function calls:
  5542 ;;		_SetPin595
  5543 ;; This function is called by:
  5544 ;;		_PDUStartup
  5545 ;;		_processPowerRequest
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text34
  5550  00114E                     __ptext34:
  5551                           	opt stack 0
  5552  00114E                     _EnableSlavePower:
  5553                           	opt stack 22
  5554                           
  5555                           ;incstack = 0
  5556                           ;EnableSlavePower@slave stored from wreg
  5557  00114E  6E29               	movwf	EnableSlavePower@slave,c
  5558                           
  5559                           ;PDU.c: 38: switch (slave) {
  5560  001150  D05C               	goto	l4153
  5561  001152                     l4137:
  5562                           
  5563                           ;PDU.c: 40: SetPin595(2, 6, onof);
  5564  001152  0E00               	movlw	0
  5565  001154  6E1E               	movwf	SetPin595@Reg+1,c
  5566  001156  0E02               	movlw	2
  5567  001158  6E1D               	movwf	SetPin595@Reg,c
  5568  00115A  0E00               	movlw	0
  5569  00115C  6E20               	movwf	SetPin595@pin+1,c
  5570  00115E  0E06               	movlw	6
  5571  001160  6E1F               	movwf	SetPin595@pin,c
  5572  001162  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5573  001166  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5574  00116A  ECBA  F00C         	call	_SetPin595	;wreg free
  5575                           
  5576                           ;PDU.c: 41: break;
  5577  00116E  0012               	return	
  5578  001170                     l4139:
  5579                           
  5580                           ;PDU.c: 43: SetPin595(1, 1, onof);
  5581  001170  0E00               	movlw	0
  5582  001172  6E1E               	movwf	SetPin595@Reg+1,c
  5583  001174  0E01               	movlw	1
  5584  001176  6E1D               	movwf	SetPin595@Reg,c
  5585  001178  0E00               	movlw	0
  5586  00117A  6E20               	movwf	SetPin595@pin+1,c
  5587  00117C  0E01               	movlw	1
  5588  00117E  6E1F               	movwf	SetPin595@pin,c
  5589  001180  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5590  001184  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5591  001188  ECBA  F00C         	call	_SetPin595	;wreg free
  5592                           
  5593                           ;PDU.c: 44: break;
  5594  00118C  0012               	return	
  5595  00118E                     l4141:
  5596                           
  5597                           ;PDU.c: 46: SetPin595(1, 6, onof);
  5598  00118E  0E00               	movlw	0
  5599  001190  6E1E               	movwf	SetPin595@Reg+1,c
  5600  001192  0E01               	movlw	1
  5601  001194  6E1D               	movwf	SetPin595@Reg,c
  5602  001196  0E00               	movlw	0
  5603  001198  6E20               	movwf	SetPin595@pin+1,c
  5604  00119A  0E06               	movlw	6
  5605  00119C  6E1F               	movwf	SetPin595@pin,c
  5606  00119E  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5607  0011A2  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5608  0011A6  ECBA  F00C         	call	_SetPin595	;wreg free
  5609                           
  5610                           ;PDU.c: 47: MCSOn = onof;
  5611  0011AA  C027  F03B         	movff	EnableSlavePower@onof,_MCSOn
  5612                           
  5613                           ;PDU.c: 48: break;
  5614  0011AE  0012               	return	
  5615  0011B0                     l4145:
  5616                           
  5617                           ;PDU.c: 50: SetPin595(2, 1, onof);
  5618  0011B0  0E00               	movlw	0
  5619  0011B2  6E1E               	movwf	SetPin595@Reg+1,c
  5620  0011B4  0E02               	movlw	2
  5621  0011B6  6E1D               	movwf	SetPin595@Reg,c
  5622  0011B8  0E00               	movlw	0
  5623  0011BA  6E20               	movwf	SetPin595@pin+1,c
  5624  0011BC  0E01               	movlw	1
  5625  0011BE  6E1F               	movwf	SetPin595@pin,c
  5626  0011C0  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5627  0011C4  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5628  0011C8  ECBA  F00C         	call	_SetPin595	;wreg free
  5629                           
  5630                           ;PDU.c: 51: break;
  5631  0011CC  0012               	return	
  5632  0011CE                     l4147:
  5633                           
  5634                           ;PDU.c: 53: SetPin595(3, 6, onof);
  5635  0011CE  0E00               	movlw	0
  5636  0011D0  6E1E               	movwf	SetPin595@Reg+1,c
  5637  0011D2  0E03               	movlw	3
  5638  0011D4  6E1D               	movwf	SetPin595@Reg,c
  5639  0011D6  0E00               	movlw	0
  5640  0011D8  6E20               	movwf	SetPin595@pin+1,c
  5641  0011DA  0E06               	movlw	6
  5642  0011DC  6E1F               	movwf	SetPin595@pin,c
  5643  0011DE  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5644  0011E2  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5645  0011E6  ECBA  F00C         	call	_SetPin595	;wreg free
  5646                           
  5647                           ;PDU.c: 54: break;
  5648  0011EA  0012               	return	
  5649  0011EC                     l4149:
  5650                           
  5651                           ;PDU.c: 56: SetPin595(3, 1, onof);
  5652  0011EC  0E00               	movlw	0
  5653  0011EE  6E1E               	movwf	SetPin595@Reg+1,c
  5654  0011F0  0E03               	movlw	3
  5655  0011F2  6E1D               	movwf	SetPin595@Reg,c
  5656  0011F4  0E00               	movlw	0
  5657  0011F6  6E20               	movwf	SetPin595@pin+1,c
  5658  0011F8  0E01               	movlw	1
  5659  0011FA  6E1F               	movwf	SetPin595@pin,c
  5660  0011FC  C027  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5661  001200  C028  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5662  001204  ECBA  F00C         	call	_SetPin595	;wreg free
  5663                           
  5664                           ;PDU.c: 58: }
  5665                           
  5666                           ;PDU.c: 57: break;
  5667  001208  0012               	return	
  5668  00120A                     l4153:
  5669  00120A  5029               	movf	EnableSlavePower@slave,w,c
  5670                           
  5671                           ; Switch size 1, requested type "space"
  5672                           ; Number of cases is 6, Range of values is 1 to 6
  5673                           ; switch strategies available:
  5674                           ; Name         Instructions Cycles
  5675                           ; simple_byte           19    10 (average)
  5676                           ;	Chosen strategy is simple_byte
  5677  00120C  0A01               	xorlw	1	; case 1
  5678  00120E  B4D8               	btfsc	status,2,c
  5679  001210  D7CF               	goto	l4145
  5680  001212  0A03               	xorlw	3	; case 2
  5681  001214  B4D8               	btfsc	status,2,c
  5682  001216  D7BB               	goto	l4141
  5683  001218  0A01               	xorlw	1	; case 3
  5684  00121A  B4D8               	btfsc	status,2,c
  5685  00121C  D79A               	goto	l4137
  5686  00121E  0A07               	xorlw	7	; case 4
  5687  001220  B4D8               	btfsc	status,2,c
  5688  001222  D7A6               	goto	l4139
  5689  001224  0A01               	xorlw	1	; case 5
  5690  001226  B4D8               	btfsc	status,2,c
  5691  001228  D7D2               	goto	l4147
  5692  00122A  0A03               	xorlw	3	; case 6
  5693  00122C  A4D8               	btfss	status,2,c
  5694  00122E  0012               	return	
  5695  001230  D7DD               	goto	l4149
  5696  001232                     __end_of_EnableSlavePower:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           intcon2	equ	0xFF1
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           indf1	equ	0xFE7
  5709                           postdec1	equ	0xFE5
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           indf2	equ	0xFDF
  5713                           postinc2	equ	0xFDE
  5714                           postdec2	equ	0xFDD
  5715                           plusw2	equ	0xFDB
  5716                           fsr2h	equ	0xFDA
  5717                           fsr2l	equ	0xFD9
  5718                           status	equ	0xFD8
  5719                           
  5720 ;; *************** function _SetPin595 *****************
  5721 ;; Defined at:
  5722 ;;		line 32 in file "Shift595.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  Reg             2   28[COMRAM] int 
  5725 ;;  pin             2   30[COMRAM] int 
  5726 ;;  value           2   32[COMRAM] int 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         6       0       0       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0       0       0
  5740 ;;      Temps:          4       0       0       0       0       0       0
  5741 ;;      Totals:        10       0       0       0       0       0       0
  5742 ;;Total ram usage:       10 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    6
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_EnableSlavePower
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text35
  5753  001974                     __ptext35:
  5754                           	opt stack 0
  5755  001974                     _SetPin595:
  5756                           	opt stack 22
  5757                           
  5758                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  5759                           
  5760                           ;incstack = 0
  5761  001974  0EF0               	movlw	240
  5762  001976  6E23               	movwf	??_SetPin595& (0+255),c
  5763  001978  0EFF               	movlw	255
  5764  00197A  6E24               	movwf	(??_SetPin595+1)& (0+255),c
  5765  00197C  C01D  F025         	movff	SetPin595@Reg,??_SetPin595+2
  5766  001980  C01E  F026         	movff	SetPin595@Reg+1,??_SetPin595+3
  5767  001984  90D8               	bcf	status,0,c
  5768  001986  3625               	rlcf	??_SetPin595+2,f,c
  5769  001988  3626               	rlcf	??_SetPin595+3,f,c
  5770  00198A  90D8               	bcf	status,0,c
  5771  00198C  3625               	rlcf	??_SetPin595+2,f,c
  5772  00198E  3626               	rlcf	??_SetPin595+3,f,c
  5773  001990  90D8               	bcf	status,0,c
  5774  001992  3625               	rlcf	??_SetPin595+2,f,c
  5775  001994  3626               	rlcf	??_SetPin595+3,f,c
  5776  001996  501F               	movf	SetPin595@pin,w,c
  5777  001998  2625               	addwf	??_SetPin595+2,f,c
  5778  00199A  5020               	movf	SetPin595@pin+1,w,c
  5779  00199C  2226               	addwfc	??_SetPin595+3,f,c
  5780  00199E  90D8               	bcf	status,0,c
  5781  0019A0  3625               	rlcf	??_SetPin595+2,f,c
  5782  0019A2  3626               	rlcf	??_SetPin595+3,f,c
  5783  0019A4  5023               	movf	??_SetPin595,w,c
  5784  0019A6  2625               	addwf	??_SetPin595+2,f,c
  5785  0019A8  5024               	movf	??_SetPin595+1,w,c
  5786  0019AA  2226               	addwfc	??_SetPin595+3,f,c
  5787  0019AC  0E00               	movlw	low _registers
  5788  0019AE  2425               	addwf	??_SetPin595+2,w,c
  5789  0019B0  6ED9               	movwf	fsr2l,c
  5790  0019B2  0E01               	movlw	high _registers
  5791  0019B4  2026               	addwfc	??_SetPin595+3,w,c
  5792  0019B6  6EDA               	movwf	fsr2h,c
  5793  0019B8  C021  FFDE         	movff	SetPin595@value,postinc2
  5794  0019BC  C022  FFDD         	movff	SetPin595@value+1,postdec2
  5795  0019C0  0012               	return		;funcret
  5796  0019C2                     __end_of_SetPin595:
  5797                           	opt stack 0
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           intcon2	equ	0xFF1
  5806                           postinc0	equ	0xFEE
  5807                           wreg	equ	0xFE8
  5808                           indf1	equ	0xFE7
  5809                           postdec1	equ	0xFE5
  5810                           fsr1h	equ	0xFE2
  5811                           fsr1l	equ	0xFE1
  5812                           indf2	equ	0xFDF
  5813                           postinc2	equ	0xFDE
  5814                           postdec2	equ	0xFDD
  5815                           plusw2	equ	0xFDB
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _ComputeStorageData *****************
  5821 ;; Defined at:
  5822 ;;		line 160 in file "PDU.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  i               2   31[COMRAM] int 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5836 ;;      Params:         0       0       0       0       0       0       0
  5837 ;;      Locals:         2       0       0       0       0       0       0
  5838 ;;      Temps:          2       0       0       0       0       0       0
  5839 ;;      Totals:         4       0       0       0       0       0       0
  5840 ;;Total ram usage:        4 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    7
  5843 ;; This function calls:
  5844 ;;		_DATAEE_ReadByte
  5845 ;; This function is called by:
  5846 ;;		_PDUStartup
  5847 ;;		_main
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text36
  5852  001232                     __ptext36:
  5853                           	opt stack 0
  5854  001232                     _ComputeStorageData:
  5855                           	opt stack 22
  5856                           
  5857                           ;PDU.c: 161: for (int i = 0; i < 12; i++) {
  5858                           
  5859                           ;incstack = 0
  5860  001232  0E00               	movlw	0
  5861  001234  6E21               	movwf	ComputeStorageData@i+1,c
  5862  001236  0E00               	movlw	0
  5863  001238  6E20               	movwf	ComputeStorageData@i,c
  5864  00123A                     l4171:
  5865  00123A  BE21               	btfsc	ComputeStorageData@i+1,7,c
  5866  00123C  D006               	goto	l4175
  5867  00123E  5021               	movf	ComputeStorageData@i+1,w,c
  5868  001240  E111               	bnz	l4181
  5869  001242  0E0C               	movlw	12
  5870  001244  5C20               	subwf	ComputeStorageData@i,w,c
  5871  001246  B0D8               	btfsc	status,0,c
  5872  001248  D00D               	goto	l4181
  5873  00124A                     l4175:
  5874                           
  5875                           ;PDU.c: 162: data[i] = DATAEE_ReadByte(i);
  5876  00124A  0ED6               	movlw	low _data
  5877  00124C  2420               	addwf	ComputeStorageData@i,w,c
  5878  00124E  6ED9               	movwf	fsr2l,c
  5879  001250  0E00               	movlw	high _data
  5880  001252  2021               	addwfc	ComputeStorageData@i+1,w,c
  5881  001254  6EDA               	movwf	fsr2h,c
  5882  001256  5020               	movf	ComputeStorageData@i,w,c
  5883  001258  EC28  F00F         	call	_DATAEE_ReadByte
  5884  00125C  6EDF               	movwf	indf2,c
  5885  00125E  4A20               	infsnz	ComputeStorageData@i,f,c
  5886  001260  2A21               	incf	ComputeStorageData@i+1,f,c
  5887  001262  D7EB               	goto	l4171
  5888  001264                     l4181:
  5889                           
  5890                           ;PDU.c: 163: }
  5891                           ;PDU.c: 164: Currentcomp[0] = ((data[0] << 8) | data[1]);
  5892  001264  0100               	movlb	0	; () banked
  5893  001266  51D7               	movf	(_data+1)& (0+255),w,b
  5894  001268  C0D6  F01E         	movff	_data,??_ComputeStorageData
  5895  00126C  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5896  00126E  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5897  001272  6A1E               	clrf	??_ComputeStorageData,c
  5898  001274  101E               	iorwf	??_ComputeStorageData,w,c
  5899  001276  0100               	movlb	0	; () banked
  5900  001278  6FE2               	movwf	_Currentcomp& (0+255),b
  5901  00127A  501F               	movf	??_ComputeStorageData+1,w,c
  5902  00127C  0100               	movlb	0	; () banked
  5903  00127E  6FE3               	movwf	(_Currentcomp+1)& (0+255),b
  5904                           
  5905                           ;PDU.c: 165: Currentcomp[1] = ((data[2] << 8) | data[3]);
  5906  001280  0100               	movlb	0	; () banked
  5907  001282  51D9               	movf	(_data+3)& (0+255),w,b
  5908  001284  C0D8  F01E         	movff	_data+2,??_ComputeStorageData
  5909  001288  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5910  00128A  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5911  00128E  6A1E               	clrf	??_ComputeStorageData,c
  5912  001290  101E               	iorwf	??_ComputeStorageData,w,c
  5913  001292  0100               	movlb	0	; () banked
  5914  001294  6FE4               	movwf	(_Currentcomp+2)& (0+255),b
  5915  001296  501F               	movf	??_ComputeStorageData+1,w,c
  5916  001298  0100               	movlb	0	; () banked
  5917  00129A  6FE5               	movwf	(_Currentcomp+3)& (0+255),b
  5918                           
  5919                           ;PDU.c: 166: Currentcomp[2] = ((data[4] << 8) | data[5]);
  5920  00129C  0100               	movlb	0	; () banked
  5921  00129E  51DB               	movf	(_data+5)& (0+255),w,b
  5922  0012A0  C0DA  F01E         	movff	_data+4,??_ComputeStorageData
  5923  0012A4  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5924  0012A6  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5925  0012AA  6A1E               	clrf	??_ComputeStorageData,c
  5926  0012AC  101E               	iorwf	??_ComputeStorageData,w,c
  5927  0012AE  0100               	movlb	0	; () banked
  5928  0012B0  6FE6               	movwf	(_Currentcomp+4)& (0+255),b
  5929  0012B2  501F               	movf	??_ComputeStorageData+1,w,c
  5930  0012B4  0100               	movlb	0	; () banked
  5931  0012B6  6FE7               	movwf	(_Currentcomp+5)& (0+255),b
  5932                           
  5933                           ;PDU.c: 167: Currentcomp[3] = ((data[6] << 8) | data[7]);
  5934  0012B8  0100               	movlb	0	; () banked
  5935  0012BA  51DD               	movf	(_data+7)& (0+255),w,b
  5936  0012BC  C0DC  F01E         	movff	_data+6,??_ComputeStorageData
  5937  0012C0  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5938  0012C2  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5939  0012C6  6A1E               	clrf	??_ComputeStorageData,c
  5940  0012C8  101E               	iorwf	??_ComputeStorageData,w,c
  5941  0012CA  0100               	movlb	0	; () banked
  5942  0012CC  6FE8               	movwf	(_Currentcomp+6)& (0+255),b
  5943  0012CE  501F               	movf	??_ComputeStorageData+1,w,c
  5944  0012D0  0100               	movlb	0	; () banked
  5945  0012D2  6FE9               	movwf	(_Currentcomp+7)& (0+255),b
  5946                           
  5947                           ;PDU.c: 168: Currentcomp[4] = ((data[8] << 8) | data[9]);
  5948  0012D4  0100               	movlb	0	; () banked
  5949  0012D6  51DF               	movf	(_data+9)& (0+255),w,b
  5950  0012D8  C0DE  F01E         	movff	_data+8,??_ComputeStorageData
  5951  0012DC  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5952  0012DE  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5953  0012E2  6A1E               	clrf	??_ComputeStorageData,c
  5954  0012E4  101E               	iorwf	??_ComputeStorageData,w,c
  5955  0012E6  0100               	movlb	0	; () banked
  5956  0012E8  6FEA               	movwf	(_Currentcomp+8)& (0+255),b
  5957  0012EA  501F               	movf	??_ComputeStorageData+1,w,c
  5958  0012EC  0100               	movlb	0	; () banked
  5959  0012EE  6FEB               	movwf	(_Currentcomp+9)& (0+255),b
  5960                           
  5961                           ;PDU.c: 169: Currentcomp[5] = ((data[10] << 8) | data[11]);
  5962  0012F0  0100               	movlb	0	; () banked
  5963  0012F2  51E1               	movf	(_data+11)& (0+255),w,b
  5964  0012F4  C0E0  F01E         	movff	_data+10,??_ComputeStorageData
  5965  0012F8  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  5966  0012FA  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  5967  0012FE  6A1E               	clrf	??_ComputeStorageData,c
  5968  001300  101E               	iorwf	??_ComputeStorageData,w,c
  5969  001302  0100               	movlb	0	; () banked
  5970  001304  6FEC               	movwf	(_Currentcomp+10)& (0+255),b
  5971  001306  501F               	movf	??_ComputeStorageData+1,w,c
  5972  001308  0100               	movlb	0	; () banked
  5973  00130A  6FED               	movwf	(_Currentcomp+11)& (0+255),b
  5974                           
  5975                           ; BSR set to: 0
  5976  00130C  0012               	return		;funcret
  5977  00130E                     __end_of_ComputeStorageData:
  5978                           	opt stack 0
  5979                           tblptru	equ	0xFF8
  5980                           tblptrh	equ	0xFF7
  5981                           tblptrl	equ	0xFF6
  5982                           tablat	equ	0xFF5
  5983                           prodh	equ	0xFF4
  5984                           prodl	equ	0xFF3
  5985                           intcon	equ	0xFF2
  5986                           intcon2	equ	0xFF1
  5987                           postinc0	equ	0xFEE
  5988                           wreg	equ	0xFE8
  5989                           indf1	equ	0xFE7
  5990                           postdec1	equ	0xFE5
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           indf2	equ	0xFDF
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           plusw2	equ	0xFDB
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function _DATAEE_ReadByte *****************
  6002 ;; Defined at:
  6003 ;;		line 143 in file "mcc_generated_files/memory.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  bAdd            1    wreg     unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  bAdd            1   28[COMRAM] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6017 ;;      Params:         0       0       0       0       0       0       0
  6018 ;;      Locals:         1       0       0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0
  6020 ;;      Totals:         1       0       0       0       0       0       0
  6021 ;;Total ram usage:        1 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    6
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_ComputeStorageData
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text37
  6032  001E50                     __ptext37:
  6033                           	opt stack 0
  6034  001E50                     _DATAEE_ReadByte:
  6035                           	opt stack 22
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;incstack = 0
  6039                           ;DATAEE_ReadByte@bAdd stored from wreg
  6040  001E50  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6041                           
  6042                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  6043  001E52  C01D  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  6044                           
  6045                           ;memory.c: 146: EECON1bits.CFGS = 0;
  6046  001E56  9CA6               	bcf	4006,6,c	;volatile
  6047                           
  6048                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  6049  001E58  9EA6               	bcf	4006,7,c	;volatile
  6050                           
  6051                           ;memory.c: 148: EECON1bits.RD = 1;
  6052  001E5A  80A6               	bsf	4006,0,c	;volatile
  6053                           
  6054                           ;memory.c: 149: __nop();
  6055  001E5C  F000               	nop	
  6056                           
  6057                           ;memory.c: 150: __nop();
  6058  001E5E  F000               	nop	
  6059                           
  6060                           ;memory.c: 152: return (EEDATA);
  6061  001E60  50A8               	movf	4008,w,c	;volatile
  6062  001E62  0012               	return	
  6063  001E64                     __end_of_DATAEE_ReadByte:
  6064                           	opt stack 0
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           prodh	equ	0xFF4
  6070                           prodl	equ	0xFF3
  6071                           intcon	equ	0xFF2
  6072                           intcon2	equ	0xFF1
  6073                           postinc0	equ	0xFEE
  6074                           wreg	equ	0xFE8
  6075                           indf1	equ	0xFE7
  6076                           postdec1	equ	0xFE5
  6077                           fsr1h	equ	0xFE2
  6078                           fsr1l	equ	0xFE1
  6079                           indf2	equ	0xFDF
  6080                           postinc2	equ	0xFDE
  6081                           postdec2	equ	0xFDD
  6082                           plusw2	equ	0xFDB
  6083                           fsr2h	equ	0xFDA
  6084                           fsr2l	equ	0xFD9
  6085                           status	equ	0xFD8
  6086                           
  6087 ;; *************** function _DATAEE_WriteByte *****************
  6088 ;; Defined at:
  6089 ;;		line 121 in file "mcc_generated_files/memory.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  bAdd            1    wreg     unsigned char 
  6092 ;;  bData           1   28[COMRAM] unsigned char 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  bAdd            1   29[COMRAM] unsigned char 
  6095 ;;  GIEBitValue     1   30[COMRAM] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6105 ;;      Params:         1       0       0       0       0       0       0
  6106 ;;      Locals:         2       0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0
  6108 ;;      Totals:         3       0       0       0       0       0       0
  6109 ;;Total ram usage:        3 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    6
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_main
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text38
  6120  001B2A                     __ptext38:
  6121                           	opt stack 0
  6122  001B2A                     _DATAEE_WriteByte:
  6123                           	opt stack 24
  6124                           
  6125                           ;incstack = 0
  6126                           ;DATAEE_WriteByte@bAdd stored from wreg
  6127  001B2A  6E1E               	movwf	DATAEE_WriteByte@bAdd,c
  6128                           
  6129                           ;memory.c: 123: uint8_t GIEBitValue = INTCONbits.GIE;
  6130  001B2C  0E00               	movlw	0
  6131  001B2E  BEF2               	btfsc	intcon,7,c	;volatile
  6132  001B30  0E01               	movlw	1
  6133  001B32  6E1F               	movwf	DATAEE_WriteByte@GIEBitValue,c
  6134                           
  6135                           ;memory.c: 125: EEADR = (bAdd & 0xFF);
  6136  001B34  C01E  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  6137                           
  6138                           ;memory.c: 126: EEDATA = bData;
  6139  001B38  C01D  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  6140                           
  6141                           ;memory.c: 127: EECON1bits.EEPGD = 0;
  6142  001B3C  9EA6               	bcf	4006,7,c	;volatile
  6143                           
  6144                           ;memory.c: 128: EECON1bits.CFGS = 0;
  6145  001B3E  9CA6               	bcf	4006,6,c	;volatile
  6146                           
  6147                           ;memory.c: 129: EECON1bits.WREN = 1;
  6148  001B40  84A6               	bsf	4006,2,c	;volatile
  6149                           
  6150                           ;memory.c: 130: INTCONbits.GIE = 0;
  6151  001B42  9EF2               	bcf	intcon,7,c	;volatile
  6152                           
  6153                           ;memory.c: 131: EECON2 = 0x55;
  6154  001B44  0E55               	movlw	85
  6155  001B46  6EA7               	movwf	4007,c	;volatile
  6156                           
  6157                           ;memory.c: 132: EECON2 = 0xAA;
  6158  001B48  0EAA               	movlw	170
  6159  001B4A  6EA7               	movwf	4007,c	;volatile
  6160                           
  6161                           ;memory.c: 133: EECON1bits.WR = 1;
  6162  001B4C  82A6               	bsf	4006,1,c	;volatile
  6163  001B4E                     l160:
  6164  001B4E  B2A6               	btfsc	4006,1,c	;volatile
  6165  001B50  D7FE               	goto	l160
  6166                           
  6167                           ;memory.c: 137: }
  6168                           ;memory.c: 139: EECON1bits.WREN = 0;
  6169  001B52  94A6               	bcf	4006,2,c	;volatile
  6170                           
  6171                           ;memory.c: 140: INTCONbits.GIE = GIEBitValue;
  6172  001B54  B01F               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  6173  001B56  D002               	bra	u2645
  6174  001B58  9EF2               	bcf	intcon,7,c	;volatile
  6175  001B5A  D001               	bra	u2646
  6176  001B5C                     u2645:
  6177  001B5C  8EF2               	bsf	intcon,7,c	;volatile
  6178  001B5E                     u2646:
  6179  001B5E  0012               	return		;funcret
  6180  001B60                     __end_of_DATAEE_WriteByte:
  6181                           	opt stack 0
  6182                           tblptru	equ	0xFF8
  6183                           tblptrh	equ	0xFF7
  6184                           tblptrl	equ	0xFF6
  6185                           tablat	equ	0xFF5
  6186                           prodh	equ	0xFF4
  6187                           prodl	equ	0xFF3
  6188                           intcon	equ	0xFF2
  6189                           intcon2	equ	0xFF1
  6190                           postinc0	equ	0xFEE
  6191                           wreg	equ	0xFE8
  6192                           indf1	equ	0xFE7
  6193                           postdec1	equ	0xFE5
  6194                           fsr1h	equ	0xFE2
  6195                           fsr1l	equ	0xFE1
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           postdec2	equ	0xFDD
  6199                           plusw2	equ	0xFDB
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _CoolingStop *****************
  6205 ;; Defined at:
  6206 ;;		line 30 in file "CoolingControl.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6220 ;;      Params:         0       0       0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0
  6223 ;;      Totals:         0       0       0       0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    8
  6227 ;; This function calls:
  6228 ;;		_PWM4_LoadDutyValue
  6229 ;;		_PotClear
  6230 ;; This function is called by:
  6231 ;;		_main
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text39
  6236  001E64                     __ptext39:
  6237                           	opt stack 0
  6238  001E64                     _CoolingStop:
  6239                           	opt stack 22
  6240                           
  6241                           ;CoolingControl.c: 31: PotClear();
  6242                           
  6243                           ;incstack = 0
  6244  001E64  EC87  F009         	call	_PotClear	;wreg free
  6245                           
  6246                           ;CoolingControl.c: 32: PWM4_LoadDutyValue(0);
  6247  001E68  0E00               	movlw	0
  6248  001E6A  6E1E               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  6249  001E6C  0E00               	movlw	0
  6250  001E6E  6E1D               	movwf	PWM4_LoadDutyValue@dutyValue,c
  6251  001E70  ECFC  F00D         	call	_PWM4_LoadDutyValue	;wreg free
  6252  001E74  0012               	return		;funcret
  6253  001E76                     __end_of_CoolingStop:
  6254                           	opt stack 0
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           prodh	equ	0xFF4
  6260                           prodl	equ	0xFF3
  6261                           intcon	equ	0xFF2
  6262                           intcon2	equ	0xFF1
  6263                           postinc0	equ	0xFEE
  6264                           wreg	equ	0xFE8
  6265                           indf1	equ	0xFE7
  6266                           postdec1	equ	0xFE5
  6267                           fsr1h	equ	0xFE2
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           plusw2	equ	0xFDB
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277 ;; *************** function _CoolingStart *****************
  6278 ;; Defined at:
  6279 ;;		line 19 in file "CoolingControl.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6293 ;;      Params:         0       0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    8
  6300 ;; This function calls:
  6301 ;;		_PWM4_LoadDutyValue
  6302 ;;		_PotClear
  6303 ;;		_PotSetpoint
  6304 ;; This function is called by:
  6305 ;;		_main
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text40
  6310  001DB0                     __ptext40:
  6311                           	opt stack 0
  6312  001DB0                     _CoolingStart:
  6313                           	opt stack 22
  6314                           
  6315                           ;CoolingControl.c: 21: PotClear();
  6316                           
  6317                           ;incstack = 0
  6318  001DB0  EC87  F009         	call	_PotClear	;wreg free
  6319                           
  6320                           ;CoolingControl.c: 22: PotSetpoint(40);
  6321  001DB4  0E00               	movlw	0
  6322  001DB6  6E27               	movwf	PotSetpoint@new_point+1,c
  6323  001DB8  0E28               	movlw	40
  6324  001DBA  6E26               	movwf	PotSetpoint@new_point,c
  6325  001DBC  EC29  F008         	call	_PotSetpoint	;wreg free
  6326                           
  6327                           ;CoolingControl.c: 23: PWM4_LoadDutyValue(1000);
  6328  001DC0  0E03               	movlw	3
  6329  001DC2  6E1E               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
  6330  001DC4  0EE8               	movlw	232
  6331  001DC6  6E1D               	movwf	PWM4_LoadDutyValue@dutyValue,c
  6332  001DC8  ECFC  F00D         	call	_PWM4_LoadDutyValue	;wreg free
  6333  001DCC  0012               	return		;funcret
  6334  001DCE                     __end_of_CoolingStart:
  6335                           	opt stack 0
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           intcon	equ	0xFF2
  6343                           intcon2	equ	0xFF1
  6344                           postinc0	equ	0xFEE
  6345                           wreg	equ	0xFE8
  6346                           indf1	equ	0xFE7
  6347                           postdec1	equ	0xFE5
  6348                           fsr1h	equ	0xFE2
  6349                           fsr1l	equ	0xFE1
  6350                           indf2	equ	0xFDF
  6351                           postinc2	equ	0xFDE
  6352                           postdec2	equ	0xFDD
  6353                           plusw2	equ	0xFDB
  6354                           fsr2h	equ	0xFDA
  6355                           fsr2l	equ	0xFD9
  6356                           status	equ	0xFD8
  6357                           
  6358 ;; *************** function _PotSetpoint *****************
  6359 ;; Defined at:
  6360 ;;		line 21 in file "DigiPot.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  new_point       2   37[COMRAM] int 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  new_pos         2    4[BANK0 ] int 
  6365 ;;  x               2    2[BANK0 ] int 
  6366 ;;  set_point       2    0[BANK0 ] int 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6376 ;;      Params:         2       0       0       0       0       0       0
  6377 ;;      Locals:         0       6       0       0       0       0       0
  6378 ;;      Temps:          2       0       0       0       0       0       0
  6379 ;;      Totals:         4       6       0       0       0       0       0
  6380 ;;Total ram usage:       10 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    7
  6383 ;; This function calls:
  6384 ;;		_Delay
  6385 ;; This function is called by:
  6386 ;;		_main
  6387 ;;		_CoolingStart
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text41
  6392  001052                     __ptext41:
  6393                           	opt stack 0
  6394  001052                     _PotSetpoint:
  6395                           	opt stack 23
  6396                           
  6397                           ;DigiPot.c: 22: int set_point;
  6398                           ;DigiPot.c: 31: int new_pos = new_point;
  6399                           
  6400                           ;incstack = 0
  6401  001052  C026  F064         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  6402  001056  C027  F065         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  6403                           
  6404                           ;DigiPot.c: 35: LATB5 = 0;
  6405  00105A  9A8A               	bcf	3978,5,c	;volatile
  6406                           
  6407                           ;DigiPot.c: 38: if (new_pos > prev_pos) {
  6408  00105C  0100               	movlb	0	; () banked
  6409  00105E  5164               	movf	PotSetpoint@new_pos& (0+255),w,b
  6410  001060  5C37               	subwf	_prev_pos,w,c
  6411  001062  5038               	movf	_prev_pos+1,w,c
  6412  001064  0A80               	xorlw	128
  6413  001066  6E28               	movwf	??_PotSetpoint& (0+255),c
  6414  001068  0100               	movlb	0	; () banked
  6415  00106A  5165               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  6416  00106C  0A80               	xorlw	128
  6417  00106E  5828               	subwfb	??_PotSetpoint& (0+255),w,c
  6418  001070  B0D8               	btfsc	status,0,c
  6419  001072  D013               	goto	l711
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;DigiPot.c: 40: LATB3 = 1;
  6423  001074  868A               	bsf	3978,3,c	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;DigiPot.c: 41: set_point = new_pos - prev_pos;
  6427  001076  C037  F028         	movff	_prev_pos,??_PotSetpoint
  6428  00107A  C038  F029         	movff	_prev_pos+1,??_PotSetpoint+1
  6429  00107E  1E28               	comf	??_PotSetpoint,f,c
  6430  001080  1E29               	comf	??_PotSetpoint+1,f,c
  6431  001082  4A28               	infsnz	??_PotSetpoint,f,c
  6432  001084  2A29               	incf	??_PotSetpoint+1,f,c
  6433  001086  0100               	movlb	0	; () banked
  6434  001088  5164               	movf	PotSetpoint@new_pos& (0+255),w,b
  6435  00108A  2428               	addwf	??_PotSetpoint,w,c
  6436  00108C  0100               	movlb	0	; () banked
  6437  00108E  6F60               	movwf	PotSetpoint@set_point& (0+255),b
  6438  001090  0100               	movlb	0	; () banked
  6439  001092  5165               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  6440  001094  2029               	addwfc	??_PotSetpoint+1,w,c
  6441  001096  0100               	movlb	0	; () banked
  6442  001098  6F61               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  6443  00109A                     l711:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;DigiPot.c: 42: }
  6447                           ;DigiPot.c: 43: if (new_pos < prev_pos) {
  6448  00109A  5037               	movf	_prev_pos,w,c
  6449  00109C  0100               	movlb	0	; () banked
  6450  00109E  5D64               	subwf	PotSetpoint@new_pos& (0+255),w,b
  6451  0010A0  0100               	movlb	0	; () banked
  6452  0010A2  5165               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  6453  0010A4  0A80               	xorlw	128
  6454  0010A6  6E28               	movwf	??_PotSetpoint& (0+255),c
  6455  0010A8  5038               	movf	_prev_pos+1,w,c
  6456  0010AA  0A80               	xorlw	128
  6457  0010AC  5828               	subwfb	??_PotSetpoint& (0+255),w,c
  6458  0010AE  B0D8               	btfsc	status,0,c
  6459  0010B0  D011               	goto	l4195
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;DigiPot.c: 45: LATB3 = 0;
  6463  0010B2  968A               	bcf	3978,3,c	;volatile
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;DigiPot.c: 46: set_point = prev_pos - new_pos;
  6467  0010B4  C064  F028         	movff	PotSetpoint@new_pos,??_PotSetpoint
  6468  0010B8  C065  F029         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  6469  0010BC  1E28               	comf	??_PotSetpoint,f,c
  6470  0010BE  1E29               	comf	??_PotSetpoint+1,f,c
  6471  0010C0  4A28               	infsnz	??_PotSetpoint,f,c
  6472  0010C2  2A29               	incf	??_PotSetpoint+1,f,c
  6473  0010C4  5037               	movf	_prev_pos,w,c
  6474  0010C6  2428               	addwf	??_PotSetpoint,w,c
  6475  0010C8  0100               	movlb	0	; () banked
  6476  0010CA  6F60               	movwf	PotSetpoint@set_point& (0+255),b
  6477  0010CC  5038               	movf	_prev_pos+1,w,c
  6478  0010CE  2029               	addwfc	??_PotSetpoint+1,w,c
  6479  0010D0  0100               	movlb	0	; () banked
  6480  0010D2  6F61               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  6481  0010D4                     l4195:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;DigiPot.c: 47: }
  6485                           ;DigiPot.c: 48: Delay(1);
  6486  0010D4  0E01               	movlw	1
  6487  0010D6  6E1D               	movwf	Delay@wait,c
  6488  0010D8  0E00               	movlw	0
  6489  0010DA  6E1E               	movwf	Delay@wait+1,c
  6490  0010DC  0E00               	movlw	0
  6491  0010DE  6E1F               	movwf	Delay@wait+2,c
  6492  0010E0  0E00               	movlw	0
  6493  0010E2  6E20               	movwf	Delay@wait+3,c
  6494  0010E4  EC2D  F00D         	call	_Delay	;wreg free
  6495                           
  6496                           ;DigiPot.c: 50: int x;
  6497                           ;DigiPot.c: 52: for (x = 0; x < set_point; x++) {
  6498  0010E8  0E00               	movlw	0
  6499  0010EA  0100               	movlb	0	; () banked
  6500  0010EC  6F63               	movwf	(PotSetpoint@x+1)& (0+255),b
  6501  0010EE  0E00               	movlw	0
  6502  0010F0  6F62               	movwf	PotSetpoint@x& (0+255),b
  6503  0010F2  D019               	goto	l4205
  6504  0010F4                     l714:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;DigiPot.c: 53: LATB4 = 1;
  6508  0010F4  888A               	bsf	3978,4,c	;volatile
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;DigiPot.c: 54: Delay(1);
  6512  0010F6  0E01               	movlw	1
  6513  0010F8  6E1D               	movwf	Delay@wait,c
  6514  0010FA  0E00               	movlw	0
  6515  0010FC  6E1E               	movwf	Delay@wait+1,c
  6516  0010FE  0E00               	movlw	0
  6517  001100  6E1F               	movwf	Delay@wait+2,c
  6518  001102  0E00               	movlw	0
  6519  001104  6E20               	movwf	Delay@wait+3,c
  6520  001106  EC2D  F00D         	call	_Delay	;wreg free
  6521                           
  6522                           ;DigiPot.c: 55: LATB4 = 0;
  6523  00110A  988A               	bcf	3978,4,c	;volatile
  6524                           
  6525                           ;DigiPot.c: 56: Delay(1);
  6526  00110C  0E01               	movlw	1
  6527  00110E  6E1D               	movwf	Delay@wait,c
  6528  001110  0E00               	movlw	0
  6529  001112  6E1E               	movwf	Delay@wait+1,c
  6530  001114  0E00               	movlw	0
  6531  001116  6E1F               	movwf	Delay@wait+2,c
  6532  001118  0E00               	movlw	0
  6533  00111A  6E20               	movwf	Delay@wait+3,c
  6534  00111C  EC2D  F00D         	call	_Delay	;wreg free
  6535  001120  0100               	movlb	0	; () banked
  6536  001122  4B62               	infsnz	PotSetpoint@x& (0+255),f,b
  6537  001124  2B63               	incf	(PotSetpoint@x+1)& (0+255),f,b
  6538  001126                     l4205:
  6539                           
  6540                           ; BSR set to: 0
  6541  001126  0100               	movlb	0	; () banked
  6542  001128  5160               	movf	PotSetpoint@set_point& (0+255),w,b
  6543  00112A  0100               	movlb	0	; () banked
  6544  00112C  5D62               	subwf	PotSetpoint@x& (0+255),w,b
  6545  00112E  0100               	movlb	0	; () banked
  6546  001130  5163               	movf	(PotSetpoint@x+1)& (0+255),w,b
  6547  001132  0A80               	xorlw	128
  6548  001134  6E28               	movwf	??_PotSetpoint& (0+255),c
  6549  001136  0100               	movlb	0	; () banked
  6550  001138  5161               	movf	(PotSetpoint@set_point+1)& (0+255),w,b
  6551  00113A  0A80               	xorlw	128
  6552  00113C  5828               	subwfb	??_PotSetpoint& (0+255),w,c
  6553  00113E  A0D8               	btfss	status,0,c
  6554  001140  D7D9               	goto	l714
  6555                           
  6556                           ; BSR set to: 0
  6557                           ;DigiPot.c: 57: }
  6558                           ;DigiPot.c: 59: LATB5 = 1;
  6559  001142  8A8A               	bsf	3978,5,c	;volatile
  6560                           
  6561                           ;DigiPot.c: 60: prev_pos = new_pos;
  6562  001144  C064  F037         	movff	PotSetpoint@new_pos,_prev_pos
  6563  001148  C065  F038         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  6564                           
  6565                           ; BSR set to: 0
  6566  00114C  0012               	return		;funcret
  6567  00114E                     __end_of_PotSetpoint:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           intcon2	equ	0xFF1
  6577                           postinc0	equ	0xFEE
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           plusw2	equ	0xFDB
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _PotClear *****************
  6592 ;; Defined at:
  6593 ;;		line 66 in file "DigiPot.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  x               2   37[COMRAM] int 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6607 ;;      Params:         0       0       0       0       0       0       0
  6608 ;;      Locals:         2       0       0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0
  6610 ;;      Totals:         2       0       0       0       0       0       0
  6611 ;;Total ram usage:        2 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    7
  6614 ;; This function calls:
  6615 ;;		_Delay
  6616 ;; This function is called by:
  6617 ;;		_CoolingStart
  6618 ;;		_CoolingStop
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text42
  6623  00130E                     __ptext42:
  6624                           	opt stack 0
  6625  00130E                     _PotClear:
  6626                           	opt stack 22
  6627                           
  6628                           ;DigiPot.c: 67: Delay(1);
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;incstack = 0
  6632  00130E  0E01               	movlw	1
  6633  001310  6E1D               	movwf	Delay@wait,c
  6634  001312  0E00               	movlw	0
  6635  001314  6E1E               	movwf	Delay@wait+1,c
  6636  001316  0E00               	movlw	0
  6637  001318  6E1F               	movwf	Delay@wait+2,c
  6638  00131A  0E00               	movlw	0
  6639  00131C  6E20               	movwf	Delay@wait+3,c
  6640  00131E  EC2D  F00D         	call	_Delay	;wreg free
  6641                           
  6642                           ;DigiPot.c: 69: LATB5 = 0;
  6643  001322  9A8A               	bcf	3978,5,c	;volatile
  6644                           
  6645                           ;DigiPot.c: 70: Delay(1);
  6646  001324  0E01               	movlw	1
  6647  001326  6E1D               	movwf	Delay@wait,c
  6648  001328  0E00               	movlw	0
  6649  00132A  6E1E               	movwf	Delay@wait+1,c
  6650  00132C  0E00               	movlw	0
  6651  00132E  6E1F               	movwf	Delay@wait+2,c
  6652  001330  0E00               	movlw	0
  6653  001332  6E20               	movwf	Delay@wait+3,c
  6654  001334  EC2D  F00D         	call	_Delay	;wreg free
  6655                           
  6656                           ;DigiPot.c: 71: LATB3 = 0;
  6657  001338  968A               	bcf	3978,3,c	;volatile
  6658                           
  6659                           ;DigiPot.c: 72: Delay(1);
  6660  00133A  0E01               	movlw	1
  6661  00133C  6E1D               	movwf	Delay@wait,c
  6662  00133E  0E00               	movlw	0
  6663  001340  6E1E               	movwf	Delay@wait+1,c
  6664  001342  0E00               	movlw	0
  6665  001344  6E1F               	movwf	Delay@wait+2,c
  6666  001346  0E00               	movlw	0
  6667  001348  6E20               	movwf	Delay@wait+3,c
  6668  00134A  EC2D  F00D         	call	_Delay	;wreg free
  6669                           
  6670                           ;DigiPot.c: 73: int x;
  6671                           ;DigiPot.c: 74: for (x = 0; x < 32; x++) {
  6672  00134E  0E00               	movlw	0
  6673  001350  6E27               	movwf	PotClear@x+1,c
  6674  001352  0E00               	movlw	0
  6675  001354  6E26               	movwf	PotClear@x,c
  6676  001356  BE27               	btfsc	PotClear@x+1,7,c
  6677  001358  D006               	goto	l719
  6678  00135A  5027               	movf	PotClear@x+1,w,c
  6679  00135C  E121               	bnz	l720
  6680  00135E  0E20               	movlw	32
  6681  001360  5C26               	subwf	PotClear@x,w,c
  6682  001362  B0D8               	btfsc	status,0,c
  6683  001364  D01D               	goto	l720
  6684  001366                     l719:
  6685                           
  6686                           ;DigiPot.c: 75: LATB4 = 1;
  6687  001366  888A               	bsf	3978,4,c	;volatile
  6688                           
  6689                           ;DigiPot.c: 76: Delay(1);
  6690  001368  0E01               	movlw	1
  6691  00136A  6E1D               	movwf	Delay@wait,c
  6692  00136C  0E00               	movlw	0
  6693  00136E  6E1E               	movwf	Delay@wait+1,c
  6694  001370  0E00               	movlw	0
  6695  001372  6E1F               	movwf	Delay@wait+2,c
  6696  001374  0E00               	movlw	0
  6697  001376  6E20               	movwf	Delay@wait+3,c
  6698  001378  EC2D  F00D         	call	_Delay	;wreg free
  6699                           
  6700                           ;DigiPot.c: 77: LATB4 = 0;
  6701  00137C  988A               	bcf	3978,4,c	;volatile
  6702                           
  6703                           ;DigiPot.c: 78: Delay(1);
  6704  00137E  0E01               	movlw	1
  6705  001380  6E1D               	movwf	Delay@wait,c
  6706  001382  0E00               	movlw	0
  6707  001384  6E1E               	movwf	Delay@wait+1,c
  6708  001386  0E00               	movlw	0
  6709  001388  6E1F               	movwf	Delay@wait+2,c
  6710  00138A  0E00               	movlw	0
  6711  00138C  6E20               	movwf	Delay@wait+3,c
  6712  00138E  EC2D  F00D         	call	_Delay	;wreg free
  6713  001392  4A26               	infsnz	PotClear@x,f,c
  6714  001394  2A27               	incf	PotClear@x+1,f,c
  6715  001396  BE27               	btfsc	PotClear@x+1,7,c
  6716  001398  D7E6               	goto	l719
  6717  00139A  5027               	movf	PotClear@x+1,w,c
  6718  00139C  E101               	bnz	u2620
  6719  00139E  D7DF               	goto	L1
  6720  0013A0                     u2620:
  6721  0013A0                     l720:
  6722                           
  6723                           ;DigiPot.c: 79: }
  6724                           ;DigiPot.c: 80: LATB4 = 1;
  6725  0013A0  888A               	bsf	3978,4,c	;volatile
  6726                           
  6727                           ;DigiPot.c: 81: Delay(1);
  6728  0013A2  0E01               	movlw	1
  6729  0013A4  6E1D               	movwf	Delay@wait,c
  6730  0013A6  0E00               	movlw	0
  6731  0013A8  6E1E               	movwf	Delay@wait+1,c
  6732  0013AA  0E00               	movlw	0
  6733  0013AC  6E1F               	movwf	Delay@wait+2,c
  6734  0013AE  0E00               	movlw	0
  6735  0013B0  6E20               	movwf	Delay@wait+3,c
  6736  0013B2  EC2D  F00D         	call	_Delay	;wreg free
  6737                           
  6738                           ;DigiPot.c: 83: LATB5 = 1;
  6739  0013B6  8A8A               	bsf	3978,5,c	;volatile
  6740                           
  6741                           ;DigiPot.c: 84: prev_pos = 0;
  6742  0013B8  0E00               	movlw	0
  6743  0013BA  6E38               	movwf	_prev_pos+1,c
  6744  0013BC  0E00               	movlw	0
  6745  0013BE  6E37               	movwf	_prev_pos,c
  6746                           
  6747                           ;DigiPot.c: 85: Delay(1);
  6748  0013C0  0E01               	movlw	1
  6749  0013C2  6E1D               	movwf	Delay@wait,c
  6750  0013C4  0E00               	movlw	0
  6751  0013C6  6E1E               	movwf	Delay@wait+1,c
  6752  0013C8  0E00               	movlw	0
  6753  0013CA  6E1F               	movwf	Delay@wait+2,c
  6754  0013CC  0E00               	movlw	0
  6755  0013CE  6E20               	movwf	Delay@wait+3,c
  6756  0013D0  EC2D  F00D         	call	_Delay	;wreg free
  6757  0013D4  0012               	return		;funcret
  6758  0013D6                     __end_of_PotClear:
  6759                           	opt stack 0
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           intcon2	equ	0xFF1
  6768                           postinc0	equ	0xFEE
  6769                           wreg	equ	0xFE8
  6770                           indf1	equ	0xFE7
  6771                           postdec1	equ	0xFE5
  6772                           fsr1h	equ	0xFE2
  6773                           fsr1l	equ	0xFE1
  6774                           indf2	equ	0xFDF
  6775                           postinc2	equ	0xFDE
  6776                           postdec2	equ	0xFDD
  6777                           plusw2	equ	0xFDB
  6778                           fsr2h	equ	0xFDA
  6779                           fsr2l	equ	0xFD9
  6780                           status	equ	0xFD8
  6781                           
  6782 ;; *************** function _Delay *****************
  6783 ;; Defined at:
  6784 ;;		line 9 in file "Functions.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  wait            4   28[COMRAM] long 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  i               4   33[COMRAM] long 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6798 ;;      Params:         4       0       0       0       0       0       0
  6799 ;;      Locals:         4       0       0       0       0       0       0
  6800 ;;      Temps:          1       0       0       0       0       0       0
  6801 ;;      Totals:         9       0       0       0       0       0       0
  6802 ;;Total ram usage:        9 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    6
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_StartUp595
  6809 ;;		_writeRegisters
  6810 ;;		_PotSetpoint
  6811 ;;		_PotClear
  6812 ;;		_ComController
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text43
  6817  001A5A                     __ptext43:
  6818                           	opt stack 0
  6819  001A5A                     _Delay:
  6820                           	opt stack 21
  6821                           
  6822                           ;Functions.c: 10: long int i = 0;
  6823                           
  6824                           ;incstack = 0
  6825  001A5A  0E00               	movlw	0
  6826  001A5C  6E22               	movwf	Delay@i,c
  6827  001A5E  0E00               	movlw	0
  6828  001A60  6E23               	movwf	Delay@i+1,c
  6829  001A62  0E00               	movlw	0
  6830  001A64  6E24               	movwf	Delay@i+2,c
  6831  001A66  0E00               	movlw	0
  6832  001A68  6E25               	movwf	Delay@i+3,c
  6833                           
  6834                           ;Functions.c: 11: for (; wait > i; i++) {
  6835  001A6A  D00D               	goto	l3683
  6836  001A6C                     l3679:
  6837                           
  6838                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  6839  001A6C  0E03               	movlw	3
  6840  001A6E  6E21               	movwf	??_Delay& (0+255),c
  6841  001A70  0E98               	movlw	152
  6842  001A72                     u2777:
  6843  001A72  2EE8               	decfsz	wreg,f,c
  6844  001A74  D7FE               	bra	u2777
  6845  001A76  2E21               	decfsz	??_Delay& (0+255),f,c
  6846  001A78  D7FC               	bra	u2777
  6847  001A7A  0E01               	movlw	1
  6848  001A7C  2622               	addwf	Delay@i,f,c
  6849  001A7E  0E00               	movlw	0
  6850  001A80  2223               	addwfc	Delay@i+1,f,c
  6851  001A82  2224               	addwfc	Delay@i+2,f,c
  6852  001A84  2225               	addwfc	Delay@i+3,f,c
  6853  001A86                     l3683:
  6854  001A86  501D               	movf	Delay@wait,w,c
  6855  001A88  5C22               	subwf	Delay@i,w,c
  6856  001A8A  501E               	movf	Delay@wait+1,w,c
  6857  001A8C  5823               	subwfb	Delay@i+1,w,c
  6858  001A8E  501F               	movf	Delay@wait+2,w,c
  6859  001A90  5824               	subwfb	Delay@i+2,w,c
  6860  001A92  5025               	movf	Delay@i+3,w,c
  6861  001A94  0A80               	xorlw	128
  6862  001A96  6E21               	movwf	??_Delay& (0+255),c
  6863  001A98  5020               	movf	Delay@wait+3,w,c
  6864  001A9A  0A80               	xorlw	128
  6865  001A9C  5821               	subwfb	??_Delay& (0+255),w,c
  6866  001A9E  B0D8               	btfsc	status,0,c
  6867  001AA0  0012               	return	
  6868  001AA2  D7E4               	goto	l3679
  6869  001AA4                     __end_of_Delay:
  6870                           	opt stack 0
  6871                           tblptru	equ	0xFF8
  6872                           tblptrh	equ	0xFF7
  6873                           tblptrl	equ	0xFF6
  6874                           tablat	equ	0xFF5
  6875                           prodh	equ	0xFF4
  6876                           prodl	equ	0xFF3
  6877                           intcon	equ	0xFF2
  6878                           intcon2	equ	0xFF1
  6879                           postinc0	equ	0xFEE
  6880                           wreg	equ	0xFE8
  6881                           indf1	equ	0xFE7
  6882                           postdec1	equ	0xFE5
  6883                           fsr1h	equ	0xFE2
  6884                           fsr1l	equ	0xFE1
  6885                           indf2	equ	0xFDF
  6886                           postinc2	equ	0xFDE
  6887                           postdec2	equ	0xFDD
  6888                           plusw2	equ	0xFDB
  6889                           fsr2h	equ	0xFDA
  6890                           fsr2l	equ	0xFD9
  6891                           status	equ	0xFD8
  6892                           
  6893 ;; *************** function _PWM4_LoadDutyValue *****************
  6894 ;; Defined at:
  6895 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  dutyValue       2   28[COMRAM] unsigned int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         2       0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0
  6911 ;;      Temps:          2       0       0       0       0       0       0
  6912 ;;      Totals:         4       0       0       0       0       0       0
  6913 ;;Total ram usage:        4 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    6
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_main
  6920 ;;		_CoolingStart
  6921 ;;		_CoolingStop
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text44
  6926  001BF8                     __ptext44:
  6927                           	opt stack 0
  6928  001BF8                     _PWM4_LoadDutyValue:
  6929                           	opt stack 24
  6930                           
  6931                           ;pwm4.c: 84: CCPR2L = ((dutyValue & 0x03FC)>>2);
  6932                           
  6933                           ;incstack = 0
  6934  001BF8  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  6935  001BFC  C01E  F020         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  6936  001C00  90D8               	bcf	status,0,c
  6937  001C02  3220               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  6938  001C04  321F               	rrcf	??_PWM4_LoadDutyValue,f,c
  6939  001C06  90D8               	bcf	status,0,c
  6940  001C08  3220               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  6941  001C0A  321F               	rrcf	??_PWM4_LoadDutyValue,f,c
  6942  001C0C  501F               	movf	??_PWM4_LoadDutyValue,w,c
  6943  001C0E  6E67               	movwf	3943,c	;volatile
  6944                           
  6945                           ;pwm4.c: 87: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  6946  001C10  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  6947  001C14  0E03               	movlw	3
  6948  001C16  161F               	andwf	??_PWM4_LoadDutyValue,f,c
  6949  001C18  3A1F               	swapf	??_PWM4_LoadDutyValue,f,c
  6950  001C1A  0EF0               	movlw	240
  6951  001C1C  161F               	andwf	??_PWM4_LoadDutyValue,f,c
  6952  001C1E  5066               	movf	3942,w,c	;volatile
  6953  001C20  0BCF               	andlw	207
  6954  001C22  101F               	iorwf	??_PWM4_LoadDutyValue,w,c
  6955  001C24  6E66               	movwf	3942,c	;volatile
  6956  001C26  0012               	return		;funcret
  6957  001C28                     __end_of_PWM4_LoadDutyValue:
  6958                           	opt stack 0
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           prodh	equ	0xFF4
  6964                           prodl	equ	0xFF3
  6965                           intcon	equ	0xFF2
  6966                           intcon2	equ	0xFF1
  6967                           postinc0	equ	0xFEE
  6968                           wreg	equ	0xFE8
  6969                           indf1	equ	0xFE7
  6970                           postdec1	equ	0xFE5
  6971                           fsr1h	equ	0xFE2
  6972                           fsr1l	equ	0xFE1
  6973                           indf2	equ	0xFDF
  6974                           postinc2	equ	0xFDE
  6975                           postdec2	equ	0xFDD
  6976                           plusw2	equ	0xFDB
  6977                           fsr2h	equ	0xFDA
  6978                           fsr2l	equ	0xFD9
  6979                           status	equ	0xFD8
  6980                           
  6981 ;; *************** function _CoolingCheck *****************
  6982 ;; Defined at:
  6983 ;;		line 229 in file "PDU.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      unsigned char 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6997 ;;      Params:         0       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    6
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_main
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text45
  7012  001EBE                     __ptext45:
  7013                           	opt stack 0
  7014  001EBE                     _CoolingCheck:
  7015                           	opt stack 24
  7016                           
  7017                           ;PDU.c: 230: return MCSOn;
  7018                           
  7019                           ;incstack = 0
  7020  001EBE  503B               	movf	_MCSOn,w,c
  7021  001EC0  0012               	return	
  7022  001EC2                     __end_of_CoolingCheck:
  7023                           	opt stack 0
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           intcon2	equ	0xFF1
  7032                           postinc0	equ	0xFEE
  7033                           wreg	equ	0xFE8
  7034                           indf1	equ	0xFE7
  7035                           postdec1	equ	0xFE5
  7036                           fsr1h	equ	0xFE2
  7037                           fsr1l	equ	0xFE1
  7038                           indf2	equ	0xFDF
  7039                           postinc2	equ	0xFDE
  7040                           postdec2	equ	0xFDD
  7041                           plusw2	equ	0xFDB
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function _INTERRUPT_InterruptManager *****************
  7047 ;; Defined at:
  7048 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7062 ;;      Params:         0       0       0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0
  7064 ;;      Temps:         14       0       0       0       0       0       0
  7065 ;;      Totals:        14       0       0       0       0       0       0
  7066 ;;Total ram usage:       14 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    5
  7069 ;; This function calls:
  7070 ;;		_ADC_ISR
  7071 ;;		_EUSART1_Receive_ISR
  7072 ;;		_EUSART1_Transmit_ISR
  7073 ;;		_TMR1_ISR
  7074 ;; This function is called by:
  7075 ;;		Interrupt level 2
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	intcode
  7080  000008                     __pintcode:
  7081                           	opt stack 0
  7082  000008                     _INTERRUPT_InterruptManager:
  7083                           	opt stack 18
  7084                           
  7085                           ;incstack = 0
  7086  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7087  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
  7088  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7089  000012  CFE9 F011          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7090  000016  CFEA F012          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7091  00001A  CFE1 F013          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7092  00001E  CFE2 F014          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7093  000022  CFD9 F015          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7094  000026  CFDA F016          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7095  00002A  CFF3 F017          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7096  00002E  CFF4 F018          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7097  000032  CFF6 F019          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7098  000036  CFF7 F01A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7099  00003A  CFF8 F01B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7100  00003E  CFF5 F01C          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7101                           
  7102                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7103  000042  BA9D               	btfsc	3997,5,c	;volatile
  7104  000044  AA9E               	btfss	3998,5,c	;volatile
  7105  000046  D003               	goto	i2l67
  7106                           
  7107                           ;interrupt_manager.c: 71: {
  7108                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  7109  000048  ECB9  F00E         	call	_EUSART1_Receive_ISR	;wreg free
  7110                           
  7111                           ;interrupt_manager.c: 73: }
  7112  00004C  D011               	goto	i2l75
  7113  00004E                     i2l67:
  7114                           
  7115                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7116  00004E  B89D               	btfsc	3997,4,c	;volatile
  7117  000050  A89E               	btfss	3998,4,c	;volatile
  7118  000052  D003               	goto	i2l69
  7119                           
  7120                           ;interrupt_manager.c: 75: {
  7121                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  7122  000054  ECE3  F00D         	call	_EUSART1_Transmit_ISR	;wreg free
  7123                           
  7124                           ;interrupt_manager.c: 77: }
  7125  000058  D00B               	goto	i2l75
  7126  00005A                     i2l69:
  7127                           
  7128                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  7129  00005A  BC9D               	btfsc	3997,6,c	;volatile
  7130  00005C  AC9E               	btfss	3998,6,c	;volatile
  7131  00005E  D003               	goto	i2l71
  7132                           
  7133                           ;interrupt_manager.c: 79: {
  7134                           ;interrupt_manager.c: 80: ADC_ISR();
  7135  000060  EC61  F00F         	call	_ADC_ISR	;wreg free
  7136                           
  7137                           ;interrupt_manager.c: 81: }
  7138  000064  D005               	goto	i2l75
  7139  000066                     i2l71:
  7140                           
  7141                           ;interrupt_manager.c: 82: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7142  000066  B09D               	btfsc	3997,0,c	;volatile
  7143  000068  A09E               	btfss	3998,0,c	;volatile
  7144  00006A  D002               	goto	i2l75
  7145                           
  7146                           ;interrupt_manager.c: 83: {
  7147                           ;interrupt_manager.c: 84: TMR1_ISR();
  7148  00006C  ECCA  F00D         	call	_TMR1_ISR	;wreg free
  7149  000070                     i2l75:
  7150  000070  C01C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7151  000074  C01B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7152  000078  C01A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7153  00007C  C019  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7154  000080  C018  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7155  000084  C017  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7156  000088  C016  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7157  00008C  C015  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7158  000090  C014  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7159  000094  C013  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7160  000098  C012  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7161  00009C  C011  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7162  0000A0  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7163  0000A4  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7164  0000A8  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7165  0000AA  0011               	retfie		f
  7166  0000AC                     __end_of_INTERRUPT_InterruptManager:
  7167                           	opt stack 0
  7168                           pclatu	equ	0xFFB
  7169                           pclath	equ	0xFFA
  7170                           tblptru	equ	0xFF8
  7171                           tblptrh	equ	0xFF7
  7172                           tblptrl	equ	0xFF6
  7173                           tablat	equ	0xFF5
  7174                           prodh	equ	0xFF4
  7175                           prodl	equ	0xFF3
  7176                           intcon	equ	0xFF2
  7177                           intcon2	equ	0xFF1
  7178                           postinc0	equ	0xFEE
  7179                           fsr0h	equ	0xFEA
  7180                           fsr0l	equ	0xFE9
  7181                           wreg	equ	0xFE8
  7182                           indf1	equ	0xFE7
  7183                           postdec1	equ	0xFE5
  7184                           fsr1h	equ	0xFE2
  7185                           fsr1l	equ	0xFE1
  7186                           indf2	equ	0xFDF
  7187                           postinc2	equ	0xFDE
  7188                           postdec2	equ	0xFDD
  7189                           plusw2	equ	0xFDB
  7190                           fsr2h	equ	0xFDA
  7191                           fsr2l	equ	0xFD9
  7192                           status	equ	0xFD8
  7193                           
  7194 ;; *************** function _TMR1_ISR *****************
  7195 ;; Defined at:
  7196 ;;		line 161 in file "mcc_generated_files/tmr1.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;		None
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7210 ;;      Params:         0       0       0       0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0
  7213 ;;      Totals:         0       0       0       0       0       0       0
  7214 ;;Total ram usage:        0 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    4
  7217 ;; This function calls:
  7218 ;;		_FuseSystem
  7219 ;;		_ReadCurrent
  7220 ;; This function is called by:
  7221 ;;		_INTERRUPT_InterruptManager
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text47
  7226  001B94                     __ptext47:
  7227                           	opt stack 0
  7228  001B94                     _TMR1_ISR:
  7229                           	opt stack 18
  7230                           
  7231                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  7232                           
  7233                           ;incstack = 0
  7234  001B94  909E               	bcf	3998,0,c	;volatile
  7235                           
  7236                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
  7237  001B96  503A               	movf	_timer1ReloadVal+1,w,c	;volatile
  7238  001B98  6ECF               	movwf	4047,c	;volatile
  7239                           
  7240                           ;tmr1.c: 169: TMR1L = (uint8_t) timer1ReloadVal;
  7241  001B9A  C039  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  7242                           
  7243                           ;tmr1.c: 170: readwhat++;
  7244  001B9E  4A40               	infsnz	_readwhat,f,c
  7245  001BA0  2A41               	incf	_readwhat+1,f,c
  7246                           
  7247                           ;tmr1.c: 171: if(readwhat > 7)
  7248  001BA2  BE41               	btfsc	_readwhat+1,7,c
  7249  001BA4  D00C               	goto	i2l3417
  7250  001BA6  5041               	movf	_readwhat+1,w,c
  7251  001BA8  E104               	bnz	i2u184_40
  7252  001BAA  0E08               	movlw	8
  7253  001BAC  5C40               	subwf	_readwhat,w,c
  7254  001BAE  A0D8               	btfss	status,0,c
  7255  001BB0  D006               	goto	i2l3417
  7256  001BB2                     i2u184_40:
  7257                           
  7258                           ;tmr1.c: 172: {
  7259                           ;tmr1.c: 173: readwhat = 1;
  7260  001BB2  0E00               	movlw	0
  7261  001BB4  6E41               	movwf	_readwhat+1,c
  7262  001BB6  0E01               	movlw	1
  7263  001BB8  6E40               	movwf	_readwhat,c
  7264                           
  7265                           ;tmr1.c: 174: FuseSystem();
  7266  001BBA  ECA7  F00B         	call	_FuseSystem	;wreg free
  7267  001BBE                     i2l3417:
  7268                           
  7269                           ;tmr1.c: 175: }
  7270                           ;tmr1.c: 176: ReadCurrent(readwhat);
  7271  001BBE  5040               	movf	_readwhat,w,c
  7272  001BC0  EC58  F000         	call	_ReadCurrent
  7273  001BC4  0012               	return		;funcret
  7274  001BC6                     __end_of_TMR1_ISR:
  7275                           	opt stack 0
  7276                           pclatu	equ	0xFFB
  7277                           pclath	equ	0xFFA
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           intcon2	equ	0xFF1
  7286                           postinc0	equ	0xFEE
  7287                           fsr0h	equ	0xFEA
  7288                           fsr0l	equ	0xFE9
  7289                           wreg	equ	0xFE8
  7290                           indf1	equ	0xFE7
  7291                           postdec1	equ	0xFE5
  7292                           fsr1h	equ	0xFE2
  7293                           fsr1l	equ	0xFE1
  7294                           indf2	equ	0xFDF
  7295                           postinc2	equ	0xFDE
  7296                           postdec2	equ	0xFDD
  7297                           plusw2	equ	0xFDB
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _ReadCurrent *****************
  7303 ;; Defined at:
  7304 ;;		line 63 in file "PDU.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  gather          1    wreg     unsigned char 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  gather          1   13[COMRAM] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7318 ;;      Params:         0       0       0       0       0       0       0
  7319 ;;      Locals:         1       0       0       0       0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0       0
  7321 ;;      Totals:         1       0       0       0       0       0       0
  7322 ;;Total ram usage:        1 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    3
  7325 ;; This function calls:
  7326 ;;		_ADC_GetConversion
  7327 ;;		i2_SetPin595
  7328 ;;		i2_Update
  7329 ;; This function is called by:
  7330 ;;		_TMR1_ISR
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text48
  7335  0000B0                     __ptext48:
  7336                           	opt stack 0
  7337  0000B0                     _ReadCurrent:
  7338                           	opt stack 18
  7339                           
  7340                           ;incstack = 0
  7341                           ;ReadCurrent@gather stored from wreg
  7342  0000B0  6E0E               	movwf	ReadCurrent@gather,c
  7343                           
  7344                           ;PDU.c: 64: if (gather == 1) {
  7345  0000B2  040E               	decf	ReadCurrent@gather,w,c
  7346  0000B4  A4D8               	btfss	status,2,c
  7347  0000B6  D088               	goto	i2l3195
  7348                           
  7349                           ;PDU.c: 66: SetPin595(1, 4, ON);
  7350  0000B8  0E00               	movlw	0
  7351  0000BA  6E02               	movwf	i2SetPin595@Reg+1,c
  7352  0000BC  0E01               	movlw	1
  7353  0000BE  6E01               	movwf	i2SetPin595@Reg,c
  7354  0000C0  0E00               	movlw	0
  7355  0000C2  6E04               	movwf	i2SetPin595@pin+1,c
  7356  0000C4  0E04               	movlw	4
  7357  0000C6  6E03               	movwf	i2SetPin595@pin,c
  7358  0000C8  0E00               	movlw	0
  7359  0000CA  6E06               	movwf	i2SetPin595@value+1,c
  7360  0000CC  0E01               	movlw	1
  7361  0000CE  6E05               	movwf	i2SetPin595@value,c
  7362  0000D0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7363                           
  7364                           ;PDU.c: 67: SetPin595(1, 3, OFF);
  7365  0000D4  0E00               	movlw	0
  7366  0000D6  6E02               	movwf	i2SetPin595@Reg+1,c
  7367  0000D8  0E01               	movlw	1
  7368  0000DA  6E01               	movwf	i2SetPin595@Reg,c
  7369  0000DC  0E00               	movlw	0
  7370  0000DE  6E04               	movwf	i2SetPin595@pin+1,c
  7371  0000E0  0E03               	movlw	3
  7372  0000E2  6E03               	movwf	i2SetPin595@pin,c
  7373  0000E4  0E00               	movlw	0
  7374  0000E6  6E06               	movwf	i2SetPin595@value+1,c
  7375  0000E8  0E00               	movlw	0
  7376  0000EA  6E05               	movwf	i2SetPin595@value,c
  7377  0000EC  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7378                           
  7379                           ;PDU.c: 68: SetPin595(1, 2, OFF);
  7380  0000F0  0E00               	movlw	0
  7381  0000F2  6E02               	movwf	i2SetPin595@Reg+1,c
  7382  0000F4  0E01               	movlw	1
  7383  0000F6  6E01               	movwf	i2SetPin595@Reg,c
  7384  0000F8  0E00               	movlw	0
  7385  0000FA  6E04               	movwf	i2SetPin595@pin+1,c
  7386  0000FC  0E02               	movlw	2
  7387  0000FE  6E03               	movwf	i2SetPin595@pin,c
  7388  000100  0E00               	movlw	0
  7389  000102  6E06               	movwf	i2SetPin595@value+1,c
  7390  000104  0E00               	movlw	0
  7391  000106  6E05               	movwf	i2SetPin595@value,c
  7392  000108  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7393                           
  7394                           ;PDU.c: 69: SetPin595(2, 4, OFF);
  7395  00010C  0E00               	movlw	0
  7396  00010E  6E02               	movwf	i2SetPin595@Reg+1,c
  7397  000110  0E02               	movlw	2
  7398  000112  6E01               	movwf	i2SetPin595@Reg,c
  7399  000114  0E00               	movlw	0
  7400  000116  6E04               	movwf	i2SetPin595@pin+1,c
  7401  000118  0E04               	movlw	4
  7402  00011A  6E03               	movwf	i2SetPin595@pin,c
  7403  00011C  0E00               	movlw	0
  7404  00011E  6E06               	movwf	i2SetPin595@value+1,c
  7405  000120  0E00               	movlw	0
  7406  000122  6E05               	movwf	i2SetPin595@value,c
  7407  000124  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7408                           
  7409                           ;PDU.c: 70: SetPin595(2, 3, OFF);
  7410  000128  0E00               	movlw	0
  7411  00012A  6E02               	movwf	i2SetPin595@Reg+1,c
  7412  00012C  0E02               	movlw	2
  7413  00012E  6E01               	movwf	i2SetPin595@Reg,c
  7414  000130  0E00               	movlw	0
  7415  000132  6E04               	movwf	i2SetPin595@pin+1,c
  7416  000134  0E03               	movlw	3
  7417  000136  6E03               	movwf	i2SetPin595@pin,c
  7418  000138  0E00               	movlw	0
  7419  00013A  6E06               	movwf	i2SetPin595@value+1,c
  7420  00013C  0E00               	movlw	0
  7421  00013E  6E05               	movwf	i2SetPin595@value,c
  7422  000140  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7423                           
  7424                           ;PDU.c: 71: SetPin595(2, 2, OFF);
  7425  000144  0E00               	movlw	0
  7426  000146  6E02               	movwf	i2SetPin595@Reg+1,c
  7427  000148  0E02               	movlw	2
  7428  00014A  6E01               	movwf	i2SetPin595@Reg,c
  7429  00014C  0E00               	movlw	0
  7430  00014E  6E04               	movwf	i2SetPin595@pin+1,c
  7431  000150  0E02               	movlw	2
  7432  000152  6E03               	movwf	i2SetPin595@pin,c
  7433  000154  0E00               	movlw	0
  7434  000156  6E06               	movwf	i2SetPin595@value+1,c
  7435  000158  0E00               	movlw	0
  7436  00015A  6E05               	movwf	i2SetPin595@value,c
  7437  00015C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7438                           
  7439                           ;PDU.c: 72: SetPin595(3, 4, OFF);
  7440  000160  0E00               	movlw	0
  7441  000162  6E02               	movwf	i2SetPin595@Reg+1,c
  7442  000164  0E03               	movlw	3
  7443  000166  6E01               	movwf	i2SetPin595@Reg,c
  7444  000168  0E00               	movlw	0
  7445  00016A  6E04               	movwf	i2SetPin595@pin+1,c
  7446  00016C  0E04               	movlw	4
  7447  00016E  6E03               	movwf	i2SetPin595@pin,c
  7448  000170  0E00               	movlw	0
  7449  000172  6E06               	movwf	i2SetPin595@value+1,c
  7450  000174  0E00               	movlw	0
  7451  000176  6E05               	movwf	i2SetPin595@value,c
  7452  000178  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7453                           
  7454                           ;PDU.c: 73: SetPin595(3, 3, OFF);
  7455  00017C  0E00               	movlw	0
  7456  00017E  6E02               	movwf	i2SetPin595@Reg+1,c
  7457  000180  0E03               	movlw	3
  7458  000182  6E01               	movwf	i2SetPin595@Reg,c
  7459  000184  0E00               	movlw	0
  7460  000186  6E04               	movwf	i2SetPin595@pin+1,c
  7461  000188  0E03               	movlw	3
  7462  00018A  6E03               	movwf	i2SetPin595@pin,c
  7463  00018C  0E00               	movlw	0
  7464  00018E  6E06               	movwf	i2SetPin595@value+1,c
  7465  000190  0E00               	movlw	0
  7466  000192  6E05               	movwf	i2SetPin595@value,c
  7467  000194  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7468                           
  7469                           ;PDU.c: 74: SetPin595(3, 2, OFF);
  7470  000198  0E00               	movlw	0
  7471  00019A  6E02               	movwf	i2SetPin595@Reg+1,c
  7472  00019C  0E03               	movlw	3
  7473  00019E  6E01               	movwf	i2SetPin595@Reg,c
  7474  0001A0  0E00               	movlw	0
  7475  0001A2  6E04               	movwf	i2SetPin595@pin+1,c
  7476  0001A4  0E02               	movlw	2
  7477  0001A6  6E03               	movwf	i2SetPin595@pin,c
  7478  0001A8  0E00               	movlw	0
  7479  0001AA  6E06               	movwf	i2SetPin595@value+1,c
  7480  0001AC  0E00               	movlw	0
  7481  0001AE  6E05               	movwf	i2SetPin595@value,c
  7482  0001B0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7483                           
  7484                           ;PDU.c: 75: Update();
  7485  0001B4  EC58  F00F         	call	i2_Update	;wreg free
  7486                           
  7487                           ;PDU.c: 76: CurrentADC[5] = ADC_GetConversion(U10Multisense);
  7488  0001B8  0E17               	movlw	23
  7489  0001BA  EC14  F00E         	call	_ADC_GetConversion
  7490  0001BE  C001  F0D4         	movff	?_ADC_GetConversion,_CurrentADC+10
  7491  0001C2  C002  F0D5         	movff	?_ADC_GetConversion+1,_CurrentADC+11
  7492                           
  7493                           ;PDU.c: 78: }
  7494  0001C6  0012               	return	
  7495  0001C8                     i2l3195:
  7496                           
  7497                           ;PDU.c: 79: else if(gather == 2){
  7498  0001C8  0E02               	movlw	2
  7499  0001CA  180E               	xorwf	ReadCurrent@gather,w,c
  7500  0001CC  A4D8               	btfss	status,2,c
  7501  0001CE  D088               	goto	i2l3201
  7502                           
  7503                           ;PDU.c: 81: SetPin595(1, 4, OFF);
  7504  0001D0  0E00               	movlw	0
  7505  0001D2  6E02               	movwf	i2SetPin595@Reg+1,c
  7506  0001D4  0E01               	movlw	1
  7507  0001D6  6E01               	movwf	i2SetPin595@Reg,c
  7508  0001D8  0E00               	movlw	0
  7509  0001DA  6E04               	movwf	i2SetPin595@pin+1,c
  7510  0001DC  0E04               	movlw	4
  7511  0001DE  6E03               	movwf	i2SetPin595@pin,c
  7512  0001E0  0E00               	movlw	0
  7513  0001E2  6E06               	movwf	i2SetPin595@value+1,c
  7514  0001E4  0E00               	movlw	0
  7515  0001E6  6E05               	movwf	i2SetPin595@value,c
  7516  0001E8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7517                           
  7518                           ;PDU.c: 82: SetPin595(1, 3, OFF);
  7519  0001EC  0E00               	movlw	0
  7520  0001EE  6E02               	movwf	i2SetPin595@Reg+1,c
  7521  0001F0  0E01               	movlw	1
  7522  0001F2  6E01               	movwf	i2SetPin595@Reg,c
  7523  0001F4  0E00               	movlw	0
  7524  0001F6  6E04               	movwf	i2SetPin595@pin+1,c
  7525  0001F8  0E03               	movlw	3
  7526  0001FA  6E03               	movwf	i2SetPin595@pin,c
  7527  0001FC  0E00               	movlw	0
  7528  0001FE  6E06               	movwf	i2SetPin595@value+1,c
  7529  000200  0E00               	movlw	0
  7530  000202  6E05               	movwf	i2SetPin595@value,c
  7531  000204  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7532                           
  7533                           ;PDU.c: 83: SetPin595(1, 2, OFF);
  7534  000208  0E00               	movlw	0
  7535  00020A  6E02               	movwf	i2SetPin595@Reg+1,c
  7536  00020C  0E01               	movlw	1
  7537  00020E  6E01               	movwf	i2SetPin595@Reg,c
  7538  000210  0E00               	movlw	0
  7539  000212  6E04               	movwf	i2SetPin595@pin+1,c
  7540  000214  0E02               	movlw	2
  7541  000216  6E03               	movwf	i2SetPin595@pin,c
  7542  000218  0E00               	movlw	0
  7543  00021A  6E06               	movwf	i2SetPin595@value+1,c
  7544  00021C  0E00               	movlw	0
  7545  00021E  6E05               	movwf	i2SetPin595@value,c
  7546  000220  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7547                           
  7548                           ;PDU.c: 84: SetPin595(2, 4, ON);
  7549  000224  0E00               	movlw	0
  7550  000226  6E02               	movwf	i2SetPin595@Reg+1,c
  7551  000228  0E02               	movlw	2
  7552  00022A  6E01               	movwf	i2SetPin595@Reg,c
  7553  00022C  0E00               	movlw	0
  7554  00022E  6E04               	movwf	i2SetPin595@pin+1,c
  7555  000230  0E04               	movlw	4
  7556  000232  6E03               	movwf	i2SetPin595@pin,c
  7557  000234  0E00               	movlw	0
  7558  000236  6E06               	movwf	i2SetPin595@value+1,c
  7559  000238  0E01               	movlw	1
  7560  00023A  6E05               	movwf	i2SetPin595@value,c
  7561  00023C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7562                           
  7563                           ;PDU.c: 85: SetPin595(2, 3, ON);
  7564  000240  0E00               	movlw	0
  7565  000242  6E02               	movwf	i2SetPin595@Reg+1,c
  7566  000244  0E02               	movlw	2
  7567  000246  6E01               	movwf	i2SetPin595@Reg,c
  7568  000248  0E00               	movlw	0
  7569  00024A  6E04               	movwf	i2SetPin595@pin+1,c
  7570  00024C  0E03               	movlw	3
  7571  00024E  6E03               	movwf	i2SetPin595@pin,c
  7572  000250  0E00               	movlw	0
  7573  000252  6E06               	movwf	i2SetPin595@value+1,c
  7574  000254  0E01               	movlw	1
  7575  000256  6E05               	movwf	i2SetPin595@value,c
  7576  000258  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7577                           
  7578                           ;PDU.c: 86: SetPin595(2, 2, OFF);
  7579  00025C  0E00               	movlw	0
  7580  00025E  6E02               	movwf	i2SetPin595@Reg+1,c
  7581  000260  0E02               	movlw	2
  7582  000262  6E01               	movwf	i2SetPin595@Reg,c
  7583  000264  0E00               	movlw	0
  7584  000266  6E04               	movwf	i2SetPin595@pin+1,c
  7585  000268  0E02               	movlw	2
  7586  00026A  6E03               	movwf	i2SetPin595@pin,c
  7587  00026C  0E00               	movlw	0
  7588  00026E  6E06               	movwf	i2SetPin595@value+1,c
  7589  000270  0E00               	movlw	0
  7590  000272  6E05               	movwf	i2SetPin595@value,c
  7591  000274  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7592                           
  7593                           ;PDU.c: 87: SetPin595(3, 4, OFF);
  7594  000278  0E00               	movlw	0
  7595  00027A  6E02               	movwf	i2SetPin595@Reg+1,c
  7596  00027C  0E03               	movlw	3
  7597  00027E  6E01               	movwf	i2SetPin595@Reg,c
  7598  000280  0E00               	movlw	0
  7599  000282  6E04               	movwf	i2SetPin595@pin+1,c
  7600  000284  0E04               	movlw	4
  7601  000286  6E03               	movwf	i2SetPin595@pin,c
  7602  000288  0E00               	movlw	0
  7603  00028A  6E06               	movwf	i2SetPin595@value+1,c
  7604  00028C  0E00               	movlw	0
  7605  00028E  6E05               	movwf	i2SetPin595@value,c
  7606  000290  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7607                           
  7608                           ;PDU.c: 88: SetPin595(3, 3, OFF);
  7609  000294  0E00               	movlw	0
  7610  000296  6E02               	movwf	i2SetPin595@Reg+1,c
  7611  000298  0E03               	movlw	3
  7612  00029A  6E01               	movwf	i2SetPin595@Reg,c
  7613  00029C  0E00               	movlw	0
  7614  00029E  6E04               	movwf	i2SetPin595@pin+1,c
  7615  0002A0  0E03               	movlw	3
  7616  0002A2  6E03               	movwf	i2SetPin595@pin,c
  7617  0002A4  0E00               	movlw	0
  7618  0002A6  6E06               	movwf	i2SetPin595@value+1,c
  7619  0002A8  0E00               	movlw	0
  7620  0002AA  6E05               	movwf	i2SetPin595@value,c
  7621  0002AC  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7622                           
  7623                           ;PDU.c: 89: SetPin595(3, 2, OFF);
  7624  0002B0  0E00               	movlw	0
  7625  0002B2  6E02               	movwf	i2SetPin595@Reg+1,c
  7626  0002B4  0E03               	movlw	3
  7627  0002B6  6E01               	movwf	i2SetPin595@Reg,c
  7628  0002B8  0E00               	movlw	0
  7629  0002BA  6E04               	movwf	i2SetPin595@pin+1,c
  7630  0002BC  0E02               	movlw	2
  7631  0002BE  6E03               	movwf	i2SetPin595@pin,c
  7632  0002C0  0E00               	movlw	0
  7633  0002C2  6E06               	movwf	i2SetPin595@value+1,c
  7634  0002C4  0E00               	movlw	0
  7635  0002C6  6E05               	movwf	i2SetPin595@value,c
  7636  0002C8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7637                           
  7638                           ;PDU.c: 90: Update();
  7639  0002CC  EC58  F00F         	call	i2_Update	;wreg free
  7640                           
  7641                           ;PDU.c: 91: CurrentADC[2] = ADC_GetConversion(U8Multisense);
  7642  0002D0  0E16               	movlw	22
  7643  0002D2  EC14  F00E         	call	_ADC_GetConversion
  7644  0002D6  C001  F0CE         	movff	?_ADC_GetConversion,_CurrentADC+4
  7645  0002DA  C002  F0CF         	movff	?_ADC_GetConversion+1,_CurrentADC+5
  7646                           
  7647                           ;PDU.c: 93: }
  7648  0002DE  0012               	return	
  7649  0002E0                     i2l3201:
  7650                           
  7651                           ;PDU.c: 94: else if(gather == 3){
  7652  0002E0  0E03               	movlw	3
  7653  0002E2  180E               	xorwf	ReadCurrent@gather,w,c
  7654  0002E4  A4D8               	btfss	status,2,c
  7655  0002E6  D088               	goto	i2l3207
  7656                           
  7657                           ;PDU.c: 96: SetPin595(1, 4, OFF);
  7658  0002E8  0E00               	movlw	0
  7659  0002EA  6E02               	movwf	i2SetPin595@Reg+1,c
  7660  0002EC  0E01               	movlw	1
  7661  0002EE  6E01               	movwf	i2SetPin595@Reg,c
  7662  0002F0  0E00               	movlw	0
  7663  0002F2  6E04               	movwf	i2SetPin595@pin+1,c
  7664  0002F4  0E04               	movlw	4
  7665  0002F6  6E03               	movwf	i2SetPin595@pin,c
  7666  0002F8  0E00               	movlw	0
  7667  0002FA  6E06               	movwf	i2SetPin595@value+1,c
  7668  0002FC  0E00               	movlw	0
  7669  0002FE  6E05               	movwf	i2SetPin595@value,c
  7670  000300  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7671                           
  7672                           ;PDU.c: 97: SetPin595(1, 3, OFF);
  7673  000304  0E00               	movlw	0
  7674  000306  6E02               	movwf	i2SetPin595@Reg+1,c
  7675  000308  0E01               	movlw	1
  7676  00030A  6E01               	movwf	i2SetPin595@Reg,c
  7677  00030C  0E00               	movlw	0
  7678  00030E  6E04               	movwf	i2SetPin595@pin+1,c
  7679  000310  0E03               	movlw	3
  7680  000312  6E03               	movwf	i2SetPin595@pin,c
  7681  000314  0E00               	movlw	0
  7682  000316  6E06               	movwf	i2SetPin595@value+1,c
  7683  000318  0E00               	movlw	0
  7684  00031A  6E05               	movwf	i2SetPin595@value,c
  7685  00031C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7686                           
  7687                           ;PDU.c: 98: SetPin595(1, 2, OFF);
  7688  000320  0E00               	movlw	0
  7689  000322  6E02               	movwf	i2SetPin595@Reg+1,c
  7690  000324  0E01               	movlw	1
  7691  000326  6E01               	movwf	i2SetPin595@Reg,c
  7692  000328  0E00               	movlw	0
  7693  00032A  6E04               	movwf	i2SetPin595@pin+1,c
  7694  00032C  0E02               	movlw	2
  7695  00032E  6E03               	movwf	i2SetPin595@pin,c
  7696  000330  0E00               	movlw	0
  7697  000332  6E06               	movwf	i2SetPin595@value+1,c
  7698  000334  0E00               	movlw	0
  7699  000336  6E05               	movwf	i2SetPin595@value,c
  7700  000338  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7701                           
  7702                           ;PDU.c: 99: SetPin595(2, 4, OFF);
  7703  00033C  0E00               	movlw	0
  7704  00033E  6E02               	movwf	i2SetPin595@Reg+1,c
  7705  000340  0E02               	movlw	2
  7706  000342  6E01               	movwf	i2SetPin595@Reg,c
  7707  000344  0E00               	movlw	0
  7708  000346  6E04               	movwf	i2SetPin595@pin+1,c
  7709  000348  0E04               	movlw	4
  7710  00034A  6E03               	movwf	i2SetPin595@pin,c
  7711  00034C  0E00               	movlw	0
  7712  00034E  6E06               	movwf	i2SetPin595@value+1,c
  7713  000350  0E00               	movlw	0
  7714  000352  6E05               	movwf	i2SetPin595@value,c
  7715  000354  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7716                           
  7717                           ;PDU.c: 100: SetPin595(2, 3, OFF);
  7718  000358  0E00               	movlw	0
  7719  00035A  6E02               	movwf	i2SetPin595@Reg+1,c
  7720  00035C  0E02               	movlw	2
  7721  00035E  6E01               	movwf	i2SetPin595@Reg,c
  7722  000360  0E00               	movlw	0
  7723  000362  6E04               	movwf	i2SetPin595@pin+1,c
  7724  000364  0E03               	movlw	3
  7725  000366  6E03               	movwf	i2SetPin595@pin,c
  7726  000368  0E00               	movlw	0
  7727  00036A  6E06               	movwf	i2SetPin595@value+1,c
  7728  00036C  0E00               	movlw	0
  7729  00036E  6E05               	movwf	i2SetPin595@value,c
  7730  000370  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7731                           
  7732                           ;PDU.c: 101: SetPin595(2, 2, OFF);
  7733  000374  0E00               	movlw	0
  7734  000376  6E02               	movwf	i2SetPin595@Reg+1,c
  7735  000378  0E02               	movlw	2
  7736  00037A  6E01               	movwf	i2SetPin595@Reg,c
  7737  00037C  0E00               	movlw	0
  7738  00037E  6E04               	movwf	i2SetPin595@pin+1,c
  7739  000380  0E02               	movlw	2
  7740  000382  6E03               	movwf	i2SetPin595@pin,c
  7741  000384  0E00               	movlw	0
  7742  000386  6E06               	movwf	i2SetPin595@value+1,c
  7743  000388  0E00               	movlw	0
  7744  00038A  6E05               	movwf	i2SetPin595@value,c
  7745  00038C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7746                           
  7747                           ;PDU.c: 102: SetPin595(3, 4, ON);
  7748  000390  0E00               	movlw	0
  7749  000392  6E02               	movwf	i2SetPin595@Reg+1,c
  7750  000394  0E03               	movlw	3
  7751  000396  6E01               	movwf	i2SetPin595@Reg,c
  7752  000398  0E00               	movlw	0
  7753  00039A  6E04               	movwf	i2SetPin595@pin+1,c
  7754  00039C  0E04               	movlw	4
  7755  00039E  6E03               	movwf	i2SetPin595@pin,c
  7756  0003A0  0E00               	movlw	0
  7757  0003A2  6E06               	movwf	i2SetPin595@value+1,c
  7758  0003A4  0E01               	movlw	1
  7759  0003A6  6E05               	movwf	i2SetPin595@value,c
  7760  0003A8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7761                           
  7762                           ;PDU.c: 103: SetPin595(3, 3, OFF);
  7763  0003AC  0E00               	movlw	0
  7764  0003AE  6E02               	movwf	i2SetPin595@Reg+1,c
  7765  0003B0  0E03               	movlw	3
  7766  0003B2  6E01               	movwf	i2SetPin595@Reg,c
  7767  0003B4  0E00               	movlw	0
  7768  0003B6  6E04               	movwf	i2SetPin595@pin+1,c
  7769  0003B8  0E03               	movlw	3
  7770  0003BA  6E03               	movwf	i2SetPin595@pin,c
  7771  0003BC  0E00               	movlw	0
  7772  0003BE  6E06               	movwf	i2SetPin595@value+1,c
  7773  0003C0  0E00               	movlw	0
  7774  0003C2  6E05               	movwf	i2SetPin595@value,c
  7775  0003C4  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7776                           
  7777                           ;PDU.c: 104: SetPin595(3, 2, OFF);
  7778  0003C8  0E00               	movlw	0
  7779  0003CA  6E02               	movwf	i2SetPin595@Reg+1,c
  7780  0003CC  0E03               	movlw	3
  7781  0003CE  6E01               	movwf	i2SetPin595@Reg,c
  7782  0003D0  0E00               	movlw	0
  7783  0003D2  6E04               	movwf	i2SetPin595@pin+1,c
  7784  0003D4  0E02               	movlw	2
  7785  0003D6  6E03               	movwf	i2SetPin595@pin,c
  7786  0003D8  0E00               	movlw	0
  7787  0003DA  6E06               	movwf	i2SetPin595@value+1,c
  7788  0003DC  0E00               	movlw	0
  7789  0003DE  6E05               	movwf	i2SetPin595@value,c
  7790  0003E0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7791                           
  7792                           ;PDU.c: 105: Update();
  7793  0003E4  EC58  F00F         	call	i2_Update	;wreg free
  7794                           
  7795                           ;PDU.c: 106: CurrentADC[1] = ADC_GetConversion(U5Multisense);
  7796  0003E8  0E10               	movlw	16
  7797  0003EA  EC14  F00E         	call	_ADC_GetConversion
  7798  0003EE  C001  F0CC         	movff	?_ADC_GetConversion,_CurrentADC+2
  7799  0003F2  C002  F0CD         	movff	?_ADC_GetConversion+1,_CurrentADC+3
  7800                           
  7801                           ;PDU.c: 108: }
  7802  0003F6  0012               	return	
  7803  0003F8                     i2l3207:
  7804                           
  7805                           ;PDU.c: 109: else if(gather == 4){
  7806  0003F8  0E04               	movlw	4
  7807  0003FA  180E               	xorwf	ReadCurrent@gather,w,c
  7808  0003FC  A4D8               	btfss	status,2,c
  7809  0003FE  D088               	goto	i2l3213
  7810                           
  7811                           ;PDU.c: 111: SetPin595(1, 4, ON);
  7812  000400  0E00               	movlw	0
  7813  000402  6E02               	movwf	i2SetPin595@Reg+1,c
  7814  000404  0E01               	movlw	1
  7815  000406  6E01               	movwf	i2SetPin595@Reg,c
  7816  000408  0E00               	movlw	0
  7817  00040A  6E04               	movwf	i2SetPin595@pin+1,c
  7818  00040C  0E04               	movlw	4
  7819  00040E  6E03               	movwf	i2SetPin595@pin,c
  7820  000410  0E00               	movlw	0
  7821  000412  6E06               	movwf	i2SetPin595@value+1,c
  7822  000414  0E01               	movlw	1
  7823  000416  6E05               	movwf	i2SetPin595@value,c
  7824  000418  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7825                           
  7826                           ;PDU.c: 112: SetPin595(1, 3, ON);
  7827  00041C  0E00               	movlw	0
  7828  00041E  6E02               	movwf	i2SetPin595@Reg+1,c
  7829  000420  0E01               	movlw	1
  7830  000422  6E01               	movwf	i2SetPin595@Reg,c
  7831  000424  0E00               	movlw	0
  7832  000426  6E04               	movwf	i2SetPin595@pin+1,c
  7833  000428  0E03               	movlw	3
  7834  00042A  6E03               	movwf	i2SetPin595@pin,c
  7835  00042C  0E00               	movlw	0
  7836  00042E  6E06               	movwf	i2SetPin595@value+1,c
  7837  000430  0E01               	movlw	1
  7838  000432  6E05               	movwf	i2SetPin595@value,c
  7839  000434  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7840                           
  7841                           ;PDU.c: 113: SetPin595(1, 2, OFF);
  7842  000438  0E00               	movlw	0
  7843  00043A  6E02               	movwf	i2SetPin595@Reg+1,c
  7844  00043C  0E01               	movlw	1
  7845  00043E  6E01               	movwf	i2SetPin595@Reg,c
  7846  000440  0E00               	movlw	0
  7847  000442  6E04               	movwf	i2SetPin595@pin+1,c
  7848  000444  0E02               	movlw	2
  7849  000446  6E03               	movwf	i2SetPin595@pin,c
  7850  000448  0E00               	movlw	0
  7851  00044A  6E06               	movwf	i2SetPin595@value+1,c
  7852  00044C  0E00               	movlw	0
  7853  00044E  6E05               	movwf	i2SetPin595@value,c
  7854  000450  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7855                           
  7856                           ;PDU.c: 114: SetPin595(2, 4, OFF);
  7857  000454  0E00               	movlw	0
  7858  000456  6E02               	movwf	i2SetPin595@Reg+1,c
  7859  000458  0E02               	movlw	2
  7860  00045A  6E01               	movwf	i2SetPin595@Reg,c
  7861  00045C  0E00               	movlw	0
  7862  00045E  6E04               	movwf	i2SetPin595@pin+1,c
  7863  000460  0E04               	movlw	4
  7864  000462  6E03               	movwf	i2SetPin595@pin,c
  7865  000464  0E00               	movlw	0
  7866  000466  6E06               	movwf	i2SetPin595@value+1,c
  7867  000468  0E00               	movlw	0
  7868  00046A  6E05               	movwf	i2SetPin595@value,c
  7869  00046C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7870                           
  7871                           ;PDU.c: 115: SetPin595(2, 3, OFF);
  7872  000470  0E00               	movlw	0
  7873  000472  6E02               	movwf	i2SetPin595@Reg+1,c
  7874  000474  0E02               	movlw	2
  7875  000476  6E01               	movwf	i2SetPin595@Reg,c
  7876  000478  0E00               	movlw	0
  7877  00047A  6E04               	movwf	i2SetPin595@pin+1,c
  7878  00047C  0E03               	movlw	3
  7879  00047E  6E03               	movwf	i2SetPin595@pin,c
  7880  000480  0E00               	movlw	0
  7881  000482  6E06               	movwf	i2SetPin595@value+1,c
  7882  000484  0E00               	movlw	0
  7883  000486  6E05               	movwf	i2SetPin595@value,c
  7884  000488  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7885                           
  7886                           ;PDU.c: 116: SetPin595(2, 2, OFF);
  7887  00048C  0E00               	movlw	0
  7888  00048E  6E02               	movwf	i2SetPin595@Reg+1,c
  7889  000490  0E02               	movlw	2
  7890  000492  6E01               	movwf	i2SetPin595@Reg,c
  7891  000494  0E00               	movlw	0
  7892  000496  6E04               	movwf	i2SetPin595@pin+1,c
  7893  000498  0E02               	movlw	2
  7894  00049A  6E03               	movwf	i2SetPin595@pin,c
  7895  00049C  0E00               	movlw	0
  7896  00049E  6E06               	movwf	i2SetPin595@value+1,c
  7897  0004A0  0E00               	movlw	0
  7898  0004A2  6E05               	movwf	i2SetPin595@value,c
  7899  0004A4  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7900                           
  7901                           ;PDU.c: 117: SetPin595(3, 4, OFF);
  7902  0004A8  0E00               	movlw	0
  7903  0004AA  6E02               	movwf	i2SetPin595@Reg+1,c
  7904  0004AC  0E03               	movlw	3
  7905  0004AE  6E01               	movwf	i2SetPin595@Reg,c
  7906  0004B0  0E00               	movlw	0
  7907  0004B2  6E04               	movwf	i2SetPin595@pin+1,c
  7908  0004B4  0E04               	movlw	4
  7909  0004B6  6E03               	movwf	i2SetPin595@pin,c
  7910  0004B8  0E00               	movlw	0
  7911  0004BA  6E06               	movwf	i2SetPin595@value+1,c
  7912  0004BC  0E00               	movlw	0
  7913  0004BE  6E05               	movwf	i2SetPin595@value,c
  7914  0004C0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7915                           
  7916                           ;PDU.c: 118: SetPin595(3, 3, OFF);
  7917  0004C4  0E00               	movlw	0
  7918  0004C6  6E02               	movwf	i2SetPin595@Reg+1,c
  7919  0004C8  0E03               	movlw	3
  7920  0004CA  6E01               	movwf	i2SetPin595@Reg,c
  7921  0004CC  0E00               	movlw	0
  7922  0004CE  6E04               	movwf	i2SetPin595@pin+1,c
  7923  0004D0  0E03               	movlw	3
  7924  0004D2  6E03               	movwf	i2SetPin595@pin,c
  7925  0004D4  0E00               	movlw	0
  7926  0004D6  6E06               	movwf	i2SetPin595@value+1,c
  7927  0004D8  0E00               	movlw	0
  7928  0004DA  6E05               	movwf	i2SetPin595@value,c
  7929  0004DC  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7930                           
  7931                           ;PDU.c: 119: SetPin595(3, 2, OFF);
  7932  0004E0  0E00               	movlw	0
  7933  0004E2  6E02               	movwf	i2SetPin595@Reg+1,c
  7934  0004E4  0E03               	movlw	3
  7935  0004E6  6E01               	movwf	i2SetPin595@Reg,c
  7936  0004E8  0E00               	movlw	0
  7937  0004EA  6E04               	movwf	i2SetPin595@pin+1,c
  7938  0004EC  0E02               	movlw	2
  7939  0004EE  6E03               	movwf	i2SetPin595@pin,c
  7940  0004F0  0E00               	movlw	0
  7941  0004F2  6E06               	movwf	i2SetPin595@value+1,c
  7942  0004F4  0E00               	movlw	0
  7943  0004F6  6E05               	movwf	i2SetPin595@value,c
  7944  0004F8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7945                           
  7946                           ;PDU.c: 120: Update();
  7947  0004FC  EC58  F00F         	call	i2_Update	;wreg free
  7948                           
  7949                           ;PDU.c: 121: CurrentADC[4] = ADC_GetConversion(U10Multisense);
  7950  000500  0E17               	movlw	23
  7951  000502  EC14  F00E         	call	_ADC_GetConversion
  7952  000506  C001  F0D2         	movff	?_ADC_GetConversion,_CurrentADC+8
  7953  00050A  C002  F0D3         	movff	?_ADC_GetConversion+1,_CurrentADC+9
  7954                           
  7955                           ;PDU.c: 123: }
  7956  00050E  0012               	return	
  7957  000510                     i2l3213:
  7958                           
  7959                           ;PDU.c: 124: else if(gather == 5){
  7960  000510  0E05               	movlw	5
  7961  000512  180E               	xorwf	ReadCurrent@gather,w,c
  7962  000514  A4D8               	btfss	status,2,c
  7963  000516  D088               	goto	i2l3219
  7964                           
  7965                           ;PDU.c: 126: SetPin595(1, 4, OFF);
  7966  000518  0E00               	movlw	0
  7967  00051A  6E02               	movwf	i2SetPin595@Reg+1,c
  7968  00051C  0E01               	movlw	1
  7969  00051E  6E01               	movwf	i2SetPin595@Reg,c
  7970  000520  0E00               	movlw	0
  7971  000522  6E04               	movwf	i2SetPin595@pin+1,c
  7972  000524  0E04               	movlw	4
  7973  000526  6E03               	movwf	i2SetPin595@pin,c
  7974  000528  0E00               	movlw	0
  7975  00052A  6E06               	movwf	i2SetPin595@value+1,c
  7976  00052C  0E00               	movlw	0
  7977  00052E  6E05               	movwf	i2SetPin595@value,c
  7978  000530  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7979                           
  7980                           ;PDU.c: 127: SetPin595(1, 3, OFF);
  7981  000534  0E00               	movlw	0
  7982  000536  6E02               	movwf	i2SetPin595@Reg+1,c
  7983  000538  0E01               	movlw	1
  7984  00053A  6E01               	movwf	i2SetPin595@Reg,c
  7985  00053C  0E00               	movlw	0
  7986  00053E  6E04               	movwf	i2SetPin595@pin+1,c
  7987  000540  0E03               	movlw	3
  7988  000542  6E03               	movwf	i2SetPin595@pin,c
  7989  000544  0E00               	movlw	0
  7990  000546  6E06               	movwf	i2SetPin595@value+1,c
  7991  000548  0E00               	movlw	0
  7992  00054A  6E05               	movwf	i2SetPin595@value,c
  7993  00054C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  7994                           
  7995                           ;PDU.c: 128: SetPin595(1, 2, OFF);
  7996  000550  0E00               	movlw	0
  7997  000552  6E02               	movwf	i2SetPin595@Reg+1,c
  7998  000554  0E01               	movlw	1
  7999  000556  6E01               	movwf	i2SetPin595@Reg,c
  8000  000558  0E00               	movlw	0
  8001  00055A  6E04               	movwf	i2SetPin595@pin+1,c
  8002  00055C  0E02               	movlw	2
  8003  00055E  6E03               	movwf	i2SetPin595@pin,c
  8004  000560  0E00               	movlw	0
  8005  000562  6E06               	movwf	i2SetPin595@value+1,c
  8006  000564  0E00               	movlw	0
  8007  000566  6E05               	movwf	i2SetPin595@value,c
  8008  000568  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8009                           
  8010                           ;PDU.c: 129: SetPin595(2, 4, ON);
  8011  00056C  0E00               	movlw	0
  8012  00056E  6E02               	movwf	i2SetPin595@Reg+1,c
  8013  000570  0E02               	movlw	2
  8014  000572  6E01               	movwf	i2SetPin595@Reg,c
  8015  000574  0E00               	movlw	0
  8016  000576  6E04               	movwf	i2SetPin595@pin+1,c
  8017  000578  0E04               	movlw	4
  8018  00057A  6E03               	movwf	i2SetPin595@pin,c
  8019  00057C  0E00               	movlw	0
  8020  00057E  6E06               	movwf	i2SetPin595@value+1,c
  8021  000580  0E01               	movlw	1
  8022  000582  6E05               	movwf	i2SetPin595@value,c
  8023  000584  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8024                           
  8025                           ;PDU.c: 130: SetPin595(2, 3, OFF);
  8026  000588  0E00               	movlw	0
  8027  00058A  6E02               	movwf	i2SetPin595@Reg+1,c
  8028  00058C  0E02               	movlw	2
  8029  00058E  6E01               	movwf	i2SetPin595@Reg,c
  8030  000590  0E00               	movlw	0
  8031  000592  6E04               	movwf	i2SetPin595@pin+1,c
  8032  000594  0E03               	movlw	3
  8033  000596  6E03               	movwf	i2SetPin595@pin,c
  8034  000598  0E00               	movlw	0
  8035  00059A  6E06               	movwf	i2SetPin595@value+1,c
  8036  00059C  0E00               	movlw	0
  8037  00059E  6E05               	movwf	i2SetPin595@value,c
  8038  0005A0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8039                           
  8040                           ;PDU.c: 131: SetPin595(2, 2, OFF);
  8041  0005A4  0E00               	movlw	0
  8042  0005A6  6E02               	movwf	i2SetPin595@Reg+1,c
  8043  0005A8  0E02               	movlw	2
  8044  0005AA  6E01               	movwf	i2SetPin595@Reg,c
  8045  0005AC  0E00               	movlw	0
  8046  0005AE  6E04               	movwf	i2SetPin595@pin+1,c
  8047  0005B0  0E02               	movlw	2
  8048  0005B2  6E03               	movwf	i2SetPin595@pin,c
  8049  0005B4  0E00               	movlw	0
  8050  0005B6  6E06               	movwf	i2SetPin595@value+1,c
  8051  0005B8  0E00               	movlw	0
  8052  0005BA  6E05               	movwf	i2SetPin595@value,c
  8053  0005BC  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8054                           
  8055                           ;PDU.c: 132: SetPin595(3, 4, OFF);
  8056  0005C0  0E00               	movlw	0
  8057  0005C2  6E02               	movwf	i2SetPin595@Reg+1,c
  8058  0005C4  0E03               	movlw	3
  8059  0005C6  6E01               	movwf	i2SetPin595@Reg,c
  8060  0005C8  0E00               	movlw	0
  8061  0005CA  6E04               	movwf	i2SetPin595@pin+1,c
  8062  0005CC  0E04               	movlw	4
  8063  0005CE  6E03               	movwf	i2SetPin595@pin,c
  8064  0005D0  0E00               	movlw	0
  8065  0005D2  6E06               	movwf	i2SetPin595@value+1,c
  8066  0005D4  0E00               	movlw	0
  8067  0005D6  6E05               	movwf	i2SetPin595@value,c
  8068  0005D8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8069                           
  8070                           ;PDU.c: 133: SetPin595(3, 3, OFF);
  8071  0005DC  0E00               	movlw	0
  8072  0005DE  6E02               	movwf	i2SetPin595@Reg+1,c
  8073  0005E0  0E03               	movlw	3
  8074  0005E2  6E01               	movwf	i2SetPin595@Reg,c
  8075  0005E4  0E00               	movlw	0
  8076  0005E6  6E04               	movwf	i2SetPin595@pin+1,c
  8077  0005E8  0E03               	movlw	3
  8078  0005EA  6E03               	movwf	i2SetPin595@pin,c
  8079  0005EC  0E00               	movlw	0
  8080  0005EE  6E06               	movwf	i2SetPin595@value+1,c
  8081  0005F0  0E00               	movlw	0
  8082  0005F2  6E05               	movwf	i2SetPin595@value,c
  8083  0005F4  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8084                           
  8085                           ;PDU.c: 134: SetPin595(3, 2, OFF);
  8086  0005F8  0E00               	movlw	0
  8087  0005FA  6E02               	movwf	i2SetPin595@Reg+1,c
  8088  0005FC  0E03               	movlw	3
  8089  0005FE  6E01               	movwf	i2SetPin595@Reg,c
  8090  000600  0E00               	movlw	0
  8091  000602  6E04               	movwf	i2SetPin595@pin+1,c
  8092  000604  0E02               	movlw	2
  8093  000606  6E03               	movwf	i2SetPin595@pin,c
  8094  000608  0E00               	movlw	0
  8095  00060A  6E06               	movwf	i2SetPin595@value+1,c
  8096  00060C  0E00               	movlw	0
  8097  00060E  6E05               	movwf	i2SetPin595@value,c
  8098  000610  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8099                           
  8100                           ;PDU.c: 135: Update();
  8101  000614  EC58  F00F         	call	i2_Update	;wreg free
  8102                           
  8103                           ;PDU.c: 136: CurrentADC[3] = ADC_GetConversion(U8Multisense);
  8104  000618  0E16               	movlw	22
  8105  00061A  EC14  F00E         	call	_ADC_GetConversion
  8106  00061E  C001  F0D0         	movff	?_ADC_GetConversion,_CurrentADC+6
  8107  000622  C002  F0D1         	movff	?_ADC_GetConversion+1,_CurrentADC+7
  8108                           
  8109                           ;PDU.c: 138: }
  8110  000626  0012               	return	
  8111  000628                     i2l3219:
  8112                           
  8113                           ;PDU.c: 139: else if(gather == 6){
  8114  000628  0E06               	movlw	6
  8115  00062A  180E               	xorwf	ReadCurrent@gather,w,c
  8116  00062C  A4D8               	btfss	status,2,c
  8117  00062E  0012               	return	
  8118                           
  8119                           ;PDU.c: 141: SetPin595(1, 4, OFF);
  8120  000630  0E00               	movlw	0
  8121  000632  6E02               	movwf	i2SetPin595@Reg+1,c
  8122  000634  0E01               	movlw	1
  8123  000636  6E01               	movwf	i2SetPin595@Reg,c
  8124  000638  0E00               	movlw	0
  8125  00063A  6E04               	movwf	i2SetPin595@pin+1,c
  8126  00063C  0E04               	movlw	4
  8127  00063E  6E03               	movwf	i2SetPin595@pin,c
  8128  000640  0E00               	movlw	0
  8129  000642  6E06               	movwf	i2SetPin595@value+1,c
  8130  000644  0E00               	movlw	0
  8131  000646  6E05               	movwf	i2SetPin595@value,c
  8132  000648  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8133                           
  8134                           ;PDU.c: 142: SetPin595(1, 3, OFF);
  8135  00064C  0E00               	movlw	0
  8136  00064E  6E02               	movwf	i2SetPin595@Reg+1,c
  8137  000650  0E01               	movlw	1
  8138  000652  6E01               	movwf	i2SetPin595@Reg,c
  8139  000654  0E00               	movlw	0
  8140  000656  6E04               	movwf	i2SetPin595@pin+1,c
  8141  000658  0E03               	movlw	3
  8142  00065A  6E03               	movwf	i2SetPin595@pin,c
  8143  00065C  0E00               	movlw	0
  8144  00065E  6E06               	movwf	i2SetPin595@value+1,c
  8145  000660  0E00               	movlw	0
  8146  000662  6E05               	movwf	i2SetPin595@value,c
  8147  000664  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8148                           
  8149                           ;PDU.c: 143: SetPin595(1, 2, OFF);
  8150  000668  0E00               	movlw	0
  8151  00066A  6E02               	movwf	i2SetPin595@Reg+1,c
  8152  00066C  0E01               	movlw	1
  8153  00066E  6E01               	movwf	i2SetPin595@Reg,c
  8154  000670  0E00               	movlw	0
  8155  000672  6E04               	movwf	i2SetPin595@pin+1,c
  8156  000674  0E02               	movlw	2
  8157  000676  6E03               	movwf	i2SetPin595@pin,c
  8158  000678  0E00               	movlw	0
  8159  00067A  6E06               	movwf	i2SetPin595@value+1,c
  8160  00067C  0E00               	movlw	0
  8161  00067E  6E05               	movwf	i2SetPin595@value,c
  8162  000680  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8163                           
  8164                           ;PDU.c: 144: SetPin595(2, 4, OFF);
  8165  000684  0E00               	movlw	0
  8166  000686  6E02               	movwf	i2SetPin595@Reg+1,c
  8167  000688  0E02               	movlw	2
  8168  00068A  6E01               	movwf	i2SetPin595@Reg,c
  8169  00068C  0E00               	movlw	0
  8170  00068E  6E04               	movwf	i2SetPin595@pin+1,c
  8171  000690  0E04               	movlw	4
  8172  000692  6E03               	movwf	i2SetPin595@pin,c
  8173  000694  0E00               	movlw	0
  8174  000696  6E06               	movwf	i2SetPin595@value+1,c
  8175  000698  0E00               	movlw	0
  8176  00069A  6E05               	movwf	i2SetPin595@value,c
  8177  00069C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8178                           
  8179                           ;PDU.c: 145: SetPin595(2, 3, OFF);
  8180  0006A0  0E00               	movlw	0
  8181  0006A2  6E02               	movwf	i2SetPin595@Reg+1,c
  8182  0006A4  0E02               	movlw	2
  8183  0006A6  6E01               	movwf	i2SetPin595@Reg,c
  8184  0006A8  0E00               	movlw	0
  8185  0006AA  6E04               	movwf	i2SetPin595@pin+1,c
  8186  0006AC  0E03               	movlw	3
  8187  0006AE  6E03               	movwf	i2SetPin595@pin,c
  8188  0006B0  0E00               	movlw	0
  8189  0006B2  6E06               	movwf	i2SetPin595@value+1,c
  8190  0006B4  0E00               	movlw	0
  8191  0006B6  6E05               	movwf	i2SetPin595@value,c
  8192  0006B8  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8193                           
  8194                           ;PDU.c: 146: SetPin595(2, 2, OFF);
  8195  0006BC  0E00               	movlw	0
  8196  0006BE  6E02               	movwf	i2SetPin595@Reg+1,c
  8197  0006C0  0E02               	movlw	2
  8198  0006C2  6E01               	movwf	i2SetPin595@Reg,c
  8199  0006C4  0E00               	movlw	0
  8200  0006C6  6E04               	movwf	i2SetPin595@pin+1,c
  8201  0006C8  0E02               	movlw	2
  8202  0006CA  6E03               	movwf	i2SetPin595@pin,c
  8203  0006CC  0E00               	movlw	0
  8204  0006CE  6E06               	movwf	i2SetPin595@value+1,c
  8205  0006D0  0E00               	movlw	0
  8206  0006D2  6E05               	movwf	i2SetPin595@value,c
  8207  0006D4  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8208                           
  8209                           ;PDU.c: 147: SetPin595(3, 4, ON);
  8210  0006D8  0E00               	movlw	0
  8211  0006DA  6E02               	movwf	i2SetPin595@Reg+1,c
  8212  0006DC  0E03               	movlw	3
  8213  0006DE  6E01               	movwf	i2SetPin595@Reg,c
  8214  0006E0  0E00               	movlw	0
  8215  0006E2  6E04               	movwf	i2SetPin595@pin+1,c
  8216  0006E4  0E04               	movlw	4
  8217  0006E6  6E03               	movwf	i2SetPin595@pin,c
  8218  0006E8  0E00               	movlw	0
  8219  0006EA  6E06               	movwf	i2SetPin595@value+1,c
  8220  0006EC  0E01               	movlw	1
  8221  0006EE  6E05               	movwf	i2SetPin595@value,c
  8222  0006F0  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8223                           
  8224                           ;PDU.c: 148: SetPin595(3, 3, ON);
  8225  0006F4  0E00               	movlw	0
  8226  0006F6  6E02               	movwf	i2SetPin595@Reg+1,c
  8227  0006F8  0E03               	movlw	3
  8228  0006FA  6E01               	movwf	i2SetPin595@Reg,c
  8229  0006FC  0E00               	movlw	0
  8230  0006FE  6E04               	movwf	i2SetPin595@pin+1,c
  8231  000700  0E03               	movlw	3
  8232  000702  6E03               	movwf	i2SetPin595@pin,c
  8233  000704  0E00               	movlw	0
  8234  000706  6E06               	movwf	i2SetPin595@value+1,c
  8235  000708  0E01               	movlw	1
  8236  00070A  6E05               	movwf	i2SetPin595@value,c
  8237  00070C  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8238                           
  8239                           ;PDU.c: 149: SetPin595(3, 2, OFF);
  8240  000710  0E00               	movlw	0
  8241  000712  6E02               	movwf	i2SetPin595@Reg+1,c
  8242  000714  0E03               	movlw	3
  8243  000716  6E01               	movwf	i2SetPin595@Reg,c
  8244  000718  0E00               	movlw	0
  8245  00071A  6E04               	movwf	i2SetPin595@pin+1,c
  8246  00071C  0E02               	movlw	2
  8247  00071E  6E03               	movwf	i2SetPin595@pin,c
  8248  000720  0E00               	movlw	0
  8249  000722  6E06               	movwf	i2SetPin595@value+1,c
  8250  000724  0E00               	movlw	0
  8251  000726  6E05               	movwf	i2SetPin595@value,c
  8252  000728  ECE1  F00C         	call	i2_SetPin595	;wreg free
  8253                           
  8254                           ;PDU.c: 150: Update();
  8255  00072C  EC58  F00F         	call	i2_Update	;wreg free
  8256                           
  8257                           ;PDU.c: 151: CurrentADC[0] = ADC_GetConversion(U5Multisense);
  8258  000730  0E10               	movlw	16
  8259  000732  EC14  F00E         	call	_ADC_GetConversion
  8260  000736  C001  F0CA         	movff	?_ADC_GetConversion,_CurrentADC
  8261  00073A  C002  F0CB         	movff	?_ADC_GetConversion+1,_CurrentADC+1
  8262  00073E  0012               	return	
  8263  000740                     __end_of_ReadCurrent:
  8264                           	opt stack 0
  8265                           pclatu	equ	0xFFB
  8266                           pclath	equ	0xFFA
  8267                           tblptru	equ	0xFF8
  8268                           tblptrh	equ	0xFF7
  8269                           tblptrl	equ	0xFF6
  8270                           tablat	equ	0xFF5
  8271                           prodh	equ	0xFF4
  8272                           prodl	equ	0xFF3
  8273                           intcon	equ	0xFF2
  8274                           intcon2	equ	0xFF1
  8275                           postinc0	equ	0xFEE
  8276                           fsr0h	equ	0xFEA
  8277                           fsr0l	equ	0xFE9
  8278                           wreg	equ	0xFE8
  8279                           indf1	equ	0xFE7
  8280                           postdec1	equ	0xFE5
  8281                           fsr1h	equ	0xFE2
  8282                           fsr1l	equ	0xFE1
  8283                           indf2	equ	0xFDF
  8284                           postinc2	equ	0xFDE
  8285                           postdec2	equ	0xFDD
  8286                           plusw2	equ	0xFDB
  8287                           fsr2h	equ	0xFDA
  8288                           fsr2l	equ	0xFD9
  8289                           status	equ	0xFD8
  8290                           
  8291 ;; *************** function i2_Update *****************
  8292 ;; Defined at:
  8293 ;;		line 225 in file "PDU.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;		None
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8307 ;;      Params:         0       0       0       0       0       0       0
  8308 ;;      Locals:         0       0       0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0       0       0
  8310 ;;      Totals:         0       0       0       0       0       0       0
  8311 ;;Total ram usage:        0 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    2
  8314 ;; This function calls:
  8315 ;;		i2_writeRegisters
  8316 ;; This function is called by:
  8317 ;;		_ReadCurrent
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text49
  8322  001EB0                     __ptext49:
  8323                           	opt stack 0
  8324  001EB0                     i2_Update:
  8325                           	opt stack 18
  8326                           
  8327                           ;PDU.c: 226: writeRegisters();
  8328                           
  8329                           ;incstack = 0
  8330  001EB0  EC68  F00B         	call	i2_writeRegisters	;wreg free
  8331  001EB4  0012               	return		;funcret
  8332  001EB6                     __end_ofi2_Update:
  8333                           	opt stack 0
  8334                           pclatu	equ	0xFFB
  8335                           pclath	equ	0xFFA
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           intcon2	equ	0xFF1
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           indf1	equ	0xFE7
  8349                           postdec1	equ	0xFE5
  8350                           fsr1h	equ	0xFE2
  8351                           fsr1l	equ	0xFE1
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           plusw2	equ	0xFDB
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           
  8360 ;; *************** function i2_writeRegisters *****************
  8361 ;; Defined at:
  8362 ;;		line 50 in file "Shift595.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  writeRegiste    2   11[COMRAM] int 
  8367 ;;  writeRegiste    2    9[COMRAM] int 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8377 ;;      Params:         0       0       0       0       0       0       0
  8378 ;;      Locals:         4       0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0
  8380 ;;      Totals:         4       0       0       0       0       0       0
  8381 ;;Total ram usage:        4 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    1
  8384 ;; This function calls:
  8385 ;;		i2_Delay
  8386 ;; This function is called by:
  8387 ;;		i2_Update
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text50
  8392  0016D0                     __ptext50:
  8393                           	opt stack 0
  8394  0016D0                     i2_writeRegisters:
  8395                           	opt stack 18
  8396                           
  8397                           ;Shift595.c: 51: int val = 0;
  8398                           
  8399                           ;incstack = 0
  8400  0016D0  0E00               	movlw	0
  8401  0016D2  6E0B               	movwf	i2writeRegisters@val+1,c
  8402  0016D4  0E00               	movlw	0
  8403  0016D6  6E0A               	movwf	i2writeRegisters@val,c
  8404                           
  8405                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  8406  0016D8  0E00               	movlw	0
  8407  0016DA  6E0D               	movwf	i2writeRegisters@i+1,c
  8408  0016DC  0E17               	movlw	23
  8409  0016DE  6E0C               	movwf	i2writeRegisters@i,c
  8410  0016E0                     i2l2907:
  8411  0016E0  BE0D               	btfsc	i2writeRegisters@i+1,7,c
  8412  0016E2  D01D               	goto	i2l538
  8413                           
  8414                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  8415  0016E4  9E8C               	bcf	3980,7,c	;volatile
  8416                           
  8417                           ;Shift595.c: 55: val = registers[i];
  8418  0016E6  90D8               	bcf	status,0,c
  8419  0016E8  340C               	rlcf	i2writeRegisters@i,w,c
  8420  0016EA  6ED9               	movwf	fsr2l,c
  8421  0016EC  340D               	rlcf	i2writeRegisters@i+1,w,c
  8422  0016EE  6EDA               	movwf	fsr2h,c
  8423  0016F0  0E00               	movlw	low _registers
  8424  0016F2  26D9               	addwf	fsr2l,f,c
  8425  0016F4  0E01               	movlw	high _registers
  8426  0016F6  22DA               	addwfc	fsr2h,f,c
  8427  0016F8  CFDE F00A          	movff	postinc2,i2writeRegisters@val
  8428  0016FC  CFDD F00B          	movff	postdec2,i2writeRegisters@val+1
  8429                           
  8430                           ;Shift595.c: 56: if (val == 1) {
  8431  001700  040A               	decf	i2writeRegisters@val,w,c
  8432  001702  100B               	iorwf	i2writeRegisters@val+1,w,c
  8433  001704  A4D8               	btfss	status,2,c
  8434  001706  D002               	goto	i2l2915
  8435                           
  8436                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  8437  001708  888C               	bsf	3980,4,c	;volatile
  8438                           
  8439                           ;Shift595.c: 58: } else if (val == 0) {
  8440  00170A  D004               	goto	i2l536
  8441  00170C                     i2l2915:
  8442  00170C  500A               	movf	i2writeRegisters@val,w,c
  8443  00170E  100B               	iorwf	i2writeRegisters@val+1,w,c
  8444  001710  B4D8               	btfsc	status,2,c
  8445                           
  8446                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  8447  001712  988C               	bcf	3980,4,c	;volatile
  8448  001714                     i2l536:
  8449  001714  8E8C               	bsf	3980,7,c	;volatile
  8450  001716  060C               	decf	i2writeRegisters@i,f,c
  8451  001718  A0D8               	btfss	status,0,c
  8452  00171A  060D               	decf	i2writeRegisters@i+1,f,c
  8453  00171C  D7E1               	goto	i2l2907
  8454  00171E                     i2l538:
  8455  00171E  9E8C               	bcf	3980,7,c	;volatile
  8456                           
  8457                           ;Shift595.c: 67: Delay(1);
  8458  001720  0E01               	movlw	1
  8459  001722  6E01               	movwf	i2Delay@wait,c
  8460  001724  0E00               	movlw	0
  8461  001726  6E02               	movwf	i2Delay@wait+1,c
  8462  001728  0E00               	movlw	0
  8463  00172A  6E03               	movwf	i2Delay@wait+2,c
  8464  00172C  0E00               	movlw	0
  8465  00172E  6E04               	movwf	i2Delay@wait+3,c
  8466  001730  EC52  F00D         	call	i2_Delay	;wreg free
  8467                           
  8468                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  8469  001734  8C8C               	bsf	3980,6,c	;volatile
  8470                           
  8471                           ;Shift595.c: 69: Delay(1);
  8472  001736  0E01               	movlw	1
  8473  001738  6E01               	movwf	i2Delay@wait,c
  8474  00173A  0E00               	movlw	0
  8475  00173C  6E02               	movwf	i2Delay@wait+1,c
  8476  00173E  0E00               	movlw	0
  8477  001740  6E03               	movwf	i2Delay@wait+2,c
  8478  001742  0E00               	movlw	0
  8479  001744  6E04               	movwf	i2Delay@wait+3,c
  8480  001746  EC52  F00D         	call	i2_Delay	;wreg free
  8481                           
  8482                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  8483  00174A  9C8C               	bcf	3980,6,c	;volatile
  8484  00174C  0012               	return	
  8485  00174E                     __end_ofi2_writeRegisters:
  8486                           	opt stack 0
  8487                           pclatu	equ	0xFFB
  8488                           pclath	equ	0xFFA
  8489                           tblptru	equ	0xFF8
  8490                           tblptrh	equ	0xFF7
  8491                           tblptrl	equ	0xFF6
  8492                           tablat	equ	0xFF5
  8493                           prodh	equ	0xFF4
  8494                           prodl	equ	0xFF3
  8495                           intcon	equ	0xFF2
  8496                           intcon2	equ	0xFF1
  8497                           postinc0	equ	0xFEE
  8498                           fsr0h	equ	0xFEA
  8499                           fsr0l	equ	0xFE9
  8500                           wreg	equ	0xFE8
  8501                           indf1	equ	0xFE7
  8502                           postdec1	equ	0xFE5
  8503                           fsr1h	equ	0xFE2
  8504                           fsr1l	equ	0xFE1
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           postdec2	equ	0xFDD
  8508                           plusw2	equ	0xFDB
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function i2_Delay *****************
  8514 ;; Defined at:
  8515 ;;		line 9 in file "Functions.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  wait            4    0[COMRAM] long 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  Delay           4    5[COMRAM] long 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8529 ;;      Params:         4       0       0       0       0       0       0
  8530 ;;      Locals:         4       0       0       0       0       0       0
  8531 ;;      Temps:          1       0       0       0       0       0       0
  8532 ;;      Totals:         9       0       0       0       0       0       0
  8533 ;;Total ram usage:        9 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		i2_writeRegisters
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text51
  8543  001AA4                     __ptext51:
  8544                           	opt stack 0
  8545  001AA4                     i2_Delay:
  8546                           	opt stack 18
  8547                           
  8548                           ;Functions.c: 10: long int i = 0;
  8549                           
  8550                           ;incstack = 0
  8551  001AA4  0E00               	movlw	0
  8552  001AA6  6E06               	movwf	i2Delay@i,c
  8553  001AA8  0E00               	movlw	0
  8554  001AAA  6E07               	movwf	i2Delay@i+1,c
  8555  001AAC  0E00               	movlw	0
  8556  001AAE  6E08               	movwf	i2Delay@i+2,c
  8557  001AB0  0E00               	movlw	0
  8558  001AB2  6E09               	movwf	i2Delay@i+3,c
  8559                           
  8560                           ;Functions.c: 11: for (; wait > i; i++) {
  8561  001AB4  D00D               	goto	i2l2805
  8562  001AB6                     i2l2801:
  8563                           
  8564                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  8565  001AB6  0E03               	movlw	3
  8566  001AB8  6E05               	movwf	??i2_Delay& (0+255),c
  8567  001ABA  0E98               	movlw	152
  8568  001ABC                     i2u278_47:
  8569  001ABC  2EE8               	decfsz	wreg,f,c
  8570  001ABE  D7FE               	bra	i2u278_47
  8571  001AC0  2E05               	decfsz	??i2_Delay& (0+255),f,c
  8572  001AC2  D7FC               	bra	i2u278_47
  8573  001AC4  0E01               	movlw	1
  8574  001AC6  2606               	addwf	i2Delay@i,f,c
  8575  001AC8  0E00               	movlw	0
  8576  001ACA  2207               	addwfc	i2Delay@i+1,f,c
  8577  001ACC  2208               	addwfc	i2Delay@i+2,f,c
  8578  001ACE  2209               	addwfc	i2Delay@i+3,f,c
  8579  001AD0                     i2l2805:
  8580  001AD0  5001               	movf	i2Delay@wait,w,c
  8581  001AD2  5C06               	subwf	i2Delay@i,w,c
  8582  001AD4  5002               	movf	i2Delay@wait+1,w,c
  8583  001AD6  5807               	subwfb	i2Delay@i+1,w,c
  8584  001AD8  5003               	movf	i2Delay@wait+2,w,c
  8585  001ADA  5808               	subwfb	i2Delay@i+2,w,c
  8586  001ADC  5009               	movf	i2Delay@i+3,w,c
  8587  001ADE  0A80               	xorlw	128
  8588  001AE0  6E05               	movwf	??i2_Delay& (0+255),c
  8589  001AE2  5004               	movf	i2Delay@wait+3,w,c
  8590  001AE4  0A80               	xorlw	128
  8591  001AE6  5805               	subwfb	??i2_Delay& (0+255),w,c
  8592  001AE8  B0D8               	btfsc	status,0,c
  8593  001AEA  0012               	return	
  8594  001AEC  D7E4               	goto	i2l2801
  8595  001AEE                     __end_ofi2_Delay:
  8596                           	opt stack 0
  8597                           pclatu	equ	0xFFB
  8598                           pclath	equ	0xFFA
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           intcon	equ	0xFF2
  8606                           intcon2	equ	0xFF1
  8607                           postinc0	equ	0xFEE
  8608                           fsr0h	equ	0xFEA
  8609                           fsr0l	equ	0xFE9
  8610                           wreg	equ	0xFE8
  8611                           indf1	equ	0xFE7
  8612                           postdec1	equ	0xFE5
  8613                           fsr1h	equ	0xFE2
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           plusw2	equ	0xFDB
  8619                           fsr2h	equ	0xFDA
  8620                           fsr2l	equ	0xFD9
  8621                           status	equ	0xFD8
  8622                           
  8623 ;; *************** function i2_SetPin595 *****************
  8624 ;; Defined at:
  8625 ;;		line 32 in file "Shift595.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  Reg             2    0[COMRAM] int 
  8628 ;;  pin             2    2[COMRAM] int 
  8629 ;;  value           2    4[COMRAM] int 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8641 ;;      Params:         6       0       0       0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0
  8643 ;;      Temps:          4       0       0       0       0       0       0
  8644 ;;      Totals:        10       0       0       0       0       0       0
  8645 ;;Total ram usage:       10 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_ReadCurrent
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text52
  8655  0019C2                     __ptext52:
  8656                           	opt stack 0
  8657  0019C2                     i2_SetPin595:
  8658                           	opt stack 20
  8659                           
  8660                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  8661                           
  8662                           ;incstack = 0
  8663  0019C2  0EF0               	movlw	240
  8664  0019C4  6E07               	movwf	??i2_SetPin595& (0+255),c
  8665  0019C6  0EFF               	movlw	255
  8666  0019C8  6E08               	movwf	(??i2_SetPin595+1)& (0+255),c
  8667  0019CA  C001  F009         	movff	i2SetPin595@Reg,??i2_SetPin595+2
  8668  0019CE  C002  F00A         	movff	i2SetPin595@Reg+1,??i2_SetPin595+3
  8669  0019D2  90D8               	bcf	status,0,c
  8670  0019D4  3609               	rlcf	??i2_SetPin595+2,f,c
  8671  0019D6  360A               	rlcf	??i2_SetPin595+3,f,c
  8672  0019D8  90D8               	bcf	status,0,c
  8673  0019DA  3609               	rlcf	??i2_SetPin595+2,f,c
  8674  0019DC  360A               	rlcf	??i2_SetPin595+3,f,c
  8675  0019DE  90D8               	bcf	status,0,c
  8676  0019E0  3609               	rlcf	??i2_SetPin595+2,f,c
  8677  0019E2  360A               	rlcf	??i2_SetPin595+3,f,c
  8678  0019E4  5003               	movf	i2SetPin595@pin,w,c
  8679  0019E6  2609               	addwf	??i2_SetPin595+2,f,c
  8680  0019E8  5004               	movf	i2SetPin595@pin+1,w,c
  8681  0019EA  220A               	addwfc	??i2_SetPin595+3,f,c
  8682  0019EC  90D8               	bcf	status,0,c
  8683  0019EE  3609               	rlcf	??i2_SetPin595+2,f,c
  8684  0019F0  360A               	rlcf	??i2_SetPin595+3,f,c
  8685  0019F2  5007               	movf	??i2_SetPin595,w,c
  8686  0019F4  2609               	addwf	??i2_SetPin595+2,f,c
  8687  0019F6  5008               	movf	??i2_SetPin595+1,w,c
  8688  0019F8  220A               	addwfc	??i2_SetPin595+3,f,c
  8689  0019FA  0E00               	movlw	low _registers
  8690  0019FC  2409               	addwf	??i2_SetPin595+2,w,c
  8691  0019FE  6ED9               	movwf	fsr2l,c
  8692  001A00  0E01               	movlw	high _registers
  8693  001A02  200A               	addwfc	??i2_SetPin595+3,w,c
  8694  001A04  6EDA               	movwf	fsr2h,c
  8695  001A06  C005  FFDE         	movff	i2SetPin595@value,postinc2
  8696  001A0A  C006  FFDD         	movff	i2SetPin595@value+1,postdec2
  8697  001A0E  0012               	return		;funcret
  8698  001A10                     __end_ofi2_SetPin595:
  8699                           	opt stack 0
  8700                           pclatu	equ	0xFFB
  8701                           pclath	equ	0xFFA
  8702                           tblptru	equ	0xFF8
  8703                           tblptrh	equ	0xFF7
  8704                           tblptrl	equ	0xFF6
  8705                           tablat	equ	0xFF5
  8706                           prodh	equ	0xFF4
  8707                           prodl	equ	0xFF3
  8708                           intcon	equ	0xFF2
  8709                           intcon2	equ	0xFF1
  8710                           postinc0	equ	0xFEE
  8711                           fsr0h	equ	0xFEA
  8712                           fsr0l	equ	0xFE9
  8713                           wreg	equ	0xFE8
  8714                           indf1	equ	0xFE7
  8715                           postdec1	equ	0xFE5
  8716                           fsr1h	equ	0xFE2
  8717                           fsr1l	equ	0xFE1
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           plusw2	equ	0xFDB
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function _ADC_GetConversion *****************
  8727 ;; Defined at:
  8728 ;;		line 109 in file "mcc_generated_files/adc.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  channel         1    wreg     enum E6965
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  channel         1    4[COMRAM] enum E6965
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  2    0[COMRAM] unsigned int 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8742 ;;      Params:         2       0       0       0       0       0       0
  8743 ;;      Locals:         1       0       0       0       0       0       0
  8744 ;;      Temps:          2       0       0       0       0       0       0
  8745 ;;      Totals:         5       0       0       0       0       0       0
  8746 ;;Total ram usage:        5 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_ReadCurrent
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text53
  8756  001C28                     __ptext53:
  8757                           	opt stack 0
  8758  001C28                     _ADC_GetConversion:
  8759                           	opt stack 20
  8760                           
  8761                           ;incstack = 0
  8762                           ;ADC_GetConversion@channel stored from wreg
  8763  001C28  6E05               	movwf	ADC_GetConversion@channel,c
  8764                           
  8765                           ;adc.c: 112: ADCON0bits.CHS = channel;
  8766  001C2A  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8767  001C2E  4603               	rlncf	??_ADC_GetConversion,f,c
  8768  001C30  4603               	rlncf	??_ADC_GetConversion,f,c
  8769  001C32  50C2               	movf	4034,w,c	;volatile
  8770  001C34  1803               	xorwf	??_ADC_GetConversion,w,c
  8771  001C36  0B83               	andlw	-125
  8772  001C38  1803               	xorwf	??_ADC_GetConversion,w,c
  8773  001C3A  6EC2               	movwf	4034,c	;volatile
  8774                           
  8775                           ;adc.c: 115: ADCON0bits.ADON = 1;
  8776  001C3C  80C2               	bsf	4034,0,c	;volatile
  8777                           
  8778                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
  8779  001C3E  82C2               	bsf	4034,1,c	;volatile
  8780  001C40                     i2l31:
  8781  001C40  B2C2               	btfsc	4034,1,c	;volatile
  8782  001C42  D7FE               	goto	i2l31
  8783                           
  8784                           ;adc.c: 124: }
  8785                           ;adc.c: 127: return ((ADRESH << 8) + ADRESL);
  8786  001C44  50C4               	movf	4036,w,c	;volatile
  8787  001C46  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  8788  001C48  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  8789  001C4A  50C3               	movf	4035,w,c	;volatile
  8790  001C4C  2403               	addwf	??_ADC_GetConversion,w,c
  8791  001C4E  6E01               	movwf	?_ADC_GetConversion,c
  8792  001C50  0E00               	movlw	0
  8793  001C52  2004               	addwfc	??_ADC_GetConversion+1,w,c
  8794  001C54  6E02               	movwf	?_ADC_GetConversion+1,c
  8795  001C56  0012               	return	
  8796  001C58                     __end_of_ADC_GetConversion:
  8797                           	opt stack 0
  8798                           pclatu	equ	0xFFB
  8799                           pclath	equ	0xFFA
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           intcon2	equ	0xFF1
  8808                           postinc0	equ	0xFEE
  8809                           fsr0h	equ	0xFEA
  8810                           fsr0l	equ	0xFE9
  8811                           wreg	equ	0xFE8
  8812                           indf1	equ	0xFE7
  8813                           postdec1	equ	0xFE5
  8814                           fsr1h	equ	0xFE2
  8815                           fsr1l	equ	0xFE1
  8816                           indf2	equ	0xFDF
  8817                           postinc2	equ	0xFDE
  8818                           postdec2	equ	0xFDD
  8819                           plusw2	equ	0xFDB
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function _FuseSystem *****************
  8825 ;; Defined at:
  8826 ;;		line 175 in file "PDU.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;		None
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  i               2    6[COMRAM] int 
  8831 ;;  i               2    8[COMRAM] int 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8841 ;;      Params:         0       0       0       0       0       0       0
  8842 ;;      Locals:         4       0       0       0       0       0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0
  8844 ;;      Totals:         4       0       0       0       0       0       0
  8845 ;;Total ram usage:        4 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    1
  8848 ;; This function calls:
  8849 ;;		___wmul
  8850 ;; This function is called by:
  8851 ;;		_TMR1_ISR
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text54
  8856  00174E                     __ptext54:
  8857                           	opt stack 0
  8858  00174E                     _FuseSystem:
  8859                           	opt stack 20
  8860                           
  8861                           ;PDU.c: 177: for (int i = 0; i < 6; i++) {
  8862                           
  8863                           ;incstack = 0
  8864  00174E  0E00               	movlw	0
  8865  001750  6E0A               	movwf	FuseSystem@i+1,c
  8866  001752  0E00               	movlw	0
  8867  001754  6E09               	movwf	FuseSystem@i,c
  8868  001756                     i2l3169:
  8869  001756  BE0A               	btfsc	FuseSystem@i+1,7,c
  8870  001758  D006               	goto	i2l3173
  8871  00175A  500A               	movf	FuseSystem@i+1,w,c
  8872  00175C  E127               	bnz	i2l3179
  8873  00175E  0E06               	movlw	6
  8874  001760  5C09               	subwf	FuseSystem@i,w,c
  8875  001762  B0D8               	btfsc	status,0,c
  8876  001764  D023               	goto	i2l3179
  8877  001766                     i2l3173:
  8878                           
  8879                           ;PDU.c: 178: Current[i] = CurrentADC[i]*48;
  8880  001766  90D8               	bcf	status,0,c
  8881  001768  3409               	rlcf	FuseSystem@i,w,c
  8882  00176A  6ED9               	movwf	fsr2l,c
  8883  00176C  340A               	rlcf	FuseSystem@i+1,w,c
  8884  00176E  6EDA               	movwf	fsr2h,c
  8885  001770  0ECA               	movlw	low _CurrentADC
  8886  001772  26D9               	addwf	fsr2l,f,c
  8887  001774  0E00               	movlw	high _CurrentADC
  8888  001776  22DA               	addwfc	fsr2h,f,c
  8889  001778  CFDE F001          	movff	postinc2,___wmul@multiplier
  8890  00177C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  8891  001780  0E00               	movlw	0
  8892  001782  6E04               	movwf	___wmul@multiplicand+1,c
  8893  001784  0E30               	movlw	48
  8894  001786  6E03               	movwf	___wmul@multiplicand,c
  8895  001788  EC83  F00E         	call	___wmul	;wreg free
  8896  00178C  90D8               	bcf	status,0,c
  8897  00178E  3409               	rlcf	FuseSystem@i,w,c
  8898  001790  6ED9               	movwf	fsr2l,c
  8899  001792  340A               	rlcf	FuseSystem@i+1,w,c
  8900  001794  6EDA               	movwf	fsr2h,c
  8901  001796  0EBE               	movlw	low _Current
  8902  001798  26D9               	addwf	fsr2l,f,c
  8903  00179A  0E00               	movlw	high _Current
  8904  00179C  22DA               	addwfc	fsr2h,f,c
  8905  00179E  C001  FFDE         	movff	?___wmul,postinc2
  8906  0017A2  C002  FFDD         	movff	?___wmul+1,postdec2
  8907  0017A6  4A09               	infsnz	FuseSystem@i,f,c
  8908  0017A8  2A0A               	incf	FuseSystem@i+1,f,c
  8909  0017AA  D7D5               	goto	i2l3169
  8910  0017AC                     i2l3179:
  8911                           
  8912                           ;PDU.c: 181: }
  8913                           ;PDU.c: 183: for (int i = 0; i < 6; i++) {
  8914  0017AC  0E00               	movlw	0
  8915  0017AE  6E08               	movwf	FuseSystem@i_1200+1,c
  8916  0017B0  0E00               	movlw	0
  8917  0017B2  6E07               	movwf	FuseSystem@i_1200,c
  8918  0017B4                     i2l3181:
  8919  0017B4  BE08               	btfsc	FuseSystem@i_1200+1,7,c
  8920  0017B6  D006               	goto	i2l3185
  8921  0017B8  5008               	movf	FuseSystem@i_1200+1,w,c
  8922  0017BA  E107               	bnz	i2l469
  8923  0017BC  0E06               	movlw	6
  8924  0017BE  5C07               	subwf	FuseSystem@i_1200,w,c
  8925  0017C0  B0D8               	btfsc	status,0,c
  8926  0017C2  0012               	return	
  8927  0017C4                     i2l3185:
  8928  0017C4  4A07               	infsnz	FuseSystem@i_1200,f,c
  8929  0017C6  2A08               	incf	FuseSystem@i_1200+1,f,c
  8930  0017C8  D7F5               	goto	i2l3181
  8931  0017CA                     i2l469:
  8932  0017CA  0012               	return		;funcret
  8933  0017CC                     __end_of_FuseSystem:
  8934                           	opt stack 0
  8935                           pclatu	equ	0xFFB
  8936                           pclath	equ	0xFFA
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           intcon2	equ	0xFF1
  8945                           postinc0	equ	0xFEE
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           indf1	equ	0xFE7
  8950                           postdec1	equ	0xFE5
  8951                           fsr1h	equ	0xFE2
  8952                           fsr1l	equ	0xFE1
  8953                           indf2	equ	0xFDF
  8954                           postinc2	equ	0xFDE
  8955                           postdec2	equ	0xFDD
  8956                           plusw2	equ	0xFDB
  8957                           fsr2h	equ	0xFDA
  8958                           fsr2l	equ	0xFD9
  8959                           status	equ	0xFD8
  8960                           
  8961 ;; *************** function ___wmul *****************
  8962 ;; Defined at:
  8963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  multiplier      2    0[COMRAM] unsigned int 
  8966 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  product         2    4[COMRAM] unsigned int 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  2    0[COMRAM] unsigned int 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2, status,0, prodl, prodh
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8978 ;;      Params:         4       0       0       0       0       0       0
  8979 ;;      Locals:         2       0       0       0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0
  8981 ;;      Totals:         6       0       0       0       0       0       0
  8982 ;;Total ram usage:        6 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; This function calls:
  8985 ;;		Nothing
  8986 ;; This function is called by:
  8987 ;;		_FuseSystem
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text55
  8992  001D06                     __ptext55:
  8993                           	opt stack 0
  8994  001D06                     ___wmul:
  8995                           	opt stack 20
  8996                           
  8997                           ;incstack = 0
  8998  001D06  5001               	movf	___wmul@multiplier,w,c
  8999  001D08  0203               	mulwf	___wmul@multiplicand,c
  9000  001D0A  CFF3 F005          	movff	prodl,___wmul@product
  9001  001D0E  CFF4 F006          	movff	prodh,___wmul@product+1
  9002  001D12  5001               	movf	___wmul@multiplier,w,c
  9003  001D14  0204               	mulwf	___wmul@multiplicand+1,c
  9004  001D16  50F3               	movf	prodl,w,c
  9005  001D18  2606               	addwf	___wmul@product+1,f,c
  9006  001D1A  5002               	movf	___wmul@multiplier+1,w,c
  9007  001D1C  0203               	mulwf	___wmul@multiplicand,c
  9008  001D1E  50F3               	movf	prodl,w,c
  9009  001D20  2606               	addwf	___wmul@product+1,f,c
  9010  001D22  C005  F001         	movff	___wmul@product,?___wmul
  9011  001D26  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9012  001D2A  0012               	return	
  9013  001D2C                     __end_of___wmul:
  9014                           	opt stack 0
  9015                           pclatu	equ	0xFFB
  9016                           pclath	equ	0xFFA
  9017                           tblptru	equ	0xFF8
  9018                           tblptrh	equ	0xFF7
  9019                           tblptrl	equ	0xFF6
  9020                           tablat	equ	0xFF5
  9021                           prodh	equ	0xFF4
  9022                           prodl	equ	0xFF3
  9023                           intcon	equ	0xFF2
  9024                           intcon2	equ	0xFF1
  9025                           postinc0	equ	0xFEE
  9026                           fsr0h	equ	0xFEA
  9027                           fsr0l	equ	0xFE9
  9028                           wreg	equ	0xFE8
  9029                           indf1	equ	0xFE7
  9030                           postdec1	equ	0xFE5
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           plusw2	equ	0xFDB
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function _EUSART1_Transmit_ISR *****************
  9042 ;; Defined at:
  9043 ;;		line 153 in file "UART.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9057 ;;      Params:         0       0       0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0
  9060 ;;      Totals:         0       0       0       0       0       0       0
  9061 ;;Total ram usage:        0 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    2
  9064 ;; This function calls:
  9065 ;;		i2_UART_buff_get
  9066 ;;		i2_UART_buff_size
  9067 ;; This function is called by:
  9068 ;;		_INTERRUPT_InterruptManager
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text56
  9073  001BC6                     __ptext56:
  9074                           	opt stack 0
  9075  001BC6                     _EUSART1_Transmit_ISR:
  9076                           	opt stack 20
  9077                           
  9078                           ;UART.c: 154: if (UART_buff_size(&output_buffer) > 0) {
  9079                           
  9080                           ;incstack = 0
  9081  001BC6  0E00               	movlw	low _output_buffer
  9082  001BC8  6E01               	movwf	i2UART_buff_size@_this,c
  9083  001BCA  0E03               	movlw	high _output_buffer
  9084  001BCC  6E02               	movwf	i2UART_buff_size@_this+1,c
  9085  001BCE  EC09  F00F         	call	i2_UART_buff_size	;wreg free
  9086  001BD2  BE02               	btfsc	?i2_UART_buff_size+1,7,c
  9087  001BD4  D00D               	goto	i2l3399
  9088  001BD6  5002               	movf	?i2_UART_buff_size+1,w,c
  9089  001BD8  E103               	bnz	i2u183_40
  9090  001BDA  0401               	decf	?i2_UART_buff_size,w,c
  9091  001BDC  A0D8               	btfss	status,0,c
  9092  001BDE  D008               	goto	i2l3399
  9093  001BE0                     i2u183_40:
  9094                           
  9095                           ;UART.c: 155: TXREG1 = UART_buff_get(&output_buffer);
  9096  001BE0  0E00               	movlw	low _output_buffer
  9097  001BE2  6E07               	movwf	i2UART_buff_get@_this,c
  9098  001BE4  0E03               	movlw	high _output_buffer
  9099  001BE6  6E08               	movwf	i2UART_buff_get@_this+1,c
  9100  001BE8  ECE0  F00A         	call	i2_UART_buff_get	;wreg free
  9101  001BEC  6EAD               	movwf	4013,c	;volatile
  9102                           
  9103                           ;UART.c: 156: } else {
  9104  001BEE  0012               	return	
  9105  001BF0                     i2l3399:
  9106                           
  9107                           ;UART.c: 157: Transmit_stall = 1;
  9108  001BF0  0E01               	movlw	1
  9109  001BF2  6E42               	movwf	_Transmit_stall,c
  9110                           
  9111                           ;UART.c: 158: PIE1bits.TX1IE = 0;
  9112  001BF4  989D               	bcf	3997,4,c	;volatile
  9113  001BF6  0012               	return	
  9114  001BF8                     __end_of_EUSART1_Transmit_ISR:
  9115                           	opt stack 0
  9116                           pclatu	equ	0xFFB
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           intcon2	equ	0xFF1
  9126                           postinc0	equ	0xFEE
  9127                           fsr0h	equ	0xFEA
  9128                           fsr0l	equ	0xFE9
  9129                           wreg	equ	0xFE8
  9130                           indf1	equ	0xFE7
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           postdec2	equ	0xFDD
  9137                           plusw2	equ	0xFDB
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function i2_UART_buff_size *****************
  9143 ;; Defined at:
  9144 ;;		line 104 in file "UART.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  9147 ;;		 -> output_buffer(206), input_buffer(206), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  2    0[COMRAM] int 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9159 ;;      Params:         2       0       0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0
  9162 ;;      Totals:         2       0       0       0       0       0       0
  9163 ;;Total ram usage:        2 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_EUSART1_Transmit_ISR
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text57
  9173  001E12                     __ptext57:
  9174                           	opt stack 0
  9175  001E12                     i2_UART_buff_size:
  9176                           	opt stack 21
  9177                           
  9178                           ;UART.c: 105: return (_this->count);
  9179                           
  9180                           ;incstack = 0
  9181  001E12  EE20 F0CC          	lfsr	2,204
  9182  001E16  5001               	movf	i2UART_buff_size@_this,w,c
  9183  001E18  26D9               	addwf	fsr2l,f,c
  9184  001E1A  5002               	movf	i2UART_buff_size@_this+1,w,c
  9185  001E1C  22DA               	addwfc	fsr2h,f,c
  9186  001E1E  CFDE F001          	movff	postinc2,?i2_UART_buff_size
  9187  001E22  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
  9188  001E26  0012               	return	
  9189  001E28                     __end_ofi2_UART_buff_size:
  9190                           	opt stack 0
  9191                           pclatu	equ	0xFFB
  9192                           pclath	equ	0xFFA
  9193                           tblptru	equ	0xFF8
  9194                           tblptrh	equ	0xFF7
  9195                           tblptrl	equ	0xFF6
  9196                           tablat	equ	0xFF5
  9197                           prodh	equ	0xFF4
  9198                           prodl	equ	0xFF3
  9199                           intcon	equ	0xFF2
  9200                           intcon2	equ	0xFF1
  9201                           postinc0	equ	0xFEE
  9202                           fsr0h	equ	0xFEA
  9203                           fsr0l	equ	0xFE9
  9204                           wreg	equ	0xFE8
  9205                           indf1	equ	0xFE7
  9206                           postdec1	equ	0xFE5
  9207                           fsr1h	equ	0xFE2
  9208                           fsr1l	equ	0xFE1
  9209                           indf2	equ	0xFDF
  9210                           postinc2	equ	0xFDE
  9211                           postdec2	equ	0xFDD
  9212                           plusw2	equ	0xFDB
  9213                           fsr2h	equ	0xFDA
  9214                           fsr2l	equ	0xFD9
  9215                           status	equ	0xFD8
  9216                           
  9217 ;; *************** function i2_UART_buff_get *****************
  9218 ;; Defined at:
  9219 ;;		line 83 in file "UART.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  9222 ;;		 -> output_buffer(206), input_buffer(206), 
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      unsigned char 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9234 ;;      Params:         2       0       0       0       0       0       0
  9235 ;;      Locals:         1       0       0       0       0       0       0
  9236 ;;      Temps:          2       0       0       0       0       0       0
  9237 ;;      Totals:         5       0       0       0       0       0       0
  9238 ;;Total ram usage:        5 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    1
  9241 ;; This function calls:
  9242 ;;		i2_UART_buff_modulo_inc
  9243 ;; This function is called by:
  9244 ;;		_EUSART1_Transmit_ISR
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text58
  9249  0015C0                     __ptext58:
  9250                           	opt stack 0
  9251  0015C0                     i2_UART_buff_get:
  9252                           	opt stack 20
  9253                           
  9254                           ;UART.c: 84: unsigned char c;
  9255                           ;UART.c: 85: if (_this->count > 0) {
  9256                           
  9257                           ;incstack = 0
  9258  0015C0  EE20 F0CC          	lfsr	2,204
  9259  0015C4  5007               	movf	i2UART_buff_get@_this,w,c
  9260  0015C6  26D9               	addwf	fsr2l,f,c
  9261  0015C8  5008               	movf	i2UART_buff_get@_this+1,w,c
  9262  0015CA  22DA               	addwfc	fsr2h,f,c
  9263  0015CC  0E01               	movlw	1
  9264  0015CE  BEDB               	btfsc	plusw2,7,c
  9265  0015D0  D03C               	goto	i2l3379
  9266  0015D2  0E01               	movlw	1
  9267  0015D4  50DB               	movf	plusw2,w,c
  9268  0015D6  E103               	bnz	i2u181_40
  9269  0015D8  04DE               	decf	postinc2,w,c
  9270  0015DA  A0D8               	btfss	status,0,c
  9271  0015DC  D036               	goto	i2l3379
  9272  0015DE                     i2u181_40:
  9273                           
  9274                           ;UART.c: 86: c = _this->buf[_this->tail];
  9275  0015DE  EE20 F0CA          	lfsr	2,202
  9276  0015E2  5007               	movf	i2UART_buff_get@_this,w,c
  9277  0015E4  26D9               	addwf	fsr2l,f,c
  9278  0015E6  5008               	movf	i2UART_buff_get@_this+1,w,c
  9279  0015E8  22DA               	addwfc	fsr2h,f,c
  9280  0015EA  CFDE F009          	movff	postinc2,??i2_UART_buff_get
  9281  0015EE  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
  9282  0015F2  5009               	movf	??i2_UART_buff_get,w,c
  9283  0015F4  2407               	addwf	i2UART_buff_get@_this,w,c
  9284  0015F6  6ED9               	movwf	fsr2l,c
  9285  0015F8  500A               	movf	??i2_UART_buff_get+1,w,c
  9286  0015FA  2008               	addwfc	i2UART_buff_get@_this+1,w,c
  9287  0015FC  6EDA               	movwf	fsr2h,c
  9288  0015FE  50DF               	movf	indf2,w,c
  9289  001600  6E0B               	movwf	i2UART_buff_get@c,c
  9290                           
  9291                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  9292  001602  EE20 F0CA          	lfsr	2,202
  9293  001606  5007               	movf	i2UART_buff_get@_this,w,c
  9294  001608  26D9               	addwf	fsr2l,f,c
  9295  00160A  5008               	movf	i2UART_buff_get@_this+1,w,c
  9296  00160C  22DA               	addwfc	fsr2h,f,c
  9297  00160E  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  9298  001612  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  9299  001616  0E00               	movlw	0
  9300  001618  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  9301  00161A  0EC8               	movlw	200
  9302  00161C  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  9303  00161E  EC6E  F00E         	call	i2_UART_buff_modulo_inc	;wreg free
  9304  001622  EE20 F0CA          	lfsr	2,202
  9305  001626  5007               	movf	i2UART_buff_get@_this,w,c
  9306  001628  26D9               	addwf	fsr2l,f,c
  9307  00162A  5008               	movf	i2UART_buff_get@_this+1,w,c
  9308  00162C  22DA               	addwfc	fsr2h,f,c
  9309  00162E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  9310  001632  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  9311                           
  9312                           ;UART.c: 88: --_this->count;
  9313  001636  EE20 F0CC          	lfsr	2,204
  9314  00163A  5007               	movf	i2UART_buff_get@_this,w,c
  9315  00163C  26D9               	addwf	fsr2l,f,c
  9316  00163E  5008               	movf	i2UART_buff_get@_this+1,w,c
  9317  001640  22DA               	addwfc	fsr2h,f,c
  9318  001642  06DE               	decf	postinc2,f,c
  9319  001644  0E00               	movlw	0
  9320  001646  5ADD               	subwfb	postdec2,f,c
  9321                           
  9322                           ;UART.c: 89: } else {
  9323  001648  D002               	goto	i2l589
  9324  00164A                     i2l3379:
  9325                           
  9326                           ;UART.c: 90: c = 0;
  9327  00164A  0E00               	movlw	0
  9328  00164C  6E0B               	movwf	i2UART_buff_get@c,c
  9329  00164E                     i2l589:
  9330                           
  9331                           ;UART.c: 91: }
  9332                           ;UART.c: 92: return (c);
  9333  00164E  500B               	movf	i2UART_buff_get@c,w,c
  9334  001650  0012               	return	
  9335  001652                     __end_ofi2_UART_buff_get:
  9336                           	opt stack 0
  9337                           pclatu	equ	0xFFB
  9338                           pclath	equ	0xFFA
  9339                           tblptru	equ	0xFF8
  9340                           tblptrh	equ	0xFF7
  9341                           tblptrl	equ	0xFF6
  9342                           tablat	equ	0xFF5
  9343                           prodh	equ	0xFF4
  9344                           prodl	equ	0xFF3
  9345                           intcon	equ	0xFF2
  9346                           intcon2	equ	0xFF1
  9347                           postinc0	equ	0xFEE
  9348                           fsr0h	equ	0xFEA
  9349                           fsr0l	equ	0xFE9
  9350                           wreg	equ	0xFE8
  9351                           indf1	equ	0xFE7
  9352                           postdec1	equ	0xFE5
  9353                           fsr1h	equ	0xFE2
  9354                           fsr1l	equ	0xFE1
  9355                           indf2	equ	0xFDF
  9356                           postinc2	equ	0xFDE
  9357                           postdec2	equ	0xFDD
  9358                           plusw2	equ	0xFDB
  9359                           fsr2h	equ	0xFDA
  9360                           fsr2l	equ	0xFD9
  9361                           status	equ	0xFD8
  9362                           
  9363 ;; *************** function _EUSART1_Receive_ISR *****************
  9364 ;; Defined at:
  9365 ;;		line 141 in file "UART.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  data            1   11[COMRAM] unsigned char 
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      void 
  9372 ;; Registers used:
  9373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9379 ;;      Params:         0       0       0       0       0       0       0
  9380 ;;      Locals:         1       0       0       0       0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0
  9382 ;;      Totals:         1       0       0       0       0       0       0
  9383 ;;Total ram usage:        1 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    2
  9386 ;; This function calls:
  9387 ;;		i2_UART_buff_put
  9388 ;; This function is called by:
  9389 ;;		_INTERRUPT_InterruptManager
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text59
  9394  001D72                     __ptext59:
  9395                           	opt stack 0
  9396  001D72                     _EUSART1_Receive_ISR:
  9397                           	opt stack 20
  9398                           
  9399                           ;UART.c: 142: if (1 == RC1STAbits.OERR) {
  9400                           
  9401                           ;incstack = 0
  9402  001D72  A2AB               	btfss	4011,1,c	;volatile
  9403  001D74  D002               	goto	i2l620
  9404                           
  9405                           ;UART.c: 145: RC1STAbits.CREN = 0;
  9406  001D76  98AB               	bcf	4011,4,c	;volatile
  9407                           
  9408                           ;UART.c: 146: RC1STAbits.CREN = 1;
  9409  001D78  88AB               	bsf	4011,4,c	;volatile
  9410  001D7A                     i2l620:
  9411                           
  9412                           ;UART.c: 147: }
  9413                           ;UART.c: 148: unsigned char data = RCREG1;
  9414  001D7A  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  9415                           
  9416                           ;UART.c: 149: UART_buff_put(&input_buffer, data);
  9417  001D7E  0E00               	movlw	low _input_buffer
  9418  001D80  6E07               	movwf	i2UART_buff_put@_this,c
  9419  001D82  0E02               	movlw	high _input_buffer
  9420  001D84  6E08               	movwf	i2UART_buff_put@_this+1,c
  9421  001D86  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
  9422  001D8A  EC19  F007         	call	i2_UART_buff_put	;wreg free
  9423                           
  9424                           ;UART.c: 150: PIE1bits.RC1IE == 0;
  9425  001D8E  509D               	movf	3997,w,c	;volatile
  9426  001D90  0012               	return		;funcret
  9427  001D92                     __end_of_EUSART1_Receive_ISR:
  9428                           	opt stack 0
  9429                           pclatu	equ	0xFFB
  9430                           pclath	equ	0xFFA
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           intcon2	equ	0xFF1
  9439                           postinc0	equ	0xFEE
  9440                           fsr0h	equ	0xFEA
  9441                           fsr0l	equ	0xFE9
  9442                           wreg	equ	0xFE8
  9443                           indf1	equ	0xFE7
  9444                           postdec1	equ	0xFE5
  9445                           fsr1h	equ	0xFE2
  9446                           fsr1l	equ	0xFE1
  9447                           indf2	equ	0xFDF
  9448                           postinc2	equ	0xFDE
  9449                           postdec2	equ	0xFDD
  9450                           plusw2	equ	0xFDB
  9451                           fsr2h	equ	0xFDA
  9452                           fsr2l	equ	0xFD9
  9453                           status	equ	0xFD8
  9454                           
  9455 ;; *************** function i2_UART_buff_put *****************
  9456 ;; Defined at:
  9457 ;;		line 70 in file "UART.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  9460 ;;		 -> output_buffer(206), input_buffer(206), 
  9461 ;;  c               1    8[COMRAM] const unsigned char 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9473 ;;      Params:         3       0       0       0       0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0
  9475 ;;      Temps:          2       0       0       0       0       0       0
  9476 ;;      Totals:         5       0       0       0       0       0       0
  9477 ;;Total ram usage:        5 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    1
  9480 ;; This function calls:
  9481 ;;		i2_UART_buff_modulo_inc
  9482 ;; This function is called by:
  9483 ;;		_EUSART1_Receive_ISR
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text60
  9488  000E32                     __ptext60:
  9489                           	opt stack 0
  9490  000E32                     i2_UART_buff_put:
  9491                           	opt stack 20
  9492                           
  9493                           ;UART.c: 71: if (_this->count < 200) {
  9494                           
  9495                           ;incstack = 0
  9496  000E32  EE20 F0CC          	lfsr	2,204
  9497  000E36  5007               	movf	i2UART_buff_put@_this,w,c
  9498  000E38  26D9               	addwf	fsr2l,f,c
  9499  000E3A  5008               	movf	i2UART_buff_put@_this+1,w,c
  9500  000E3C  22DA               	addwfc	fsr2h,f,c
  9501  000E3E  0E01               	movlw	1
  9502  000E40  BEDB               	btfsc	plusw2,7,c
  9503  000E42  D007               	goto	i2l3359
  9504  000E44  0E01               	movlw	1
  9505  000E46  50DB               	movf	plusw2,w,c
  9506  000E48  E13A               	bnz	i2l3365
  9507  000E4A  0EC8               	movlw	200
  9508  000E4C  5CDE               	subwf	postinc2,w,c
  9509  000E4E  B0D8               	btfsc	status,0,c
  9510  000E50  D036               	goto	i2l3365
  9511  000E52                     i2l3359:
  9512                           
  9513                           ;UART.c: 72: _this->buf[_this->head] = c;
  9514  000E52  EE20 F0C8          	lfsr	2,200
  9515  000E56  5007               	movf	i2UART_buff_put@_this,w,c
  9516  000E58  26D9               	addwf	fsr2l,f,c
  9517  000E5A  5008               	movf	i2UART_buff_put@_this+1,w,c
  9518  000E5C  22DA               	addwfc	fsr2h,f,c
  9519  000E5E  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  9520  000E62  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  9521  000E66  500A               	movf	??i2_UART_buff_put,w,c
  9522  000E68  2407               	addwf	i2UART_buff_put@_this,w,c
  9523  000E6A  6ED9               	movwf	fsr2l,c
  9524  000E6C  500B               	movf	??i2_UART_buff_put+1,w,c
  9525  000E6E  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  9526  000E70  6EDA               	movwf	fsr2h,c
  9527  000E72  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  9528                           
  9529                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
  9530  000E76  EE20 F0C8          	lfsr	2,200
  9531  000E7A  5007               	movf	i2UART_buff_put@_this,w,c
  9532  000E7C  26D9               	addwf	fsr2l,f,c
  9533  000E7E  5008               	movf	i2UART_buff_put@_this+1,w,c
  9534  000E80  22DA               	addwfc	fsr2h,f,c
  9535  000E82  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  9536  000E86  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  9537  000E8A  0E00               	movlw	0
  9538  000E8C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  9539  000E8E  0EC8               	movlw	200
  9540  000E90  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  9541  000E92  EC6E  F00E         	call	i2_UART_buff_modulo_inc	;wreg free
  9542  000E96  EE20 F0C8          	lfsr	2,200
  9543  000E9A  5007               	movf	i2UART_buff_put@_this,w,c
  9544  000E9C  26D9               	addwf	fsr2l,f,c
  9545  000E9E  5008               	movf	i2UART_buff_put@_this+1,w,c
  9546  000EA0  22DA               	addwfc	fsr2h,f,c
  9547  000EA2  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  9548  000EA6  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  9549                           
  9550                           ;UART.c: 74: ++_this->count;
  9551  000EAA  EE20 F0CC          	lfsr	2,204
  9552  000EAE  5007               	movf	i2UART_buff_put@_this,w,c
  9553  000EB0  26D9               	addwf	fsr2l,f,c
  9554  000EB2  5008               	movf	i2UART_buff_put@_this+1,w,c
  9555  000EB4  22DA               	addwfc	fsr2h,f,c
  9556  000EB6  2ADE               	incf	postinc2,f,c
  9557  000EB8  0E00               	movlw	0
  9558  000EBA  22DD               	addwfc	postdec2,f,c
  9559                           
  9560                           ;UART.c: 75: } else {
  9561  000EBC  0012               	return	
  9562  000EBE                     i2l3365:
  9563                           
  9564                           ;UART.c: 76: _this->buf[_this->head] = c;
  9565  000EBE  EE20 F0C8          	lfsr	2,200
  9566  000EC2  5007               	movf	i2UART_buff_put@_this,w,c
  9567  000EC4  26D9               	addwf	fsr2l,f,c
  9568  000EC6  5008               	movf	i2UART_buff_put@_this+1,w,c
  9569  000EC8  22DA               	addwfc	fsr2h,f,c
  9570  000ECA  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  9571  000ECE  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  9572  000ED2  500A               	movf	??i2_UART_buff_put,w,c
  9573  000ED4  2407               	addwf	i2UART_buff_put@_this,w,c
  9574  000ED6  6ED9               	movwf	fsr2l,c
  9575  000ED8  500B               	movf	??i2_UART_buff_put+1,w,c
  9576  000EDA  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  9577  000EDC  6EDA               	movwf	fsr2h,c
  9578  000EDE  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  9579                           
  9580                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
  9581  000EE2  EE20 F0C8          	lfsr	2,200
  9582  000EE6  5007               	movf	i2UART_buff_put@_this,w,c
  9583  000EE8  26D9               	addwf	fsr2l,f,c
  9584  000EEA  5008               	movf	i2UART_buff_put@_this+1,w,c
  9585  000EEC  22DA               	addwfc	fsr2h,f,c
  9586  000EEE  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  9587  000EF2  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  9588  000EF6  0E00               	movlw	0
  9589  000EF8  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  9590  000EFA  0EC8               	movlw	200
  9591  000EFC  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  9592  000EFE  EC6E  F00E         	call	i2_UART_buff_modulo_inc	;wreg free
  9593  000F02  EE20 F0C8          	lfsr	2,200
  9594  000F06  5007               	movf	i2UART_buff_put@_this,w,c
  9595  000F08  26D9               	addwf	fsr2l,f,c
  9596  000F0A  5008               	movf	i2UART_buff_put@_this+1,w,c
  9597  000F0C  22DA               	addwfc	fsr2h,f,c
  9598  000F0E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  9599  000F12  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  9600                           
  9601                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  9602  000F16  EE20 F0CA          	lfsr	2,202
  9603  000F1A  5007               	movf	i2UART_buff_put@_this,w,c
  9604  000F1C  26D9               	addwf	fsr2l,f,c
  9605  000F1E  5008               	movf	i2UART_buff_put@_this+1,w,c
  9606  000F20  22DA               	addwfc	fsr2h,f,c
  9607  000F22  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  9608  000F26  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  9609  000F2A  0E00               	movlw	0
  9610  000F2C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  9611  000F2E  0EC8               	movlw	200
  9612  000F30  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  9613  000F32  EC6E  F00E         	call	i2_UART_buff_modulo_inc	;wreg free
  9614  000F36  EE20 F0CA          	lfsr	2,202
  9615  000F3A  5007               	movf	i2UART_buff_put@_this,w,c
  9616  000F3C  26D9               	addwf	fsr2l,f,c
  9617  000F3E  5008               	movf	i2UART_buff_put@_this+1,w,c
  9618  000F40  22DA               	addwfc	fsr2h,f,c
  9619  000F42  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  9620  000F46  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  9621  000F4A  0012               	return	
  9622  000F4C                     __end_ofi2_UART_buff_put:
  9623                           	opt stack 0
  9624                           pclatu	equ	0xFFB
  9625                           pclath	equ	0xFFA
  9626                           tblptru	equ	0xFF8
  9627                           tblptrh	equ	0xFF7
  9628                           tblptrl	equ	0xFF6
  9629                           tablat	equ	0xFF5
  9630                           prodh	equ	0xFF4
  9631                           prodl	equ	0xFF3
  9632                           intcon	equ	0xFF2
  9633                           intcon2	equ	0xFF1
  9634                           postinc0	equ	0xFEE
  9635                           fsr0h	equ	0xFEA
  9636                           fsr0l	equ	0xFE9
  9637                           wreg	equ	0xFE8
  9638                           indf1	equ	0xFE7
  9639                           postdec1	equ	0xFE5
  9640                           fsr1h	equ	0xFE2
  9641                           fsr1l	equ	0xFE1
  9642                           indf2	equ	0xFDF
  9643                           postinc2	equ	0xFDE
  9644                           postdec2	equ	0xFDD
  9645                           plusw2	equ	0xFDB
  9646                           fsr2h	equ	0xFDA
  9647                           fsr2l	equ	0xFD9
  9648                           status	equ	0xFD8
  9649                           
  9650 ;; *************** function i2_UART_buff_modulo_inc *****************
  9651 ;; Defined at:
  9652 ;;		line 108 in file "UART.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  value           2    0[COMRAM] const unsigned int 
  9655 ;;  modulus         2    2[COMRAM] const unsigned int 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2    0[COMRAM] unsigned int 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9667 ;;      Params:         4       0       0       0       0       0       0
  9668 ;;      Locals:         2       0       0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0
  9670 ;;      Totals:         6       0       0       0       0       0       0
  9671 ;;Total ram usage:        6 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		i2_UART_buff_put
  9677 ;;		i2_UART_buff_get
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text61
  9682  001CDC                     __ptext61:
  9683                           	opt stack 0
  9684  001CDC                     i2_UART_buff_modulo_inc:
  9685                           	opt stack 20
  9686                           
  9687                           ;UART.c: 109: unsigned int my_value = value + 1;
  9688                           
  9689                           ;incstack = 0
  9690  001CDC  0E01               	movlw	1
  9691  001CDE  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
  9692  001CE0  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  9693  001CE2  0E00               	movlw	0
  9694  001CE4  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
  9695  001CE6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  9696                           
  9697                           ;UART.c: 110: if (my_value >= modulus) {
  9698  001CE8  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
  9699  001CEA  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
  9700  001CEC  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
  9701  001CEE  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
  9702  001CF0  A0D8               	btfss	status,0,c
  9703  001CF2  D004               	goto	i2l3093
  9704                           
  9705                           ;UART.c: 111: my_value = 0;
  9706  001CF4  0E00               	movlw	0
  9707  001CF6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  9708  001CF8  0E00               	movlw	0
  9709  001CFA  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  9710  001CFC                     i2l3093:
  9711                           
  9712                           ;UART.c: 112: }
  9713                           ;UART.c: 113: return (my_value);
  9714  001CFC  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
  9715  001D00  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
  9716  001D04  0012               	return	
  9717  001D06                     __end_ofi2_UART_buff_modulo_inc:
  9718                           	opt stack 0
  9719                           pclatu	equ	0xFFB
  9720                           pclath	equ	0xFFA
  9721                           tblptru	equ	0xFF8
  9722                           tblptrh	equ	0xFF7
  9723                           tblptrl	equ	0xFF6
  9724                           tablat	equ	0xFF5
  9725                           prodh	equ	0xFF4
  9726                           prodl	equ	0xFF3
  9727                           intcon	equ	0xFF2
  9728                           intcon2	equ	0xFF1
  9729                           postinc0	equ	0xFEE
  9730                           fsr0h	equ	0xFEA
  9731                           fsr0l	equ	0xFE9
  9732                           wreg	equ	0xFE8
  9733                           indf1	equ	0xFE7
  9734                           postdec1	equ	0xFE5
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _ADC_ISR *****************
  9746 ;; Defined at:
  9747 ;;		line 130 in file "mcc_generated_files/adc.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		None
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9761 ;;      Params:         0       0       0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; This function calls:
  9768 ;;		Nothing
  9769 ;; This function is called by:
  9770 ;;		_INTERRUPT_InterruptManager
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text62
  9775  001EC2                     __ptext62:
  9776                           	opt stack 0
  9777  001EC2                     _ADC_ISR:
  9778                           	opt stack 22
  9779                           
  9780                           ;adc.c: 133: PIR1bits.ADIF = 0;
  9781                           
  9782                           ;incstack = 0
  9783  001EC2  9C9E               	bcf	3998,6,c	;volatile
  9784  001EC4  0012               	return		;funcret
  9785  001EC6                     __end_of_ADC_ISR:
  9786                           	opt stack 0
  9787  0000                     pclatu	equ	0xFFB
  9788                           pclath	equ	0xFFA
  9789                           tblptru	equ	0xFF8
  9790                           tblptrh	equ	0xFF7
  9791                           tblptrl	equ	0xFF6
  9792                           tablat	equ	0xFF5
  9793                           prodh	equ	0xFF4
  9794                           prodl	equ	0xFF3
  9795                           intcon	equ	0xFF2
  9796                           intcon2	equ	0xFF1
  9797                           postinc0	equ	0xFEE
  9798                           fsr0h	equ	0xFEA
  9799                           fsr0l	equ	0xFE9
  9800                           wreg	equ	0xFE8
  9801                           indf1	equ	0xFE7
  9802                           postdec1	equ	0xFE5
  9803                           fsr1h	equ	0xFE2
  9804                           fsr1l	equ	0xFE1
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           postdec2	equ	0xFDD
  9808                           plusw2	equ	0xFDB
  9809                           fsr2h	equ	0xFDA
  9810                           fsr2l	equ	0xFD9
  9811                           status	equ	0xFD8
  9812                           pclatu	equ	0xFFB
  9813                           pclath	equ	0xFFA
  9814                           tblptru	equ	0xFF8
  9815                           tblptrh	equ	0xFF7
  9816                           tblptrl	equ	0xFF6
  9817                           tablat	equ	0xFF5
  9818                           prodh	equ	0xFF4
  9819                           prodl	equ	0xFF3
  9820                           intcon	equ	0xFF2
  9821                           intcon2	equ	0xFF1
  9822                           postinc0	equ	0xFEE
  9823                           fsr0h	equ	0xFEA
  9824                           fsr0l	equ	0xFE9
  9825                           wreg	equ	0xFE8
  9826                           indf1	equ	0xFE7
  9827                           postdec1	equ	0xFE5
  9828                           fsr1h	equ	0xFE2
  9829                           fsr1l	equ	0xFE1
  9830                           indf2	equ	0xFDF
  9831                           postinc2	equ	0xFDE
  9832                           postdec2	equ	0xFDD
  9833                           plusw2	equ	0xFDB
  9834                           fsr2h	equ	0xFDA
  9835                           fsr2l	equ	0xFD9
  9836                           status	equ	0xFD8
  9837                           
  9838                           	psect	rparam
  9839  0000                     pclatu	equ	0xFFB
  9840                           pclath	equ	0xFFA
  9841                           tblptru	equ	0xFF8
  9842                           tblptrh	equ	0xFF7
  9843                           tblptrl	equ	0xFF6
  9844                           tablat	equ	0xFF5
  9845                           prodh	equ	0xFF4
  9846                           prodl	equ	0xFF3
  9847                           intcon	equ	0xFF2
  9848                           intcon2	equ	0xFF1
  9849                           postinc0	equ	0xFEE
  9850                           fsr0h	equ	0xFEA
  9851                           fsr0l	equ	0xFE9
  9852                           wreg	equ	0xFE8
  9853                           indf1	equ	0xFE7
  9854                           postdec1	equ	0xFE5
  9855                           fsr1h	equ	0xFE2
  9856                           fsr1l	equ	0xFE1
  9857                           indf2	equ	0xFDF
  9858                           postinc2	equ	0xFDE
  9859                           postdec2	equ	0xFDD
  9860                           plusw2	equ	0xFDB
  9861                           fsr2h	equ	0xFDA
  9862                           fsr2l	equ	0xFD9
  9863                           status	equ	0xFD8
  9864                           
  9865                           	psect	temp
  9866  000043                     btemp:
  9867                           	opt stack 0
  9868  000043                     	ds	1
  9869  0000                     int$flags	set	btemp
  9870                           pclatu	equ	0xFFB
  9871                           pclath	equ	0xFFA
  9872                           tblptru	equ	0xFF8
  9873                           tblptrh	equ	0xFF7
  9874                           tblptrl	equ	0xFF6
  9875                           tablat	equ	0xFF5
  9876                           prodh	equ	0xFF4
  9877                           prodl	equ	0xFF3
  9878                           intcon	equ	0xFF2
  9879                           intcon2	equ	0xFF1
  9880                           postinc0	equ	0xFEE
  9881                           fsr0h	equ	0xFEA
  9882                           fsr0l	equ	0xFE9
  9883                           wreg	equ	0xFE8
  9884                           indf1	equ	0xFE7
  9885                           postdec1	equ	0xFE5
  9886                           fsr1h	equ	0xFE2
  9887                           fsr1l	equ	0xFE1
  9888                           indf2	equ	0xFDF
  9889                           postinc2	equ	0xFDE
  9890                           postdec2	equ	0xFDD
  9891                           plusw2	equ	0xFDB
  9892                           fsr2h	equ	0xFDA
  9893                           fsr2l	equ	0xFD9
  9894                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         600
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      66
    BANK0           160     94     160
    BANK1           256     21     129
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    GetDataDict@DataArray	PTR unsigned char  size(2) Largest target is 4
		 -> ComController@DataToSend(BANK1[4]), 

    cobs_decode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK1[30]), 

    cobs_decode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK1[30]), 

    cobs_encode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_code_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK0[30]), 

    cobs_encode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK0[30]), 

    ComController@DTI	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    sendData@DTS	PTR unsigned char  size(2) Largest target is 4
		 -> ComController@DataToSend(BANK1[4]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), sendData@SendArray(BANK0[30]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 


Critical Paths under _main in COMRAM

    _receiveData->_ComController
    _Receive_get->_UART_buff_get
    _Receive_available->_UART_buff_size
    _ComController->_sendData
    _sendData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _UART_buff_get->_UART_buff_modulo_inc
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _Update->_writeRegisters
    _StartUp595->_Clear595
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte
    _CoolingStop->_PotClear
    _CoolingStart->_PotSetpoint
    _PotSetpoint->_Delay
    _PotClear->_Delay

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_ReadCurrent
    i2_Update->i2_writeRegisters
    i2_writeRegisters->i2_Delay
    _FuseSystem->___wmul
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _receiveData->_ComController
    _ComController->_sendData
    _sendData->_cobs_encode
    _CoolingStart->_PotSetpoint

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _updateComms->_receiveData
    _receiveData->_ComController

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   42987
                                             16 BANK1      5     5      0
                 _ComputeStorageData
                       _CoolingCheck
                       _CoolingStart
                        _CoolingStop
                   _DATAEE_WriteByte
                         _PDUStartup
                 _PWM4_LoadDutyValue
                        _PotSetpoint
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   13608
                        _receiveData
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         12    12      0   13608
                                              4 BANK1     12    12      0
                               _CRC8
                      _ComController
                  _Receive_available
                        _Receive_get
                        _cobs_decode
 ---------------------------------------------------------------------------------
 (3) _cobs_decode                                         24    16      8    1783
                                             28 COMRAM    10     2      8
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1308
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     176
                                             30 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     176
                                             28 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ComController                                        9     5      4    9471
                                             44 COMRAM     1     1      0
                                             90 BANK0      4     0      4
                                              0 BANK1      4     4      0
                              _Delay
                        _GetDataDict
                           _sendData
 ---------------------------------------------------------------------------------
 (4) _sendData                                            81    74      7    6596
                                             40 COMRAM     4     4      0
                                             13 BANK0     77    70      7
                               _CRC8
                           _Send_put
                        _cobs_encode
 ---------------------------------------------------------------------------------
 (5) _cobs_encode                                         23    15      8    1613
                                             28 COMRAM    10     2      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) _Send_put                                             1     1      0    2913
                                             39 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (6) _UART_buff_put                                        5     2      3    1574
                                             34 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (4) _UART_buff_get                                        5     3      2    1308
                                             34 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _UART_buff_modulo_inc                                 6     2      4     850
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CRC8                                                 7     4      3     604
                                             28 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) _GetDataDict                                          8     4      4     772
                                             28 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     888
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     888
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2     888
                                             36 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     677
                                             28 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0   17969
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (2) _Update                                               0     0      0    1855
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    3642
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0    1954
                                             41 COMRAM     2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (3) _writeRegisters                                       4     4      0    1855
                                             37 COMRAM     4     4      0
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _EnableSlavePower                                     3     1      2   12311
                                             38 COMRAM     3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (3) _SetPin595                                           10     4      6   10623
                                             28 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     161
                                             29 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1    1176
                                             28 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _CoolingStop                                          0     0      0    2178
                 _PWM4_LoadDutyValue
                           _PotClear
 ---------------------------------------------------------------------------------
 (1) _CoolingStart                                         0     0      0    4309
                 _PWM4_LoadDutyValue
                           _PotClear
                        _PotSetpoint
 ---------------------------------------------------------------------------------
 (1) _PotSetpoint                                         10     8      2    2131
                                             37 COMRAM     4     2      2
                                              0 BANK0      6     6      0
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _PotClear                                             2     2      0    1756
                                             37 COMRAM     2     2      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                9     5      4    1688
                                             28 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     422
                                             28 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _CoolingCheck                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                          14    14      0    6300
                                             14 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0    5091
                         _FuseSystem
                        _ReadCurrent
 ---------------------------------------------------------------------------------
 (10) _ReadCurrent                                         1     1      0    4644
                                             13 COMRAM     1     1      0
                  _ADC_GetConversion
                        i2_SetPin595
                           i2_Update
 ---------------------------------------------------------------------------------
 (11) i2_Update                                            0     0      0     212
                   i2_writeRegisters
 ---------------------------------------------------------------------------------
 (12) i2_writeRegisters                                    4     4      0     212
                                              9 COMRAM     4     4      0
                            i2_Delay
 ---------------------------------------------------------------------------------
 (13) i2_Delay                                             9     5      4      98
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (11) i2_SetPin595                                        10     4      6    4278
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) _FuseSystem                                          4     4      0     447
                                              6 COMRAM     4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___wmul                                              6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_size                                    2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_get                                     5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_put                                     5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (11) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComputeStorageData
     _DATAEE_ReadByte
   _CoolingCheck
   _CoolingStart
     _PWM4_LoadDutyValue
     _PotClear
       _Delay
     _PotSetpoint
       _Delay
   _CoolingStop
     _PWM4_LoadDutyValue
     _PotClear
       _Delay
   _DATAEE_WriteByte
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _PWM4_LoadDutyValue
   _PotSetpoint
     _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _updateComms
     _receiveData
       _CRC8
       _ComController
         _Delay
         _GetDataDict
         _sendData
           _CRC8
           _Send_put
             _UART_buff_get
               _UART_buff_modulo_inc
             _UART_buff_put
               _UART_buff_modulo_inc
           _cobs_encode
       _Receive_available
         _UART_buff_size
       _Receive_get
         _UART_buff_get
           _UART_buff_modulo_inc
       _cobs_decode

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _TMR1_ISR
     _FuseSystem
       ___wmul
     _ReadCurrent
       _ADC_GetConversion
       i2_SetPin595
       i2_Update
         i2_writeRegisters
           i2_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     15      81       6       50.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5E      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      42       1       70.2%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2FF       9        0.0%
DATA                 0      0     2FF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Aug 11 22:25:29 2017

                __end_of_GetDataDict 152E               i2_UART_buff_modulo_inc 1CDC  
                      ??_CoolingStop 0028                       ??_CoolingCheck 001D  
           cobs_encode@dst_write_ptr 0068             GetDataDict@ReturnCounter 0024  
                ___wmul@multiplicand 0003                       ??_CoolingStart 002A  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l160 1B4E                                  l711 109A  
                                l720 13A0                                  l536 1696  
                                l714 10F4                                  l538 16A0  
                                l719 1366                                  l754 1A42  
                                l589 15BC                                  l854 151A  
                       __CFG_CPB$OFF 000000                                  _PR2 000FBB  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 0039  
                    __end_of_ADC_ISR 1EC6                      _TMR2_Initialize 1E28  
                    _PWM4_Initialize 1E3C                                  prod 000FF3  
                                wreg 000FE8        i2UART_buff_modulo_inc@modulus 0003  
        _COBS_DECODE_DST_BUF_LEN_MAX 003C                         __CFG_LVP$OFF 000000  
                               l4013 08CC                                 l4111 0F7A  
                               l4009 08B8                                 l4131 104E  
                               l4205 1126                                 l4141 118E  
                               l4145 11B0                                 l4137 1152  
                               l4153 120A                                 l4171 123A  
                               l4147 11CE                                 l4139 1170  
                               l4181 1264                                 l4149 11EC  
                               l4175 124A                                 l3703 1A2C  
                               l3711 1A48                                 l3713 1A4E  
                               l4195 10D4                                 l3803 168E  
                               l3821 1CA0                                 l3653 0D38  
                               l3741 0998                                 l4365 0CA6  
                               l3647 1CD2                                 l3735 0976  
                               l4383 0CE4                                 l4375 0CC8  
                               l3817 1C90                                 l3673 15B8  
                               l3737 097E                                 l3729 0962  
                               l3683 1A86                                 l3915 1B68  
                               l3659 0DA4                                 l3925 1B8E  
                               l3861 0BAC                                 l3853 0B42  
                               l3679 1A6C                                 l3871 14AE  
                               l3759 09E6                                 l3951 07A0  
                               l3943 0784                                 l3881 14E8  
                               l3697 1A16                                 l3785 0A58  
                               l3865 0BC8                                 l3857 0B80  
                               l3795 1662                                 l3787 0A64  
                               l3779 0A36                                 l3877 14D6  
                               l3869 14A6                                 l3949 0798  
                               l3887 1510                                 l3879 14E0  
                               l3991 086C                                 l3959 07C2  
                               l3889 151E                                 l3977 083E  
                               l3969 0802                                 l3979 0842  
                               l3999 0884                __end_of_ComController 1496  
                               _CRC8 1A10                                 u2130 154C  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u2520 0F60  
                               u2620 13A0                                 u2645 1B5C  
                               u2646 1B5E                                 u2767 0F98  
                               u2777 1A72                                 i2l31 1C40  
                               i2l71 0066                                 i2l75 0070  
                               i2l67 004E                                 i2l69 005A  
                               _TMR2 000FBC                                 _WPUB 000F61  
                    __end_ofi2_Delay 1AEE                                 _data 00D6  
                               _main 0BEA             __end_of_EnableSlavePower 1232  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0043                        __CFG_BORV$190 000000  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00AC                        __CFG_IESO$OFF 000000  
                  ?i2_writeRegisters 0001                         ___param_bank 000000  
                      ??_ReadCurrent 000E                   ??i2_writeRegisters 000A  
     i2UART_buff_modulo_inc@my_value 0005            __size_of_DATAEE_WriteByte 0036  
                              ?_CRC8 001D              ComController@DataToSend 016C  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 1E92  
                              ?_main 0001                                _EEADR 000FA9  
                              _ANSB3 0079CB                                _ANSB4 0079CC  
                    _TMR1_StartTimer 1EBA                                _ANSD7 0079DF  
                              _T1CON 000FCD                                _T2CON 000FBA  
                              _LATB0 007C50                                _LATB3 007C53  
                              _LATB4 007C54                                _LATB5 007C55  
                              _LATC5 007C5D                                _LATD4 007C64  
                              _LATD5 007C65                                _LATD6 007C66  
                              _LATD7 007C67                       __CFG_DEBUG$OFF 000000  
                        ?_PDUStartup 0001                                i2l620 1D7A  
                              i2l536 1714                                i2l538 171E  
                              i2l469 17CA                                i2l589 164E  
                              _MCSOn 003B                   _PWM4_LoadDutyValue 1BF8  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                __end_of_CoolingStop 1E76                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _Delay 1A5A                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1BC6  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     ??_writeRegisters 0026  
                   __end_of_TMR1_ISR 1BC6                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                    _DATAEE_ReadByte 1E50                       __CFG_EBTRB$OFF 000000  
                ?_PWM4_LoadDutyValue 001D                   __CFG_MCLRE$EXTMCLR 000000  
                              main@i 017E                                main@j 017C  
            __end_of_TMR1_Initialize 1D72                     __end_ofi2_Update 1EB6  
                              pclath 000FFA                                tablat 000FF5  
                      ??_Receive_get 0028                        receiveData@CS 0175  
                              plusw2 000FDB                                status 000FD8  
                        _GetDataDict 1496                     __end_of_Clear595 1B94  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 1EB6  
                       ?_receiveData 0001                       __CFG_PBADEN$ON 000000  
               PotSetpoint@new_point 0026                         __end_of_CRC8 1A5A  
                    __initialization 1846           __end_of_EUSART1_Initialize 1B2A  
                       __end_of_main 0D18                           _CurrentADC 00CA  
               ??_PWM4_LoadDutyValue 001F                               ??_CRC8 0020  
            __end_of_PWM4_Initialize 1E50              __end_of_TMR2_Initialize 1E3C  
                          ??_ADC_ISR 0001          ?_INTERRUPT_InterruptManager 0001  
               PotSetpoint@set_point 0060                           _FuseSystem 174E  
                             ??_main 002E                  __end_of_ReadCurrent 0740  
                   __end_of_PotClear 13D6                        __activetblptr 000002  
                   __end_of_Send_put 1C86            __size_ofi2_UART_buff_size 0016  
                             ?_Delay 001D                ?_EUSART1_Transmit_ISR 0001  
               GetDataDict@DataArray 001E                 GetDataDict@DataCount 0023  
               GetDataDict@DataTable 0022                            ??i2_Delay 0005  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                 __size_of_cobs_decode 01BE  
                        FuseSystem@i 0009                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _CCPR2H 000F68                               _CCPR2L 000F67  
                             _EECON2 000FA7                 __size_of_cobs_encode 0198  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               _T1GCON 000FCC  
               __end_of_CoolingCheck 1EC2                      i2_UART_buff_get 15C0  
                             _RC1STA 000FAB                      i2_UART_buff_put 0E32  
                             i2l3201 02E0                               i2l3213 0510  
                             Delay@i 0022                               i2l3207 03F8  
                             i2l3219 0628                               i2l3093 1CFC  
                             i2l3181 17B4                               i2l3173 1766  
                     __CFG_WDTEN$OFF 000000                               i2l3185 17C4  
                             i2l3169 1756                               i2l2801 1AB6  
                             i2l3417 1BBE                               i2l3179 17AC  
                             i2l3195 01C8                               i2l3365 0EBE  
                             i2l2805 1AD0                               i2l3359 0E52  
        UART_buff_modulo_inc@modulus 001F                               i2l3379 164A  
                             i2l2915 170C                               i2l2907 16E0  
                             i2l3399 1BF0                               _TABLAT 000FF5  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                 __end_of_CoolingStart 1DCE  
                             _TX1STA 000FAC                               _TRISB3 007C9B  
                             _TRISB4 007C9C                               _TRISB5 007C9D  
                             _TXREG1 000FAD                  __size_of_PDUStartup 0062  
                     __CFG_XINST$OFF 000000                        ??_PotSetpoint 0028  
                __end_of_Receive_get 1E84                         _CCPTMRS1bits 000F48  
                             _Update 1EAA                   __size_of_SetPin595 004E  
                      _output_buffer 0300              __end_of_TMR1_StartTimer 1EBE  
                             ___wmul 1D06                            CRC8@tempI 0022  
                     __CFG_STVREN$ON 000000                          _CoolingStop 1E64  
                             _memset 1C86                               clear_0 186C  
                             clear_1 1878                               clear_2 1884  
                             clear_3 1890                               clear_4 189C  
                             main@UP 0180                     __end_of_sendData 0BEA  
            __end_of_DATAEE_ReadByte 1E64                         __pdataCOMRAM 003C  
             cobs_encode@dst_buf_len 001F               cobs_encode@dst_buf_ptr 001D  
                      Send_put@_data 0028                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         _StartUp595 1912             ADC_GetConversion@channel 0005  
       __end_of_UART_buff_modulo_inc 1CDC              __end_of_TMR2_StartTimer 1EBA  
      __size_of_INTERRUPT_Initialize 000A                    ReadCurrent@gather 000E  
                   ?_TMR1_Initialize 0001                    _SYSTEM_Initialize 1D2C  
                         __accesstop 0060              __end_of__initialization 18A2  
                       ?i2_SetPin595 0001                        sendData@count 00B2  
                      sendData@lenth 0072                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001              ?i2_UART_buff_modulo_inc 0001  
                       ?_updateComms 0001                        __end_of_Delay 1AA4  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0027  
                        _ReadCurrent 00B0                            ?_TMR1_ISR 0001  
                   _DATAEE_WriteByte 1B2A                     ?_TMR2_Initialize 0001  
                   ?_PWM4_Initialize 0001                          ?_FuseSystem 0001  
                          ?i2_Update 0001                  __end_of_PotSetpoint 114E  
        __size_of_ComputeStorageData 00DC          PWM4_LoadDutyValue@dutyValue 001D  
                 UART_buff_get@_this 0023                          _Currentcomp 00E2  
              __end_of_UART_buff_get 15C0               ??_EUSART1_Transmit_ISR 000C  
              __end_of_UART_buff_put 0E32                            ?_Clear595 0001  
                            ??_Delay 0021              __end_ofi2_UART_buff_get 1652  
            __end_ofi2_UART_buff_put 0F4C          __end_of_EUSART1_Receive_ISR 1D92  
                            CRC8@crc 0023                              CRC8@len 001F  
                            CRC8@sum 0020                    __end_of_SetPin595 19C2  
          __end_of_SYSTEM_Initialize 1D50                          sendData@DTS 0070  
             cobs_decode@dst_buf_len 001F                           __pbssBANK0 00BE  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                         __pbssBANK3 0300               cobs_decode@dst_buf_ptr 001D  
                    __CFG_PLLCFG$OFF 000000                          _Receive_get 1E76  
     __end_ofi2_UART_buff_modulo_inc 1D06                    ?_EnableSlavePower 0027  
            __size_of_UART_buff_init 001E                          _ReciveArray 014E  
            __size_of_UART_buff_size 0016                            ?_PotClear 0001  
                          ?_Send_put 0001                   ??_EnableSlavePower 0029  
               __size_of_receiveData 0106                   __CFG_CCP2MX$PORTC1 000000  
                            ?_Update 0001                              ?___wmul 0001  
                   ?_TMR1_StartTimer 0001                           ??_TMR1_ISR 000F  
                 __CFG_CCP3MX$PORTB5 000000             cobs_decode@dst_write_ptr 0068  
         cobs_decode@remaining_bytes 0066                              _CCP2CON 000F66  
                            _ADC_ISR 1EC2                              ?_memset 001D  
                         ??i2_Update 000E              __size_of_ADC_Initialize 0018  
                   ?_DATAEE_ReadByte 0001                         ??_PDUStartup 002C  
                 UART_buff_put@_this 0023                      cobs_decode@F192 0031  
                         ??_Clear595 002A                     i2_UART_buff_size 1E12  
          __size_ofi2_writeRegisters 007E          i2UART_buff_modulo_inc@value 0001  
              __size_of_CoolingCheck 0004                              _OSCCON2 000FD2  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                          ?_StartUp595 0001  
                  _Receive_available 1DE6         UART_buff_modulo_inc@my_value 0021  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                  sendData@whereToSend 00B1  
                            i2_Delay 1AA4                __size_of_CoolingStart 001E  
                   ?_TMR2_StartTimer 0001                   ?_Receive_available 001F  
               DATAEE_WriteByte@bAdd 001E                         ?_GetDataDict 001D  
                __size_of_FuseSystem 007E                     ComController@DTI 00BA  
                ??_Receive_available 0021                            ?_sendData 006D  
                            _Current 00BE                      __CFG_PWRTEN$OFF 000000  
                         ??_PotClear 0026                           ??_Send_put 0028  
                            __Hparam 0000                              __Lparam 0000  
                 __end_of_PDUStartup 1912               cobs_encode@src_end_ptr 0060  
                        _PotSetpoint 1052                      __size_of_Update 0006  
               _UART_buff_modulo_inc 1CB2                      __size_of___wmul 0026  
                       _CoolingCheck 1EBE                              __pcinit 1846  
             __size_of_ComController 00C0                      __size_of_memset 002C  
                            __ramtop 0600                     i2UART_buff_get@c 000B  
                            __ptext0 0BEA                              __ptext1 1EA4  
                            __ptext2 0F4C                              __ptext3 0740  
                            __ptext4 1E76                              __ptext5 1DE6  
                            __ptext6 1DFC                              __ptext7 13D6  
                            __ptext8 0A96                              __ptext9 08FE  
                       _CoolingStart 1DB0                     i2UART_buff_put@c 0009  
                          _T1CONbits 000FCD           cobs_encode@dst_buf_end_ptr 0063  
              _OSCILLATOR_Initialize 1E84            __end_of_Receive_available 1DFC  
                          _T2CONbits 000FBA                  cobs_encode@src_byte 0062  
                 _EUSART1_Initialize 1AEE                     ?i2_UART_buff_get 0007  
           ??_PIN_MANAGER_Initialize 001D                            Clear595@i 002A  
                   ?i2_UART_buff_put 0007           __size_of_SYSTEM_Initialize 0024  
               end_of_initialization 18A2                            Delay@wait 001D  
                ?_EUSART1_Initialize 0001                      cobs_encode@F180 0034  
                            memset@c 001F                              memset@n 0021  
                            memset@p 0023                        __Lmediumconst 0000  
                         ??_sendData 0029                 __size_ofi2_SetPin595 004E  
                    receiveData@Data 0178                            _PDUFalult 00F8  
              ?_UART_buff_modulo_inc 001D                 __size_of_updateComms 0006  
                            postdec1 000FE5                              postdec2 000FDD  
                __size_of_StartUp595 0062                              postinc0 000FEE  
                            postinc2 000FDE          __size_of_PWM4_LoadDutyValue 0030  
                       ?_CoolingStop 0001                         SetPin595@Reg 001D  
               ??_EUSART1_Initialize 0027                         SetPin595@pin 001F  
                  cobs_decode@result 006B               cobs_decode@src_end_ptr 0060  
                      ??_cobs_decode 0025                        ??_cobs_encode 0025  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                   FuseSystem@i_1200 0007             __end_of_DATAEE_WriteByte 1B60  
                     sendData@result 00B5                        _ComController 13D6  
              i2UART_buff_size@_this 0001                       _UART_buff_init 1D92  
                     _UART_buff_size 1DFC              __size_of_writeRegisters 007E  
                       ?_ReadCurrent 0001         __end_of_INTERRUPT_Initialize 1E9C  
                     __end_of_Update 1EB0               GetDataDict@numbofbytes 0020  
                     __end_of___wmul 1D2C                        __pidataCOMRAM 1E9C  
                       ??_FuseSystem 0007                    __size_of_TMR1_ISR 0032  
                     _ADC_Initialize 1DCE               ?_OSCILLATOR_Initialize 0001  
                     __end_of_memset 1CB2                         receiveData@i 0176  
         __size_of_Receive_available 0016                     i2_writeRegisters 16D0  
                  __size_ofi2_Update 0006                  start_initialization 1846  
    __size_of_PIN_MANAGER_Initialize 007A                EnableSlavePower@slave 0029  
                  __size_of_Clear595 0034                  i2writeRegisters@val 000A  
                          PotClear@x 0026                   ComController@lenth 00BC  
                     ?_ComController 00BA                  __end_of_cobs_decode 08FE  
             __end_of_UART_buff_init 1DB0                       UART_buff_get@c 0027  
             __end_of_UART_buff_size 1E12                  __end_of_cobs_encode 0A96  
                       ?_Receive_get 0001                            _SetPin595 1974  
                     UART_buff_put@c 0025                  DATAEE_ReadByte@bAdd 001D  
                 __end_of_FuseSystem 17CC             __end_ofi2_UART_buff_size 1E28  
               __size_of_GetDataDict 0098               ??_UART_buff_modulo_inc 0021  
           __size_of_TMR1_Initialize 0022                             CRC8@data 001D  
                           ??_Update 002A                    __size_of_PotClear 00C8  
                  __size_of_Send_put 002E                             ??___wmul 0005  
             __end_of_ADC_Initialize 1DE6           __end_of_ComputeStorageData 130E  
                           ?_ADC_ISR 0001                             ??_memset 0023  
          __size_of_EnableSlavePower 00E4                          __pbssCOMRAM 002E  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 0060  
                      __pcstackBANK1 016C                         ??_StartUp595 002C  
           __size_of_PWM4_Initialize 0014             __size_of_TMR2_Initialize 0014  
                           ?i2_Delay 0001                  UART_buff_init@_this 0025  
                  i2writeRegisters@i 000C                      ?_UART_buff_init 0025  
                    ?_UART_buff_size 001D         __size_of_EUSART1_Receive_ISR 0020  
                         ?_SetPin595 001D                        ??_receiveData 0170  
                         sendData@CS 00B4                cobs_encode@search_len 0065  
             __size_of_UART_buff_get 0092               __size_of_UART_buff_put 011A  
             _PIN_MANAGER_Initialize 17CC                    __size_of_sendData 0154  
                       ?_PotSetpoint 0026                            __pintcode 0008  
                 __end_of_StartUp595 1974                      ?_ADC_Initialize 0001  
       ??_INTERRUPT_InterruptManager 000F                 i2UART_buff_get@_this 0007  
               __size_of_CoolingStop 0012                       i2SetPin595@Reg 0001  
                     i2SetPin595@pin 0003                             _BAUD1CON 000FB8  
           __size_of_TMR1_StartTimer 0004                       __size_of_Delay 004A  
                        _cobs_decode 0740                          _cobs_encode 08FE  
             sendData@DataTableIndex 006F                      ??_ComController 002D  
           __size_of_DATAEE_ReadByte 0014          _COBS_ENCODE_DST_BUF_LEN_MAX 003E  
               _INTERRUPT_Initialize 1E92                   cobs_encode@src_len 0023  
                 cobs_encode@src_ptr 0021                       ___wmul@product 0005  
                           _LATCbits 000F8B                       _writeRegisters 1652  
                UART_buff_size@_this 001D                            _registers 0100  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
           __size_of_TMR2_StartTimer 0004                             i2Delay@i 0006  
__size_of_INTERRUPT_InterruptManager 00A4                             i2u181_40 15DE  
                           i2u183_40 1BE0                             i2u184_40 1BB2  
                           _PIR1bits 000F9E                             i2u278_47 1ABC  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                __end_of_receiveData 1052                             _TMR1_ISR 1B94  
                       PotSetpoint@x 0062                         _input_buffer 0200  
               __size_of_ReadCurrent 0690                    ??_TMR1_Initialize 001D  
                   __size_of_ADC_ISR 0004           cobs_decode@dst_buf_end_ptr 0062  
                           i2_Update 1EB0                           _ADCON0bits 000FC2  
                         _ADCON2bits 000FC0                    ___wmul@multiplier 0001  
               i2UART_buff_put@_this 0007                     i2SetPin595@value 0005  
                           _Clear595 1B60                        _UART_buff_get 152E  
                      _UART_buff_put 0D18                    sendData@COBSArray 0074  
              DATAEE_WriteByte@bData 001D        cobs_encode@dst_code_write_ptr 0066  
           ??i2_UART_buff_modulo_inc 0005                          _INTCON2bits 000FF1  
                   __size_ofi2_Delay 004A                            copy_data0 185A  
              ?_INTERRUPT_Initialize 0001                   sendData@ComandByte 006D  
                  ?_DATAEE_WriteByte 001D               __end_of_writeRegisters 16D0  
                 PotSetpoint@new_pos 0064                        ??i2_SetPin595 0007  
                        ??_SetPin595 0023                 EnableSlavePower@onof 0027  
           __size_ofi2_UART_buff_get 0092                    ??_TMR2_Initialize 001D  
                  ??_PWM4_Initialize 001D             __size_ofi2_UART_buff_put 011A  
                 ??_DATAEE_WriteByte 001E                           _EECON1bits 000FA6  
                      ??_updateComms 002E                 __size_of_Receive_get 000E  
           __end_ofi2_writeRegisters 174E                             _PotClear 130E  
                           __Hrparam 0000                             _Send_put 1C58  
         __end_of_PWM4_LoadDutyValue 1C28                             __Lrparam 0000  
                  _ADC_GetConversion 1C28                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 001D  
                 ?_ADC_GetConversion 0001          __size_of_EUSART1_Initialize 003C  
                   _EnableSlavePower 114E                           _ANSELCbits 000F3A  
                     ?_UART_buff_get 0023                       ?_UART_buff_put 0023  
                        CRC8@extract 0021                  ??_ADC_GetConversion 0003  
                   GetDataDict@Error 0021                            sendData@i 00B8  
                           __ptext10 1C58                             __ptext11 0D18  
                           __ptext20 1EBA                             __ptext12 152E  
                           __ptext21 1E3C                             __ptext13 1CB2  
                         _T1GCONbits 000FCC                             __ptext30 1EAA  
                           __ptext22 17CC                             __ptext14 1A10  
                           __ptext31 1912                             __ptext23 1E84  
                           __ptext15 1496                             __ptext40 1DB0  
                           __ptext32 1B60                             __ptext24 1E92  
                           __ptext16 1D2C                             __ptext41 1052  
                           __ptext33 1652                             __ptext25 1AEE  
                           __ptext17 1E28                             __ptext50 16D0  
                           __ptext42 130E                             __ptext34 114E  
                           __ptext26 1D92                             __ptext18 1EB6  
                           __ptext51 1AA4                             __ptext43 1A5A  
                           __ptext35 1974                             __ptext27 1C86  
                           __ptext19 1D50                             __ptext60 0E32  
                           __ptext52 19C2                             __ptext44 1BF8  
                           __ptext36 1232                             __ptext28 1DCE  
                           __ptext61 1CDC                             __ptext53 1C28  
                           __ptext45 1EBE                             __ptext37 1E50  
                           __ptext29 18B0                             __ptext62 1EC2  
                           __ptext54 174E                             __ptext38 1B2A  
                           __ptext55 1D06                             __ptext47 1B94  
                           __ptext39 1E64                             __ptext56 1BC6  
                           __ptext48 00B0                             __ptext57 1E12  
                           __ptext49 1EB0                             __ptext58 15C0  
                           __ptext59 1D72                    ??_TMR1_StartTimer 001D  
                      __size_of_CRC8 004A            GetDataDict@DataTableIndex 001D  
                        i2Delay@wait 0001          DATAEE_WriteByte@GIEBitValue 001F  
            EUSART1_Receive_ISR@data 000C                      ?_writeRegisters 0001  
                      __size_of_main 012E                    cobs_encode@result 006A  
                        _receiveData 0F4C                             _readwhat 0040  
                     _Transmit_stall 0042                             _sendData 0A96  
                  ??_DATAEE_ReadByte 001D            __end_of_ADC_GetConversion 1C58  
                  ?i2_UART_buff_size 0001                    sendData@DataLenth 00B0  
                  sendData@DataTable 006E                           _RC1STAbits 000FAB  
                __end_ofi2_SetPin595 1A10                             _prev_pos 0037  
                       _ProcessArray 0130                   ??i2_UART_buff_size 0003  
                  writeRegisters@val 0026                             int$flags 0043  
                  ??_TMR2_StartTimer 001D                  __end_of_updateComms 1EAA  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
               __size_of_PotSetpoint 00FC                  _EUSART1_Receive_ISR 1D72  
                  receiveData@result 0179                           _INTCONbits 000FF2  
                ComputeStorageData@i 0020            UART_buff_modulo_inc@value 001D  
                   ??_UART_buff_init 0027                     ??_UART_buff_size 001F  
                 _ComputeStorageData 1232               ??_INTERRUPT_Initialize 001D  
                           memset@p1 001D      __size_ofi2_UART_buff_modulo_inc 002A  
                           intlevel2 0000                  cobs_decode@len_code 006A  
               ?_EUSART1_Receive_ISR 0001                        ??_GetDataDict 0021  
                ?_ComputeStorageData 0001              ?_PIN_MANAGER_Initialize 0001  
                       cobs_decode@i 0065                       SetPin595@value 0021  
       __end_of_EUSART1_Transmit_ISR 1BF8                     ??_ADC_Initialize 001D  
                  sendData@SendArray 0092                    ??i2_UART_buff_get 0009  
                  ??i2_UART_buff_put 000A                  cobs_decode@src_byte 0064  
      __size_of_UART_buff_modulo_inc 002A                        ?_CoolingCheck 0001  
                  _DataTableArrayOne 00EE                      ??_UART_buff_get 0025  
                  _DataTableArrayTwo 002E                      ??_UART_buff_put 0026  
               ??_ComputeStorageData 001E                        ?_CoolingStart 0001  
                         _PDUStartup 18B0                         ?_cobs_decode 001D  
                       ?_cobs_encode 001D                    __CFG_T3CMX$PORTC0 000000  
                    writeRegisters@i 0028                   cobs_decode@src_len 0023  
                 cobs_decode@src_ptr 0021                ??_EUSART1_Receive_ISR 000C  
     __end_of_PIN_MANAGER_Initialize 1846                          i2_SetPin595 19C2  
                  __CFG_FOSC$INTIO67 000000           __size_of_ADC_GetConversion 0030  
                    _TMR1_Initialize 1D50                          _updateComms 1EA4  
