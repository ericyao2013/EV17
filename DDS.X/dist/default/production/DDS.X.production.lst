

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 20 16:39:55 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 1.42
   100                           ; Generated 13/04/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F45K22 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataCOMRAM
   135  002788                     __pidataCOMRAM:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _Transmit_stall
   139  002788  01                 	db	1
   140                           
   141                           	psect	mediumconst
   142  007BD2                     __pmediumconst:
   143                           	opt stack 0
   144  007BD2  00                 	db	0
   145  007BD3                     _OledFont:
   146                           	opt stack 0
   147  007BD3  00                 	db	0
   148  007BD4  00                 	db	0
   149  007BD5  00                 	db	0
   150  007BD6  00                 	db	0
   151  007BD7  00                 	db	0
   152  007BD8  00                 	db	0
   153  007BD9  00                 	db	0
   154  007BDA  00                 	db	0
   155  007BDB  00                 	db	0
   156  007BDC  00                 	db	0
   157  007BDD  5F                 	db	95
   158  007BDE  00                 	db	0
   159  007BDF  00                 	db	0
   160  007BE0  00                 	db	0
   161  007BE1  00                 	db	0
   162  007BE2  00                 	db	0
   163  007BE3  00                 	db	0
   164  007BE4  00                 	db	0
   165  007BE5  07                 	db	7
   166  007BE6  00                 	db	0
   167  007BE7  07                 	db	7
   168  007BE8  00                 	db	0
   169  007BE9  00                 	db	0
   170  007BEA  00                 	db	0
   171  007BEB  00                 	db	0
   172  007BEC  14                 	db	20
   173  007BED  7F                 	db	127
   174  007BEE  14                 	db	20
   175  007BEF  7F                 	db	127
   176  007BF0  14                 	db	20
   177  007BF1  00                 	db	0
   178  007BF2  00                 	db	0
   179  007BF3  00                 	db	0
   180  007BF4  24                 	db	36
   181  007BF5  2A                 	db	42
   182  007BF6  7F                 	db	127
   183  007BF7  2A                 	db	42
   184  007BF8  12                 	db	18
   185  007BF9  00                 	db	0
   186  007BFA  00                 	db	0
   187  007BFB  00                 	db	0
   188  007BFC  23                 	db	35
   189  007BFD  13                 	db	19
   190  007BFE  08                 	db	8
   191  007BFF  64                 	db	100
   192  007C00  62                 	db	98
   193  007C01  00                 	db	0
   194  007C02  00                 	db	0
   195  007C03  00                 	db	0
   196  007C04  36                 	db	54
   197  007C05  49                 	db	73
   198  007C06  55                 	db	85
   199  007C07  22                 	db	34
   200  007C08  50                 	db	80
   201  007C09  00                 	db	0
   202  007C0A  00                 	db	0
   203  007C0B  00                 	db	0
   204  007C0C  00                 	db	0
   205  007C0D  05                 	db	5
   206  007C0E  03                 	db	3
   207  007C0F  00                 	db	0
   208  007C10  00                 	db	0
   209  007C11  00                 	db	0
   210  007C12  00                 	db	0
   211  007C13  00                 	db	0
   212  007C14  1C                 	db	28
   213  007C15  22                 	db	34
   214  007C16  41                 	db	65
   215  007C17  00                 	db	0
   216  007C18  00                 	db	0
   217  007C19  00                 	db	0
   218  007C1A  00                 	db	0
   219  007C1B  00                 	db	0
   220  007C1C  41                 	db	65
   221  007C1D  22                 	db	34
   222  007C1E  1C                 	db	28
   223  007C1F  00                 	db	0
   224  007C20  00                 	db	0
   225  007C21  00                 	db	0
   226  007C22  00                 	db	0
   227  007C23  00                 	db	0
   228  007C24  08                 	db	8
   229  007C25  2A                 	db	42
   230  007C26  1C                 	db	28
   231  007C27  2A                 	db	42
   232  007C28  08                 	db	8
   233  007C29  00                 	db	0
   234  007C2A  00                 	db	0
   235  007C2B  00                 	db	0
   236  007C2C  08                 	db	8
   237  007C2D  08                 	db	8
   238  007C2E  3E                 	db	62
   239  007C2F  08                 	db	8
   240  007C30  08                 	db	8
   241  007C31  00                 	db	0
   242  007C32  00                 	db	0
   243  007C33  00                 	db	0
   244  007C34  A0                 	db	160
   245  007C35  60                 	db	96
   246  007C36  00                 	db	0
   247  007C37  00                 	db	0
   248  007C38  00                 	db	0
   249  007C39  00                 	db	0
   250  007C3A  00                 	db	0
   251  007C3B  00                 	db	0
   252  007C3C  08                 	db	8
   253  007C3D  08                 	db	8
   254  007C3E  08                 	db	8
   255  007C3F  08                 	db	8
   256  007C40  08                 	db	8
   257  007C41  00                 	db	0
   258  007C42  00                 	db	0
   259  007C43  00                 	db	0
   260  007C44  60                 	db	96
   261  007C45  60                 	db	96
   262  007C46  00                 	db	0
   263  007C47  00                 	db	0
   264  007C48  00                 	db	0
   265  007C49  00                 	db	0
   266  007C4A  00                 	db	0
   267  007C4B  00                 	db	0
   268  007C4C  20                 	db	32
   269  007C4D  10                 	db	16
   270  007C4E  08                 	db	8
   271  007C4F  04                 	db	4
   272  007C50  02                 	db	2
   273  007C51  00                 	db	0
   274  007C52  00                 	db	0
   275  007C53  00                 	db	0
   276  007C54  3E                 	db	62
   277  007C55  51                 	db	81
   278  007C56  49                 	db	73
   279  007C57  45                 	db	69
   280  007C58  3E                 	db	62
   281  007C59  00                 	db	0
   282  007C5A  00                 	db	0
   283  007C5B  00                 	db	0
   284  007C5C  00                 	db	0
   285  007C5D  42                 	db	66
   286  007C5E  7F                 	db	127
   287  007C5F  40                 	db	64
   288  007C60  00                 	db	0
   289  007C61  00                 	db	0
   290  007C62  00                 	db	0
   291  007C63  00                 	db	0
   292  007C64  62                 	db	98
   293  007C65  51                 	db	81
   294  007C66  49                 	db	73
   295  007C67  49                 	db	73
   296  007C68  46                 	db	70
   297  007C69  00                 	db	0
   298  007C6A  00                 	db	0
   299  007C6B  00                 	db	0
   300  007C6C  22                 	db	34
   301  007C6D  41                 	db	65
   302  007C6E  49                 	db	73
   303  007C6F  49                 	db	73
   304  007C70  36                 	db	54
   305  007C71  00                 	db	0
   306  007C72  00                 	db	0
   307  007C73  00                 	db	0
   308  007C74  18                 	db	24
   309  007C75  14                 	db	20
   310  007C76  12                 	db	18
   311  007C77  7F                 	db	127
   312  007C78  10                 	db	16
   313  007C79  00                 	db	0
   314  007C7A  00                 	db	0
   315  007C7B  00                 	db	0
   316  007C7C  27                 	db	39
   317  007C7D  45                 	db	69
   318  007C7E  45                 	db	69
   319  007C7F  45                 	db	69
   320  007C80  39                 	db	57
   321  007C81  00                 	db	0
   322  007C82  00                 	db	0
   323  007C83  00                 	db	0
   324  007C84  3C                 	db	60
   325  007C85  4A                 	db	74
   326  007C86  49                 	db	73
   327  007C87  49                 	db	73
   328  007C88  30                 	db	48
   329  007C89  00                 	db	0
   330  007C8A  00                 	db	0
   331  007C8B  00                 	db	0
   332  007C8C  01                 	db	1
   333  007C8D  71                 	db	113
   334  007C8E  09                 	db	9
   335  007C8F  05                 	db	5
   336  007C90  03                 	db	3
   337  007C91  00                 	db	0
   338  007C92  00                 	db	0
   339  007C93  00                 	db	0
   340  007C94  36                 	db	54
   341  007C95  49                 	db	73
   342  007C96  49                 	db	73
   343  007C97  49                 	db	73
   344  007C98  36                 	db	54
   345  007C99  00                 	db	0
   346  007C9A  00                 	db	0
   347  007C9B  00                 	db	0
   348  007C9C  06                 	db	6
   349  007C9D  49                 	db	73
   350  007C9E  49                 	db	73
   351  007C9F  29                 	db	41
   352  007CA0  1E                 	db	30
   353  007CA1  00                 	db	0
   354  007CA2  00                 	db	0
   355  007CA3  00                 	db	0
   356  007CA4  00                 	db	0
   357  007CA5  36                 	db	54
   358  007CA6  36                 	db	54
   359  007CA7  00                 	db	0
   360  007CA8  00                 	db	0
   361  007CA9  00                 	db	0
   362  007CAA  00                 	db	0
   363  007CAB  00                 	db	0
   364  007CAC  00                 	db	0
   365  007CAD  AC                 	db	172
   366  007CAE  6C                 	db	108
   367  007CAF  00                 	db	0
   368  007CB0  00                 	db	0
   369  007CB1  00                 	db	0
   370  007CB2  00                 	db	0
   371  007CB3  00                 	db	0
   372  007CB4  08                 	db	8
   373  007CB5  14                 	db	20
   374  007CB6  22                 	db	34
   375  007CB7  41                 	db	65
   376  007CB8  00                 	db	0
   377  007CB9  00                 	db	0
   378  007CBA  00                 	db	0
   379  007CBB  00                 	db	0
   380  007CBC  14                 	db	20
   381  007CBD  14                 	db	20
   382  007CBE  14                 	db	20
   383  007CBF  14                 	db	20
   384  007CC0  14                 	db	20
   385  007CC1  00                 	db	0
   386  007CC2  00                 	db	0
   387  007CC3  00                 	db	0
   388  007CC4  41                 	db	65
   389  007CC5  22                 	db	34
   390  007CC6  14                 	db	20
   391  007CC7  08                 	db	8
   392  007CC8  00                 	db	0
   393  007CC9  00                 	db	0
   394  007CCA  00                 	db	0
   395  007CCB  00                 	db	0
   396  007CCC  02                 	db	2
   397  007CCD  01                 	db	1
   398  007CCE  51                 	db	81
   399  007CCF  09                 	db	9
   400  007CD0  06                 	db	6
   401  007CD1  00                 	db	0
   402  007CD2  00                 	db	0
   403  007CD3  00                 	db	0
   404  007CD4  32                 	db	50
   405  007CD5  49                 	db	73
   406  007CD6  79                 	db	121
   407  007CD7  41                 	db	65
   408  007CD8  3E                 	db	62
   409  007CD9  00                 	db	0
   410  007CDA  00                 	db	0
   411  007CDB  00                 	db	0
   412  007CDC  7E                 	db	126
   413  007CDD  09                 	db	9
   414  007CDE  09                 	db	9
   415  007CDF  09                 	db	9
   416  007CE0  7E                 	db	126
   417  007CE1  00                 	db	0
   418  007CE2  00                 	db	0
   419  007CE3  00                 	db	0
   420  007CE4  7F                 	db	127
   421  007CE5  49                 	db	73
   422  007CE6  49                 	db	73
   423  007CE7  49                 	db	73
   424  007CE8  36                 	db	54
   425  007CE9  00                 	db	0
   426  007CEA  00                 	db	0
   427  007CEB  00                 	db	0
   428  007CEC  3E                 	db	62
   429  007CED  41                 	db	65
   430  007CEE  41                 	db	65
   431  007CEF  41                 	db	65
   432  007CF0  22                 	db	34
   433  007CF1  00                 	db	0
   434  007CF2  00                 	db	0
   435  007CF3  00                 	db	0
   436  007CF4  7F                 	db	127
   437  007CF5  41                 	db	65
   438  007CF6  41                 	db	65
   439  007CF7  22                 	db	34
   440  007CF8  1C                 	db	28
   441  007CF9  00                 	db	0
   442  007CFA  00                 	db	0
   443  007CFB  00                 	db	0
   444  007CFC  7F                 	db	127
   445  007CFD  49                 	db	73
   446  007CFE  49                 	db	73
   447  007CFF  49                 	db	73
   448  007D00  41                 	db	65
   449  007D01  00                 	db	0
   450  007D02  00                 	db	0
   451  007D03  00                 	db	0
   452  007D04  7F                 	db	127
   453  007D05  09                 	db	9
   454  007D06  09                 	db	9
   455  007D07  09                 	db	9
   456  007D08  01                 	db	1
   457  007D09  00                 	db	0
   458  007D0A  00                 	db	0
   459  007D0B  00                 	db	0
   460  007D0C  3E                 	db	62
   461  007D0D  41                 	db	65
   462  007D0E  41                 	db	65
   463  007D0F  51                 	db	81
   464  007D10  72                 	db	114
   465  007D11  00                 	db	0
   466  007D12  00                 	db	0
   467  007D13  00                 	db	0
   468  007D14  7F                 	db	127
   469  007D15  08                 	db	8
   470  007D16  08                 	db	8
   471  007D17  08                 	db	8
   472  007D18  7F                 	db	127
   473  007D19  00                 	db	0
   474  007D1A  00                 	db	0
   475  007D1B  00                 	db	0
   476  007D1C  41                 	db	65
   477  007D1D  7F                 	db	127
   478  007D1E  41                 	db	65
   479  007D1F  00                 	db	0
   480  007D20  00                 	db	0
   481  007D21  00                 	db	0
   482  007D22  00                 	db	0
   483  007D23  00                 	db	0
   484  007D24  20                 	db	32
   485  007D25  40                 	db	64
   486  007D26  41                 	db	65
   487  007D27  3F                 	db	63
   488  007D28  01                 	db	1
   489  007D29  00                 	db	0
   490  007D2A  00                 	db	0
   491  007D2B  00                 	db	0
   492  007D2C  7F                 	db	127
   493  007D2D  08                 	db	8
   494  007D2E  14                 	db	20
   495  007D2F  22                 	db	34
   496  007D30  41                 	db	65
   497  007D31  00                 	db	0
   498  007D32  00                 	db	0
   499  007D33  00                 	db	0
   500  007D34  7F                 	db	127
   501  007D35  40                 	db	64
   502  007D36  40                 	db	64
   503  007D37  40                 	db	64
   504  007D38  40                 	db	64
   505  007D39  00                 	db	0
   506  007D3A  00                 	db	0
   507  007D3B  00                 	db	0
   508  007D3C  7F                 	db	127
   509  007D3D  02                 	db	2
   510  007D3E  0C                 	db	12
   511  007D3F  02                 	db	2
   512  007D40  7F                 	db	127
   513  007D41  00                 	db	0
   514  007D42  00                 	db	0
   515  007D43  00                 	db	0
   516  007D44  7F                 	db	127
   517  007D45  04                 	db	4
   518  007D46  08                 	db	8
   519  007D47  10                 	db	16
   520  007D48  7F                 	db	127
   521  007D49  00                 	db	0
   522  007D4A  00                 	db	0
   523  007D4B  00                 	db	0
   524  007D4C  3E                 	db	62
   525  007D4D  41                 	db	65
   526  007D4E  41                 	db	65
   527  007D4F  41                 	db	65
   528  007D50  3E                 	db	62
   529  007D51  00                 	db	0
   530  007D52  00                 	db	0
   531  007D53  00                 	db	0
   532  007D54  7F                 	db	127
   533  007D55  09                 	db	9
   534  007D56  09                 	db	9
   535  007D57  09                 	db	9
   536  007D58  06                 	db	6
   537  007D59  00                 	db	0
   538  007D5A  00                 	db	0
   539  007D5B  00                 	db	0
   540  007D5C  3E                 	db	62
   541  007D5D  41                 	db	65
   542  007D5E  51                 	db	81
   543  007D5F  21                 	db	33
   544  007D60  5E                 	db	94
   545  007D61  00                 	db	0
   546  007D62  00                 	db	0
   547  007D63  00                 	db	0
   548  007D64  7F                 	db	127
   549  007D65  09                 	db	9
   550  007D66  19                 	db	25
   551  007D67  29                 	db	41
   552  007D68  46                 	db	70
   553  007D69  00                 	db	0
   554  007D6A  00                 	db	0
   555  007D6B  00                 	db	0
   556  007D6C  26                 	db	38
   557  007D6D  49                 	db	73
   558  007D6E  49                 	db	73
   559  007D6F  49                 	db	73
   560  007D70  32                 	db	50
   561  007D71  00                 	db	0
   562  007D72  00                 	db	0
   563  007D73  00                 	db	0
   564  007D74  01                 	db	1
   565  007D75  01                 	db	1
   566  007D76  7F                 	db	127
   567  007D77  01                 	db	1
   568  007D78  01                 	db	1
   569  007D79  00                 	db	0
   570  007D7A  00                 	db	0
   571  007D7B  00                 	db	0
   572  007D7C  3F                 	db	63
   573  007D7D  40                 	db	64
   574  007D7E  40                 	db	64
   575  007D7F  40                 	db	64
   576  007D80  3F                 	db	63
   577  007D81  00                 	db	0
   578  007D82  00                 	db	0
   579  007D83  00                 	db	0
   580  007D84  1F                 	db	31
   581  007D85  20                 	db	32
   582  007D86  40                 	db	64
   583  007D87  20                 	db	32
   584  007D88  1F                 	db	31
   585  007D89  00                 	db	0
   586  007D8A  00                 	db	0
   587  007D8B  00                 	db	0
   588  007D8C  3F                 	db	63
   589  007D8D  40                 	db	64
   590  007D8E  38                 	db	56
   591  007D8F  40                 	db	64
   592  007D90  3F                 	db	63
   593  007D91  00                 	db	0
   594  007D92  00                 	db	0
   595  007D93  00                 	db	0
   596  007D94  63                 	db	99
   597  007D95  14                 	db	20
   598  007D96  08                 	db	8
   599  007D97  14                 	db	20
   600  007D98  63                 	db	99
   601  007D99  00                 	db	0
   602  007D9A  00                 	db	0
   603  007D9B  00                 	db	0
   604  007D9C  03                 	db	3
   605  007D9D  04                 	db	4
   606  007D9E  78                 	db	120
   607  007D9F  04                 	db	4
   608  007DA0  03                 	db	3
   609  007DA1  00                 	db	0
   610  007DA2  00                 	db	0
   611  007DA3  00                 	db	0
   612  007DA4  61                 	db	97
   613  007DA5  51                 	db	81
   614  007DA6  49                 	db	73
   615  007DA7  45                 	db	69
   616  007DA8  43                 	db	67
   617  007DA9  00                 	db	0
   618  007DAA  00                 	db	0
   619  007DAB  00                 	db	0
   620  007DAC  7F                 	db	127
   621  007DAD  41                 	db	65
   622  007DAE  41                 	db	65
   623  007DAF  00                 	db	0
   624  007DB0  00                 	db	0
   625  007DB1  00                 	db	0
   626  007DB2  00                 	db	0
   627  007DB3  00                 	db	0
   628  007DB4  02                 	db	2
   629  007DB5  04                 	db	4
   630  007DB6  08                 	db	8
   631  007DB7  10                 	db	16
   632  007DB8  20                 	db	32
   633  007DB9  00                 	db	0
   634  007DBA  00                 	db	0
   635  007DBB  00                 	db	0
   636  007DBC  41                 	db	65
   637  007DBD  41                 	db	65
   638  007DBE  7F                 	db	127
   639  007DBF  00                 	db	0
   640  007DC0  00                 	db	0
   641  007DC1  00                 	db	0
   642  007DC2  00                 	db	0
   643  007DC3  00                 	db	0
   644  007DC4  04                 	db	4
   645  007DC5  02                 	db	2
   646  007DC6  01                 	db	1
   647  007DC7  02                 	db	2
   648  007DC8  04                 	db	4
   649  007DC9  00                 	db	0
   650  007DCA  00                 	db	0
   651  007DCB  00                 	db	0
   652  007DCC  80                 	db	128
   653  007DCD  80                 	db	128
   654  007DCE  80                 	db	128
   655  007DCF  80                 	db	128
   656  007DD0  80                 	db	128
   657  007DD1  00                 	db	0
   658  007DD2  00                 	db	0
   659  007DD3  00                 	db	0
   660  007DD4  01                 	db	1
   661  007DD5  02                 	db	2
   662  007DD6  04                 	db	4
   663  007DD7  00                 	db	0
   664  007DD8  00                 	db	0
   665  007DD9  00                 	db	0
   666  007DDA  00                 	db	0
   667  007DDB  00                 	db	0
   668  007DDC  20                 	db	32
   669  007DDD  54                 	db	84
   670  007DDE  54                 	db	84
   671  007DDF  54                 	db	84
   672  007DE0  78                 	db	120
   673  007DE1  00                 	db	0
   674  007DE2  00                 	db	0
   675  007DE3  00                 	db	0
   676  007DE4  7F                 	db	127
   677  007DE5  48                 	db	72
   678  007DE6  44                 	db	68
   679  007DE7  44                 	db	68
   680  007DE8  38                 	db	56
   681  007DE9  00                 	db	0
   682  007DEA  00                 	db	0
   683  007DEB  00                 	db	0
   684  007DEC  38                 	db	56
   685  007DED  44                 	db	68
   686  007DEE  44                 	db	68
   687  007DEF  28                 	db	40
   688  007DF0  00                 	db	0
   689  007DF1  00                 	db	0
   690  007DF2  00                 	db	0
   691  007DF3  00                 	db	0
   692  007DF4  38                 	db	56
   693  007DF5  44                 	db	68
   694  007DF6  44                 	db	68
   695  007DF7  48                 	db	72
   696  007DF8  7F                 	db	127
   697  007DF9  00                 	db	0
   698  007DFA  00                 	db	0
   699  007DFB  00                 	db	0
   700  007DFC  38                 	db	56
   701  007DFD  54                 	db	84
   702  007DFE  54                 	db	84
   703  007DFF  54                 	db	84
   704  007E00  18                 	db	24
   705  007E01  00                 	db	0
   706  007E02  00                 	db	0
   707  007E03  00                 	db	0
   708  007E04  08                 	db	8
   709  007E05  7E                 	db	126
   710  007E06  09                 	db	9
   711  007E07  02                 	db	2
   712  007E08  00                 	db	0
   713  007E09  00                 	db	0
   714  007E0A  00                 	db	0
   715  007E0B  00                 	db	0
   716  007E0C  18                 	db	24
   717  007E0D  A4                 	db	164
   718  007E0E  A4                 	db	164
   719  007E0F  A4                 	db	164
   720  007E10  7C                 	db	124
   721  007E11  00                 	db	0
   722  007E12  00                 	db	0
   723  007E13  00                 	db	0
   724  007E14  7F                 	db	127
   725  007E15  08                 	db	8
   726  007E16  04                 	db	4
   727  007E17  04                 	db	4
   728  007E18  78                 	db	120
   729  007E19  00                 	db	0
   730  007E1A  00                 	db	0
   731  007E1B  00                 	db	0
   732  007E1C  00                 	db	0
   733  007E1D  7D                 	db	125
   734  007E1E  00                 	db	0
   735  007E1F  00                 	db	0
   736  007E20  00                 	db	0
   737  007E21  00                 	db	0
   738  007E22  00                 	db	0
   739  007E23  00                 	db	0
   740  007E24  80                 	db	128
   741  007E25  84                 	db	132
   742  007E26  7D                 	db	125
   743  007E27  00                 	db	0
   744  007E28  00                 	db	0
   745  007E29  00                 	db	0
   746  007E2A  00                 	db	0
   747  007E2B  00                 	db	0
   748  007E2C  7F                 	db	127
   749  007E2D  10                 	db	16
   750  007E2E  28                 	db	40
   751  007E2F  44                 	db	68
   752  007E30  00                 	db	0
   753  007E31  00                 	db	0
   754  007E32  00                 	db	0
   755  007E33  00                 	db	0
   756  007E34  41                 	db	65
   757  007E35  7F                 	db	127
   758  007E36  40                 	db	64
   759  007E37  00                 	db	0
   760  007E38  00                 	db	0
   761  007E39  00                 	db	0
   762  007E3A  00                 	db	0
   763  007E3B  00                 	db	0
   764  007E3C  7C                 	db	124
   765  007E3D  04                 	db	4
   766  007E3E  18                 	db	24
   767  007E3F  04                 	db	4
   768  007E40  78                 	db	120
   769  007E41  00                 	db	0
   770  007E42  00                 	db	0
   771  007E43  00                 	db	0
   772  007E44  7C                 	db	124
   773  007E45  08                 	db	8
   774  007E46  04                 	db	4
   775  007E47  7C                 	db	124
   776  007E48  00                 	db	0
   777  007E49  00                 	db	0
   778  007E4A  00                 	db	0
   779  007E4B  00                 	db	0
   780  007E4C  38                 	db	56
   781  007E4D  44                 	db	68
   782  007E4E  44                 	db	68
   783  007E4F  38                 	db	56
   784  007E50  00                 	db	0
   785  007E51  00                 	db	0
   786  007E52  00                 	db	0
   787  007E53  00                 	db	0
   788  007E54  FC                 	db	252
   789  007E55  24                 	db	36
   790  007E56  24                 	db	36
   791  007E57  18                 	db	24
   792  007E58  00                 	db	0
   793  007E59  00                 	db	0
   794  007E5A  00                 	db	0
   795  007E5B  00                 	db	0
   796  007E5C  18                 	db	24
   797  007E5D  24                 	db	36
   798  007E5E  24                 	db	36
   799  007E5F  FC                 	db	252
   800  007E60  00                 	db	0
   801  007E61  00                 	db	0
   802  007E62  00                 	db	0
   803  007E63  00                 	db	0
   804  007E64  00                 	db	0
   805  007E65  7C                 	db	124
   806  007E66  08                 	db	8
   807  007E67  04                 	db	4
   808  007E68  00                 	db	0
   809  007E69  00                 	db	0
   810  007E6A  00                 	db	0
   811  007E6B  00                 	db	0
   812  007E6C  48                 	db	72
   813  007E6D  54                 	db	84
   814  007E6E  54                 	db	84
   815  007E6F  24                 	db	36
   816  007E70  00                 	db	0
   817  007E71  00                 	db	0
   818  007E72  00                 	db	0
   819  007E73  00                 	db	0
   820  007E74  04                 	db	4
   821  007E75  7F                 	db	127
   822  007E76  44                 	db	68
   823  007E77  00                 	db	0
   824  007E78  00                 	db	0
   825  007E79  00                 	db	0
   826  007E7A  00                 	db	0
   827  007E7B  00                 	db	0
   828  007E7C  3C                 	db	60
   829  007E7D  40                 	db	64
   830  007E7E  40                 	db	64
   831  007E7F  7C                 	db	124
   832  007E80  00                 	db	0
   833  007E81  00                 	db	0
   834  007E82  00                 	db	0
   835  007E83  00                 	db	0
   836  007E84  1C                 	db	28
   837  007E85  20                 	db	32
   838  007E86  40                 	db	64
   839  007E87  20                 	db	32
   840  007E88  1C                 	db	28
   841  007E89  00                 	db	0
   842  007E8A  00                 	db	0
   843  007E8B  00                 	db	0
   844  007E8C  3C                 	db	60
   845  007E8D  40                 	db	64
   846  007E8E  30                 	db	48
   847  007E8F  40                 	db	64
   848  007E90  3C                 	db	60
   849  007E91  00                 	db	0
   850  007E92  00                 	db	0
   851  007E93  00                 	db	0
   852  007E94  44                 	db	68
   853  007E95  28                 	db	40
   854  007E96  10                 	db	16
   855  007E97  28                 	db	40
   856  007E98  44                 	db	68
   857  007E99  00                 	db	0
   858  007E9A  00                 	db	0
   859  007E9B  00                 	db	0
   860  007E9C  1C                 	db	28
   861  007E9D  A0                 	db	160
   862  007E9E  A0                 	db	160
   863  007E9F  7C                 	db	124
   864  007EA0  00                 	db	0
   865  007EA1  00                 	db	0
   866  007EA2  00                 	db	0
   867  007EA3  00                 	db	0
   868  007EA4  44                 	db	68
   869  007EA5  64                 	db	100
   870  007EA6  54                 	db	84
   871  007EA7  4C                 	db	76
   872  007EA8  44                 	db	68
   873  007EA9  00                 	db	0
   874  007EAA  00                 	db	0
   875  007EAB  00                 	db	0
   876  007EAC  08                 	db	8
   877  007EAD  36                 	db	54
   878  007EAE  41                 	db	65
   879  007EAF  00                 	db	0
   880  007EB0  00                 	db	0
   881  007EB1  00                 	db	0
   882  007EB2  00                 	db	0
   883  007EB3  00                 	db	0
   884  007EB4  00                 	db	0
   885  007EB5  7F                 	db	127
   886  007EB6  00                 	db	0
   887  007EB7  00                 	db	0
   888  007EB8  00                 	db	0
   889  007EB9  00                 	db	0
   890  007EBA  00                 	db	0
   891  007EBB  00                 	db	0
   892  007EBC  41                 	db	65
   893  007EBD  36                 	db	54
   894  007EBE  08                 	db	8
   895  007EBF  00                 	db	0
   896  007EC0  00                 	db	0
   897  007EC1  00                 	db	0
   898  007EC2  00                 	db	0
   899  007EC3  00                 	db	0
   900  007EC4  02                 	db	2
   901  007EC5  01                 	db	1
   902  007EC6  01                 	db	1
   903  007EC7  02                 	db	2
   904  007EC8  01                 	db	1
   905  007EC9  00                 	db	0
   906  007ECA  00                 	db	0
   907  007ECB  00                 	db	0
   908  007ECC  02                 	db	2
   909  007ECD  05                 	db	5
   910  007ECE  05                 	db	5
   911  007ECF  02                 	db	2
   912  007ED0  00                 	db	0
   913  007ED1  00                 	db	0
   914  007ED2  00                 	db	0
   915  007ED3                     __end_of_OledFont:
   916                           	opt stack 0
   917  007ED3                     _picture:
   918                           	opt stack 0
   919  007ED3  00                 	db	0
   920  007ED4  00                 	db	0
   921  007ED5  00                 	db	0
   922  007ED6  00                 	db	0
   923  007ED7  00                 	db	0
   924  007ED8  00                 	db	0
   925  007ED9  00                 	db	0
   926  007EDA  00                 	db	0
   927  007EDB  00                 	db	0
   928  007EDC  00                 	db	0
   929  007EDD  00                 	db	0
   930  007EDE  00                 	db	0
   931  007EDF  00                 	db	0
   932  007EE0  00                 	db	0
   933  007EE1  00                 	db	0
   934  007EE2  00                 	db	0
   935  007EE3  3F                 	db	63
   936  007EE4  80                 	db	128
   937  007EE5  00                 	db	0
   938  007EE6  C0                 	db	192
   939  007EE7  00                 	db	0
   940  007EE8  7F                 	db	127
   941  007EE9  E0                 	db	224
   942  007EEA  00                 	db	0
   943  007EEB  30                 	db	48
   944  007EEC  00                 	db	0
   945  007EED  1F                 	db	31
   946  007EEE  FF                 	db	255
   947  007EEF  F8                 	db	248
   948  007EF0  03                 	db	3
   949  007EF1  FF                 	db	255
   950  007EF2  F8                 	db	248
   951  007EF3  24                 	db	36
   952  007EF4  80                 	db	128
   953  007EF5  00                 	db	0
   954  007EF6  A0                 	db	160
   955  007EF7  00                 	db	0
   956  007EF8  7F                 	db	127
   957  007EF9  E0                 	db	224
   958  007EFA  00                 	db	0
   959  007EFB  78                 	db	120
   960  007EFC  00                 	db	0
   961  007EFD  1F                 	db	31
   962  007EFE  FF                 	db	255
   963  007EFF  F8                 	db	248
   964  007F00  02                 	db	2
   965  007F01  00                 	db	0
   966  007F02  08                 	db	8
   967  007F03  15                 	db	21
   968  007F04  00                 	db	0
   969  007F05  02                 	db	2
   970  007F06  90                 	db	144
   971  007F07  00                 	db	0
   972  007F08  66                 	db	102
   973  007F09  60                 	db	96
   974  007F0A  60                 	db	96
   975  007F0B  FC                 	db	252
   976  007F0C  00                 	db	0
   977  007F0D  17                 	db	23
   978  007F0E  A3                 	db	163
   979  007F0F  18                 	db	24
   980  007F10  0E                 	db	14
   981  007F11  EE                 	db	238
   982  007F12  E8                 	db	232
   983  007F13  0E                 	db	14
   984  007F14  01                 	db	1
   985  007F15  01                 	db	1
   986  007F16  A0                 	db	160
   987  007F17  00                 	db	0
   988  007F18  66                 	db	102
   989  007F19  60                 	db	96
   990  007F1A  61                 	db	97
   991  007F1B  FE                 	db	254
   992  007F1C  00                 	db	0
   993  007F1D  13                 	db	19
   994  007F1E  2D                 	db	45
   995  007F1F  E8                 	db	232
   996  007F20  08                 	db	8
   997  007F21  EE                 	db	238
   998  007F22  E8                 	db	232
   999  007F23  04                 	db	4
  1000  007F24  05                 	db	5
  1001  007F25  00                 	db	0
  1002  007F26  C0                 	db	192
  1003  007F27  00                 	db	0
  1004  007F28  66                 	db	102
  1005  007F29  60                 	db	96
  1006  007F2A  60                 	db	96
  1007  007F2B  30                 	db	48
  1008  007F2C  00                 	db	0
  1009  007F2D  14                 	db	20
  1010  007F2E  AD                 	db	173
  1011  007F2F  E8                 	db	232
  1012  007F30  08                 	db	8
  1013  007F31  EE                 	db	238
  1014  007F32  E8                 	db	232
  1015  007F33  04                 	db	4
  1016  007F34  15                 	db	21
  1017  007F35  01                 	db	1
  1018  007F36  A0                 	db	160
  1019  007F37  00                 	db	0
  1020  007F38  66                 	db	102
  1021  007F39  60                 	db	96
  1022  007F3A  60                 	db	96
  1023  007F3B  30                 	db	48
  1024  007F3C  00                 	db	0
  1025  007F3D  17                 	db	23
  1026  007F3E  AD                 	db	173
  1027  007F3F  98                 	db	152
  1028  007F40  08                 	db	8
  1029  007F41  EE                 	db	238
  1030  007F42  E8                 	db	232
  1031  007F43  04                 	db	4
  1032  007F44  55                 	db	85
  1033  007F45  02                 	db	2
  1034  007F46  90                 	db	144
  1035  007F47  00                 	db	0
  1036  007F48  66                 	db	102
  1037  007F49  60                 	db	96
  1038  007F4A  60                 	db	96
  1039  007F4B  30                 	db	48
  1040  007F4C  00                 	db	0
  1041  007F4D  17                 	db	23
  1042  007F4E  A3                 	db	163
  1043  007F4F  E8                 	db	232
  1044  007F50  08                 	db	8
  1045  007F51  EE                 	db	238
  1046  007F52  E8                 	db	232
  1047  007F53  05                 	db	5
  1048  007F54  55                 	db	85
  1049  007F55  00                 	db	0
  1050  007F56  A0                 	db	160
  1051  007F57  00                 	db	0
  1052  007F58  7F                 	db	127
  1053  007F59  E0                 	db	224
  1054  007F5A  60                 	db	96
  1055  007F5B  30                 	db	48
  1056  007F5C  00                 	db	0
  1057  007F5D  17                 	db	23
  1058  007F5E  AF                 	db	175
  1059  007F5F  E8                 	db	232
  1060  007F60  08                 	db	8
  1061  007F61  EE                 	db	238
  1062  007F62  E8                 	db	232
  1063  007F63  05                 	db	5
  1064  007F64  55                 	db	85
  1065  007F65  00                 	db	0
  1066  007F66  C0                 	db	192
  1067  007F67  00                 	db	0
  1068  007F68  7F                 	db	127
  1069  007F69  E0                 	db	224
  1070  007F6A  60                 	db	96
  1071  007F6B  30                 	db	48
  1072  007F6C  00                 	db	0
  1073  007F6D  17                 	db	23
  1074  007F6E  AF                 	db	175
  1075  007F6F  18                 	db	24
  1076  007F70  0E                 	db	14
  1077  007F71  EE                 	db	238
  1078  007F72  E8                 	db	232
  1079  007F73  00                 	db	0
  1080  007F74  00                 	db	0
  1081  007F75  00                 	db	0
  1082  007F76  00                 	db	0
  1083  007F77  00                 	db	0
  1084  007F78  00                 	db	0
  1085  007F79  03                 	db	3
  1086  007F7A  FC                 	db	252
  1087  007F7B  30                 	db	48
  1088  007F7C  00                 	db	0
  1089  007F7D  1F                 	db	31
  1090  007F7E  FF                 	db	255
  1091  007F7F  F8                 	db	248
  1092  007F80  02                 	db	2
  1093  007F81  00                 	db	0
  1094  007F82  08                 	db	8
  1095  007F83  00                 	db	0
  1096  007F84  00                 	db	0
  1097  007F85  00                 	db	0
  1098  007F86  00                 	db	0
  1099  007F87  00                 	db	0
  1100  007F88  00                 	db	0
  1101  007F89  01                 	db	1
  1102  007F8A  F8                 	db	248
  1103  007F8B  30                 	db	48
  1104  007F8C  00                 	db	0
  1105  007F8D  1F                 	db	31
  1106  007F8E  FF                 	db	255
  1107  007F8F  F8                 	db	248
  1108  007F90  03                 	db	3
  1109  007F91  FF                 	db	255
  1110  007F92  F8                 	db	248
  1111  007F93  00                 	db	0
  1112  007F94  00                 	db	0
  1113  007F95  00                 	db	0
  1114  007F96  00                 	db	0
  1115  007F97  00                 	db	0
  1116  007F98  00                 	db	0
  1117  007F99  00                 	db	0
  1118  007F9A  F0                 	db	240
  1119  007F9B  00                 	db	0
  1120  007F9C  00                 	db	0
  1121  007F9D  00                 	db	0
  1122  007F9E  00                 	db	0
  1123  007F9F  00                 	db	0
  1124  007FA0  00                 	db	0
  1125  007FA1  00                 	db	0
  1126  007FA2  00                 	db	0
  1127  007FA3  00                 	db	0
  1128  007FA4  00                 	db	0
  1129  007FA5  00                 	db	0
  1130  007FA6  00                 	db	0
  1131  007FA7  00                 	db	0
  1132  007FA8  00                 	db	0
  1133  007FA9  00                 	db	0
  1134  007FAA  60                 	db	96
  1135  007FAB  00                 	db	0
  1136  007FAC  00                 	db	0
  1137  007FAD  00                 	db	0
  1138  007FAE  00                 	db	0
  1139  007FAF  00                 	db	0
  1140  007FB0  00                 	db	0
  1141  007FB1  00                 	db	0
  1142  007FB2  00                 	db	0
  1143  007FB3  00                 	db	0
  1144  007FB4  00                 	db	0
  1145  007FB5  00                 	db	0
  1146  007FB6  00                 	db	0
  1147  007FB7  00                 	db	0
  1148  007FB8  00                 	db	0
  1149  007FB9  00                 	db	0
  1150  007FBA  00                 	db	0
  1151  007FBB  00                 	db	0
  1152  007FBC  00                 	db	0
  1153  007FBD  00                 	db	0
  1154  007FBE  00                 	db	0
  1155  007FBF  00                 	db	0
  1156  007FC0  00                 	db	0
  1157  007FC1  00                 	db	0
  1158  007FC2  00                 	db	0
  1159  007FC3  00                 	db	0
  1160  007FC4  00                 	db	0
  1161  007FC5  00                 	db	0
  1162  007FC6  00                 	db	0
  1163  007FC7  00                 	db	0
  1164  007FC8  00                 	db	0
  1165  007FC9  00                 	db	0
  1166  007FCA  00                 	db	0
  1167  007FCB  00                 	db	0
  1168  007FCC  00                 	db	0
  1169  007FCD  00                 	db	0
  1170  007FCE  00                 	db	0
  1171  007FCF  00                 	db	0
  1172  007FD0  00                 	db	0
  1173  007FD1  00                 	db	0
  1174  007FD2  00                 	db	0
  1175  007FD3  39                 	db	57
  1176  007FD4  80                 	db	128
  1177  007FD5  00                 	db	0
  1178  007FD6  00                 	db	0
  1179  007FD7  00                 	db	0
  1180  007FD8  00                 	db	0
  1181  007FD9  00                 	db	0
  1182  007FDA  00                 	db	0
  1183  007FDB  00                 	db	0
  1184  007FDC  00                 	db	0
  1185  007FDD  00                 	db	0
  1186  007FDE  00                 	db	0
  1187  007FDF  00                 	db	0
  1188  007FE0  00                 	db	0
  1189  007FE1  00                 	db	0
  1190  007FE2  00                 	db	0
  1191  007FE3                     __end_of_picture:
  1192                           	opt stack 0
  1193  007FE3                     STR_1:
  1194  007FE3  55                 	db	85	;'U'
  1195  007FE4  6E                 	db	110	;'n'
  1196  007FE5  69                 	db	105	;'i'
  1197  007FE6  76                 	db	118	;'v'
  1198  007FE7  65                 	db	101	;'e'
  1199  007FE8  72                 	db	114	;'r'
  1200  007FE9  73                 	db	115	;'s'
  1201  007FEA  69                 	db	105	;'i'
  1202  007FEB  74                 	db	116	;'t'
  1203  007FEC  79                 	db	121	;'y'
  1204  007FED  00                 	db	0
  1205  007FEE                     STR_4:
  1206  007FEE  5A                 	db	90	;'Z'
  1207  007FEF  49                 	db	73	;'I'
  1208  007FF0  50                 	db	80	;'P'
  1209  007FF1  53                 	db	83	;'S'
  1210  007FF2  2D                 	db	45
  1211  007FF3  45                 	db	69	;'E'
  1212  007FF4  56                 	db	86	;'V'
  1213  007FF5  00                 	db	0
  1214  007FF6                     STR_3:
  1215  007FF6  41                 	db	65	;'A'
  1216  007FF7  6B                 	db	107	;'k'
  1217  007FF8  72                 	db	114	;'r'
  1218  007FF9  6F                 	db	111	;'o'
  1219  007FFA  6E                 	db	110	;'n'
  1220  007FFB  00                 	db	0
  1221  007FFC                     STR_2:
  1222  007FFC  4F                 	db	79	;'O'
  1223  007FFD  46                 	db	70	;'F'
  1224  007FFE  00                 	db	0
  1225                           
  1226                           ; #config settings
  1227  007FFF  00                 	db	0	; dummy byte at the end
  1228  0000                     
  1229                           	psect	nvCOMRAM
  1230  000042                     __pnvCOMRAM:
  1231                           	opt stack 0
  1232  000042                     _timer0ReloadVal16bit:
  1233                           	opt stack 0
  1234  000042                     	ds	2
  1235                           
  1236                           	psect	nvBANK0
  1237  0000D2                     __pnvBANK0:
  1238                           	opt stack 0
  1239  0000D2                     _TMR2_InterruptHandler:
  1240                           	opt stack 0
  1241  0000D2                     	ds	2
  1242  0000                     _ANSELAbits	set	3896
  1243  0000                     _ANSELCbits	set	3898
  1244  0000                     _ANSELC	set	3898
  1245  0000                     _ANSELE	set	3900
  1246  0000                     _ANSELD	set	3899
  1247  0000                     _ANSELB	set	3897
  1248  0000                     _ANSELA	set	3896
  1249  0000                     _RC1STAbits	set	4011
  1250  0000                     _RCREG1	set	4014
  1251  0000                     _TXREG1	set	4013
  1252  0000                     _SPBRGH1	set	4016
  1253  0000                     _SPBRG1	set	4015
  1254  0000                     _TX1STA	set	4012
  1255  0000                     _RC1STA	set	4011
  1256  0000                     _BAUD1CON	set	4024
  1257  0000                     _PORTAbits	set	3968
  1258  0000                     _PORTBbits	set	3969
  1259  0000                     _PORTDbits	set	3971
  1260  0000                     _T2CONbits	set	4026
  1261  0000                     _TMR2	set	4028
  1262  0000                     _PR2	set	4027
  1263  0000                     _T2CON	set	4026
  1264  0000                     _T0CONbits	set	4053
  1265  0000                     _TMR0L	set	4054
  1266  0000                     _TMR0H	set	4055
  1267  0000                     _T0CON	set	4053
  1268  0000                     _OSCTUNE	set	3995
  1269  0000                     _OSCCON2	set	4050
  1270  0000                     _OSCCON	set	4051
  1271  0000                     _PIR2bits	set	4001
  1272  0000                     _PIE2bits	set	4000
  1273  0000                     _INTCONbits	set	4082
  1274  0000                     _IPR2bits	set	4002
  1275  0000                     _IPR1bits	set	3999
  1276  0000                     _RCONbits	set	4048
  1277  0000                     _TRISAbits	set	3986
  1278  0000                     _INTCON2bits	set	4081
  1279  0000                     _LATCbits	set	3979
  1280  0000                     _TRISCbits	set	3988
  1281  0000                     _TRISE	set	3990
  1282  0000                     _LATE	set	3981
  1283  0000                     _TRISD	set	3989
  1284  0000                     _LATD	set	3980
  1285  0000                     _TRISC	set	3988
  1286  0000                     _LATC	set	3979
  1287  0000                     _WPUB	set	3937
  1288  0000                     _TRISB	set	3987
  1289  0000                     _LATB	set	3978
  1290  0000                     _TRISA	set	3986
  1291  0000                     _LATA	set	3977
  1292  0000                     _ADCON0bits	set	4034
  1293  0000                     _ADRESH	set	4036
  1294  0000                     _ADRESL	set	4035
  1295  0000                     _ADCON2	set	4032
  1296  0000                     _ADCON1	set	4033
  1297  0000                     _ADCON0	set	4034
  1298  0000                     _SSP1BUF	set	4041
  1299  0000                     _SSP1CON2bits	set	4037
  1300  0000                     _SSP1CON1bits	set	4038
  1301  0000                     _PIE1bits	set	3997
  1302  0000                     _PIR1bits	set	3998
  1303  0000                     _SSP1ADD	set	4040
  1304  0000                     _SSP1CON3	set	4043
  1305  0000                     _SSP1CON1	set	4038
  1306  0000                     _SSP1STAT	set	4039
  1307  0000                     _LATC5	set	31837
  1308  0000                     _LATA3	set	31819
  1309  0000                     _LATE0	set	31848
  1310  0000                     _LATE1	set	31849
  1311  0000                     _LATE2	set	31850
  1312  0000                     _LATA7	set	31823
  1313  0000                     _LATC1	set	31833
  1314  0000                     _LATA6	set	31822
  1315  0000                     _TRISC1	set	31905
  1316  0000                     _TRISA6	set	31894
  1317                           
  1318                           	psect	cinit
  1319  0021DC                     __pcinit:
  1320                           	opt stack 0
  1321  0021DC                     start_initialization:
  1322                           	opt stack 0
  1323  0021DC                     __initialization:
  1324                           	opt stack 0
  1325                           
  1326                           ; Initialize objects allocated to COMRAM (1 bytes)
  1327                           ; load TBLPTR registers with __pidataCOMRAM
  1328  0021DC  0E88               	movlw	low __pidataCOMRAM
  1329  0021DE  6EF6               	movwf	tblptrl,c
  1330  0021E0  0E27               	movlw	high __pidataCOMRAM
  1331  0021E2  6EF7               	movwf	tblptrh,c
  1332  0021E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1333  0021E6  6EF8               	movwf	tblptru,c
  1334  0021E8  0009               	tblrd		*+	;fetch initializer
  1335  0021EA  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1336                           
  1337                           ; Clear objects allocated to BANK3 (206 bytes)
  1338  0021EE  EE03  F000         	lfsr	0,__pbssBANK3
  1339  0021F2  0ECE               	movlw	206
  1340  0021F4                     clear_0:
  1341  0021F4  6AEE               	clrf	postinc0,c
  1342  0021F6  06E8               	decf	wreg,f,c
  1343  0021F8  E1FD               	bnz	clear_0
  1344                           
  1345                           ; Clear objects allocated to BANK2 (206 bytes)
  1346  0021FA  EE02  F000         	lfsr	0,__pbssBANK2
  1347  0021FE  0ECE               	movlw	206
  1348  002200                     clear_1:
  1349  002200  6AEE               	clrf	postinc0,c
  1350  002202  06E8               	decf	wreg,f,c
  1351  002204  E1FD               	bnz	clear_1
  1352                           
  1353                           ; Clear objects allocated to BANK1 (122 bytes)
  1354  002206  EE01  F000         	lfsr	0,__pbssBANK1
  1355  00220A  0E7A               	movlw	122
  1356  00220C                     clear_2:
  1357  00220C  6AEE               	clrf	postinc0,c
  1358  00220E  06E8               	decf	wreg,f,c
  1359  002210  E1FD               	bnz	clear_2
  1360                           
  1361                           ; Clear objects allocated to BANK0 (75 bytes)
  1362  002212  EE00  F060         	lfsr	0,__pbssBANK0
  1363  002216  0E4B               	movlw	75
  1364  002218                     clear_3:
  1365  002218  6AEE               	clrf	postinc0,c
  1366  00221A  06E8               	decf	wreg,f,c
  1367  00221C  E1FD               	bnz	clear_3
  1368                           
  1369                           ; Clear objects allocated to COMRAM (22 bytes)
  1370  00221E  EE00  F02C         	lfsr	0,__pbssCOMRAM
  1371  002222  0E16               	movlw	22
  1372  002224                     clear_4:
  1373  002224  6AEE               	clrf	postinc0,c
  1374  002226  06E8               	decf	wreg,f,c
  1375  002228  E1FD               	bnz	clear_4
  1376  00222A                     end_of_initialization:
  1377                           	opt stack 0
  1378  00222A                     __end_of__initialization:
  1379                           	opt stack 0
  1380  00222A  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1381  00222C  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1382  00222E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1383  002230  6EF8               	movwf	tblptru,c
  1384  002232  0100               	movlb	0
  1385  002234  EFA6  F00B         	goto	_main	;jump to C main() function
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           
  1393                           	psect	bssCOMRAM
  1394  00002C                     __pbssCOMRAM:
  1395                           	opt stack 0
  1396  00002C                     _i2c1_object:
  1397                           	opt stack 0
  1398  00002C                     	ds	7
  1399  000033                     I2C1_ISR@i2c_bytes_left:
  1400                           	opt stack 0
  1401  000033                     	ds	2
  1402  000035                     I2C1_ISR@pi2c_buf_ptr:
  1403                           	opt stack 0
  1404  000035                     	ds	2
  1405  000037                     _p_i2c1_current:
  1406                           	opt stack 0
  1407  000037                     	ds	2
  1408  000039                     _p_i2c1_trb_current:
  1409                           	opt stack 0
  1410  000039                     	ds	2
  1411  00003B                     _i2c1_trb_count:
  1412                           	opt stack 0
  1413  00003B                     	ds	2
  1414  00003D                     _time:
  1415                           	opt stack 0
  1416  00003D                     	ds	1
  1417  00003E                     I2C1_ISR@i2c_10bit_address_restart:
  1418                           	opt stack 0
  1419  00003E                     	ds	1
  1420  00003F                     _i2c1_state:
  1421                           	opt stack 0
  1422  00003F                     	ds	1
  1423  000040                     I2C1_ISR@i2c_address:
  1424                           	opt stack 0
  1425  000040                     	ds	2
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           
  1433                           	psect	dataCOMRAM
  1434  000044                     __pdataCOMRAM:
  1435                           	opt stack 0
  1436  000044                     _Transmit_stall:
  1437                           	opt stack 0
  1438  000044                     	ds	1
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           
  1446                           	psect	bssBANK0
  1447  000060                     __pbssBANK0:
  1448                           	opt stack 0
  1449  000060                     _displaybuffer:
  1450                           	opt stack 0
  1451  000060                     	ds	40
  1452  000088                     _LEDState:
  1453                           	opt stack 0
  1454  000088                     	ds	12
  1455  000094                     cobs_encode@F180:
  1456                           	opt stack 0
  1457  000094                     	ds	3
  1458  000097                     _timeOut:
  1459                           	opt stack 0
  1460  000097                     	ds	2
  1461  000099                     _i:
  1462                           	opt stack 0
  1463  000099                     	ds	2
  1464  00009B                     handleIndicators@oldIndicators:
  1465                           	opt stack 0
  1466  00009B                     	ds	2
  1467  00009D                     _DataBarGraphB:
  1468                           	opt stack 0
  1469  00009D                     	ds	2
  1470  00009F                     _DataBarGraphA:
  1471                           	opt stack 0
  1472  00009F                     	ds	2
  1473  0000A1                     _k:
  1474                           	opt stack 0
  1475  0000A1                     	ds	2
  1476  0000A3                     _Data:
  1477                           	opt stack 0
  1478  0000A3                     	ds	1
  1479  0000A4                     _i2c1_tr_queue:
  1480                           	opt stack 0
  1481  0000A4                     	ds	5
  1482  0000A9                     _Buff:
  1483                           	opt stack 0
  1484  0000A9                     	ds	2
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           
  1492                           	psect	bssBANK1
  1493  000100                     __pbssBANK1:
  1494                           	opt stack 0
  1495  000100                     _LED_array:
  1496                           	opt stack 0
  1497  000100                     	ds	16
  1498  000110                     _LEDNUM_ENAB:
  1499                           	opt stack 0
  1500  000110                     	ds	12
  1501  00011C                     _DataTableArrayOne:
  1502                           	opt stack 0
  1503  00011C                     	ds	10
  1504  000126                     _butnarray:
  1505                           	opt stack 0
  1506  000126                     	ds	8
  1507  00012E                     _DataTableArrayTwo:
  1508                           	opt stack 0
  1509  00012E                     	ds	3
  1510  000131                     cobs_decode@F192:
  1511                           	opt stack 0
  1512  000131                     	ds	3
  1513  000134                     _ProcessArray:
  1514                           	opt stack 0
  1515  000134                     	ds	30
  1516  000152                     _ReciveArray:
  1517                           	opt stack 0
  1518  000152                     	ds	30
  1519  000170                     I2C1_MasterRead@trBlock:
  1520                           	opt stack 0
  1521  000170                     	ds	5
  1522  000175                     I2C1_MasterWrite@trBlock:
  1523                           	opt stack 0
  1524  000175                     	ds	5
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           
  1532                           	psect	bssBANK2
  1533  000200                     __pbssBANK2:
  1534                           	opt stack 0
  1535  000200                     _input_buffer:
  1536                           	opt stack 0
  1537  000200                     	ds	206
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           
  1545                           	psect	bssBANK3
  1546  000300                     __pbssBANK3:
  1547                           	opt stack 0
  1548  000300                     _output_buffer:
  1549                           	opt stack 0
  1550  000300                     	ds	206
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           
  1558                           	psect	cstackBANK1
  1559  00017A                     __pcstackBANK1:
  1560                           	opt stack 0
  1561  00017A                     sendData@COBSArray:
  1562                           	opt stack 0
  1563                           
  1564                           ; 30 bytes @ 0x0
  1565  00017A                     	ds	30
  1566  000198                     sendData@SendArray:
  1567                           	opt stack 0
  1568                           
  1569                           ; 30 bytes @ 0x1E
  1570  000198                     	ds	30
  1571  0001B6                     sendData@whereToSend:
  1572                           	opt stack 0
  1573                           
  1574                           ; 1 bytes @ 0x3C
  1575  0001B6                     	ds	1
  1576  0001B7                     sendData@CS:
  1577                           	opt stack 0
  1578                           
  1579                           ; 1 bytes @ 0x3D
  1580  0001B7                     	ds	1
  1581  0001B8                     sendData@result:
  1582                           	opt stack 0
  1583                           
  1584                           ; 3 bytes @ 0x3E
  1585  0001B8                     	ds	3
  1586  0001BB                     sendData@count:
  1587                           	opt stack 0
  1588                           
  1589                           ; 2 bytes @ 0x41
  1590  0001BB                     	ds	2
  1591  0001BD                     sendData@i:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0x43
  1595  0001BD                     	ds	1
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           
  1603                           	psect	cstackBANK0
  1604  0000AB                     __pcstackBANK0:
  1605                           	opt stack 0
  1606  0000AB                     ??_LEDsetBar:
  1607  0000AB                     ??___ftmul:
  1608  0000AB                     I2C1_MasterWrite@pdata:
  1609                           	opt stack 0
  1610  0000AB                     cobs_encode@src_end_ptr:
  1611                           	opt stack 0
  1612  0000AB                     cobs_decode@src_end_ptr:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x0
  1616  0000AB                     	ds	2
  1617  0000AD                     cobs_encode@src_byte:
  1618                           	opt stack 0
  1619  0000AD                     I2C1_MasterWrite@length:
  1620                           	opt stack 0
  1621  0000AD                     cobs_decode@dst_buf_end_ptr:
  1622                           	opt stack 0
  1623                           
  1624                           ; 2 bytes @ 0x2
  1625  0000AD                     	ds	1
  1626  0000AE                     ___ftmul@exp:
  1627                           	opt stack 0
  1628  0000AE                     cobs_encode@dst_buf_end_ptr:
  1629                           	opt stack 0
  1630                           
  1631                           ; 2 bytes @ 0x3
  1632  0000AE                     	ds	1
  1633  0000AF                     cobs_decode@src_byte:
  1634                           	opt stack 0
  1635  0000AF                     I2C1_MasterWrite@address:
  1636                           	opt stack 0
  1637  0000AF                     ___ftmul@f3_as_product:
  1638                           	opt stack 0
  1639                           
  1640                           ; 3 bytes @ 0x4
  1641  0000AF                     	ds	1
  1642  0000B0                     cobs_encode@search_len:
  1643                           	opt stack 0
  1644  0000B0                     cobs_decode@i:
  1645                           	opt stack 0
  1646                           
  1647                           ; 1 bytes @ 0x5
  1648  0000B0                     	ds	1
  1649  0000B1                     I2C1_MasterWrite@pflag:
  1650                           	opt stack 0
  1651  0000B1                     cobs_encode@dst_code_write_ptr:
  1652                           	opt stack 0
  1653  0000B1                     cobs_decode@remaining_bytes:
  1654                           	opt stack 0
  1655                           
  1656                           ; 2 bytes @ 0x6
  1657  0000B1                     	ds	1
  1658  0000B2                     ___ftmul@cntr:
  1659                           	opt stack 0
  1660                           
  1661                           ; 1 bytes @ 0x7
  1662  0000B2                     	ds	1
  1663  0000B3                     ___ftmul@sign:
  1664                           	opt stack 0
  1665  0000B3                     LEDBsetBrightness@timeOut:
  1666                           	opt stack 0
  1667  0000B3                     LEDblinkRate@timeOut:
  1668                           	opt stack 0
  1669  0000B3                     cobs_encode@dst_write_ptr:
  1670                           	opt stack 0
  1671  0000B3                     cobs_decode@dst_write_ptr:
  1672                           	opt stack 0
  1673  0000B3                     oledPutChar@bytes:
  1674                           	opt stack 0
  1675  0000B3                     LEDwriteDisplay@writeBuffer:
  1676                           	opt stack 0
  1677                           
  1678                           ; 20 bytes @ 0x8
  1679  0000B3                     	ds	1
  1680  0000B4                     ?___fttol:
  1681                           	opt stack 0
  1682  0000B4                     ___fttol@f1:
  1683                           	opt stack 0
  1684                           
  1685                           ; 3 bytes @ 0x9
  1686  0000B4                     	ds	1
  1687  0000B5                     cobs_decode@len_code:
  1688                           	opt stack 0
  1689  0000B5                     LEDBsetBrightness@writeBuffer:
  1690                           	opt stack 0
  1691  0000B5                     LEDblinkRate@writeBuffer:
  1692                           	opt stack 0
  1693  0000B5                     cobs_encode@result:
  1694                           	opt stack 0
  1695                           
  1696                           ; 3 bytes @ 0xA
  1697  0000B5                     	ds	1
  1698  0000B6                     cobs_decode@result:
  1699                           	opt stack 0
  1700                           
  1701                           ; 3 bytes @ 0xB
  1702  0000B6                     	ds	1
  1703  0000B7                     LEDBsetBrightness@status:
  1704                           	opt stack 0
  1705  0000B7                     LEDblinkRate@status:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0xC
  1709  0000B7                     	ds	1
  1710  0000B8                     ??___fttol:
  1711  0000B8                     sendData@ComandByte:
  1712                           	opt stack 0
  1713  0000B8                     LEDbegin@writeBuffer:
  1714                           	opt stack 0
  1715                           
  1716                           ; 3 bytes @ 0xD
  1717  0000B8                     	ds	1
  1718  0000B9                     sendData@DataTable:
  1719                           	opt stack 0
  1720                           
  1721                           ; 1 bytes @ 0xE
  1722  0000B9                     	ds	1
  1723  0000BA                     sendData@DataTableIndex:
  1724                           	opt stack 0
  1725                           
  1726                           ; 1 bytes @ 0xF
  1727  0000BA                     	ds	1
  1728  0000BB                     LEDbegin@timeOut:
  1729                           	opt stack 0
  1730  0000BB                     sendData@DTS:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x10
  1734  0000BB                     	ds	1
  1735  0000BC                     oledPutChar@base:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x11
  1739  0000BC                     	ds	1
  1740  0000BD                     LEDbegin@i2c_addr:
  1741                           	opt stack 0
  1742  0000BD                     ___fttol@sign1:
  1743                           	opt stack 0
  1744  0000BD                     sendData@lenth:
  1745                           	opt stack 0
  1746                           
  1747                           ; 2 bytes @ 0x12
  1748  0000BD                     	ds	1
  1749  0000BE                     LEDbegin@status:
  1750                           	opt stack 0
  1751  0000BE                     oledPutChar@ch:
  1752                           	opt stack 0
  1753  0000BE                     ___fttol@lval:
  1754                           	opt stack 0
  1755                           
  1756                           ; 4 bytes @ 0x13
  1757  0000BE                     	ds	1
  1758  0000BF                     oledPutChar@status:
  1759                           	opt stack 0
  1760  0000BF                     ComController@DTI:
  1761                           	opt stack 0
  1762                           
  1763                           ; 2 bytes @ 0x14
  1764  0000BF                     	ds	1
  1765  0000C0                     oledClear@row:
  1766                           	opt stack 0
  1767  0000C0                     oledPrint@s:
  1768                           	opt stack 0
  1769                           
  1770                           ; 2 bytes @ 0x15
  1771  0000C0                     	ds	1
  1772  0000C1                     ComController@lenth:
  1773                           	opt stack 0
  1774                           
  1775                           ; 2 bytes @ 0x16
  1776  0000C1                     	ds	1
  1777  0000C2                     ___fttol@exp1:
  1778                           	opt stack 0
  1779  0000C2                     oledClear@col:
  1780                           	opt stack 0
  1781                           
  1782                           ; 2 bytes @ 0x17
  1783  0000C2                     	ds	1
  1784  0000C3                     LEDsetValue@value:
  1785                           	opt stack 0
  1786  0000C3                     ComController@DataToSend:
  1787                           	opt stack 0
  1788                           
  1789                           ; 4 bytes @ 0x18
  1790  0000C3                     	ds	2
  1791  0000C5                     LEDsetValue@color:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0x1A
  1795  0000C5                     	ds	2
  1796  0000C7                     ??_LEDsetValue:
  1797  0000C7                     ??_receiveData:
  1798  0000C7                     LEDwriteDisplay@i2c_addr:
  1799                           	opt stack 0
  1800                           
  1801                           ; 1 bytes @ 0x1C
  1802  0000C7                     	ds	1
  1803  0000C8                     LEDsetValue@k:
  1804                           	opt stack 0
  1805  0000C8                     LEDwriteDisplay@timeOut:
  1806                           	opt stack 0
  1807                           
  1808                           ; 2 bytes @ 0x1D
  1809  0000C8                     	ds	2
  1810  0000CA                     LEDwriteDisplay@status:
  1811                           	opt stack 0
  1812                           
  1813                           ; 1 bytes @ 0x1F
  1814  0000CA                     	ds	2
  1815  0000CC                     receiveData@CS:
  1816                           	opt stack 0
  1817                           
  1818                           ; 1 bytes @ 0x21
  1819  0000CC                     	ds	1
  1820  0000CD                     receiveData@i:
  1821                           	opt stack 0
  1822                           
  1823                           ; 2 bytes @ 0x22
  1824  0000CD                     	ds	2
  1825  0000CF                     receiveData@result:
  1826                           	opt stack 0
  1827                           
  1828                           ; 3 bytes @ 0x24
  1829  0000CF                     	ds	3
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           
  1837                           	psect	cstackCOMRAM
  1838  000001                     __pcstackCOMRAM:
  1839                           	opt stack 0
  1840  000001                     ??_TMR2_CallBack:
  1841  000001                     ?i2_UART_buff_size:
  1842                           	opt stack 0
  1843  000001                     ?i2_UART_buff_modulo_inc:
  1844                           	opt stack 0
  1845  000001                     ReadButtonState@btnnum:
  1846                           	opt stack 0
  1847  000001                     i2UART_buff_size@_this:
  1848                           	opt stack 0
  1849  000001                     i2UART_buff_modulo_inc@value:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x0
  1853  000001                     	ds	2
  1854  000003                     ??_ReadButtonState:
  1855  000003                     I2C1_Stop@completion_code:
  1856                           	opt stack 0
  1857  000003                     TMR2_CallBack@i:
  1858                           	opt stack 0
  1859  000003                     i2UART_buff_modulo_inc@modulus:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x2
  1863  000003                     	ds	1
  1864  000004                     ??_I2C1_ISR:
  1865                           
  1866                           ; 1 bytes @ 0x3
  1867  000004                     	ds	1
  1868  000005                     TMR0_ISR@x:
  1869                           	opt stack 0
  1870  000005                     i2UART_buff_modulo_inc@my_value:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x4
  1874  000005                     	ds	2
  1875  000007                     i2UART_buff_put@_this:
  1876                           	opt stack 0
  1877  000007                     i2UART_buff_get@_this:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x6
  1881  000007                     	ds	2
  1882  000009                     ??i2_UART_buff_get:
  1883  000009                     i2UART_buff_put@c:
  1884                           	opt stack 0
  1885                           
  1886                           ; 1 bytes @ 0x8
  1887  000009                     	ds	1
  1888  00000A                     ??i2_UART_buff_put:
  1889                           
  1890                           ; 1 bytes @ 0x9
  1891  00000A                     	ds	1
  1892  00000B                     i2UART_buff_get@c:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0xA
  1896  00000B                     	ds	1
  1897  00000C                     EUSART1_Receive_ISR@data:
  1898                           	opt stack 0
  1899                           
  1900                           ; 1 bytes @ 0xB
  1901  00000C                     	ds	1
  1902  00000D                     ??_INTERRUPT_InterruptManager:
  1903                           
  1904                           ; 1 bytes @ 0xC
  1905  00000D                     	ds	14
  1906  00001B                     ?_GetDataBarGraphA:
  1907                           	opt stack 0
  1908  00001B                     ?_GetDataBarGraphB:
  1909                           	opt stack 0
  1910  00001B                     ?_UART_buff_modulo_inc:
  1911                           	opt stack 0
  1912  00001B                     ?_GetTime:
  1913                           	opt stack 0
  1914  00001B                     ?_UART_buff_size:
  1915                           	opt stack 0
  1916  00001B                     ?___awdiv:
  1917                           	opt stack 0
  1918  00001B                     ?___ftpack:
  1919                           	opt stack 0
  1920  00001B                     ?_cobs_encode:
  1921                           	opt stack 0
  1922  00001B                     ?_cobs_decode:
  1923                           	opt stack 0
  1924  00001B                     GetDataDict@DataTableIndex:
  1925                           	opt stack 0
  1926  00001B                     I2C1_MasterTRBInsert@count:
  1927                           	opt stack 0
  1928  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1929                           	opt stack 0
  1930  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1931                           	opt stack 0
  1932  00001B                     UART_buff_size@_this:
  1933                           	opt stack 0
  1934  00001B                     UART_buff_modulo_inc@value:
  1935                           	opt stack 0
  1936  00001B                     Delay@wait:
  1937                           	opt stack 0
  1938  00001B                     cobs_encode@dst_buf_ptr:
  1939                           	opt stack 0
  1940  00001B                     cobs_decode@dst_buf_ptr:
  1941                           	opt stack 0
  1942  00001B                     CRC8@data:
  1943                           	opt stack 0
  1944  00001B                     ___awdiv@dividend:
  1945                           	opt stack 0
  1946  00001B                     memmove@d1:
  1947                           	opt stack 0
  1948  00001B                     memset@p1:
  1949                           	opt stack 0
  1950  00001B                     ___ftpack@arg:
  1951                           	opt stack 0
  1952                           
  1953                           ; 3 bytes @ 0x1A
  1954  00001B                     	ds	1
  1955  00001C                     GetDataDict@DataArray:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x1B
  1959  00001C                     	ds	1
  1960  00001D                     ??_Delay:
  1961  00001D                     ?_Receive_available:
  1962                           	opt stack 0
  1963  00001D                     CRC8@len:
  1964                           	opt stack 0
  1965  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1966                           	opt stack 0
  1967  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1968                           	opt stack 0
  1969  00001D                     UART_buff_modulo_inc@modulus:
  1970                           	opt stack 0
  1971  00001D                     cobs_encode@dst_buf_len:
  1972                           	opt stack 0
  1973  00001D                     cobs_decode@dst_buf_len:
  1974                           	opt stack 0
  1975  00001D                     ___awdiv@divisor:
  1976                           	opt stack 0
  1977  00001D                     memmove@s1:
  1978                           	opt stack 0
  1979  00001D                     memset@c:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0x1C
  1983  00001D                     	ds	1
  1984  00001E                     CRC8@sum:
  1985                           	opt stack 0
  1986  00001E                     GetDataDict@numbofbytes:
  1987                           	opt stack 0
  1988  00001E                     ___ftpack@exp:
  1989                           	opt stack 0
  1990  00001E                     Delay@x:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x1D
  1994  00001E                     	ds	1
  1995  00001F                     CRC8@extract:
  1996                           	opt stack 0
  1997  00001F                     GetDataDict@Error:
  1998                           	opt stack 0
  1999  00001F                     ___awdiv@counter:
  2000                           	opt stack 0
  2001  00001F                     ___ftpack@sign:
  2002                           	opt stack 0
  2003  00001F                     I2C1_MasterTRBInsert@pflag:
  2004                           	opt stack 0
  2005  00001F                     I2C1_MasterWriteTRBBuild@length:
  2006                           	opt stack 0
  2007  00001F                     UART_buff_modulo_inc@my_value:
  2008                           	opt stack 0
  2009  00001F                     cobs_encode@src_ptr:
  2010                           	opt stack 0
  2011  00001F                     cobs_decode@src_ptr:
  2012                           	opt stack 0
  2013  00001F                     memmove@n:
  2014                           	opt stack 0
  2015  00001F                     memset@n:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x1E
  2019  00001F                     	ds	1
  2020  000020                     ??___ftpack:
  2021  000020                     CRC8@tempI:
  2022                           	opt stack 0
  2023  000020                     GetDataDict@DataTable:
  2024                           	opt stack 0
  2025  000020                     ___awdiv@sign:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x1F
  2029  000020                     	ds	1
  2030  000021                     ??_memmove:
  2031  000021                     CRC8@crc:
  2032                           	opt stack 0
  2033  000021                     GetDataDict@DataCount:
  2034                           	opt stack 0
  2035  000021                     I2C1_MasterWriteTRBBuild@address:
  2036                           	opt stack 0
  2037  000021                     UART_buff_put@_this:
  2038                           	opt stack 0
  2039  000021                     UART_buff_get@_this:
  2040                           	opt stack 0
  2041  000021                     cobs_encode@src_len:
  2042                           	opt stack 0
  2043  000021                     cobs_decode@src_len:
  2044                           	opt stack 0
  2045  000021                     ___awdiv@quotient:
  2046                           	opt stack 0
  2047  000021                     memset@p:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x20
  2051  000021                     	ds	1
  2052  000022                     GetDataDict@ReturnCounter:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x21
  2056  000022                     	ds	1
  2057  000023                     ??_I2C1_MasterWriteTRBBuild:
  2058  000023                     ??_UART_buff_get:
  2059  000023                     ??_cobs_encode:
  2060  000023                     ??_cobs_decode:
  2061  000023                     ?___lwtoft:
  2062                           	opt stack 0
  2063  000023                     UART_buff_put@c:
  2064                           	opt stack 0
  2065  000023                     LEDsetBar@bar:
  2066                           	opt stack 0
  2067  000023                     UART_buff_init@_this:
  2068                           	opt stack 0
  2069  000023                     ___lwtoft@c:
  2070                           	opt stack 0
  2071  000023                     memmove@d:
  2072                           	opt stack 0
  2073                           
  2074                           ; 2 bytes @ 0x22
  2075  000023                     	ds	1
  2076  000024                     ??_UART_buff_put:
  2077                           
  2078                           ; 1 bytes @ 0x23
  2079  000024                     	ds	1
  2080  000025                     UART_buff_get@c:
  2081                           	opt stack 0
  2082  000025                     OLED_command@com:
  2083                           	opt stack 0
  2084  000025                     LEDBsetBrightness@b:
  2085                           	opt stack 0
  2086  000025                     LEDblinkRate@b:
  2087                           	opt stack 0
  2088  000025                     LEDsetBar@color:
  2089                           	opt stack 0
  2090  000025                     memmove@s:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x24
  2094  000025                     	ds	1
  2095  000026                     ?___ftmul:
  2096                           	opt stack 0
  2097  000026                     Send_put@_data:
  2098                           	opt stack 0
  2099  000026                     OLED_command@status:
  2100                           	opt stack 0
  2101  000026                     ___ftmul@f1:
  2102                           	opt stack 0
  2103                           
  2104                           ; 3 bytes @ 0x25
  2105  000026                     	ds	1
  2106  000027                     ??_oledPutChar:
  2107  000027                     ??_sendData:
  2108  000027                     LEDBsetBrightness@i2c_addr:
  2109                           	opt stack 0
  2110  000027                     LEDblinkRate@i2c_addr:
  2111                           	opt stack 0
  2112  000027                     oledGotoYX@Column:
  2113                           	opt stack 0
  2114  000027                     LEDsetBar@c:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x26
  2118  000027                     	ds	1
  2119  000028                     ??_oledGotoYX:
  2120                           
  2121                           ; 1 bytes @ 0x27
  2122  000028                     	ds	1
  2123  000029                     oledGotoYX@Row:
  2124                           	opt stack 0
  2125  000029                     LEDsetBar@a:
  2126                           	opt stack 0
  2127  000029                     ___ftmul@f2:
  2128                           	opt stack 0
  2129                           
  2130                           ; 3 bytes @ 0x28
  2131  000029                     	ds	2
  2132  00002B                     ??_ComController:
  2133  00002B                     
  2134                           ; 1 bytes @ 0x2A
  2135  00002B                     	ds	1
  2136  00002C                     tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           
  2143                           ; 1 bytes @ 0x2B
  2144 ;;
  2145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2146 ;;
  2147 ;; *************** function _main *****************
  2148 ;; Defined at:
  2149 ;;		line 37 in file "main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         0       0       0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels required when called:   11
  2169 ;; This function calls:
  2170 ;;		_ClearTime
  2171 ;;		_GetDataBarGraphA
  2172 ;;		_GetDataBarGraphB
  2173 ;;		_GetTime
  2174 ;;		_LEDbegin
  2175 ;;		_LEDsetValue
  2176 ;;		_LEDwriteDisplay
  2177 ;;		_SYSTEM_Initialize
  2178 ;;		_Setupdisplay
  2179 ;;		_Splash
  2180 ;;		___ftmul
  2181 ;;		___fttol
  2182 ;;		___lwtoft
  2183 ;;		_updateComms
  2184 ;; This function is called by:
  2185 ;;		Startup code after reset
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text0
  2190  00174C                     __ptext0:
  2191                           	opt stack 0
  2192  00174C                     _main:
  2193                           	opt stack 20
  2194                           
  2195                           ;main.c: 39: SYSTEM_Initialize();
  2196                           
  2197                           ;incstack = 0
  2198  00174C  ECF6  F012         	call	_SYSTEM_Initialize	;wreg free
  2199                           
  2200                           ;main.c: 58: (INTCONbits.GIE = 1);
  2201  001750  8EF2               	bsf	intcon,7,c	;volatile
  2202                           
  2203                           ;main.c: 61: (INTCONbits.PEIE = 1);
  2204  001752  8CF2               	bsf	intcon,6,c	;volatile
  2205                           
  2206                           ;main.c: 69: LEDbegin(0x70);
  2207  001754  0E70               	movlw	112
  2208  001756  EC6F  F00D         	call	_LEDbegin
  2209                           
  2210                           ;main.c: 70: LEDbegin(0x71);
  2211  00175A  0E71               	movlw	113
  2212  00175C  EC6F  F00D         	call	_LEDbegin
  2213                           
  2214                           ;main.c: 71: Setupdisplay();
  2215  001760  EC9A  F013         	call	_Setupdisplay	;wreg free
  2216                           
  2217                           ;main.c: 72: Splash();
  2218  001764  EC87  F010         	call	_Splash	;wreg free
  2219                           
  2220                           ;main.c: 74: do { LATA3 = 1; } while(0);
  2221  001768  8689               	bsf	3977,3,c	;volatile
  2222  00176A                     l6795:
  2223                           
  2224                           ;main.c: 76: updateComms();
  2225  00176A  ECB6  F013         	call	_updateComms	;wreg free
  2226                           
  2227                           ;main.c: 78: if (GetTime() > 2) {
  2228  00176E  ECAE  F013         	call	_GetTime	;wreg free
  2229  001772  BE1C               	btfsc	?_GetTime+1,7,c
  2230  001774  D7FA               	goto	l6795
  2231  001776  501C               	movf	?_GetTime+1,w,c
  2232  001778  E104               	bnz	u7240
  2233  00177A  0E03               	movlw	3
  2234  00177C  5C1B               	subwf	?_GetTime,w,c
  2235  00177E  A0D8               	btfss	status,0,c
  2236  001780  D7F4               	goto	l6795
  2237  001782                     u7240:
  2238                           
  2239                           ;main.c: 79: LEDsetValue(GetDataBarGraphA()*0.24, 1);
  2240  001782  0EC3               	movlw	195
  2241  001784  6E29               	movwf	___ftmul@f2,c
  2242  001786  0E75               	movlw	117
  2243  001788  6E2A               	movwf	___ftmul@f2+1,c
  2244  00178A  0E3E               	movlw	62
  2245  00178C  6E2B               	movwf	___ftmul@f2+2,c
  2246  00178E  ECA9  F013         	call	_GetDataBarGraphA	;wreg free
  2247  001792  C01B  F023         	movff	?_GetDataBarGraphA,___lwtoft@c
  2248  001796  C01C  F024         	movff	?_GetDataBarGraphA+1,___lwtoft@c+1
  2249  00179A  ECE4  F012         	call	___lwtoft	;wreg free
  2250  00179E  C023  F026         	movff	?___lwtoft,___ftmul@f1
  2251  0017A2  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  2252  0017A6  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  2253  0017AA  EC64  F008         	call	___ftmul	;wreg free
  2254  0017AE  C026  F0B4         	movff	?___ftmul,___fttol@f1
  2255  0017B2  C027  F0B5         	movff	?___ftmul+1,___fttol@f1+1
  2256  0017B6  C028  F0B6         	movff	?___ftmul+2,___fttol@f1+2
  2257  0017BA  ECC2  F007         	call	___fttol	;wreg free
  2258  0017BE  C0B4  F0C3         	movff	?___fttol,LEDsetValue@value
  2259  0017C2  C0B5  F0C4         	movff	?___fttol+1,LEDsetValue@value+1
  2260  0017C6  0E00               	movlw	0
  2261  0017C8  0100               	movlb	0	; () banked
  2262  0017CA  6FC6               	movwf	(LEDsetValue@color+1)& (0+255),b
  2263  0017CC  0E01               	movlw	1
  2264  0017CE  6FC5               	movwf	LEDsetValue@color& (0+255),b
  2265  0017D0  EC1D  F00D         	call	_LEDsetValue	;wreg free
  2266                           
  2267                           ;main.c: 80: LEDwriteDisplay(0x70);
  2268  0017D4  0E70               	movlw	112
  2269  0017D6  EC1D  F007         	call	_LEDwriteDisplay
  2270                           
  2271                           ;main.c: 81: LEDsetValue(GetDataBarGraphB()*0.24, 1);
  2272  0017DA  0EC3               	movlw	195
  2273  0017DC  6E29               	movwf	___ftmul@f2,c
  2274  0017DE  0E75               	movlw	117
  2275  0017E0  6E2A               	movwf	___ftmul@f2+1,c
  2276  0017E2  0E3E               	movlw	62
  2277  0017E4  6E2B               	movwf	___ftmul@f2+2,c
  2278  0017E6  ECA4  F013         	call	_GetDataBarGraphB	;wreg free
  2279  0017EA  C01B  F023         	movff	?_GetDataBarGraphB,___lwtoft@c
  2280  0017EE  C01C  F024         	movff	?_GetDataBarGraphB+1,___lwtoft@c+1
  2281  0017F2  ECE4  F012         	call	___lwtoft	;wreg free
  2282  0017F6  C023  F026         	movff	?___lwtoft,___ftmul@f1
  2283  0017FA  C024  F027         	movff	?___lwtoft+1,___ftmul@f1+1
  2284  0017FE  C025  F028         	movff	?___lwtoft+2,___ftmul@f1+2
  2285  001802  EC64  F008         	call	___ftmul	;wreg free
  2286  001806  C026  F0B4         	movff	?___ftmul,___fttol@f1
  2287  00180A  C027  F0B5         	movff	?___ftmul+1,___fttol@f1+1
  2288  00180E  C028  F0B6         	movff	?___ftmul+2,___fttol@f1+2
  2289  001812  ECC2  F007         	call	___fttol	;wreg free
  2290  001816  C0B4  F0C3         	movff	?___fttol,LEDsetValue@value
  2291  00181A  C0B5  F0C4         	movff	?___fttol+1,LEDsetValue@value+1
  2292  00181E  0E00               	movlw	0
  2293  001820  0100               	movlb	0	; () banked
  2294  001822  6FC6               	movwf	(LEDsetValue@color+1)& (0+255),b
  2295  001824  0E01               	movlw	1
  2296  001826  6FC5               	movwf	LEDsetValue@color& (0+255),b
  2297  001828  EC1D  F00D         	call	_LEDsetValue	;wreg free
  2298                           
  2299                           ;main.c: 82: LEDwriteDisplay(0x71);
  2300  00182C  0E71               	movlw	113
  2301  00182E  EC1D  F007         	call	_LEDwriteDisplay
  2302                           
  2303                           ;main.c: 84: ClearTime();
  2304  001832  ECB9  F013         	call	_ClearTime	;wreg free
  2305  001836  D799               	goto	l6795
  2306  001838                     __end_of_main:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           intcon	equ	0xFF2
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _updateComms *****************
  2318 ;; Defined at:
  2319 ;;		line 12 in file "Communications.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2333 ;;      Params:         0       0       0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:   10
  2340 ;; This function calls:
  2341 ;;		_receiveData
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text1
  2348  00276C                     __ptext1:
  2349                           	opt stack 0
  2350  00276C                     _updateComms:
  2351                           	opt stack 20
  2352                           
  2353                           ;Communications.c: 14: if (receiveData()) {
  2354                           
  2355                           ;incstack = 0
  2356  00276C  ECFA  F008         	call	_receiveData	;wreg free
  2357  002770  0012               	return	
  2358  002772                     __end_of_updateComms:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           intcon	equ	0xFF2
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _receiveData *****************
  2370 ;; Defined at:
  2371 ;;		line 82 in file "CarCom.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  result          3   36[BANK0 ] struct .
  2376 ;;  i               2   34[BANK0 ] int 
  2377 ;;  CS              1   33[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      unsigned char 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2387 ;;      Params:         0       0       0       0       0       0       0
  2388 ;;      Locals:         0       6       0       0       0       0       0
  2389 ;;      Temps:          0       5       0       0       0       0       0
  2390 ;;      Totals:         0      11       0       0       0       0       0
  2391 ;;Total ram usage:       11 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    9
  2394 ;; This function calls:
  2395 ;;		_CRC8
  2396 ;;		_ComController
  2397 ;;		_Receive_available
  2398 ;;		_Receive_get
  2399 ;;		_cobs_decode
  2400 ;; This function is called by:
  2401 ;;		_updateComms
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text2
  2406  0011F4                     __ptext2:
  2407                           	opt stack 0
  2408  0011F4                     _receiveData:
  2409                           	opt stack 20
  2410                           
  2411                           ;CarCom.c: 84: if(Receive_available()>5){
  2412                           
  2413                           ;incstack = 0
  2414  0011F4  EC62  F013         	call	_Receive_available	;wreg free
  2415  0011F8  BE1E               	btfsc	?_Receive_available+1,7,c
  2416  0011FA  D088               	goto	l6299
  2417  0011FC  501E               	movf	?_Receive_available+1,w,c
  2418  0011FE  E104               	bnz	u6340
  2419  001200  0E06               	movlw	6
  2420  001202  5C1D               	subwf	?_Receive_available,w,c
  2421  001204  A0D8               	btfss	status,0,c
  2422  001206  D082               	goto	l6299
  2423  001208                     u6340:
  2424                           
  2425                           ;CarCom.c: 85: if(Receive_get() == 3){
  2426  001208  EC8C  F013         	call	_Receive_get	;wreg free
  2427  00120C  0A03               	xorlw	3
  2428  00120E  A4D8               	btfss	status,2,c
  2429  001210  D074               	goto	l6295
  2430                           
  2431                           ;CarCom.c: 86: int i = 0;
  2432  001212  0E00               	movlw	0
  2433  001214  0100               	movlb	0	; () banked
  2434  001216  6FCE               	movwf	(receiveData@i+1)& (0+255),b
  2435  001218  0E00               	movlw	0
  2436  00121A  6FCD               	movwf	receiveData@i& (0+255),b
  2437  00121C                     l6275:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;CarCom.c: 88: Data = Receive_get();
  2441  00121C  EC8C  F013         	call	_Receive_get	;wreg free
  2442  001220  0100               	movlb	0	; () banked
  2443  001222  6FA3               	movwf	_Data& (0+255),b
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;CarCom.c: 89: ReciveArray[i] = Data;
  2447  001224  0E52               	movlw	low _ReciveArray
  2448  001226  0100               	movlb	0	; () banked
  2449  001228  25CD               	addwf	receiveData@i& (0+255),w,b
  2450  00122A  6ED9               	movwf	fsr2l,c
  2451  00122C  0E01               	movlw	high _ReciveArray
  2452  00122E  0100               	movlb	0	; () banked
  2453  001230  21CE               	addwfc	(receiveData@i+1)& (0+255),w,b
  2454  001232  6EDA               	movwf	fsr2h,c
  2455  001234  C0A3  FFDF         	movff	_Data,indf2
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;CarCom.c: 90: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2459  001238  0E85               	movlw	133
  2460  00123A                     u7387:
  2461  00123A  2EE8               	decfsz	wreg,f,c
  2462  00123C  D7FE               	bra	u7387
  2463  00123E  F000               	nop	
  2464                           
  2465                           ;CarCom.c: 91: i++;
  2466  001240  0100               	movlb	0	; () banked
  2467  001242  4BCD               	infsnz	receiveData@i& (0+255),f,b
  2468  001244  2BCE               	incf	(receiveData@i+1)& (0+255),f,b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;CarCom.c: 92: }while(Data != 0x00);
  2472  001246  0100               	movlb	0	; () banked
  2473  001248  51A3               	movf	_Data& (0+255),w,b
  2474  00124A  0100               	movlb	0	; () banked
  2475  00124C  A4D8               	btfss	status,2,c
  2476  00124E  D7E6               	goto	l6275
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;CarCom.c: 95: cobs_decode_result result;
  2480                           ;CarCom.c: 97: result = cobs_decode(ProcessArray, sizeof(ProcessArray), ReciveArray, i);
  2481                           
  2482                           ; BSR set to: 0
  2483  001250  0E34               	movlw	low _ProcessArray
  2484  001252  6E1B               	movwf	cobs_decode@dst_buf_ptr,c
  2485  001254  0E01               	movlw	high _ProcessArray
  2486  001256  6E1C               	movwf	cobs_decode@dst_buf_ptr+1,c
  2487  001258  0E00               	movlw	0
  2488  00125A  6E1E               	movwf	cobs_decode@dst_buf_len+1,c
  2489  00125C  0E1E               	movlw	30
  2490  00125E  6E1D               	movwf	cobs_decode@dst_buf_len,c
  2491  001260  0E52               	movlw	low _ReciveArray
  2492  001262  6E1F               	movwf	cobs_decode@src_ptr,c
  2493  001264  0E01               	movlw	high _ReciveArray
  2494  001266  6E20               	movwf	cobs_decode@src_ptr+1,c
  2495  001268  C0CD  F021         	movff	receiveData@i,cobs_decode@src_len
  2496  00126C  C0CE  F022         	movff	receiveData@i+1,cobs_decode@src_len+1
  2497  001270  ECA3  F004         	call	_cobs_decode	;wreg free
  2498  001274  C01B  F0CF         	movff	?_cobs_decode,receiveData@result
  2499  001278  C01C  F0D0         	movff	?_cobs_decode+1,receiveData@result+1
  2500  00127C  C01D  F0D1         	movff	?_cobs_decode+2,receiveData@result+2
  2501                           
  2502                           ;CarCom.c: 99: unsigned char CS = CRC8(ProcessArray, result.out_len-1);
  2503  001280  0E34               	movlw	low _ProcessArray
  2504  001282  6E1B               	movwf	CRC8@data,c
  2505  001284  0E01               	movlw	high _ProcessArray
  2506  001286  6E1C               	movwf	CRC8@data+1,c
  2507  001288  0100               	movlb	0	; () banked
  2508  00128A  05CF               	decf	receiveData@result& (0+255),w,b
  2509  00128C  6E1D               	movwf	CRC8@len,c
  2510  00128E  ECC2  F011         	call	_CRC8	;wreg free
  2511  001292  0100               	movlb	0	; () banked
  2512  001294  6FCC               	movwf	receiveData@CS& (0+255),b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;CarCom.c: 101: if(ProcessArray[result.out_len-1] == CS){
  2516  001296  0EFF               	movlw	255
  2517  001298  0100               	movlb	0	; () banked
  2518  00129A  6FC7               	movwf	??_receiveData& (0+255),b
  2519  00129C  0EFF               	movlw	255
  2520  00129E  0100               	movlb	0	; () banked
  2521  0012A0  6FC8               	movwf	(??_receiveData+1)& (0+255),b
  2522  0012A2  C0CF  F0C9         	movff	receiveData@result,??_receiveData+2
  2523  0012A6  C0D0  F0CA         	movff	receiveData@result+1,??_receiveData+3
  2524  0012AA  0100               	movlb	0	; () banked
  2525  0012AC  51C7               	movf	??_receiveData& (0+255),w,b
  2526  0012AE  0100               	movlb	0	; () banked
  2527  0012B0  27C9               	addwf	(??_receiveData+2)& (0+255),f,b
  2528  0012B2  0100               	movlb	0	; () banked
  2529  0012B4  51C8               	movf	(??_receiveData+1)& (0+255),w,b
  2530  0012B6  0100               	movlb	0	; () banked
  2531  0012B8  23CA               	addwfc	(??_receiveData+3)& (0+255),f,b
  2532  0012BA  0E34               	movlw	low _ProcessArray
  2533  0012BC  0100               	movlb	0	; () banked
  2534  0012BE  25C9               	addwf	(??_receiveData+2)& (0+255),w,b
  2535  0012C0  6ED9               	movwf	fsr2l,c
  2536  0012C2  0E01               	movlw	high _ProcessArray
  2537  0012C4  0100               	movlb	0	; () banked
  2538  0012C6  21CA               	addwfc	(??_receiveData+3)& (0+255),w,b
  2539  0012C8  6EDA               	movwf	fsr2h,c
  2540  0012CA  0100               	movlb	0	; () banked
  2541  0012CC  51CC               	movf	receiveData@CS& (0+255),w,b
  2542  0012CE  18DE               	xorwf	postinc2,w,c
  2543  0012D0  A4D8               	btfss	status,2,c
  2544  0012D2  D01C               	goto	l6299
  2545                           
  2546                           ; BSR set to: 0
  2547                           
  2548                           ;CarCom.c: 102: do { LATA3 = ~LATA3; } while(0);
  2549  0012D4  B689               	btfsc	3977,3,c	;volatile
  2550  0012D6  D002               	goto	u6380
  2551  0012D8  8689               	bsf	3977,3,c	;volatile
  2552  0012DA  D001               	goto	l6289
  2553  0012DC                     u6380:
  2554  0012DC  9689               	bcf	3977,3,c	;volatile
  2555  0012DE                     l6289:
  2556                           
  2557                           ;CarCom.c: 103: ComController(ProcessArray,result.out_len);
  2558  0012DE  0E34               	movlw	low _ProcessArray
  2559  0012E0  0100               	movlb	0	; () banked
  2560  0012E2  6FBF               	movwf	ComController@DTI& (0+255),b
  2561  0012E4  0E01               	movlw	high _ProcessArray
  2562  0012E6  0100               	movlb	0	; () banked
  2563  0012E8  6FC0               	movwf	(ComController@DTI+1)& (0+255),b
  2564  0012EA  C0CF  F0C1         	movff	receiveData@result,ComController@lenth
  2565  0012EE  C0D0  F0C2         	movff	receiveData@result+1,ComController@lenth+1
  2566  0012F2  EC1C  F00C         	call	_ComController	;wreg free
  2567                           
  2568                           ;CarCom.c: 104: return 1;
  2569  0012F6  0E01               	movlw	1
  2570  0012F8  0012               	return	
  2571  0012FA                     l6295:
  2572                           
  2573                           ;CarCom.c: 109: Data = Receive_get();
  2574  0012FA  EC8C  F013         	call	_Receive_get	;wreg free
  2575  0012FE  0100               	movlb	0	; () banked
  2576  001300  6FA3               	movwf	_Data& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;CarCom.c: 110: }while(Data != 0x00);
  2580  001302  0100               	movlb	0	; () banked
  2581  001304  51A3               	movf	_Data& (0+255),w,b
  2582  001306  0100               	movlb	0	; () banked
  2583  001308  A4D8               	btfss	status,2,c
  2584  00130A  D7F7               	goto	l6295
  2585  00130C                     l6299:
  2586                           
  2587                           ;CarCom.c: 125: }
  2588                           ;CarCom.c: 127: return 0;
  2589  00130C  0E00               	movlw	0
  2590  00130E  0012               	return	
  2591  001310                     __end_of_receiveData:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           wreg	equ	0xFE8
  2600                           indf2	equ	0xFDF
  2601                           postinc2	equ	0xFDE
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _cobs_decode *****************
  2607 ;; Defined at:
  2608 ;;		line 115 in file "COBS.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  dst_buf_ptr     2   26[COMRAM] PTR unsigned char 
  2611 ;;		 -> ProcessArray(30), 
  2612 ;;  dst_buf_len     2   28[COMRAM] unsigned int 
  2613 ;;  src_ptr         2   30[COMRAM] PTR const unsigned char 
  2614 ;;		 -> ReciveArray(30), 
  2615 ;;  src_len         2   32[COMRAM] unsigned int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  result          3   11[BANK0 ] struct .
  2618 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  2619 ;;		 -> ProcessArray(30), 
  2620 ;;  remaining_by    2    6[BANK0 ] unsigned int 
  2621 ;;  dst_buf_end_    2    2[BANK0 ] PTR unsigned char 
  2622 ;;		 -> ProcessArray(30), 
  2623 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  2624 ;;		 -> ReciveArray(30), 
  2625 ;;  len_code        1   10[BANK0 ] unsigned char 
  2626 ;;  i               1    5[BANK0 ] unsigned char 
  2627 ;;  src_byte        1    4[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  3   26[COMRAM] struct .
  2630 ;; Registers used:
  2631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         8       0       0       0       0       0       0
  2638 ;;      Locals:         0      14       0       0       0       0       0
  2639 ;;      Temps:          2       0       0       0       0       0       0
  2640 ;;      Totals:        10      14       0       0       0       0       0
  2641 ;;Total ram usage:       24 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_receiveData
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text3
  2652  000946                     __ptext3:
  2653                           	opt stack 0
  2654  000946                     _cobs_decode:
  2655                           	opt stack 24
  2656                           
  2657                           ;COBS.c: 117: cobs_decode_result result = { 0, COBS_DECODE_OK };
  2658                           
  2659                           ;incstack = 0
  2660  000946  C131  F0B6         	movff	cobs_decode@F192,cobs_decode@result
  2661  00094A  C132  F0B7         	movff	cobs_decode@F192+1,cobs_decode@result+1
  2662  00094E  C133  F0B8         	movff	cobs_decode@F192+2,cobs_decode@result+2
  2663                           
  2664                           ;COBS.c: 118: const uint8_t * src_end_ptr = src_ptr + src_len;
  2665  000952  5021               	movf	cobs_decode@src_len,w,c
  2666  000954  241F               	addwf	cobs_decode@src_ptr,w,c
  2667  000956  0100               	movlb	0	; () banked
  2668  000958  6FAB               	movwf	cobs_decode@src_end_ptr& (0+255),b
  2669  00095A  5022               	movf	cobs_decode@src_len+1,w,c
  2670  00095C  2020               	addwfc	cobs_decode@src_ptr+1,w,c
  2671  00095E  0100               	movlb	0	; () banked
  2672  000960  6FAC               	movwf	(cobs_decode@src_end_ptr+1)& (0+255),b
  2673                           
  2674                           ;COBS.c: 119: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  2675  000962  501D               	movf	cobs_decode@dst_buf_len,w,c
  2676  000964  241B               	addwf	cobs_decode@dst_buf_ptr,w,c
  2677  000966  0100               	movlb	0	; () banked
  2678  000968  6FAD               	movwf	cobs_decode@dst_buf_end_ptr& (0+255),b
  2679  00096A  501E               	movf	cobs_decode@dst_buf_len+1,w,c
  2680  00096C  201C               	addwfc	cobs_decode@dst_buf_ptr+1,w,c
  2681  00096E  0100               	movlb	0	; () banked
  2682  000970  6FAE               	movwf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),b
  2683                           
  2684                           ;COBS.c: 120: uint8_t * dst_write_ptr = dst_buf_ptr;
  2685  000972  C01B  F0B3         	movff	cobs_decode@dst_buf_ptr,cobs_decode@dst_write_ptr
  2686  000976  C01C  F0B4         	movff	cobs_decode@dst_buf_ptr+1,cobs_decode@dst_write_ptr+1
  2687                           
  2688                           ;COBS.c: 121: size_t remaining_bytes;
  2689                           ;COBS.c: 122: uint8_t src_byte;
  2690                           ;COBS.c: 123: uint8_t i;
  2691                           ;COBS.c: 124: uint8_t len_code;
  2692                           ;COBS.c: 128: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  2693  00097A  501B               	movf	cobs_decode@dst_buf_ptr,w,c
  2694  00097C  101C               	iorwf	cobs_decode@dst_buf_ptr+1,w,c
  2695  00097E  B4D8               	btfsc	status,2,c
  2696  000980  D004               	goto	l6077
  2697                           
  2698                           ; BSR set to: 0
  2699  000982  501F               	movf	cobs_decode@src_ptr,w,c
  2700  000984  1020               	iorwf	cobs_decode@src_ptr+1,w,c
  2701  000986  A4D8               	btfss	status,2,c
  2702  000988  D00A               	goto	l6083
  2703  00098A                     l6077:
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;COBS.c: 129: {
  2707                           ;COBS.c: 130: result.status = COBS_DECODE_NULL_POINTER;
  2708  00098A  0E01               	movlw	1
  2709  00098C  0100               	movlb	0	; () banked
  2710  00098E  6FB8               	movwf	(cobs_decode@result+2)& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;COBS.c: 131: return result;
  2714  000990  C0B6  F01B         	movff	cobs_decode@result,?_cobs_decode
  2715  000994  C0B7  F01C         	movff	cobs_decode@result+1,?_cobs_decode+1
  2716  000998  C0B8  F01D         	movff	cobs_decode@result+2,?_cobs_decode+2
  2717                           
  2718                           ; BSR set to: 0
  2719  00099C  0012               	return	
  2720  00099E                     l6083:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;COBS.c: 132: }
  2724                           ;COBS.c: 134: if (src_len != 0)
  2725  00099E  5021               	movf	cobs_decode@src_len,w,c
  2726  0009A0  1022               	iorwf	cobs_decode@src_len+1,w,c
  2727  0009A2  B4D8               	btfsc	status,2,c
  2728  0009A4  D096               	goto	l6147
  2729  0009A6                     l6085:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;COBS.c: 137: {
  2733                           ;COBS.c: 138: len_code = *src_ptr++;
  2734  0009A6  C01F  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  2735  0009AA  C020  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  2736  0009AE  50DF               	movf	indf2,w,c
  2737  0009B0  0100               	movlb	0	; () banked
  2738  0009B2  6FB5               	movwf	cobs_decode@len_code& (0+255),b
  2739                           
  2740                           ; BSR set to: 0
  2741  0009B4  4A1F               	infsnz	cobs_decode@src_ptr,f,c
  2742  0009B6  2A20               	incf	cobs_decode@src_ptr+1,f,c
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;COBS.c: 139: if (len_code == 0)
  2746  0009B8  0100               	movlb	0	; () banked
  2747  0009BA  51B5               	movf	cobs_decode@len_code& (0+255),w,b
  2748  0009BC  0100               	movlb	0	; () banked
  2749  0009BE  A4D8               	btfss	status,2,c
  2750  0009C0  D003               	goto	l6093
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;COBS.c: 140: {
  2754                           ;COBS.c: 141: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  2755  0009C2  0100               	movlb	0	; () banked
  2756  0009C4  85B8               	bsf	(cobs_decode@result+2)& (0+255),2,b
  2757                           
  2758                           ;COBS.c: 142: break;
  2759  0009C6  D085               	goto	l6147
  2760  0009C8                     l6093:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;COBS.c: 143: }
  2764                           ;COBS.c: 144: len_code--;
  2765  0009C8  0100               	movlb	0	; () banked
  2766  0009CA  07B5               	decf	cobs_decode@len_code& (0+255),f,b
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;COBS.c: 147: remaining_bytes = src_end_ptr - src_ptr;
  2770  0009CC  C01F  F023         	movff	cobs_decode@src_ptr,??_cobs_decode
  2771  0009D0  C020  F024         	movff	cobs_decode@src_ptr+1,??_cobs_decode+1
  2772  0009D4  1E23               	comf	??_cobs_decode,f,c
  2773  0009D6  1E24               	comf	??_cobs_decode+1,f,c
  2774  0009D8  4A23               	infsnz	??_cobs_decode,f,c
  2775  0009DA  2A24               	incf	??_cobs_decode+1,f,c
  2776  0009DC  0100               	movlb	0	; () banked
  2777  0009DE  51AB               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  2778  0009E0  2423               	addwf	??_cobs_decode,w,c
  2779  0009E2  0100               	movlb	0	; () banked
  2780  0009E4  6FB1               	movwf	cobs_decode@remaining_bytes& (0+255),b
  2781  0009E6  0100               	movlb	0	; () banked
  2782  0009E8  51AC               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  2783  0009EA  2024               	addwfc	??_cobs_decode+1,w,c
  2784  0009EC  0100               	movlb	0	; () banked
  2785  0009EE  6FB2               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;COBS.c: 148: if (len_code > remaining_bytes)
  2789  0009F0  0100               	movlb	0	; () banked
  2790  0009F2  51B5               	movf	cobs_decode@len_code& (0+255),w,b
  2791  0009F4  0100               	movlb	0	; () banked
  2792  0009F6  5DB1               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  2793  0009F8  0E00               	movlw	0
  2794  0009FA  59B2               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  2795  0009FC  B0D8               	btfsc	status,0,c
  2796  0009FE  D004               	goto	l6103
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;COBS.c: 149: {
  2800                           ;COBS.c: 150: result.status |= COBS_DECODE_INPUT_TOO_SHORT;
  2801  000A00  0100               	movlb	0	; () banked
  2802  000A02  87B8               	bsf	(cobs_decode@result+2)& (0+255),3,b
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;COBS.c: 151: len_code = remaining_bytes;
  2806  000A04  C0B1  F0B5         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  2807  000A08                     l6103:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;COBS.c: 152: }
  2811                           ;COBS.c: 155: remaining_bytes = dst_buf_end_ptr - dst_write_ptr;
  2812  000A08  C0B3  F023         	movff	cobs_decode@dst_write_ptr,??_cobs_decode
  2813  000A0C  C0B4  F024         	movff	cobs_decode@dst_write_ptr+1,??_cobs_decode+1
  2814  000A10  1E23               	comf	??_cobs_decode,f,c
  2815  000A12  1E24               	comf	??_cobs_decode+1,f,c
  2816  000A14  4A23               	infsnz	??_cobs_decode,f,c
  2817  000A16  2A24               	incf	??_cobs_decode+1,f,c
  2818  000A18  0100               	movlb	0	; () banked
  2819  000A1A  51AD               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  2820  000A1C  2423               	addwf	??_cobs_decode,w,c
  2821  000A1E  0100               	movlb	0	; () banked
  2822  000A20  6FB1               	movwf	cobs_decode@remaining_bytes& (0+255),b
  2823  000A22  0100               	movlb	0	; () banked
  2824  000A24  51AE               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  2825  000A26  2024               	addwfc	??_cobs_decode+1,w,c
  2826  000A28  0100               	movlb	0	; () banked
  2827  000A2A  6FB2               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;COBS.c: 156: if (len_code > remaining_bytes)
  2831  000A2C  0100               	movlb	0	; () banked
  2832  000A2E  51B5               	movf	cobs_decode@len_code& (0+255),w,b
  2833  000A30  0100               	movlb	0	; () banked
  2834  000A32  5DB1               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  2835  000A34  0E00               	movlw	0
  2836  000A36  59B2               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  2837  000A38  B0D8               	btfsc	status,0,c
  2838  000A3A  D004               	goto	l6111
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;COBS.c: 157: {
  2842                           ;COBS.c: 158: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  2843  000A3C  0100               	movlb	0	; () banked
  2844  000A3E  83B8               	bsf	(cobs_decode@result+2)& (0+255),1,b
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;COBS.c: 159: len_code = remaining_bytes;
  2848  000A40  C0B1  F0B5         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  2849  000A44                     l6111:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;COBS.c: 160: }
  2853                           ;COBS.c: 162: for (i = len_code; i != 0; i--)
  2854  000A44  C0B5  F0B0         	movff	cobs_decode@len_code,cobs_decode@i
  2855  000A48                     l6113:
  2856                           
  2857                           ; BSR set to: 0
  2858  000A48  0100               	movlb	0	; () banked
  2859  000A4A  51B0               	movf	cobs_decode@i& (0+255),w,b
  2860  000A4C  0100               	movlb	0	; () banked
  2861  000A4E  B4D8               	btfsc	status,2,c
  2862  000A50  D01C               	goto	l6133
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;COBS.c: 163: {
  2866                           ;COBS.c: 164: src_byte = *src_ptr++;
  2867                           
  2868                           ; BSR set to: 0
  2869                           
  2870                           ; BSR set to: 0
  2871  000A52  C01F  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  2872  000A56  C020  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  2873  000A5A  50DF               	movf	indf2,w,c
  2874  000A5C  0100               	movlb	0	; () banked
  2875  000A5E  6FAF               	movwf	cobs_decode@src_byte& (0+255),b
  2876                           
  2877                           ; BSR set to: 0
  2878  000A60  4A1F               	infsnz	cobs_decode@src_ptr,f,c
  2879  000A62  2A20               	incf	cobs_decode@src_ptr+1,f,c
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;COBS.c: 165: if (src_byte == 0)
  2883  000A64  0100               	movlb	0	; () banked
  2884  000A66  51AF               	movf	cobs_decode@src_byte& (0+255),w,b
  2885  000A68  0100               	movlb	0	; () banked
  2886  000A6A  A4D8               	btfss	status,2,c
  2887  000A6C  D002               	goto	l6125
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;COBS.c: 166: {
  2891                           ;COBS.c: 167: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  2892  000A6E  0100               	movlb	0	; () banked
  2893  000A70  85B8               	bsf	(cobs_decode@result+2)& (0+255),2,b
  2894  000A72                     l6125:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;COBS.c: 168: }
  2898                           ;COBS.c: 169: *dst_write_ptr++ = src_byte;
  2899  000A72  C0B3  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  2900  000A76  C0B4  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  2901  000A7A  C0AF  FFDF         	movff	cobs_decode@src_byte,indf2
  2902                           
  2903                           ; BSR set to: 0
  2904  000A7E  0100               	movlb	0	; () banked
  2905  000A80  4BB3               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  2906  000A82  2BB4               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  2907                           
  2908                           ; BSR set to: 0
  2909  000A84  0100               	movlb	0	; () banked
  2910  000A86  07B0               	decf	cobs_decode@i& (0+255),f,b
  2911  000A88  D7DF               	goto	l6113
  2912  000A8A                     l6133:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;COBS.c: 170: }
  2916                           ;COBS.c: 172: if (src_ptr >= src_end_ptr)
  2917  000A8A  0100               	movlb	0	; () banked
  2918  000A8C  51AB               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  2919  000A8E  5C1F               	subwf	cobs_decode@src_ptr,w,c
  2920  000A90  0100               	movlb	0	; () banked
  2921  000A92  51AC               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  2922  000A94  5820               	subwfb	cobs_decode@src_ptr+1,w,c
  2923  000A96  B0D8               	btfsc	status,0,c
  2924  000A98  D01C               	goto	l6147
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;COBS.c: 175: }
  2928                           ;COBS.c: 178: if (len_code != 0xFE)
  2929                           
  2930                           ; BSR set to: 0
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;COBS.c: 173: {
  2934                           ;COBS.c: 174: break;
  2935  000A9A  0EFE               	movlw	254
  2936  000A9C  0100               	movlb	0	; () banked
  2937  000A9E  19B5               	xorwf	cobs_decode@len_code& (0+255),w,b
  2938  000AA0  B4D8               	btfsc	status,2,c
  2939  000AA2  D781               	goto	l6085
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;COBS.c: 179: {
  2943                           ;COBS.c: 180: if (dst_write_ptr >= dst_buf_end_ptr)
  2944  000AA4  0100               	movlb	0	; () banked
  2945  000AA6  51AD               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  2946  000AA8  0100               	movlb	0	; () banked
  2947  000AAA  5DB3               	subwf	cobs_decode@dst_write_ptr& (0+255),w,b
  2948  000AAC  0100               	movlb	0	; () banked
  2949  000AAE  51AE               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  2950  000AB0  0100               	movlb	0	; () banked
  2951  000AB2  59B4               	subwfb	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  2952  000AB4  A0D8               	btfss	status,0,c
  2953  000AB6  D003               	goto	l6143
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;COBS.c: 181: {
  2957                           ;COBS.c: 182: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  2958  000AB8  0100               	movlb	0	; () banked
  2959  000ABA  83B8               	bsf	(cobs_decode@result+2)& (0+255),1,b
  2960                           
  2961                           ;COBS.c: 183: break;
  2962  000ABC  D00A               	goto	l6147
  2963  000ABE                     l6143:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;COBS.c: 184: }
  2967                           ;COBS.c: 185: *dst_write_ptr++ = 0;
  2968  000ABE  C0B3  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  2969  000AC2  C0B4  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  2970  000AC6  0E00               	movlw	0
  2971  000AC8  6EDF               	movwf	indf2,c
  2972                           
  2973                           ; BSR set to: 0
  2974  000ACA  0100               	movlb	0	; () banked
  2975  000ACC  4BB3               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  2976  000ACE  2BB4               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;COBS.c: 186: }
  2980                           ;COBS.c: 187: }
  2981  000AD0  D76A               	goto	l6085
  2982  000AD2                     l6147:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;COBS.c: 188: }
  2986                           ;COBS.c: 190: result.out_len = dst_write_ptr - dst_buf_ptr;
  2987  000AD2  C01B  F023         	movff	cobs_decode@dst_buf_ptr,??_cobs_decode
  2988  000AD6  C01C  F024         	movff	cobs_decode@dst_buf_ptr+1,??_cobs_decode+1
  2989  000ADA  1E23               	comf	??_cobs_decode,f,c
  2990  000ADC  1E24               	comf	??_cobs_decode+1,f,c
  2991  000ADE  4A23               	infsnz	??_cobs_decode,f,c
  2992  000AE0  2A24               	incf	??_cobs_decode+1,f,c
  2993  000AE2  0100               	movlb	0	; () banked
  2994  000AE4  51B3               	movf	cobs_decode@dst_write_ptr& (0+255),w,b
  2995  000AE6  2423               	addwf	??_cobs_decode,w,c
  2996  000AE8  0100               	movlb	0	; () banked
  2997  000AEA  6FB6               	movwf	cobs_decode@result& (0+255),b
  2998  000AEC  0100               	movlb	0	; () banked
  2999  000AEE  51B4               	movf	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  3000  000AF0  2024               	addwfc	??_cobs_decode+1,w,c
  3001  000AF2  0100               	movlb	0	; () banked
  3002  000AF4  6FB7               	movwf	(cobs_decode@result+1)& (0+255),b
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;COBS.c: 192: return result;
  3006  000AF6  C0B6  F01B         	movff	cobs_decode@result,?_cobs_decode
  3007  000AFA  C0B7  F01C         	movff	cobs_decode@result+1,?_cobs_decode+1
  3008  000AFE  C0B8  F01D         	movff	cobs_decode@result+2,?_cobs_decode+2
  3009  000B02  0012               	return	
  3010  000B04                     __end_of_cobs_decode:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           intcon	equ	0xFF2
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _Receive_get *****************
  3026 ;; Defined at:
  3027 ;;		line 126 in file "UART.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      unsigned char 
  3034 ;; Registers used:
  3035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3041 ;;      Params:         0       0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    6
  3048 ;; This function calls:
  3049 ;;		_UART_buff_get
  3050 ;; This function is called by:
  3051 ;;		_receiveData
  3052 ;;		_getch
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text4
  3057  002718                     __ptext4:
  3058                           	opt stack 0
  3059  002718                     _Receive_get:
  3060                           	opt stack 22
  3061                           
  3062                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;incstack = 0
  3066  002718  0E00               	movlw	low _input_buffer
  3067  00271A  6E21               	movwf	UART_buff_get@_this,c
  3068  00271C  0E02               	movlw	high _input_buffer
  3069  00271E  6E22               	movwf	UART_buff_get@_this+1,c
  3070  002720  ECF6  F00E         	call	_UART_buff_get	;wreg free
  3071  002724  0012               	return	
  3072  002726                     __end_of_Receive_get:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           intcon	equ	0xFF2
  3079                           postinc0	equ	0xFEE
  3080                           wreg	equ	0xFE8
  3081                           indf2	equ	0xFDF
  3082                           postinc2	equ	0xFDE
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _Receive_available *****************
  3088 ;; Defined at:
  3089 ;;		line 122 in file "UART.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2   28[COMRAM] int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3103 ;;      Params:         2       0       0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0
  3106 ;;      Totals:         2       0       0       0       0       0       0
  3107 ;;Total ram usage:        2 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    5
  3110 ;; This function calls:
  3111 ;;		_UART_buff_size
  3112 ;; This function is called by:
  3113 ;;		_receiveData
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text5
  3118  0026C4                     __ptext5:
  3119                           	opt stack 0
  3120  0026C4                     _Receive_available:
  3121                           	opt stack 23
  3122                           
  3123                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  3124                           
  3125                           ;incstack = 0
  3126  0026C4  0E00               	movlw	low _input_buffer
  3127  0026C6  6E1B               	movwf	UART_buff_size@_this,c
  3128  0026C8  0E02               	movlw	high _input_buffer
  3129  0026CA  6E1C               	movwf	UART_buff_size@_this+1,c
  3130  0026CC  EC6D  F013         	call	_UART_buff_size	;wreg free
  3131  0026D0  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  3132  0026D4  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  3133  0026D8  0012               	return	
  3134  0026DA                     __end_of_Receive_available:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           intcon	equ	0xFF2
  3141                           postinc0	equ	0xFEE
  3142                           wreg	equ	0xFE8
  3143                           indf2	equ	0xFDF
  3144                           postinc2	equ	0xFDE
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _UART_buff_size *****************
  3150 ;; Defined at:
  3151 ;;		line 102 in file "UART.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  3154 ;;		 -> output_buffer(206), input_buffer(206), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2   26[COMRAM] int 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         2       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         2       0       0       0       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    4
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_Receive_available
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text6
  3181  0026DA                     __ptext6:
  3182                           	opt stack 0
  3183  0026DA                     _UART_buff_size:
  3184                           	opt stack 23
  3185                           
  3186                           ;UART.c: 103: return (_this->count);
  3187                           
  3188                           ;incstack = 0
  3189  0026DA  EE20 F0CC          	lfsr	2,204
  3190  0026DE  501B               	movf	UART_buff_size@_this,w,c
  3191  0026E0  26D9               	addwf	fsr2l,f,c
  3192  0026E2  501C               	movf	UART_buff_size@_this+1,w,c
  3193  0026E4  22DA               	addwfc	fsr2h,f,c
  3194  0026E6  CFDE F01B          	movff	postinc2,?_UART_buff_size
  3195  0026EA  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  3196  0026EE  0012               	return	
  3197  0026F0                     __end_of_UART_buff_size:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           intcon	equ	0xFF2
  3204                           postinc0	equ	0xFEE
  3205                           wreg	equ	0xFE8
  3206                           indf2	equ	0xFDF
  3207                           postinc2	equ	0xFDE
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _ComController *****************
  3214 ;; Defined at:
  3215 ;;		line 130 in file "CarCom.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  DTI             2   20[BANK0 ] PTR unsigned char 
  3218 ;;		 -> ProcessArray(30), 
  3219 ;;  lenth           2   22[BANK0 ] unsigned int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  DataToSend      4   24[BANK0 ] unsigned char [4]
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3231 ;;      Params:         0       4       0       0       0       0       0
  3232 ;;      Locals:         0       4       0       0       0       0       0
  3233 ;;      Temps:          1       0       0       0       0       0       0
  3234 ;;      Totals:         1       8       0       0       0       0       0
  3235 ;;Total ram usage:        9 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    8
  3238 ;; This function calls:
  3239 ;;		_Delay
  3240 ;;		_GetDataDict
  3241 ;;		_sendData
  3242 ;; This function is called by:
  3243 ;;		_receiveData
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text7
  3248  001838                     __ptext7:
  3249                           	opt stack 0
  3250  001838                     _ComController:
  3251                           	opt stack 20
  3252                           
  3253                           ;CarCom.c: 131: if(DTI[1] == 1){
  3254                           
  3255                           ;incstack = 0
  3256  001838  0100               	movlb	0	; () banked
  3257  00183A  EE20 F001          	lfsr	2,1
  3258  00183E  51BF               	movf	ComController@DTI& (0+255),w,b
  3259  001840  26D9               	addwf	fsr2l,f,c
  3260  001842  51C0               	movf	(ComController@DTI+1)& (0+255),w,b
  3261  001844  22DA               	addwfc	fsr2h,f,c
  3262  001846  04DE               	decf	postinc2,w,c
  3263  001848  A4D8               	btfss	status,2,c
  3264  00184A  0012               	return	
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;CarCom.c: 132: unsigned char DataToSend[4];
  3268                           ;CarCom.c: 133: GetDataDict(DTI[2], DTI[3], DataToSend, DTI[4]);
  3269  00184C  0100               	movlb	0	; () banked
  3270  00184E  EE20 F003          	lfsr	2,3
  3271  001852  51BF               	movf	ComController@DTI& (0+255),w,b
  3272  001854  26D9               	addwf	fsr2l,f,c
  3273  001856  51C0               	movf	(ComController@DTI+1)& (0+255),w,b
  3274  001858  22DA               	addwfc	fsr2h,f,c
  3275  00185A  50DF               	movf	indf2,w,c
  3276  00185C  6E1B               	movwf	GetDataDict@DataTableIndex,c
  3277  00185E  0EC3               	movlw	low ComController@DataToSend
  3278  001860  6E1C               	movwf	GetDataDict@DataArray,c
  3279  001862  0E00               	movlw	high ComController@DataToSend
  3280  001864  6E1D               	movwf	GetDataDict@DataArray+1,c
  3281  001866  0100               	movlb	0	; () banked
  3282  001868  EE20 F004          	lfsr	2,4
  3283  00186C  51BF               	movf	ComController@DTI& (0+255),w,b
  3284  00186E  26D9               	addwf	fsr2l,f,c
  3285  001870  51C0               	movf	(ComController@DTI+1)& (0+255),w,b
  3286  001872  22DA               	addwfc	fsr2h,f,c
  3287  001874  50DF               	movf	indf2,w,c
  3288  001876  6E1E               	movwf	GetDataDict@numbofbytes,c
  3289  001878  0100               	movlb	0	; () banked
  3290  00187A  EE20 F002          	lfsr	2,2
  3291  00187E  51BF               	movf	ComController@DTI& (0+255),w,b
  3292  001880  26D9               	addwf	fsr2l,f,c
  3293  001882  51C0               	movf	(ComController@DTI+1)& (0+255),w,b
  3294  001884  22DA               	addwfc	fsr2h,f,c
  3295  001886  50DF               	movf	indf2,w,c
  3296  001888  ECAA  F00E         	call	_GetDataDict
  3297                           
  3298                           ;CarCom.c: 134: LATC5 = 1;
  3299  00188C  8A8B               	bsf	3979,5,c	;volatile
  3300                           
  3301                           ;CarCom.c: 135: Delay(5);
  3302  00188E  0E00               	movlw	0
  3303  001890  6E1C               	movwf	Delay@wait+1,c
  3304  001892  0E05               	movlw	5
  3305  001894  6E1B               	movwf	Delay@wait,c
  3306  001896  EC43  F012         	call	_Delay	;wreg free
  3307                           
  3308                           ;CarCom.c: 136: sendData(1, 2, 1, 1, DataToSend, DTI[4]);
  3309  00189A  0E02               	movlw	2
  3310  00189C  0100               	movlb	0	; () banked
  3311  00189E  6FB8               	movwf	sendData@ComandByte& (0+255),b
  3312  0018A0  0E01               	movlw	1
  3313  0018A2  0100               	movlb	0	; () banked
  3314  0018A4  6FB9               	movwf	sendData@DataTable& (0+255),b
  3315  0018A6  0E01               	movlw	1
  3316  0018A8  0100               	movlb	0	; () banked
  3317  0018AA  6FBA               	movwf	sendData@DataTableIndex& (0+255),b
  3318  0018AC  0EC3               	movlw	low ComController@DataToSend
  3319  0018AE  0100               	movlb	0	; () banked
  3320  0018B0  6FBB               	movwf	sendData@DTS& (0+255),b
  3321  0018B2  0E00               	movlw	high ComController@DataToSend
  3322  0018B4  0100               	movlb	0	; () banked
  3323  0018B6  6FBC               	movwf	(sendData@DTS+1)& (0+255),b
  3324  0018B8  0100               	movlb	0	; () banked
  3325  0018BA  EE20 F004          	lfsr	2,4
  3326  0018BE  51BF               	movf	ComController@DTI& (0+255),w,b
  3327  0018C0  26D9               	addwf	fsr2l,f,c
  3328  0018C2  51C0               	movf	(ComController@DTI+1)& (0+255),w,b
  3329  0018C4  22DA               	addwfc	fsr2h,f,c
  3330  0018C6  50DF               	movf	indf2,w,c
  3331  0018C8  6E2B               	movwf	??_ComController& (0+255),c
  3332  0018CA  502B               	movf	??_ComController,w,c
  3333  0018CC  0100               	movlb	0	; () banked
  3334  0018CE  6FBD               	movwf	sendData@lenth& (0+255),b
  3335  0018D0  6BBE               	clrf	(sendData@lenth+1)& (0+255),b
  3336  0018D2  0E01               	movlw	1
  3337  0018D4  EC82  F005         	call	_sendData
  3338                           
  3339                           ;CarCom.c: 137: Delay(3);
  3340  0018D8  0E00               	movlw	0
  3341  0018DA  6E1C               	movwf	Delay@wait+1,c
  3342  0018DC  0E03               	movlw	3
  3343  0018DE  6E1B               	movwf	Delay@wait,c
  3344  0018E0  EC43  F012         	call	_Delay	;wreg free
  3345                           
  3346                           ;CarCom.c: 138: LATC5 = 0;
  3347  0018E4  9A8B               	bcf	3979,5,c	;volatile
  3348  0018E6  0012               	return	
  3349  0018E8                     __end_of_ComController:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf2	equ	0xFDF
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _sendData *****************
  3366 ;; Defined at:
  3367 ;;		line 42 in file "CarCom.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  whereToSend     1    wreg     unsigned char 
  3370 ;;  ComandByte      1   13[BANK0 ] unsigned char 
  3371 ;;  DataTable       1   14[BANK0 ] unsigned char 
  3372 ;;  DataTableInd    1   15[BANK0 ] unsigned char 
  3373 ;;  DTS             2   16[BANK0 ] PTR unsigned char 
  3374 ;;		 -> ComController@DataToSend(4), 
  3375 ;;  lenth           2   18[BANK0 ] unsigned int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  whereToSend     1   60[BANK1 ] unsigned char 
  3378 ;;  SendArray      30   30[BANK1 ] unsigned char [30]
  3379 ;;  COBSArray      30    0[BANK1 ] unsigned char [30]
  3380 ;;  result          3   62[BANK1 ] struct .
  3381 ;;  count           2   65[BANK1 ] int 
  3382 ;;  i               1   67[BANK1 ] unsigned char 
  3383 ;;  CS              1   61[BANK1 ] unsigned char 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3393 ;;      Params:         0       7       0       0       0       0       0
  3394 ;;      Locals:         0       0      68       0       0       0       0
  3395 ;;      Temps:          4       0       0       0       0       0       0
  3396 ;;      Totals:         4       7      68       0       0       0       0
  3397 ;;Total ram usage:       79 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    7
  3400 ;; This function calls:
  3401 ;;		_CRC8
  3402 ;;		_Send_put
  3403 ;;		_cobs_encode
  3404 ;; This function is called by:
  3405 ;;		_ComController
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text8
  3410  000B04                     __ptext8:
  3411                           	opt stack 0
  3412  000B04                     _sendData:
  3413                           	opt stack 20
  3414                           
  3415                           ;incstack = 0
  3416                           ;sendData@whereToSend stored from wreg
  3417  000B04  0101               	movlb	1	; () banked
  3418  000B06  6FB6               	movwf	sendData@whereToSend& (0+255),b
  3419                           
  3420                           ;CarCom.c: 43: unsigned char SendArray[30];
  3421                           ;CarCom.c: 44: unsigned char COBSArray[30];
  3422                           ;CarCom.c: 46: cobs_encode_result result;
  3423                           ;CarCom.c: 48: SendArray[0] = 5+lenth;
  3424  000B08  0100               	movlb	0	; () banked
  3425  000B0A  51BD               	movf	sendData@lenth& (0+255),w,b
  3426  000B0C  0F05               	addlw	5
  3427  000B0E  0101               	movlb	1	; () banked
  3428  000B10  6F98               	movwf	sendData@SendArray& (0+255),b
  3429                           
  3430                           ; BSR set to: 1
  3431                           ;CarCom.c: 49: SendArray[1] = ComandByte;
  3432  000B12  C0B8  F199         	movff	sendData@ComandByte,sendData@SendArray+1
  3433                           
  3434                           ; BSR set to: 1
  3435                           ;CarCom.c: 50: SendArray[2] = DataTable;
  3436  000B16  C0B9  F19A         	movff	sendData@DataTable,sendData@SendArray+2
  3437                           
  3438                           ; BSR set to: 1
  3439                           ;CarCom.c: 51: SendArray[3] = DataTableIndex;
  3440  000B1A  C0BA  F19B         	movff	sendData@DataTableIndex,sendData@SendArray+3
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;CarCom.c: 52: SendArray[4] = lenth;
  3444  000B1E  C0BD  F19C         	movff	sendData@lenth,sendData@SendArray+4
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;CarCom.c: 54: unsigned char i = 0;
  3448  000B22  0E00               	movlw	0
  3449  000B24  0101               	movlb	1	; () banked
  3450  000B26  6FBD               	movwf	sendData@i& (0+255),b
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;CarCom.c: 55: int count = 5;
  3454  000B28  0E00               	movlw	0
  3455  000B2A  0101               	movlb	1	; () banked
  3456  000B2C  6FBC               	movwf	(sendData@count+1)& (0+255),b
  3457  000B2E  0E05               	movlw	5
  3458  000B30  6FBB               	movwf	sendData@count& (0+255),b
  3459  000B32  D020               	goto	l5991
  3460  000B34                     l5985:
  3461                           
  3462                           ;CarCom.c: 58: SendArray[i+5] = DTS[i];
  3463  000B34  0101               	movlb	1	; () banked
  3464  000B36  51BD               	movf	sendData@i& (0+255),w,b
  3465  000B38  0D01               	mullw	1
  3466  000B3A  50F3               	movf	prodl,w,c
  3467  000B3C  0100               	movlb	0	; () banked
  3468  000B3E  25BB               	addwf	sendData@DTS& (0+255),w,b
  3469  000B40  6ED9               	movwf	fsr2l,c
  3470  000B42  50F4               	movf	prodh,w,c
  3471  000B44  0100               	movlb	0	; () banked
  3472  000B46  21BC               	addwfc	(sendData@DTS+1)& (0+255),w,b
  3473  000B48  6EDA               	movwf	fsr2h,c
  3474  000B4A  0101               	movlb	1	; () banked
  3475  000B4C  51BD               	movf	sendData@i& (0+255),w,b
  3476  000B4E  6E27               	movwf	??_sendData& (0+255),c
  3477  000B50  6A28               	clrf	(??_sendData+1)& (0+255),c
  3478  000B52  0E05               	movlw	5
  3479  000B54  2627               	addwf	??_sendData,f,c
  3480  000B56  0E00               	movlw	0
  3481  000B58  2228               	addwfc	??_sendData+1,f,c
  3482  000B5A  0E98               	movlw	low sendData@SendArray
  3483  000B5C  2427               	addwf	??_sendData,w,c
  3484  000B5E  6EE1               	movwf	fsr1l,c
  3485  000B60  0E01               	movlw	high sendData@SendArray
  3486  000B62  2028               	addwfc	??_sendData+1,w,c
  3487  000B64  6EE2               	movwf	fsr1h,c
  3488  000B66  CFDF FFE7          	movff	indf2,indf1
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;CarCom.c: 59: count++;
  3492  000B6A  0101               	movlb	1	; () banked
  3493  000B6C  4BBB               	infsnz	sendData@count& (0+255),f,b
  3494  000B6E  2BBC               	incf	(sendData@count+1)& (0+255),f,b
  3495                           
  3496                           ; BSR set to: 1
  3497  000B70  0101               	movlb	1	; () banked
  3498  000B72  2BBD               	incf	sendData@i& (0+255),f,b
  3499  000B74                     l5991:
  3500                           
  3501                           ; BSR set to: 1
  3502  000B74  0101               	movlb	1	; () banked
  3503  000B76  51BD               	movf	sendData@i& (0+255),w,b
  3504  000B78  6E27               	movwf	??_sendData& (0+255),c
  3505  000B7A  6A28               	clrf	(??_sendData+1)& (0+255),c
  3506  000B7C  0100               	movlb	0	; () banked
  3507  000B7E  51BD               	movf	sendData@lenth& (0+255),w,b
  3508  000B80  5C27               	subwf	??_sendData,w,c
  3509  000B82  0100               	movlb	0	; () banked
  3510  000B84  51BE               	movf	(sendData@lenth+1)& (0+255),w,b
  3511  000B86  5828               	subwfb	??_sendData+1,w,c
  3512  000B88  A0D8               	btfss	status,0,c
  3513  000B8A  D7D4               	goto	l5985
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;CarCom.c: 60: }
  3517                           ;CarCom.c: 62: unsigned char CS = CRC8(SendArray, count);
  3518                           
  3519                           ; BSR set to: 0
  3520  000B8C  0E98               	movlw	low sendData@SendArray
  3521  000B8E  6E1B               	movwf	CRC8@data,c
  3522  000B90  0E01               	movlw	high sendData@SendArray
  3523  000B92  6E1C               	movwf	CRC8@data+1,c
  3524  000B94  C1BB  F01D         	movff	sendData@count,CRC8@len
  3525  000B98  ECC2  F011         	call	_CRC8	;wreg free
  3526  000B9C  0101               	movlb	1	; () banked
  3527  000B9E  6FB7               	movwf	sendData@CS& (0+255),b
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;CarCom.c: 63: SendArray[count] = CS;
  3531  000BA0  0E98               	movlw	low sendData@SendArray
  3532  000BA2  0101               	movlb	1	; () banked
  3533  000BA4  25BB               	addwf	sendData@count& (0+255),w,b
  3534  000BA6  6ED9               	movwf	fsr2l,c
  3535  000BA8  0E01               	movlw	high sendData@SendArray
  3536  000BAA  0101               	movlb	1	; () banked
  3537  000BAC  21BC               	addwfc	(sendData@count+1)& (0+255),w,b
  3538  000BAE  6EDA               	movwf	fsr2h,c
  3539  000BB0  C1B7  FFDF         	movff	sendData@CS,indf2
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;CarCom.c: 64: count++;
  3543  000BB4  0101               	movlb	1	; () banked
  3544  000BB6  4BBB               	infsnz	sendData@count& (0+255),f,b
  3545  000BB8  2BBC               	incf	(sendData@count+1)& (0+255),f,b
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;CarCom.c: 65: result = cobs_encode(COBSArray, sizeof(COBSArray), SendArray, count);
  3549  000BBA  0E7A               	movlw	low sendData@COBSArray
  3550  000BBC  6E1B               	movwf	cobs_encode@dst_buf_ptr,c
  3551  000BBE  0E01               	movlw	high sendData@COBSArray
  3552  000BC0  6E1C               	movwf	cobs_encode@dst_buf_ptr+1,c
  3553  000BC2  0E00               	movlw	0
  3554  000BC4  6E1E               	movwf	cobs_encode@dst_buf_len+1,c
  3555  000BC6  0E1E               	movlw	30
  3556  000BC8  6E1D               	movwf	cobs_encode@dst_buf_len,c
  3557  000BCA  0E98               	movlw	low sendData@SendArray
  3558  000BCC  6E1F               	movwf	cobs_encode@src_ptr,c
  3559  000BCE  0E01               	movlw	high sendData@SendArray
  3560  000BD0  6E20               	movwf	cobs_encode@src_ptr+1,c
  3561  000BD2  C1BB  F021         	movff	sendData@count,cobs_encode@src_len
  3562  000BD6  C1BC  F022         	movff	sendData@count+1,cobs_encode@src_len+1
  3563  000BDA  EC51  F006         	call	_cobs_encode	;wreg free
  3564  000BDE  C01B  F1B8         	movff	?_cobs_encode,sendData@result
  3565  000BE2  C01C  F1B9         	movff	?_cobs_encode+1,sendData@result+1
  3566  000BE6  C01D  F1BA         	movff	?_cobs_encode+2,sendData@result+2
  3567                           
  3568                           ;CarCom.c: 66: SendArray[0] = whereToSend;
  3569  000BEA  C1B6  F198         	movff	sendData@whereToSend,sendData@SendArray
  3570                           
  3571                           ;CarCom.c: 68: for(i = 1;i<result.out_len+1;i++){
  3572  000BEE  0E01               	movlw	1
  3573  000BF0  0101               	movlb	1	; () banked
  3574  000BF2  6FBD               	movwf	sendData@i& (0+255),b
  3575  000BF4  D01F               	goto	l6009
  3576  000BF6                     l6005:
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;CarCom.c: 69: SendArray[i] = COBSArray[i-1];
  3580  000BF6  0EFF               	movlw	255
  3581  000BF8  6E27               	movwf	??_sendData& (0+255),c
  3582  000BFA  0EFF               	movlw	255
  3583  000BFC  6E28               	movwf	(??_sendData+1)& (0+255),c
  3584  000BFE  0101               	movlb	1	; () banked
  3585  000C00  51BD               	movf	sendData@i& (0+255),w,b
  3586  000C02  6E29               	movwf	(??_sendData+2)& (0+255),c
  3587  000C04  6A2A               	clrf	(??_sendData+3)& (0+255),c
  3588  000C06  5027               	movf	??_sendData,w,c
  3589  000C08  2629               	addwf	??_sendData+2,f,c
  3590  000C0A  5028               	movf	??_sendData+1,w,c
  3591  000C0C  222A               	addwfc	??_sendData+3,f,c
  3592  000C0E  0E7A               	movlw	low sendData@COBSArray
  3593  000C10  2429               	addwf	??_sendData+2,w,c
  3594  000C12  6ED9               	movwf	fsr2l,c
  3595  000C14  0E01               	movlw	high sendData@COBSArray
  3596  000C16  202A               	addwfc	??_sendData+3,w,c
  3597  000C18  6EDA               	movwf	fsr2h,c
  3598  000C1A  0101               	movlb	1	; () banked
  3599  000C1C  51BD               	movf	sendData@i& (0+255),w,b
  3600  000C1E  0D01               	mullw	1
  3601  000C20  0E98               	movlw	low sendData@SendArray
  3602  000C22  24F3               	addwf	prodl,w,c
  3603  000C24  6EE1               	movwf	fsr1l,c
  3604  000C26  0E01               	movlw	high sendData@SendArray
  3605  000C28  20F4               	addwfc	prodh,w,c
  3606  000C2A  6EE2               	movwf	fsr1h,c
  3607  000C2C  CFDF FFE7          	movff	indf2,indf1
  3608                           
  3609                           ; BSR set to: 1
  3610  000C30  0101               	movlb	1	; () banked
  3611  000C32  2BBD               	incf	sendData@i& (0+255),f,b
  3612  000C34                     l6009:
  3613                           
  3614                           ; BSR set to: 1
  3615  000C34  0E01               	movlw	1
  3616  000C36  0101               	movlb	1	; () banked
  3617  000C38  25B8               	addwf	sendData@result& (0+255),w,b
  3618  000C3A  6E27               	movwf	??_sendData& (0+255),c
  3619  000C3C  0E00               	movlw	0
  3620  000C3E  0101               	movlb	1	; () banked
  3621  000C40  21B9               	addwfc	(sendData@result+1)& (0+255),w,b
  3622  000C42  6E28               	movwf	(??_sendData+1)& (0+255),c
  3623  000C44  0101               	movlb	1	; () banked
  3624  000C46  51BD               	movf	sendData@i& (0+255),w,b
  3625  000C48  6E29               	movwf	(??_sendData+2)& (0+255),c
  3626  000C4A  6A2A               	clrf	(??_sendData+3)& (0+255),c
  3627  000C4C  5027               	movf	??_sendData,w,c
  3628  000C4E  5C29               	subwf	??_sendData+2,w,c
  3629  000C50  5028               	movf	??_sendData+1,w,c
  3630  000C52  582A               	subwfb	??_sendData+3,w,c
  3631  000C54  A0D8               	btfss	status,0,c
  3632  000C56  D7CF               	goto	l6005
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;CarCom.c: 70: }
  3636                           ;CarCom.c: 72: for(i = 0;i<result.out_len+2;i++){
  3637                           
  3638                           ; BSR set to: 1
  3639  000C58  0E00               	movlw	0
  3640  000C5A  0101               	movlb	1	; () banked
  3641  000C5C  6FBD               	movwf	sendData@i& (0+255),b
  3642  000C5E  D00E               	goto	l6017
  3643  000C60                     l6013:
  3644                           
  3645                           ; BSR set to: 1
  3646                           ;CarCom.c: 73: Send_put(SendArray[i]);
  3647  000C60  0101               	movlb	1	; () banked
  3648  000C62  51BD               	movf	sendData@i& (0+255),w,b
  3649  000C64  0D01               	mullw	1
  3650  000C66  0E98               	movlw	low sendData@SendArray
  3651  000C68  24F3               	addwf	prodl,w,c
  3652  000C6A  6ED9               	movwf	fsr2l,c
  3653  000C6C  0E01               	movlw	high sendData@SendArray
  3654  000C6E  20F4               	addwfc	prodh,w,c
  3655  000C70  6EDA               	movwf	fsr2h,c
  3656  000C72  50DF               	movf	indf2,w,c
  3657  000C74  EC76  F012         	call	_Send_put
  3658  000C78  0101               	movlb	1	; () banked
  3659  000C7A  2BBD               	incf	sendData@i& (0+255),f,b
  3660  000C7C                     l6017:
  3661                           
  3662                           ; BSR set to: 1
  3663  000C7C  0E02               	movlw	2
  3664  000C7E  0101               	movlb	1	; () banked
  3665  000C80  25B8               	addwf	sendData@result& (0+255),w,b
  3666  000C82  6E27               	movwf	??_sendData& (0+255),c
  3667  000C84  0E00               	movlw	0
  3668  000C86  0101               	movlb	1	; () banked
  3669  000C88  21B9               	addwfc	(sendData@result+1)& (0+255),w,b
  3670  000C8A  6E28               	movwf	(??_sendData+1)& (0+255),c
  3671  000C8C  0101               	movlb	1	; () banked
  3672  000C8E  51BD               	movf	sendData@i& (0+255),w,b
  3673  000C90  6E29               	movwf	(??_sendData+2)& (0+255),c
  3674  000C92  6A2A               	clrf	(??_sendData+3)& (0+255),c
  3675  000C94  5027               	movf	??_sendData,w,c
  3676  000C96  5C29               	subwf	??_sendData+2,w,c
  3677  000C98  5028               	movf	??_sendData+1,w,c
  3678  000C9A  582A               	subwfb	??_sendData+3,w,c
  3679  000C9C  B0D8               	btfsc	status,0,c
  3680  000C9E  0012               	return	
  3681  000CA0  D7DF               	goto	l6013
  3682  000CA2                     __end_of_sendData:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           indf1	equ	0xFE7
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           indf2	equ	0xFDF
  3697                           postinc2	equ	0xFDE
  3698                           postdec2	equ	0xFDD
  3699                           fsr2h	equ	0xFDA
  3700                           fsr2l	equ	0xFD9
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function _cobs_encode *****************
  3704 ;; Defined at:
  3705 ;;		line 29 in file "COBS.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  dst_buf_ptr     2   26[COMRAM] PTR unsigned char 
  3708 ;;		 -> sendData@COBSArray(30), 
  3709 ;;  dst_buf_len     2   28[COMRAM] unsigned int 
  3710 ;;  src_ptr         2   30[COMRAM] PTR const unsigned char 
  3711 ;;		 -> sendData@SendArray(30), 
  3712 ;;  src_len         2   32[COMRAM] unsigned int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  result          3   10[BANK0 ] struct .
  3715 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  3716 ;;		 -> sendData@COBSArray(30), 
  3717 ;;  dst_code_wri    2    6[BANK0 ] PTR unsigned char 
  3718 ;;		 -> sendData@COBSArray(30), 
  3719 ;;  dst_buf_end_    2    3[BANK0 ] PTR unsigned char 
  3720 ;;		 -> sendData@COBSArray(30), 
  3721 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  3722 ;;		 -> sendData@SendArray(30), 
  3723 ;;  search_len      1    5[BANK0 ] unsigned char 
  3724 ;;  src_byte        1    2[BANK0 ] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  3   26[COMRAM] struct .
  3727 ;; Registers used:
  3728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3734 ;;      Params:         8       0       0       0       0       0       0
  3735 ;;      Locals:         0      13       0       0       0       0       0
  3736 ;;      Temps:          2       0       0       0       0       0       0
  3737 ;;      Totals:        10      13       0       0       0       0       0
  3738 ;;Total ram usage:       23 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    4
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_sendData
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text9
  3749  000CA2                     __ptext9:
  3750                           	opt stack 0
  3751  000CA2                     _cobs_encode:
  3752                           	opt stack 22
  3753                           
  3754                           ;COBS.c: 31: cobs_encode_result result = { 0, COBS_ENCODE_OK };
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;incstack = 0
  3758  000CA2  C094  F0B5         	movff	cobs_encode@F180,cobs_encode@result
  3759  000CA6  C095  F0B6         	movff	cobs_encode@F180+1,cobs_encode@result+1
  3760  000CAA  C096  F0B7         	movff	cobs_encode@F180+2,cobs_encode@result+2
  3761                           
  3762                           ;COBS.c: 32: const uint8_t * src_end_ptr = src_ptr + src_len;
  3763  000CAE  5021               	movf	cobs_encode@src_len,w,c
  3764  000CB0  241F               	addwf	cobs_encode@src_ptr,w,c
  3765  000CB2  0100               	movlb	0	; () banked
  3766  000CB4  6FAB               	movwf	cobs_encode@src_end_ptr& (0+255),b
  3767  000CB6  5022               	movf	cobs_encode@src_len+1,w,c
  3768  000CB8  2020               	addwfc	cobs_encode@src_ptr+1,w,c
  3769  000CBA  0100               	movlb	0	; () banked
  3770  000CBC  6FAC               	movwf	(cobs_encode@src_end_ptr+1)& (0+255),b
  3771                           
  3772                           ;COBS.c: 33: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  3773  000CBE  501D               	movf	cobs_encode@dst_buf_len,w,c
  3774  000CC0  241B               	addwf	cobs_encode@dst_buf_ptr,w,c
  3775  000CC2  0100               	movlb	0	; () banked
  3776  000CC4  6FAE               	movwf	cobs_encode@dst_buf_end_ptr& (0+255),b
  3777  000CC6  501E               	movf	cobs_encode@dst_buf_len+1,w,c
  3778  000CC8  201C               	addwfc	cobs_encode@dst_buf_ptr+1,w,c
  3779  000CCA  0100               	movlb	0	; () banked
  3780  000CCC  6FAF               	movwf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),b
  3781                           
  3782                           ;COBS.c: 34: uint8_t * dst_code_write_ptr = dst_buf_ptr;
  3783  000CCE  C01B  F0B1         	movff	cobs_encode@dst_buf_ptr,cobs_encode@dst_code_write_ptr
  3784  000CD2  C01C  F0B2         	movff	cobs_encode@dst_buf_ptr+1,cobs_encode@dst_code_write_ptr+1
  3785                           
  3786                           ;COBS.c: 35: uint8_t * dst_write_ptr = dst_code_write_ptr + 1;
  3787  000CD6  0E01               	movlw	1
  3788  000CD8  0100               	movlb	0	; () banked
  3789  000CDA  25B1               	addwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  3790  000CDC  0100               	movlb	0	; () banked
  3791  000CDE  6FB3               	movwf	cobs_encode@dst_write_ptr& (0+255),b
  3792  000CE0  0E00               	movlw	0
  3793  000CE2  0100               	movlb	0	; () banked
  3794  000CE4  21B2               	addwfc	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  3795  000CE6  0100               	movlb	0	; () banked
  3796  000CE8  6FB4               	movwf	(cobs_encode@dst_write_ptr+1)& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;COBS.c: 36: uint8_t src_byte = 0;
  3800  000CEA  0E00               	movlw	0
  3801  000CEC  0100               	movlb	0	; () banked
  3802  000CEE  6FAD               	movwf	cobs_encode@src_byte& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;COBS.c: 37: uint8_t search_len = 1;
  3806  000CF0  0E01               	movlw	1
  3807  000CF2  0100               	movlb	0	; () banked
  3808  000CF4  6FB0               	movwf	cobs_encode@search_len& (0+255),b
  3809                           
  3810                           ;COBS.c: 41: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  3811  000CF6  501B               	movf	cobs_encode@dst_buf_ptr,w,c
  3812  000CF8  101C               	iorwf	cobs_encode@dst_buf_ptr+1,w,c
  3813  000CFA  B4D8               	btfsc	status,2,c
  3814  000CFC  D004               	goto	l5833
  3815                           
  3816                           ; BSR set to: 0
  3817  000CFE  501F               	movf	cobs_encode@src_ptr,w,c
  3818  000D00  1020               	iorwf	cobs_encode@src_ptr+1,w,c
  3819  000D02  A4D8               	btfss	status,2,c
  3820  000D04  D00A               	goto	l5839
  3821  000D06                     l5833:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;COBS.c: 42: {
  3825                           ;COBS.c: 43: result.status = COBS_ENCODE_NULL_POINTER;
  3826  000D06  0E01               	movlw	1
  3827  000D08  0100               	movlb	0	; () banked
  3828  000D0A  6FB7               	movwf	(cobs_encode@result+2)& (0+255),b
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;COBS.c: 44: return result;
  3832  000D0C  C0B5  F01B         	movff	cobs_encode@result,?_cobs_encode
  3833  000D10  C0B6  F01C         	movff	cobs_encode@result+1,?_cobs_encode+1
  3834  000D14  C0B7  F01D         	movff	cobs_encode@result+2,?_cobs_encode+2
  3835                           
  3836                           ; BSR set to: 0
  3837  000D18  0012               	return	
  3838  000D1A                     l5839:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;COBS.c: 45: }
  3842                           ;COBS.c: 47: if (src_len != 0)
  3843  000D1A  5021               	movf	cobs_encode@src_len,w,c
  3844  000D1C  1022               	iorwf	cobs_encode@src_len+1,w,c
  3845  000D1E  B4D8               	btfsc	status,2,c
  3846  000D20  D05C               	goto	l5883
  3847  000D22                     l5841:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;COBS.c: 51: {
  3851                           ;COBS.c: 53: if (dst_write_ptr >= dst_buf_end_ptr)
  3852  000D22  0100               	movlb	0	; () banked
  3853  000D24  51AE               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  3854  000D26  0100               	movlb	0	; () banked
  3855  000D28  5DB3               	subwf	cobs_encode@dst_write_ptr& (0+255),w,b
  3856  000D2A  0100               	movlb	0	; () banked
  3857  000D2C  51AF               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  3858  000D2E  0100               	movlb	0	; () banked
  3859  000D30  59B4               	subwfb	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  3860  000D32  A0D8               	btfss	status,0,c
  3861  000D34  D003               	goto	l5845
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;COBS.c: 54: {
  3865                           ;COBS.c: 55: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  3866  000D36  0100               	movlb	0	; () banked
  3867  000D38  83B7               	bsf	(cobs_encode@result+2)& (0+255),1,b
  3868                           
  3869                           ;COBS.c: 56: break;
  3870  000D3A  D04F               	goto	l5883
  3871  000D3C                     l5845:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;COBS.c: 57: }
  3875                           ;COBS.c: 59: src_byte = *src_ptr++;
  3876  000D3C  C01F  FFD9         	movff	cobs_encode@src_ptr,fsr2l
  3877  000D40  C020  FFDA         	movff	cobs_encode@src_ptr+1,fsr2h
  3878  000D44  50DF               	movf	indf2,w,c
  3879  000D46  0100               	movlb	0	; () banked
  3880  000D48  6FAD               	movwf	cobs_encode@src_byte& (0+255),b
  3881                           
  3882                           ; BSR set to: 0
  3883  000D4A  4A1F               	infsnz	cobs_encode@src_ptr,f,c
  3884  000D4C  2A20               	incf	cobs_encode@src_ptr+1,f,c
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;COBS.c: 60: if (src_byte == 0)
  3888  000D4E  0100               	movlb	0	; () banked
  3889  000D50  51AD               	movf	cobs_encode@src_byte& (0+255),w,b
  3890  000D52  0100               	movlb	0	; () banked
  3891  000D54  A4D8               	btfss	status,2,c
  3892  000D56  D019               	goto	l5863
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;COBS.c: 61: {
  3896                           ;COBS.c: 63: *dst_code_write_ptr = search_len;
  3897  000D58  C0B1  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  3898  000D5C  C0B2  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  3899  000D60  C0B0  FFDF         	movff	cobs_encode@search_len,indf2
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;COBS.c: 64: dst_code_write_ptr = dst_write_ptr++;
  3903  000D64  C0B3  F0B1         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  3904  000D68  C0B4  F0B2         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  3905                           
  3906                           ; BSR set to: 0
  3907  000D6C  0100               	movlb	0	; () banked
  3908  000D6E  4BB3               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  3909  000D70  2BB4               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;COBS.c: 65: search_len = 1;
  3913  000D72  0E01               	movlw	1
  3914  000D74  0100               	movlb	0	; () banked
  3915  000D76  6FB0               	movwf	cobs_encode@search_len& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;COBS.c: 66: if (src_ptr >= src_end_ptr)
  3919  000D78  0100               	movlb	0	; () banked
  3920  000D7A  51AB               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  3921  000D7C  5C1F               	subwf	cobs_encode@src_ptr,w,c
  3922  000D7E  0100               	movlb	0	; () banked
  3923  000D80  51AC               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  3924  000D82  5820               	subwfb	cobs_encode@src_ptr+1,w,c
  3925  000D84  B0D8               	btfsc	status,0,c
  3926  000D86  D029               	goto	l5883
  3927  000D88  D7CC               	goto	l5841
  3928  000D8A                     l5863:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;COBS.c: 71: else
  3932                           ;COBS.c: 72: {
  3933                           ;COBS.c: 74: *dst_write_ptr++ = src_byte;
  3934  000D8A  C0B3  FFD9         	movff	cobs_encode@dst_write_ptr,fsr2l
  3935  000D8E  C0B4  FFDA         	movff	cobs_encode@dst_write_ptr+1,fsr2h
  3936  000D92  C0AD  FFDF         	movff	cobs_encode@src_byte,indf2
  3937                           
  3938                           ; BSR set to: 0
  3939  000D96  0100               	movlb	0	; () banked
  3940  000D98  4BB3               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  3941  000D9A  2BB4               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;COBS.c: 75: search_len++;
  3945  000D9C  0100               	movlb	0	; () banked
  3946  000D9E  2BB0               	incf	cobs_encode@search_len& (0+255),f,b
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;COBS.c: 76: if (src_ptr >= src_end_ptr)
  3950  000DA0  0100               	movlb	0	; () banked
  3951  000DA2  51AB               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  3952  000DA4  5C1F               	subwf	cobs_encode@src_ptr,w,c
  3953  000DA6  0100               	movlb	0	; () banked
  3954  000DA8  51AC               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  3955  000DAA  5820               	subwfb	cobs_encode@src_ptr+1,w,c
  3956  000DAC  B0D8               	btfsc	status,0,c
  3957  000DAE  D015               	goto	l5883
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;COBS.c: 79: }
  3961                           ;COBS.c: 80: if (search_len == 0xFF)
  3962                           
  3963                           ; BSR set to: 0
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;COBS.c: 77: {
  3967                           ;COBS.c: 78: break;
  3968  000DB0  0100               	movlb	0	; () banked
  3969  000DB2  29B0               	incf	cobs_encode@search_len& (0+255),w,b
  3970  000DB4  A4D8               	btfss	status,2,c
  3971  000DB6  D7B5               	goto	l5841
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;COBS.c: 81: {
  3975                           ;COBS.c: 84: *dst_code_write_ptr = search_len;
  3976  000DB8  C0B1  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  3977  000DBC  C0B2  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  3978  000DC0  C0B0  FFDF         	movff	cobs_encode@search_len,indf2
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;COBS.c: 85: dst_code_write_ptr = dst_write_ptr++;
  3982  000DC4  C0B3  F0B1         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  3983  000DC8  C0B4  F0B2         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  3984                           
  3985                           ; BSR set to: 0
  3986  000DCC  0100               	movlb	0	; () banked
  3987  000DCE  4BB3               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  3988  000DD0  2BB4               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;COBS.c: 86: search_len = 1;
  3992  000DD2  0E01               	movlw	1
  3993  000DD4  0100               	movlb	0	; () banked
  3994  000DD6  6FB0               	movwf	cobs_encode@search_len& (0+255),b
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;COBS.c: 87: }
  3998                           ;COBS.c: 88: }
  3999                           ;COBS.c: 89: }
  4000                           
  4001                           ; BSR set to: 0
  4002  000DD8  D7A4               	goto	l5841
  4003  000DDA                     l5883:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;COBS.c: 90: }
  4007                           ;COBS.c: 96: if (dst_code_write_ptr >= dst_buf_end_ptr)
  4008  000DDA  0100               	movlb	0	; () banked
  4009  000DDC  51AE               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  4010  000DDE  0100               	movlb	0	; () banked
  4011  000DE0  5DB1               	subwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  4012  000DE2  0100               	movlb	0	; () banked
  4013  000DE4  51AF               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  4014  000DE6  0100               	movlb	0	; () banked
  4015  000DE8  59B2               	subwfb	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  4016  000DEA  A0D8               	btfss	status,0,c
  4017  000DEC  D007               	goto	l5889
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;COBS.c: 97: {
  4021                           ;COBS.c: 99: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  4022  000DEE  0100               	movlb	0	; () banked
  4023  000DF0  83B7               	bsf	(cobs_encode@result+2)& (0+255),1,b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;COBS.c: 100: dst_write_ptr = dst_buf_end_ptr;
  4027  000DF2  C0AE  F0B3         	movff	cobs_encode@dst_buf_end_ptr,cobs_encode@dst_write_ptr
  4028  000DF6  C0AF  F0B4         	movff	cobs_encode@dst_buf_end_ptr+1,cobs_encode@dst_write_ptr+1
  4029                           
  4030                           ;COBS.c: 101: }
  4031  000DFA  D006               	goto	l5891
  4032  000DFC                     l5889:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;COBS.c: 102: else
  4036                           ;COBS.c: 103: {
  4037                           ;COBS.c: 105: *dst_code_write_ptr = search_len;
  4038  000DFC  C0B1  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  4039  000E00  C0B2  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  4040  000E04  C0B0  FFDF         	movff	cobs_encode@search_len,indf2
  4041  000E08                     l5891:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;COBS.c: 106: }
  4045                           ;COBS.c: 109: result.out_len = dst_write_ptr - dst_buf_ptr;
  4046  000E08  C01B  F023         	movff	cobs_encode@dst_buf_ptr,??_cobs_encode
  4047  000E0C  C01C  F024         	movff	cobs_encode@dst_buf_ptr+1,??_cobs_encode+1
  4048  000E10  1E23               	comf	??_cobs_encode,f,c
  4049  000E12  1E24               	comf	??_cobs_encode+1,f,c
  4050  000E14  4A23               	infsnz	??_cobs_encode,f,c
  4051  000E16  2A24               	incf	??_cobs_encode+1,f,c
  4052  000E18  0100               	movlb	0	; () banked
  4053  000E1A  51B3               	movf	cobs_encode@dst_write_ptr& (0+255),w,b
  4054  000E1C  2423               	addwf	??_cobs_encode,w,c
  4055  000E1E  0100               	movlb	0	; () banked
  4056  000E20  6FB5               	movwf	cobs_encode@result& (0+255),b
  4057  000E22  0100               	movlb	0	; () banked
  4058  000E24  51B4               	movf	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  4059  000E26  2024               	addwfc	??_cobs_encode+1,w,c
  4060  000E28  0100               	movlb	0	; () banked
  4061  000E2A  6FB6               	movwf	(cobs_encode@result+1)& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;COBS.c: 111: return result;
  4065  000E2C  C0B5  F01B         	movff	cobs_encode@result,?_cobs_encode
  4066  000E30  C0B6  F01C         	movff	cobs_encode@result+1,?_cobs_encode+1
  4067  000E34  C0B7  F01D         	movff	cobs_encode@result+2,?_cobs_encode+2
  4068  000E38  0012               	return	
  4069  000E3A                     __end_of_cobs_encode:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           indf1	equ	0xFE7
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _Send_put *****************
  4091 ;; Defined at:
  4092 ;;		line 130 in file "UART.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  _data           1    wreg     unsigned char 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  _data           1   37[COMRAM] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4106 ;;      Params:         0       0       0       0       0       0       0
  4107 ;;      Locals:         1       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0
  4109 ;;      Totals:         1       0       0       0       0       0       0
  4110 ;;Total ram usage:        1 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    6
  4113 ;; This function calls:
  4114 ;;		_UART_buff_get
  4115 ;;		_UART_buff_put
  4116 ;; This function is called by:
  4117 ;;		_sendData
  4118 ;;		_putch
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text10
  4123  0024EC                     __ptext10:
  4124                           	opt stack 0
  4125  0024EC                     _Send_put:
  4126                           	opt stack 20
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;incstack = 0
  4130                           ;Send_put@_data stored from wreg
  4131  0024EC  6E26               	movwf	Send_put@_data,c
  4132                           
  4133                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4134  0024EE  0E00               	movlw	low _output_buffer
  4135  0024F0  6E21               	movwf	UART_buff_put@_this,c
  4136  0024F2  0E03               	movlw	high _output_buffer
  4137  0024F4  6E22               	movwf	UART_buff_put@_this+1,c
  4138  0024F6  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4139  0024FA  EC88  F009         	call	_UART_buff_put	;wreg free
  4140                           
  4141                           ;UART.c: 132: if (Transmit_stall == 1) {
  4142  0024FE  0444               	decf	_Transmit_stall,w,c
  4143  002500  A4D8               	btfss	status,2,c
  4144  002502  0012               	return	
  4145                           
  4146                           ;UART.c: 133: Transmit_stall = 0;
  4147  002504  0E00               	movlw	0
  4148  002506  6E44               	movwf	_Transmit_stall,c
  4149                           
  4150                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4151  002508  0E00               	movlw	low _output_buffer
  4152  00250A  6E21               	movwf	UART_buff_get@_this,c
  4153  00250C  0E03               	movlw	high _output_buffer
  4154  00250E  6E22               	movwf	UART_buff_get@_this+1,c
  4155  002510  ECF6  F00E         	call	_UART_buff_get	;wreg free
  4156  002514  6EAD               	movwf	4013,c	;volatile
  4157                           
  4158                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4159  002516  889D               	bsf	3997,4,c	;volatile
  4160  002518  0012               	return	
  4161  00251A                     __end_of_Send_put:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           indf1	equ	0xFE7
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           postinc2	equ	0xFDE
  4177                           postdec2	equ	0xFDD
  4178                           fsr2h	equ	0xFDA
  4179                           fsr2l	equ	0xFD9
  4180                           status	equ	0xFD8
  4181                           
  4182 ;; *************** function _UART_buff_put *****************
  4183 ;; Defined at:
  4184 ;;		line 68 in file "UART.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4187 ;;		 -> output_buffer(206), input_buffer(206), 
  4188 ;;  c               1   34[COMRAM] const unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4200 ;;      Params:         3       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0
  4202 ;;      Temps:          2       0       0       0       0       0       0
  4203 ;;      Totals:         5       0       0       0       0       0       0
  4204 ;;Total ram usage:        5 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    5
  4207 ;; This function calls:
  4208 ;;		_UART_buff_modulo_inc
  4209 ;; This function is called by:
  4210 ;;		_Send_put
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text11
  4215  001310                     __ptext11:
  4216                           	opt stack 0
  4217  001310                     _UART_buff_put:
  4218                           	opt stack 20
  4219                           
  4220                           ;UART.c: 69: if (_this->count < 200) {
  4221                           
  4222                           ;incstack = 0
  4223  001310  EE20 F0CC          	lfsr	2,204
  4224  001314  5021               	movf	UART_buff_put@_this,w,c
  4225  001316  26D9               	addwf	fsr2l,f,c
  4226  001318  5022               	movf	UART_buff_put@_this+1,w,c
  4227  00131A  22DA               	addwfc	fsr2h,f,c
  4228  00131C  0E01               	movlw	1
  4229  00131E  BEDB               	btfsc	plusw2,7,c
  4230  001320  D007               	goto	l5783
  4231  001322  0E01               	movlw	1
  4232  001324  50DB               	movf	plusw2,w,c
  4233  001326  E13A               	bnz	l5789
  4234  001328  0EC8               	movlw	200
  4235  00132A  5CDE               	subwf	postinc2,w,c
  4236  00132C  B0D8               	btfsc	status,0,c
  4237  00132E  D036               	goto	l5789
  4238  001330                     l5783:
  4239                           
  4240                           ;UART.c: 70: _this->buf[_this->head] = c;
  4241  001330  EE20 F0C8          	lfsr	2,200
  4242  001334  5021               	movf	UART_buff_put@_this,w,c
  4243  001336  26D9               	addwf	fsr2l,f,c
  4244  001338  5022               	movf	UART_buff_put@_this+1,w,c
  4245  00133A  22DA               	addwfc	fsr2h,f,c
  4246  00133C  CFDE F024          	movff	postinc2,??_UART_buff_put
  4247  001340  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4248  001344  5024               	movf	??_UART_buff_put,w,c
  4249  001346  2421               	addwf	UART_buff_put@_this,w,c
  4250  001348  6ED9               	movwf	fsr2l,c
  4251  00134A  5025               	movf	??_UART_buff_put+1,w,c
  4252  00134C  2022               	addwfc	UART_buff_put@_this+1,w,c
  4253  00134E  6EDA               	movwf	fsr2h,c
  4254  001350  C023  FFDF         	movff	UART_buff_put@c,indf2
  4255                           
  4256                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4257  001354  EE20 F0C8          	lfsr	2,200
  4258  001358  5021               	movf	UART_buff_put@_this,w,c
  4259  00135A  26D9               	addwf	fsr2l,f,c
  4260  00135C  5022               	movf	UART_buff_put@_this+1,w,c
  4261  00135E  22DA               	addwfc	fsr2h,f,c
  4262  001360  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4263  001364  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4264  001368  0E00               	movlw	0
  4265  00136A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4266  00136C  0EC8               	movlw	200
  4267  00136E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4268  001370  ECBA  F012         	call	_UART_buff_modulo_inc	;wreg free
  4269  001374  EE20 F0C8          	lfsr	2,200
  4270  001378  5021               	movf	UART_buff_put@_this,w,c
  4271  00137A  26D9               	addwf	fsr2l,f,c
  4272  00137C  5022               	movf	UART_buff_put@_this+1,w,c
  4273  00137E  22DA               	addwfc	fsr2h,f,c
  4274  001380  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4275  001384  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4276                           
  4277                           ;UART.c: 72: ++_this->count;
  4278  001388  EE20 F0CC          	lfsr	2,204
  4279  00138C  5021               	movf	UART_buff_put@_this,w,c
  4280  00138E  26D9               	addwf	fsr2l,f,c
  4281  001390  5022               	movf	UART_buff_put@_this+1,w,c
  4282  001392  22DA               	addwfc	fsr2h,f,c
  4283  001394  2ADE               	incf	postinc2,f,c
  4284  001396  0E00               	movlw	0
  4285  001398  22DD               	addwfc	postdec2,f,c
  4286                           
  4287                           ;UART.c: 73: } else {
  4288  00139A  0012               	return	
  4289  00139C                     l5789:
  4290                           
  4291                           ;UART.c: 74: _this->buf[_this->head] = c;
  4292  00139C  EE20 F0C8          	lfsr	2,200
  4293  0013A0  5021               	movf	UART_buff_put@_this,w,c
  4294  0013A2  26D9               	addwf	fsr2l,f,c
  4295  0013A4  5022               	movf	UART_buff_put@_this+1,w,c
  4296  0013A6  22DA               	addwfc	fsr2h,f,c
  4297  0013A8  CFDE F024          	movff	postinc2,??_UART_buff_put
  4298  0013AC  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4299  0013B0  5024               	movf	??_UART_buff_put,w,c
  4300  0013B2  2421               	addwf	UART_buff_put@_this,w,c
  4301  0013B4  6ED9               	movwf	fsr2l,c
  4302  0013B6  5025               	movf	??_UART_buff_put+1,w,c
  4303  0013B8  2022               	addwfc	UART_buff_put@_this+1,w,c
  4304  0013BA  6EDA               	movwf	fsr2h,c
  4305  0013BC  C023  FFDF         	movff	UART_buff_put@c,indf2
  4306                           
  4307                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4308  0013C0  EE20 F0C8          	lfsr	2,200
  4309  0013C4  5021               	movf	UART_buff_put@_this,w,c
  4310  0013C6  26D9               	addwf	fsr2l,f,c
  4311  0013C8  5022               	movf	UART_buff_put@_this+1,w,c
  4312  0013CA  22DA               	addwfc	fsr2h,f,c
  4313  0013CC  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4314  0013D0  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4315  0013D4  0E00               	movlw	0
  4316  0013D6  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4317  0013D8  0EC8               	movlw	200
  4318  0013DA  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4319  0013DC  ECBA  F012         	call	_UART_buff_modulo_inc	;wreg free
  4320  0013E0  EE20 F0C8          	lfsr	2,200
  4321  0013E4  5021               	movf	UART_buff_put@_this,w,c
  4322  0013E6  26D9               	addwf	fsr2l,f,c
  4323  0013E8  5022               	movf	UART_buff_put@_this+1,w,c
  4324  0013EA  22DA               	addwfc	fsr2h,f,c
  4325  0013EC  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4326  0013F0  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4327                           
  4328                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4329  0013F4  EE20 F0CA          	lfsr	2,202
  4330  0013F8  5021               	movf	UART_buff_put@_this,w,c
  4331  0013FA  26D9               	addwf	fsr2l,f,c
  4332  0013FC  5022               	movf	UART_buff_put@_this+1,w,c
  4333  0013FE  22DA               	addwfc	fsr2h,f,c
  4334  001400  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4335  001404  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4336  001408  0E00               	movlw	0
  4337  00140A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4338  00140C  0EC8               	movlw	200
  4339  00140E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4340  001410  ECBA  F012         	call	_UART_buff_modulo_inc	;wreg free
  4341  001414  EE20 F0CA          	lfsr	2,202
  4342  001418  5021               	movf	UART_buff_put@_this,w,c
  4343  00141A  26D9               	addwf	fsr2l,f,c
  4344  00141C  5022               	movf	UART_buff_put@_this+1,w,c
  4345  00141E  22DA               	addwfc	fsr2h,f,c
  4346  001420  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4347  001424  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4348  001428  0012               	return	
  4349  00142A                     __end_of_UART_buff_put:
  4350                           	opt stack 0
  4351                           tblptru	equ	0xFF8
  4352                           tblptrh	equ	0xFF7
  4353                           tblptrl	equ	0xFF6
  4354                           tablat	equ	0xFF5
  4355                           prodh	equ	0xFF4
  4356                           prodl	equ	0xFF3
  4357                           intcon	equ	0xFF2
  4358                           postinc0	equ	0xFEE
  4359                           wreg	equ	0xFE8
  4360                           indf1	equ	0xFE7
  4361                           fsr1h	equ	0xFE2
  4362                           fsr1l	equ	0xFE1
  4363                           indf2	equ	0xFDF
  4364                           postinc2	equ	0xFDE
  4365                           postdec2	equ	0xFDD
  4366                           plusw2	equ	0xFDB
  4367                           fsr2h	equ	0xFDA
  4368                           fsr2l	equ	0xFD9
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _UART_buff_get *****************
  4372 ;; Defined at:
  4373 ;;		line 81 in file "UART.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4376 ;;		 -> output_buffer(206), input_buffer(206), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  c               1   36[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4388 ;;      Params:         2       0       0       0       0       0       0
  4389 ;;      Locals:         1       0       0       0       0       0       0
  4390 ;;      Temps:          2       0       0       0       0       0       0
  4391 ;;      Totals:         5       0       0       0       0       0       0
  4392 ;;Total ram usage:        5 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    5
  4395 ;; This function calls:
  4396 ;;		_UART_buff_modulo_inc
  4397 ;; This function is called by:
  4398 ;;		_Receive_get
  4399 ;;		_Send_put
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text12
  4404  001DEC                     __ptext12:
  4405                           	opt stack 0
  4406  001DEC                     _UART_buff_get:
  4407                           	opt stack 22
  4408                           
  4409                           ;UART.c: 82: unsigned char c;
  4410                           ;UART.c: 83: if (_this->count > 0) {
  4411                           
  4412                           ;incstack = 0
  4413  001DEC  EE20 F0CC          	lfsr	2,204
  4414  001DF0  5021               	movf	UART_buff_get@_this,w,c
  4415  001DF2  26D9               	addwf	fsr2l,f,c
  4416  001DF4  5022               	movf	UART_buff_get@_this+1,w,c
  4417  001DF6  22DA               	addwfc	fsr2h,f,c
  4418  001DF8  0E01               	movlw	1
  4419  001DFA  BEDB               	btfsc	plusw2,7,c
  4420  001DFC  D03C               	goto	l5803
  4421  001DFE  0E01               	movlw	1
  4422  001E00  50DB               	movf	plusw2,w,c
  4423  001E02  E103               	bnz	u5550
  4424  001E04  04DE               	decf	postinc2,w,c
  4425  001E06  A0D8               	btfss	status,0,c
  4426  001E08  D036               	goto	l5803
  4427  001E0A                     u5550:
  4428                           
  4429                           ;UART.c: 84: c = _this->buf[_this->tail];
  4430  001E0A  EE20 F0CA          	lfsr	2,202
  4431  001E0E  5021               	movf	UART_buff_get@_this,w,c
  4432  001E10  26D9               	addwf	fsr2l,f,c
  4433  001E12  5022               	movf	UART_buff_get@_this+1,w,c
  4434  001E14  22DA               	addwfc	fsr2h,f,c
  4435  001E16  CFDE F023          	movff	postinc2,??_UART_buff_get
  4436  001E1A  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  4437  001E1E  5023               	movf	??_UART_buff_get,w,c
  4438  001E20  2421               	addwf	UART_buff_get@_this,w,c
  4439  001E22  6ED9               	movwf	fsr2l,c
  4440  001E24  5024               	movf	??_UART_buff_get+1,w,c
  4441  001E26  2022               	addwfc	UART_buff_get@_this+1,w,c
  4442  001E28  6EDA               	movwf	fsr2h,c
  4443  001E2A  50DF               	movf	indf2,w,c
  4444  001E2C  6E25               	movwf	UART_buff_get@c,c
  4445                           
  4446                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4447  001E2E  EE20 F0CA          	lfsr	2,202
  4448  001E32  5021               	movf	UART_buff_get@_this,w,c
  4449  001E34  26D9               	addwf	fsr2l,f,c
  4450  001E36  5022               	movf	UART_buff_get@_this+1,w,c
  4451  001E38  22DA               	addwfc	fsr2h,f,c
  4452  001E3A  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4453  001E3E  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4454  001E42  0E00               	movlw	0
  4455  001E44  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4456  001E46  0EC8               	movlw	200
  4457  001E48  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4458  001E4A  ECBA  F012         	call	_UART_buff_modulo_inc	;wreg free
  4459  001E4E  EE20 F0CA          	lfsr	2,202
  4460  001E52  5021               	movf	UART_buff_get@_this,w,c
  4461  001E54  26D9               	addwf	fsr2l,f,c
  4462  001E56  5022               	movf	UART_buff_get@_this+1,w,c
  4463  001E58  22DA               	addwfc	fsr2h,f,c
  4464  001E5A  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4465  001E5E  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4466                           
  4467                           ;UART.c: 86: --_this->count;
  4468  001E62  EE20 F0CC          	lfsr	2,204
  4469  001E66  5021               	movf	UART_buff_get@_this,w,c
  4470  001E68  26D9               	addwf	fsr2l,f,c
  4471  001E6A  5022               	movf	UART_buff_get@_this+1,w,c
  4472  001E6C  22DA               	addwfc	fsr2h,f,c
  4473  001E6E  06DE               	decf	postinc2,f,c
  4474  001E70  0E00               	movlw	0
  4475  001E72  5ADD               	subwfb	postdec2,f,c
  4476                           
  4477                           ;UART.c: 87: } else {
  4478  001E74  D002               	goto	l922
  4479  001E76                     l5803:
  4480                           
  4481                           ;UART.c: 88: c = 0;
  4482  001E76  0E00               	movlw	0
  4483  001E78  6E25               	movwf	UART_buff_get@c,c
  4484  001E7A                     l922:
  4485                           
  4486                           ;UART.c: 89: }
  4487                           ;UART.c: 90: return (c);
  4488  001E7A  5025               	movf	UART_buff_get@c,w,c
  4489  001E7C  0012               	return	
  4490  001E7E                     __end_of_UART_buff_get:
  4491                           	opt stack 0
  4492                           tblptru	equ	0xFF8
  4493                           tblptrh	equ	0xFF7
  4494                           tblptrl	equ	0xFF6
  4495                           tablat	equ	0xFF5
  4496                           prodh	equ	0xFF4
  4497                           prodl	equ	0xFF3
  4498                           intcon	equ	0xFF2
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           indf1	equ	0xFE7
  4502                           fsr1h	equ	0xFE2
  4503                           fsr1l	equ	0xFE1
  4504                           indf2	equ	0xFDF
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           plusw2	equ	0xFDB
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _UART_buff_modulo_inc *****************
  4513 ;; Defined at:
  4514 ;;		line 106 in file "UART.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  value           2   26[COMRAM] const unsigned int 
  4517 ;;  modulus         2   28[COMRAM] const unsigned int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  my_value        2   30[COMRAM] unsigned int 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  2   26[COMRAM] unsigned int 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4529 ;;      Params:         4       0       0       0       0       0       0
  4530 ;;      Locals:         2       0       0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0
  4532 ;;      Totals:         6       0       0       0       0       0       0
  4533 ;;Total ram usage:        6 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_UART_buff_put
  4540 ;;		_UART_buff_get
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text13
  4545  002574                     __ptext13:
  4546                           	opt stack 0
  4547  002574                     _UART_buff_modulo_inc:
  4548                           	opt stack 22
  4549                           
  4550                           ;UART.c: 107: unsigned int my_value = value + 1;
  4551                           
  4552                           ;incstack = 0
  4553  002574  0E01               	movlw	1
  4554  002576  241B               	addwf	UART_buff_modulo_inc@value,w,c
  4555  002578  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  4556  00257A  0E00               	movlw	0
  4557  00257C  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  4558  00257E  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  4559                           
  4560                           ;UART.c: 108: if (my_value >= modulus) {
  4561  002580  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  4562  002582  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  4563  002584  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  4564  002586  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  4565  002588  A0D8               	btfss	status,0,c
  4566  00258A  D004               	goto	l5743
  4567                           
  4568                           ;UART.c: 109: my_value = 0;
  4569  00258C  0E00               	movlw	0
  4570  00258E  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  4571  002590  0E00               	movlw	0
  4572  002592  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  4573  002594                     l5743:
  4574                           
  4575                           ;UART.c: 110: }
  4576                           ;UART.c: 111: return (my_value);
  4577  002594  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  4578  002598  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  4579  00259C  0012               	return	
  4580  00259E                     __end_of_UART_buff_modulo_inc:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           postinc0	equ	0xFEE
  4590                           wreg	equ	0xFE8
  4591                           indf1	equ	0xFE7
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           indf2	equ	0xFDF
  4595                           postinc2	equ	0xFDE
  4596                           postdec2	equ	0xFDD
  4597                           plusw2	equ	0xFDB
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _CRC8 *****************
  4603 ;; Defined at:
  4604 ;;		line 23 in file "CarCom.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  data            2   26[COMRAM] PTR const unsigned char 
  4607 ;;		 -> ProcessArray(30), sendData@SendArray(30), 
  4608 ;;  len             1   28[COMRAM] unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  sum             1   29[COMRAM] unsigned char 
  4611 ;;  tempI           1   31[COMRAM] unsigned char 
  4612 ;;  extract         1   30[COMRAM] unsigned char 
  4613 ;;  crc             1   32[COMRAM] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      unsigned char 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4623 ;;      Params:         3       0       0       0       0       0       0
  4624 ;;      Locals:         4       0       0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0
  4626 ;;      Totals:         7       0       0       0       0       0       0
  4627 ;;Total ram usage:        7 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    4
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_sendData
  4634 ;;		_receiveData
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text14
  4639  002384                     __ptext14:
  4640                           	opt stack 0
  4641  002384                     _CRC8:
  4642                           	opt stack 22
  4643                           
  4644                           ;CarCom.c: 24: unsigned char crc = 0x00;
  4645                           
  4646                           ;incstack = 0
  4647  002384  0E00               	movlw	0
  4648  002386  6E21               	movwf	CRC8@crc,c
  4649                           
  4650                           ;CarCom.c: 25: while (len--) {
  4651  002388  D01C               	goto	l5915
  4652  00238A                     l5899:
  4653                           
  4654                           ;CarCom.c: 26: unsigned char extract = *data++;
  4655  00238A  C01B  FFD9         	movff	CRC8@data,fsr2l
  4656  00238E  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  4657  002392  50DF               	movf	indf2,w,c
  4658  002394  6E1F               	movwf	CRC8@extract,c
  4659  002396  4A1B               	infsnz	CRC8@data,f,c
  4660  002398  2A1C               	incf	CRC8@data+1,f,c
  4661                           
  4662                           ;CarCom.c: 27: unsigned char tempI;
  4663                           ;CarCom.c: 28: for (tempI = 8; tempI; tempI--) {
  4664  00239A  0E08               	movlw	8
  4665  00239C  6E20               	movwf	CRC8@tempI,c
  4666  00239E  D00E               	goto	l5913
  4667  0023A0                     l5905:
  4668                           
  4669                           ;CarCom.c: 29: unsigned char sum = (crc ^ extract) & 0x01;
  4670  0023A0  5021               	movf	CRC8@crc,w,c
  4671  0023A2  181F               	xorwf	CRC8@extract,w,c
  4672  0023A4  0B01               	andlw	1
  4673  0023A6  6E1E               	movwf	CRC8@sum,c
  4674                           
  4675                           ;CarCom.c: 30: crc >>= 1;
  4676  0023A8  90D8               	bcf	status,0,c
  4677  0023AA  3221               	rrcf	CRC8@crc,f,c
  4678                           
  4679                           ;CarCom.c: 31: if (sum) {
  4680  0023AC  501E               	movf	CRC8@sum,w,c
  4681  0023AE  B4D8               	btfsc	status,2,c
  4682  0023B0  D002               	goto	l1176
  4683                           
  4684                           ;CarCom.c: 32: crc ^= 0x8C;
  4685  0023B2  0E8C               	movlw	140
  4686  0023B4  1A21               	xorwf	CRC8@crc,f,c
  4687  0023B6                     l1176:
  4688                           
  4689                           ;CarCom.c: 33: }
  4690                           ;CarCom.c: 34: extract >>= 1;
  4691  0023B6  90D8               	bcf	status,0,c
  4692  0023B8  321F               	rrcf	CRC8@extract,f,c
  4693  0023BA  0620               	decf	CRC8@tempI,f,c
  4694  0023BC                     l5913:
  4695  0023BC  5020               	movf	CRC8@tempI,w,c
  4696  0023BE  A4D8               	btfss	status,2,c
  4697  0023C0  D7EF               	goto	l5905
  4698  0023C2                     l5915:
  4699  0023C2  061D               	decf	CRC8@len,f,c
  4700  0023C4  281D               	incf	CRC8@len,w,c
  4701  0023C6  A4D8               	btfss	status,2,c
  4702  0023C8  D7E0               	goto	l5899
  4703                           
  4704                           ;CarCom.c: 35: }
  4705                           ;CarCom.c: 36: }
  4706                           ;CarCom.c: 37: return crc;
  4707  0023CA  5021               	movf	CRC8@crc,w,c
  4708  0023CC  0012               	return	
  4709  0023CE                     __end_of_CRC8:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           indf1	equ	0xFE7
  4721                           fsr1h	equ	0xFE2
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           plusw2	equ	0xFDB
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function _GetDataDict *****************
  4732 ;; Defined at:
  4733 ;;		line 8 in file "CarDataDictionary.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  DataTable       1    wreg     unsigned char 
  4736 ;;  DataTableInd    1   26[COMRAM] unsigned char 
  4737 ;;  DataArray       2   27[COMRAM] PTR unsigned char 
  4738 ;;		 -> ComController@DataToSend(4), 
  4739 ;;  numbofbytes     1   29[COMRAM] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  DataTable       1   31[COMRAM] unsigned char 
  4742 ;;  ReturnCounte    1   33[COMRAM] unsigned char 
  4743 ;;  DataCount       1   32[COMRAM] unsigned char 
  4744 ;;  Error           1   30[COMRAM] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4754 ;;      Params:         4       0       0       0       0       0       0
  4755 ;;      Locals:         4       0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0
  4757 ;;      Totals:         8       0       0       0       0       0       0
  4758 ;;Total ram usage:        8 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    4
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_ComController
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text15
  4769  001D54                     __ptext15:
  4770                           	opt stack 0
  4771  001D54                     _GetDataDict:
  4772                           	opt stack 23
  4773                           
  4774                           ;incstack = 0
  4775                           ;GetDataDict@DataTable stored from wreg
  4776  001D54  6E20               	movwf	GetDataDict@DataTable,c
  4777                           
  4778                           ;CarDataDictionary.c: 9: unsigned char Error = 0;
  4779  001D56  0E00               	movlw	0
  4780  001D58  6E1F               	movwf	GetDataDict@Error,c
  4781                           
  4782                           ;CarDataDictionary.c: 10: unsigned char DataCount = 0;
  4783  001D5A  0E00               	movlw	0
  4784  001D5C  6E21               	movwf	GetDataDict@DataCount,c
  4785                           
  4786                           ;CarDataDictionary.c: 11: unsigned char ReturnCounter = 0;
  4787  001D5E  0E00               	movlw	0
  4788  001D60  6E22               	movwf	GetDataDict@ReturnCounter,c
  4789                           
  4790                           ;CarDataDictionary.c: 12: switch(DataTable){
  4791  001D62  D03C               	goto	l4201
  4792  001D64                     l4181:
  4793                           
  4794                           ;CarDataDictionary.c: 14: DataCount = DataTableIndex + numbofbytes;
  4795  001D64  501B               	movf	GetDataDict@DataTableIndex,w,c
  4796  001D66  241E               	addwf	GetDataDict@numbofbytes,w,c
  4797  001D68  6E21               	movwf	GetDataDict@DataCount,c
  4798  001D6A  D014               	goto	l4189
  4799  001D6C                     l4183:
  4800                           
  4801                           ;CarDataDictionary.c: 16: DataArray[ReturnCounter] = DataTableArrayOne[DataTableIndex];
  4802  001D6C  501B               	movf	GetDataDict@DataTableIndex,w,c
  4803  001D6E  0D01               	mullw	1
  4804  001D70  0E1C               	movlw	low _DataTableArrayOne
  4805  001D72  24F3               	addwf	prodl,w,c
  4806  001D74  6ED9               	movwf	fsr2l,c
  4807  001D76  0E01               	movlw	high _DataTableArrayOne
  4808  001D78  20F4               	addwfc	prodh,w,c
  4809  001D7A  6EDA               	movwf	fsr2h,c
  4810  001D7C  5022               	movf	GetDataDict@ReturnCounter,w,c
  4811  001D7E  0D01               	mullw	1
  4812  001D80  50F3               	movf	prodl,w,c
  4813  001D82  241C               	addwf	GetDataDict@DataArray,w,c
  4814  001D84  6EE1               	movwf	fsr1l,c
  4815  001D86  50F4               	movf	prodh,w,c
  4816  001D88  201D               	addwfc	GetDataDict@DataArray+1,w,c
  4817  001D8A  6EE2               	movwf	fsr1h,c
  4818  001D8C  CFDF FFE7          	movff	indf2,indf1
  4819                           
  4820                           ;CarDataDictionary.c: 17: ReturnCounter++;
  4821  001D90  2A22               	incf	GetDataDict@ReturnCounter,f,c
  4822  001D92  2A1B               	incf	GetDataDict@DataTableIndex,f,c
  4823  001D94                     l4189:
  4824  001D94  5021               	movf	GetDataDict@DataCount,w,c
  4825  001D96  5C1B               	subwf	GetDataDict@DataTableIndex,w,c
  4826  001D98  B0D8               	btfsc	status,0,c
  4827  001D9A  0012               	return	
  4828  001D9C  D7E7               	goto	l4183
  4829  001D9E                     l4191:
  4830                           
  4831                           ;CarDataDictionary.c: 21: DataCount = DataTableIndex + numbofbytes;
  4832  001D9E  501B               	movf	GetDataDict@DataTableIndex,w,c
  4833  001DA0  241E               	addwf	GetDataDict@numbofbytes,w,c
  4834  001DA2  6E21               	movwf	GetDataDict@DataCount,c
  4835  001DA4  D014               	goto	l4199
  4836  001DA6                     l4193:
  4837                           
  4838                           ;CarDataDictionary.c: 23: DataArray[ReturnCounter] = DataTableArrayTwo[DataTableIndex];
  4839  001DA6  501B               	movf	GetDataDict@DataTableIndex,w,c
  4840  001DA8  0D01               	mullw	1
  4841  001DAA  0E2E               	movlw	low _DataTableArrayTwo
  4842  001DAC  24F3               	addwf	prodl,w,c
  4843  001DAE  6ED9               	movwf	fsr2l,c
  4844  001DB0  0E01               	movlw	high _DataTableArrayTwo
  4845  001DB2  20F4               	addwfc	prodh,w,c
  4846  001DB4  6EDA               	movwf	fsr2h,c
  4847  001DB6  5022               	movf	GetDataDict@ReturnCounter,w,c
  4848  001DB8  0D01               	mullw	1
  4849  001DBA  50F3               	movf	prodl,w,c
  4850  001DBC  241C               	addwf	GetDataDict@DataArray,w,c
  4851  001DBE  6EE1               	movwf	fsr1l,c
  4852  001DC0  50F4               	movf	prodh,w,c
  4853  001DC2  201D               	addwfc	GetDataDict@DataArray+1,w,c
  4854  001DC4  6EE2               	movwf	fsr1h,c
  4855  001DC6  CFDF FFE7          	movff	indf2,indf1
  4856                           
  4857                           ;CarDataDictionary.c: 24: ReturnCounter++;
  4858  001DCA  2A22               	incf	GetDataDict@ReturnCounter,f,c
  4859  001DCC  2A1B               	incf	GetDataDict@DataTableIndex,f,c
  4860  001DCE                     l4199:
  4861  001DCE  5021               	movf	GetDataDict@DataCount,w,c
  4862  001DD0  5C1B               	subwf	GetDataDict@DataTableIndex,w,c
  4863  001DD2  B0D8               	btfsc	status,0,c
  4864  001DD4  0012               	return	
  4865  001DD6  D7E7               	goto	l4193
  4866  001DD8                     l1238:
  4867                           
  4868                           ;CarDataDictionary.c: 28: Error = -1;
  4869  001DD8  681F               	setf	GetDataDict@Error,c
  4870                           
  4871                           ;CarDataDictionary.c: 29: }
  4872  001DDA  0012               	return	
  4873  001DDC                     l4201:
  4874  001DDC  5020               	movf	GetDataDict@DataTable,w,c
  4875                           
  4876                           ; Switch size 1, requested type "space"
  4877                           ; Number of cases is 2, Range of values is 0 to 1
  4878                           ; switch strategies available:
  4879                           ; Name         Instructions Cycles
  4880                           ; simple_byte            7     4 (average)
  4881                           ;	Chosen strategy is simple_byte
  4882  001DDE  0A00               	xorlw	0	; case 0
  4883  001DE0  B4D8               	btfsc	status,2,c
  4884  001DE2  D7C0               	goto	l4181
  4885  001DE4  0A01               	xorlw	1	; case 1
  4886  001DE6  B4D8               	btfsc	status,2,c
  4887  001DE8  D7DA               	goto	l4191
  4888  001DEA  D7F6               	goto	l1238
  4889  001DEC                     __end_of_GetDataDict:
  4890                           	opt stack 0
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf1	equ	0xFE7
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           plusw2	equ	0xFDB
  4907                           fsr2h	equ	0xFDA
  4908                           fsr2l	equ	0xFD9
  4909                           status	equ	0xFD8
  4910                           
  4911 ;; *************** function _Delay *****************
  4912 ;; Defined at:
  4913 ;;		line 6 in file "Function.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  wait            2   26[COMRAM] int 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  x               2   29[COMRAM] int 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4927 ;;      Params:         2       0       0       0       0       0       0
  4928 ;;      Locals:         2       0       0       0       0       0       0
  4929 ;;      Temps:          1       0       0       0       0       0       0
  4930 ;;      Totals:         5       0       0       0       0       0       0
  4931 ;;Total ram usage:        5 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    4
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_ComController
  4938 ;;		_TestBarGraph
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text16
  4943  002486                     __ptext16:
  4944                           	opt stack 0
  4945  002486                     _Delay:
  4946                           	opt stack 23
  4947                           
  4948                           ;Function.c: 7: int x;
  4949                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  4950                           
  4951                           ;incstack = 0
  4952  002486  0E00               	movlw	0
  4953  002488  6E1F               	movwf	Delay@x+1,c
  4954  00248A  0E00               	movlw	0
  4955  00248C  6E1E               	movwf	Delay@x,c
  4956  00248E  D00A               	goto	l1090
  4957  002490                     l4127:
  4958                           
  4959                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  4960  002490  0E06               	movlw	6
  4961  002492  6E1D               	movwf	??_Delay& (0+255),c
  4962  002494  0E30               	movlw	48
  4963  002496                     u7397:
  4964  002496  2EE8               	decfsz	wreg,f,c
  4965  002498  D7FE               	bra	u7397
  4966  00249A  2E1D               	decfsz	??_Delay& (0+255),f,c
  4967  00249C  D7FC               	bra	u7397
  4968  00249E  D000               	nop2	
  4969  0024A0  4A1E               	infsnz	Delay@x,f,c
  4970  0024A2  2A1F               	incf	Delay@x+1,f,c
  4971  0024A4                     l1090:
  4972  0024A4  501B               	movf	Delay@wait,w,c
  4973  0024A6  5C1E               	subwf	Delay@x,w,c
  4974  0024A8  501F               	movf	Delay@x+1,w,c
  4975  0024AA  0A80               	xorlw	128
  4976  0024AC  6E1D               	movwf	??_Delay& (0+255),c
  4977  0024AE  501C               	movf	Delay@wait+1,w,c
  4978  0024B0  0A80               	xorlw	128
  4979  0024B2  581D               	subwfb	??_Delay& (0+255),w,c
  4980  0024B4  B0D8               	btfsc	status,0,c
  4981  0024B6  0012               	return	
  4982  0024B8  D7EB               	goto	l4127
  4983  0024BA                     __end_of_Delay:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           indf1	equ	0xFE7
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           postinc2	equ	0xFDE
  4999                           postdec2	equ	0xFDD
  5000                           plusw2	equ	0xFDB
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function ___lwtoft *****************
  5006 ;; Defined at:
  5007 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  c               2   34[COMRAM] unsigned int 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  3   34[COMRAM] float 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5021 ;;      Params:         3       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0
  5024 ;;      Totals:         3       0       0       0       0       0       0
  5025 ;;Total ram usage:        3 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    5
  5028 ;; This function calls:
  5029 ;;		___ftpack
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text17
  5036  0025C8                     __ptext17:
  5037                           	opt stack 0
  5038  0025C8                     ___lwtoft:
  5039                           	opt stack 25
  5040                           
  5041                           ;incstack = 0
  5042  0025C8  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  5043  0025CC  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  5044  0025D0  6A1D               	clrf	___ftpack@arg+2,c
  5045  0025D2  0E8E               	movlw	142
  5046  0025D4  6E1E               	movwf	___ftpack@exp,c
  5047  0025D6  0E00               	movlw	0
  5048  0025D8  6E1F               	movwf	___ftpack@sign,c
  5049  0025DA  EC74  F00C         	call	___ftpack	;wreg free
  5050  0025DE  C01B  F023         	movff	?___ftpack,?___lwtoft
  5051  0025E2  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  5052  0025E6  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  5053  0025EA  0012               	return	
  5054  0025EC                     __end_of___lwtoft:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           prodh	equ	0xFF4
  5061                           prodl	equ	0xFF3
  5062                           intcon	equ	0xFF2
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           indf1	equ	0xFE7
  5066                           fsr1h	equ	0xFE2
  5067                           fsr1l	equ	0xFE1
  5068                           indf2	equ	0xFDF
  5069                           postinc2	equ	0xFDE
  5070                           postdec2	equ	0xFDD
  5071                           plusw2	equ	0xFDB
  5072                           fsr2h	equ	0xFDA
  5073                           fsr2l	equ	0xFD9
  5074                           status	equ	0xFD8
  5075                           
  5076 ;; *************** function ___fttol *****************
  5077 ;; Defined at:
  5078 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  f1              3    9[BANK0 ] float 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  lval            4   19[BANK0 ] unsigned long 
  5083 ;;  exp1            1   23[BANK0 ] unsigned char 
  5084 ;;  sign1           1   18[BANK0 ] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4    9[BANK0 ] long 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         0       4       0       0       0       0       0
  5095 ;;      Locals:         0       6       0       0       0       0       0
  5096 ;;      Temps:          0       5       0       0       0       0       0
  5097 ;;      Totals:         0      15       0       0       0       0       0
  5098 ;;Total ram usage:       15 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    4
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_main
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text18
  5109  000F84                     __ptext18:
  5110                           	opt stack 0
  5111  000F84                     ___fttol:
  5112                           	opt stack 26
  5113                           
  5114                           ;incstack = 0
  5115  000F84  C0B6  F0B8         	movff	___fttol@f1+2,??___fttol
  5116  000F88  0100               	movlb	0	; () banked
  5117  000F8A  6BB9               	clrf	(??___fttol+1)& (0+255),b
  5118  000F8C  6BBA               	clrf	(??___fttol+2)& (0+255),b
  5119  000F8E  0100               	movlb	0	; () banked
  5120  000F90  35B5               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5121  000F92  0100               	movlb	0	; () banked
  5122  000F94  37B8               	rlcf	??___fttol& (0+255),f,b
  5123  000F96  E301               	bnc	u7011
  5124  000F98  81B9               	bsf	(??___fttol+1)& (0+255),0,b
  5125  000F9A                     u7011:
  5126  000F9A  0100               	movlb	0	; () banked
  5127  000F9C  51B8               	movf	??___fttol& (0+255),w,b
  5128  000F9E  0100               	movlb	0	; () banked
  5129  000FA0  6FC2               	movwf	___fttol@exp1& (0+255),b
  5130  000FA2  0100               	movlb	0	; () banked
  5131  000FA4  51C2               	movf	___fttol@exp1& (0+255),w,b
  5132  000FA6  A4D8               	btfss	status,2,c
  5133  000FA8  D00A               	goto	l6705
  5134                           
  5135                           ; BSR set to: 0
  5136  000FAA  0E00               	movlw	0
  5137  000FAC  0100               	movlb	0	; () banked
  5138  000FAE  6FB4               	movwf	?___fttol& (0+255),b
  5139  000FB0  0E00               	movlw	0
  5140  000FB2  6FB5               	movwf	(?___fttol+1)& (0+255),b
  5141  000FB4  0E00               	movlw	0
  5142  000FB6  6FB6               	movwf	(?___fttol+2)& (0+255),b
  5143  000FB8  0E00               	movlw	0
  5144  000FBA  6FB7               	movwf	(?___fttol+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147  000FBC  0012               	return	
  5148  000FBE                     l6705:
  5149                           
  5150                           ; BSR set to: 0
  5151  000FBE  0E17               	movlw	23
  5152  000FC0  0100               	movlb	0	; () banked
  5153  000FC2  6FB8               	movwf	??___fttol& (0+255),b
  5154  000FC4  C0B4  F0B9         	movff	___fttol@f1,??___fttol+1
  5155  000FC8  C0B5  F0BA         	movff	___fttol@f1+1,??___fttol+2
  5156  000FCC  C0B6  F0BB         	movff	___fttol@f1+2,??___fttol+3
  5157  000FD0  0100               	movlb	0	; () banked
  5158  000FD2  29B8               	incf	??___fttol& (0+255),w,b
  5159  000FD4  0100               	movlb	0	; () banked
  5160  000FD6  6FBC               	movwf	(??___fttol+4)& (0+255),b
  5161  000FD8  D005               	goto	u7030
  5162  000FDA                     u7035:
  5163  000FDA  0100               	movlb	0	; () banked
  5164  000FDC  90D8               	bcf	status,0,c
  5165  000FDE  33BB               	rrcf	(??___fttol+3)& (0+255),f,b
  5166  000FE0  33BA               	rrcf	(??___fttol+2)& (0+255),f,b
  5167  000FE2  33B9               	rrcf	(??___fttol+1)& (0+255),f,b
  5168  000FE4                     u7030:
  5169  000FE4  0100               	movlb	0	; () banked
  5170  000FE6  2FBC               	decfsz	(??___fttol+4)& (0+255),f,b
  5171  000FE8  D7F8               	goto	u7035
  5172  000FEA  0100               	movlb	0	; () banked
  5173  000FEC  51B9               	movf	(??___fttol+1)& (0+255),w,b
  5174  000FEE  0100               	movlb	0	; () banked
  5175  000FF0  6FBD               	movwf	___fttol@sign1& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178  000FF2  0100               	movlb	0	; () banked
  5179  000FF4  8FB5               	bsf	(___fttol@f1+1)& (0+255),7,b
  5180                           
  5181                           ; BSR set to: 0
  5182  000FF6  0EFF               	movlw	255
  5183  000FF8  0100               	movlb	0	; () banked
  5184  000FFA  17B4               	andwf	___fttol@f1& (0+255),f,b
  5185  000FFC  0EFF               	movlw	255
  5186  000FFE  0100               	movlb	0	; () banked
  5187  001000  17B5               	andwf	(___fttol@f1+1)& (0+255),f,b
  5188  001002  0E00               	movlw	0
  5189  001004  0100               	movlb	0	; () banked
  5190  001006  17B6               	andwf	(___fttol@f1+2)& (0+255),f,b
  5191                           
  5192                           ; BSR set to: 0
  5193  001008  0100               	movlb	0	; () banked
  5194  00100A  51B4               	movf	___fttol@f1& (0+255),w,b
  5195  00100C  0100               	movlb	0	; () banked
  5196  00100E  6FBE               	movwf	___fttol@lval& (0+255),b
  5197  001010  0100               	movlb	0	; () banked
  5198  001012  51B5               	movf	(___fttol@f1+1)& (0+255),w,b
  5199  001014  0100               	movlb	0	; () banked
  5200  001016  6FBF               	movwf	(___fttol@lval+1)& (0+255),b
  5201  001018  0100               	movlb	0	; () banked
  5202  00101A  51B6               	movf	(___fttol@f1+2)& (0+255),w,b
  5203  00101C  0100               	movlb	0	; () banked
  5204  00101E  6FC0               	movwf	(___fttol@lval+2)& (0+255),b
  5205  001020  0100               	movlb	0	; () banked
  5206  001022  6BC1               	clrf	(___fttol@lval+3)& (0+255),b
  5207                           
  5208                           ; BSR set to: 0
  5209  001024  0E8E               	movlw	142
  5210  001026  0100               	movlb	0	; () banked
  5211  001028  5FC2               	subwf	___fttol@exp1& (0+255),f,b
  5212                           
  5213                           ; BSR set to: 0
  5214  00102A  0100               	movlb	0	; () banked
  5215  00102C  AFC2               	btfss	___fttol@exp1& (0+255),7,b
  5216  00102E  D01A               	goto	l6727
  5217                           
  5218                           ; BSR set to: 0
  5219  001030  0100               	movlb	0	; () banked
  5220  001032  51C2               	movf	___fttol@exp1& (0+255),w,b
  5221  001034  0A80               	xorlw	128
  5222  001036  0F8F               	addlw	143
  5223  001038  B0D8               	btfsc	status,0,c
  5224  00103A  D00A               	goto	l6723
  5225                           
  5226                           ; BSR set to: 0
  5227  00103C  0E00               	movlw	0
  5228  00103E  0100               	movlb	0	; () banked
  5229  001040  6FB4               	movwf	?___fttol& (0+255),b
  5230  001042  0E00               	movlw	0
  5231  001044  6FB5               	movwf	(?___fttol+1)& (0+255),b
  5232  001046  0E00               	movlw	0
  5233  001048  6FB6               	movwf	(?___fttol+2)& (0+255),b
  5234  00104A  0E00               	movlw	0
  5235  00104C  6FB7               	movwf	(?___fttol+3)& (0+255),b
  5236                           
  5237                           ; BSR set to: 0
  5238  00104E  0012               	return	
  5239  001050                     l6723:
  5240                           
  5241                           ; BSR set to: 0
  5242  001050  0100               	movlb	0	; () banked
  5243  001052  90D8               	bcf	status,0,c
  5244  001054  33C1               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5245  001056  33C0               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5246  001058  33BF               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5247  00105A  33BE               	rrcf	___fttol@lval& (0+255),f,b
  5248                           
  5249                           ; BSR set to: 0
  5250  00105C  0100               	movlb	0	; () banked
  5251  00105E  3FC2               	incfsz	___fttol@exp1& (0+255),f,b
  5252  001060  D7F7               	goto	l6723
  5253                           
  5254                           ; BSR set to: 0
  5255  001062  D01B               	goto	l6737
  5256  001064                     l6727:
  5257                           
  5258                           ; BSR set to: 0
  5259  001064  0E17               	movlw	23
  5260  001066  0100               	movlb	0	; () banked
  5261  001068  65C2               	cpfsgt	___fttol@exp1& (0+255),b
  5262  00106A  D012               	goto	l6735
  5263                           
  5264                           ; BSR set to: 0
  5265  00106C  0E00               	movlw	0
  5266  00106E  0100               	movlb	0	; () banked
  5267  001070  6FB4               	movwf	?___fttol& (0+255),b
  5268  001072  0E00               	movlw	0
  5269  001074  6FB5               	movwf	(?___fttol+1)& (0+255),b
  5270  001076  0E00               	movlw	0
  5271  001078  6FB6               	movwf	(?___fttol+2)& (0+255),b
  5272  00107A  0E00               	movlw	0
  5273  00107C  6FB7               	movwf	(?___fttol+3)& (0+255),b
  5274                           
  5275                           ; BSR set to: 0
  5276  00107E  0012               	return	
  5277  001080                     l6733:
  5278                           
  5279                           ; BSR set to: 0
  5280  001080  0100               	movlb	0	; () banked
  5281  001082  90D8               	bcf	status,0,c
  5282  001084  37BE               	rlcf	___fttol@lval& (0+255),f,b
  5283  001086  37BF               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5284  001088  37C0               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5285  00108A  37C1               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5286  00108C  0100               	movlb	0	; () banked
  5287  00108E  07C2               	decf	___fttol@exp1& (0+255),f,b
  5288  001090                     l6735:
  5289                           
  5290                           ; BSR set to: 0
  5291  001090  0100               	movlb	0	; () banked
  5292  001092  51C2               	movf	___fttol@exp1& (0+255),w,b
  5293  001094  0100               	movlb	0	; () banked
  5294  001096  A4D8               	btfss	status,2,c
  5295  001098  D7F3               	goto	l6733
  5296  00109A                     l6737:
  5297                           
  5298                           ; BSR set to: 0
  5299  00109A  0100               	movlb	0	; () banked
  5300  00109C  51BD               	movf	___fttol@sign1& (0+255),w,b
  5301  00109E  0100               	movlb	0	; () banked
  5302  0010A0  B4D8               	btfsc	status,2,c
  5303  0010A2  D009               	goto	l6741
  5304                           
  5305                           ; BSR set to: 0
  5306  0010A4  0100               	movlb	0	; () banked
  5307  0010A6  1FC1               	comf	(___fttol@lval+3)& (0+255),f,b
  5308  0010A8  1FC0               	comf	(___fttol@lval+2)& (0+255),f,b
  5309  0010AA  1FBF               	comf	(___fttol@lval+1)& (0+255),f,b
  5310  0010AC  6DBE               	negf	___fttol@lval& (0+255),b
  5311  0010AE  0E00               	movlw	0
  5312  0010B0  23BF               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5313  0010B2  23C0               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5314  0010B4  23C1               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5315  0010B6                     l6741:
  5316                           
  5317                           ; BSR set to: 0
  5318  0010B6  C0BE  F0B4         	movff	___fttol@lval,?___fttol
  5319  0010BA  C0BF  F0B5         	movff	___fttol@lval+1,?___fttol+1
  5320  0010BE  C0C0  F0B6         	movff	___fttol@lval+2,?___fttol+2
  5321  0010C2  C0C1  F0B7         	movff	___fttol@lval+3,?___fttol+3
  5322  0010C6  0012               	return	
  5323  0010C8                     __end_of___fttol:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           wreg	equ	0xFE8
  5334                           indf1	equ	0xFE7
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           indf2	equ	0xFDF
  5338                           postinc2	equ	0xFDE
  5339                           postdec2	equ	0xFDD
  5340                           plusw2	equ	0xFDB
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function ___ftmul *****************
  5346 ;; Defined at:
  5347 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  f1              3   37[COMRAM] float 
  5350 ;;  f2              3   40[COMRAM] float 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  5353 ;;  sign            1    8[BANK0 ] unsigned char 
  5354 ;;  cntr            1    7[BANK0 ] unsigned char 
  5355 ;;  exp             1    3[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  3   37[COMRAM] float 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5365 ;;      Params:         6       0       0       0       0       0       0
  5366 ;;      Locals:         0       6       0       0       0       0       0
  5367 ;;      Temps:          0       3       0       0       0       0       0
  5368 ;;      Totals:         6       9       0       0       0       0       0
  5369 ;;Total ram usage:       15 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    5
  5372 ;; This function calls:
  5373 ;;		___ftpack
  5374 ;; This function is called by:
  5375 ;;		_main
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text19
  5380  0010C8                     __ptext19:
  5381                           	opt stack 0
  5382  0010C8                     ___ftmul:
  5383                           	opt stack 25
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;incstack = 0
  5387  0010C8  C028  F0AB         	movff	___ftmul@f1+2,??___ftmul
  5388  0010CC  0100               	movlb	0	; () banked
  5389  0010CE  6BAC               	clrf	(??___ftmul+1)& (0+255),b
  5390  0010D0  6BAD               	clrf	(??___ftmul+2)& (0+255),b
  5391  0010D2  3427               	rlcf	___ftmul@f1+1,w,c
  5392  0010D4  0100               	movlb	0	; () banked
  5393  0010D6  37AB               	rlcf	??___ftmul& (0+255),f,b
  5394  0010D8  E301               	bnc	u6951
  5395  0010DA  81AC               	bsf	(??___ftmul+1)& (0+255),0,b
  5396  0010DC                     u6951:
  5397  0010DC  0100               	movlb	0	; () banked
  5398  0010DE  51AB               	movf	??___ftmul& (0+255),w,b
  5399  0010E0  0100               	movlb	0	; () banked
  5400  0010E2  6FAE               	movwf	___ftmul@exp& (0+255),b
  5401  0010E4  0100               	movlb	0	; () banked
  5402  0010E6  51AE               	movf	___ftmul@exp& (0+255),w,b
  5403  0010E8  A4D8               	btfss	status,2,c
  5404  0010EA  D007               	goto	l6657
  5405                           
  5406                           ; BSR set to: 0
  5407  0010EC  0E00               	movlw	0
  5408  0010EE  6E26               	movwf	?___ftmul,c
  5409  0010F0  0E00               	movlw	0
  5410  0010F2  6E27               	movwf	?___ftmul+1,c
  5411  0010F4  0E00               	movlw	0
  5412  0010F6  6E28               	movwf	?___ftmul+2,c
  5413                           
  5414                           ; BSR set to: 0
  5415  0010F8  0012               	return	
  5416  0010FA                     l6657:
  5417                           
  5418                           ; BSR set to: 0
  5419  0010FA  C02B  F0AB         	movff	___ftmul@f2+2,??___ftmul
  5420  0010FE  0100               	movlb	0	; () banked
  5421  001100  6BAC               	clrf	(??___ftmul+1)& (0+255),b
  5422  001102  6BAD               	clrf	(??___ftmul+2)& (0+255),b
  5423  001104  342A               	rlcf	___ftmul@f2+1,w,c
  5424  001106  0100               	movlb	0	; () banked
  5425  001108  37AB               	rlcf	??___ftmul& (0+255),f,b
  5426  00110A  E301               	bnc	u6971
  5427  00110C  81AC               	bsf	(??___ftmul+1)& (0+255),0,b
  5428  00110E                     u6971:
  5429  00110E  0100               	movlb	0	; () banked
  5430  001110  51AB               	movf	??___ftmul& (0+255),w,b
  5431  001112  0100               	movlb	0	; () banked
  5432  001114  6FB3               	movwf	___ftmul@sign& (0+255),b
  5433  001116  0100               	movlb	0	; () banked
  5434  001118  51B3               	movf	___ftmul@sign& (0+255),w,b
  5435  00111A  A4D8               	btfss	status,2,c
  5436  00111C  D007               	goto	l6663
  5437                           
  5438                           ; BSR set to: 0
  5439  00111E  0E00               	movlw	0
  5440  001120  6E26               	movwf	?___ftmul,c
  5441  001122  0E00               	movlw	0
  5442  001124  6E27               	movwf	?___ftmul+1,c
  5443  001126  0E00               	movlw	0
  5444  001128  6E28               	movwf	?___ftmul+2,c
  5445                           
  5446                           ; BSR set to: 0
  5447  00112A  0012               	return	
  5448  00112C                     l6663:
  5449                           
  5450                           ; BSR set to: 0
  5451  00112C  0100               	movlb	0	; () banked
  5452  00112E  51B3               	movf	___ftmul@sign& (0+255),w,b
  5453  001130  0F7B               	addlw	123
  5454  001132  0100               	movlb	0	; () banked
  5455  001134  27AE               	addwf	___ftmul@exp& (0+255),f,b
  5456                           
  5457                           ; BSR set to: 0
  5458  001136  C028  F0B3         	movff	___ftmul@f1+2,___ftmul@sign
  5459  00113A  502B               	movf	___ftmul@f2+2,w,c
  5460  00113C  0100               	movlb	0	; () banked
  5461  00113E  1BB3               	xorwf	___ftmul@sign& (0+255),f,b
  5462  001140  0E80               	movlw	128
  5463  001142  0100               	movlb	0	; () banked
  5464  001144  17B3               	andwf	___ftmul@sign& (0+255),f,b
  5465                           
  5466                           ; BSR set to: 0
  5467  001146  8E27               	bsf	___ftmul@f1+1,7,c
  5468                           
  5469                           ; BSR set to: 0
  5470  001148  8E2A               	bsf	___ftmul@f2+1,7,c
  5471                           
  5472                           ; BSR set to: 0
  5473  00114A  0EFF               	movlw	255
  5474  00114C  1629               	andwf	___ftmul@f2,f,c
  5475  00114E  0EFF               	movlw	255
  5476  001150  162A               	andwf	___ftmul@f2+1,f,c
  5477  001152  0E00               	movlw	0
  5478  001154  162B               	andwf	___ftmul@f2+2,f,c
  5479                           
  5480                           ; BSR set to: 0
  5481  001156  0E00               	movlw	0
  5482  001158  0100               	movlb	0	; () banked
  5483  00115A  6FAF               	movwf	___ftmul@f3_as_product& (0+255),b
  5484  00115C  0E00               	movlw	0
  5485  00115E  0100               	movlb	0	; () banked
  5486  001160  6FB0               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5487  001162  0E00               	movlw	0
  5488  001164  0100               	movlb	0	; () banked
  5489  001166  6FB1               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492  001168  0E07               	movlw	7
  5493  00116A  0100               	movlb	0	; () banked
  5494  00116C  6FB2               	movwf	___ftmul@cntr& (0+255),b
  5495  00116E                     l6677:
  5496                           
  5497                           ; BSR set to: 0
  5498  00116E  A026               	btfss	___ftmul@f1,0,c
  5499  001170  D009               	goto	l6681
  5500                           
  5501                           ; BSR set to: 0
  5502  001172  5029               	movf	___ftmul@f2,w,c
  5503  001174  0100               	movlb	0	; () banked
  5504  001176  27AF               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5505  001178  502A               	movf	___ftmul@f2+1,w,c
  5506  00117A  0100               	movlb	0	; () banked
  5507  00117C  23B0               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5508  00117E  502B               	movf	___ftmul@f2+2,w,c
  5509  001180  0100               	movlb	0	; () banked
  5510  001182  23B1               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5511  001184                     l6681:
  5512                           
  5513                           ; BSR set to: 0
  5514  001184  90D8               	bcf	status,0,c
  5515  001186  3228               	rrcf	___ftmul@f1+2,f,c
  5516  001188  3227               	rrcf	___ftmul@f1+1,f,c
  5517  00118A  3226               	rrcf	___ftmul@f1,f,c
  5518  00118C  90D8               	bcf	status,0,c
  5519  00118E  3629               	rlcf	___ftmul@f2,f,c
  5520  001190  362A               	rlcf	___ftmul@f2+1,f,c
  5521  001192  362B               	rlcf	___ftmul@f2+2,f,c
  5522                           
  5523                           ; BSR set to: 0
  5524  001194  0100               	movlb	0	; () banked
  5525  001196  2FB2               	decfsz	___ftmul@cntr& (0+255),f,b
  5526  001198  D7EA               	goto	l6677
  5527                           
  5528                           ; BSR set to: 0
  5529                           
  5530                           ; BSR set to: 0
  5531  00119A  0E09               	movlw	9
  5532  00119C  0100               	movlb	0	; () banked
  5533  00119E  6FB2               	movwf	___ftmul@cntr& (0+255),b
  5534  0011A0                     l6687:
  5535                           
  5536                           ; BSR set to: 0
  5537  0011A0  A026               	btfss	___ftmul@f1,0,c
  5538  0011A2  D009               	goto	l6691
  5539                           
  5540                           ; BSR set to: 0
  5541  0011A4  5029               	movf	___ftmul@f2,w,c
  5542  0011A6  0100               	movlb	0	; () banked
  5543  0011A8  27AF               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5544  0011AA  502A               	movf	___ftmul@f2+1,w,c
  5545  0011AC  0100               	movlb	0	; () banked
  5546  0011AE  23B0               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5547  0011B0  502B               	movf	___ftmul@f2+2,w,c
  5548  0011B2  0100               	movlb	0	; () banked
  5549  0011B4  23B1               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5550  0011B6                     l6691:
  5551                           
  5552                           ; BSR set to: 0
  5553  0011B6  90D8               	bcf	status,0,c
  5554  0011B8  3228               	rrcf	___ftmul@f1+2,f,c
  5555  0011BA  3227               	rrcf	___ftmul@f1+1,f,c
  5556  0011BC  3226               	rrcf	___ftmul@f1,f,c
  5557  0011BE  0100               	movlb	0	; () banked
  5558  0011C0  90D8               	bcf	status,0,c
  5559  0011C2  33B1               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5560  0011C4  33B0               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5561  0011C6  33AF               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5562                           
  5563                           ; BSR set to: 0
  5564  0011C8  0100               	movlb	0	; () banked
  5565  0011CA  2FB2               	decfsz	___ftmul@cntr& (0+255),f,b
  5566  0011CC  D7E9               	goto	l6687
  5567                           
  5568                           ; BSR set to: 0
  5569                           
  5570                           ; BSR set to: 0
  5571  0011CE  C0AF  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  5572  0011D2  C0B0  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5573  0011D6  C0B1  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5574  0011DA  C0AE  F01E         	movff	___ftmul@exp,___ftpack@exp
  5575  0011DE  C0B3  F01F         	movff	___ftmul@sign,___ftpack@sign
  5576  0011E2  EC74  F00C         	call	___ftpack	;wreg free
  5577  0011E6  C01B  F026         	movff	?___ftpack,?___ftmul
  5578  0011EA  C01C  F027         	movff	?___ftpack+1,?___ftmul+1
  5579  0011EE  C01D  F028         	movff	?___ftpack+2,?___ftmul+2
  5580  0011F2  0012               	return	
  5581  0011F4                     __end_of___ftmul:
  5582                           	opt stack 0
  5583                           tblptru	equ	0xFF8
  5584                           tblptrh	equ	0xFF7
  5585                           tblptrl	equ	0xFF6
  5586                           tablat	equ	0xFF5
  5587                           prodh	equ	0xFF4
  5588                           prodl	equ	0xFF3
  5589                           intcon	equ	0xFF2
  5590                           postinc0	equ	0xFEE
  5591                           wreg	equ	0xFE8
  5592                           indf1	equ	0xFE7
  5593                           fsr1h	equ	0xFE2
  5594                           fsr1l	equ	0xFE1
  5595                           indf2	equ	0xFDF
  5596                           postinc2	equ	0xFDE
  5597                           postdec2	equ	0xFDD
  5598                           plusw2	equ	0xFDB
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function ___ftpack *****************
  5604 ;; Defined at:
  5605 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  arg             3   26[COMRAM] unsigned um
  5608 ;;  exp             1   29[COMRAM] unsigned char 
  5609 ;;  sign            1   30[COMRAM] unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  3   26[COMRAM] float 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5621 ;;      Params:         5       0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0
  5623 ;;      Temps:          3       0       0       0       0       0       0
  5624 ;;      Totals:         8       0       0       0       0       0       0
  5625 ;;Total ram usage:        8 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    4
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		___ftmul
  5632 ;;		___lwtoft
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text20
  5637  0018E8                     __ptext20:
  5638                           	opt stack 0
  5639  0018E8                     ___ftpack:
  5640                           	opt stack 25
  5641                           
  5642                           ;incstack = 0
  5643  0018E8  501E               	movf	___ftpack@exp,w,c
  5644  0018EA  B4D8               	btfsc	status,2,c
  5645  0018EC  D005               	goto	l6341
  5646  0018EE  501B               	movf	___ftpack@arg,w,c
  5647  0018F0  101C               	iorwf	___ftpack@arg+1,w,c
  5648  0018F2  101D               	iorwf	___ftpack@arg+2,w,c
  5649  0018F4  A4D8               	btfss	status,2,c
  5650  0018F6  D00C               	goto	l6347
  5651  0018F8                     l6341:
  5652  0018F8  0E00               	movlw	0
  5653  0018FA  6E1B               	movwf	?___ftpack,c
  5654  0018FC  0E00               	movlw	0
  5655  0018FE  6E1C               	movwf	?___ftpack+1,c
  5656  001900  0E00               	movlw	0
  5657  001902  6E1D               	movwf	?___ftpack+2,c
  5658  001904  0012               	return	
  5659  001906                     l6345:
  5660  001906  2A1E               	incf	___ftpack@exp,f,c
  5661  001908  90D8               	bcf	status,0,c
  5662  00190A  321D               	rrcf	___ftpack@arg+2,f,c
  5663  00190C  321C               	rrcf	___ftpack@arg+1,f,c
  5664  00190E  321B               	rrcf	___ftpack@arg,f,c
  5665  001910                     l6347:
  5666  001910  0E00               	movlw	0
  5667  001912  141B               	andwf	___ftpack@arg,w,c
  5668  001914  6E20               	movwf	??___ftpack& (0+255),c
  5669  001916  0E00               	movlw	0
  5670  001918  141C               	andwf	___ftpack@arg+1,w,c
  5671  00191A  6E21               	movwf	(??___ftpack+1)& (0+255),c
  5672  00191C  0EFE               	movlw	254
  5673  00191E  141D               	andwf	___ftpack@arg+2,w,c
  5674  001920  6E22               	movwf	(??___ftpack+2)& (0+255),c
  5675  001922  5020               	movf	??___ftpack,w,c
  5676  001924  1021               	iorwf	??___ftpack+1,w,c
  5677  001926  1022               	iorwf	??___ftpack+2,w,c
  5678  001928  B4D8               	btfsc	status,2,c
  5679  00192A  D00C               	goto	l6353
  5680  00192C  D7EC               	goto	l6345
  5681  00192E                     l6349:
  5682  00192E  2A1E               	incf	___ftpack@exp,f,c
  5683  001930  0E01               	movlw	1
  5684  001932  261B               	addwf	___ftpack@arg,f,c
  5685  001934  0E00               	movlw	0
  5686  001936  221C               	addwfc	___ftpack@arg+1,f,c
  5687  001938  0E00               	movlw	0
  5688  00193A  221D               	addwfc	___ftpack@arg+2,f,c
  5689  00193C  90D8               	bcf	status,0,c
  5690  00193E  321D               	rrcf	___ftpack@arg+2,f,c
  5691  001940  321C               	rrcf	___ftpack@arg+1,f,c
  5692  001942  321B               	rrcf	___ftpack@arg,f,c
  5693  001944                     l6353:
  5694  001944  0E00               	movlw	0
  5695  001946  141B               	andwf	___ftpack@arg,w,c
  5696  001948  6E20               	movwf	??___ftpack& (0+255),c
  5697  00194A  0E00               	movlw	0
  5698  00194C  141C               	andwf	___ftpack@arg+1,w,c
  5699  00194E  6E21               	movwf	(??___ftpack+1)& (0+255),c
  5700  001950  0EFF               	movlw	255
  5701  001952  141D               	andwf	___ftpack@arg+2,w,c
  5702  001954  6E22               	movwf	(??___ftpack+2)& (0+255),c
  5703  001956  5020               	movf	??___ftpack,w,c
  5704  001958  1021               	iorwf	??___ftpack+1,w,c
  5705  00195A  1022               	iorwf	??___ftpack+2,w,c
  5706  00195C  B4D8               	btfsc	status,2,c
  5707  00195E  D006               	goto	l6357
  5708  001960  D7E6               	goto	l6349
  5709  001962                     l6355:
  5710  001962  061E               	decf	___ftpack@exp,f,c
  5711  001964  90D8               	bcf	status,0,c
  5712  001966  361B               	rlcf	___ftpack@arg,f,c
  5713  001968  361C               	rlcf	___ftpack@arg+1,f,c
  5714  00196A  361D               	rlcf	___ftpack@arg+2,f,c
  5715  00196C                     l6357:
  5716  00196C  BE1C               	btfsc	___ftpack@arg+1,7,c
  5717  00196E  D003               	goto	l1478
  5718  001970  0E02               	movlw	2
  5719  001972  601E               	cpfslt	___ftpack@exp,c
  5720  001974  D7F6               	goto	l6355
  5721  001976                     l1478:
  5722  001976  A01E               	btfss	___ftpack@exp,0,c
  5723  001978  9E1C               	bcf	___ftpack@arg+1,7,c
  5724  00197A  90D8               	bcf	status,0,c
  5725  00197C  321E               	rrcf	___ftpack@exp,f,c
  5726  00197E  501E               	movf	___ftpack@exp,w,c
  5727  001980  121D               	iorwf	___ftpack@arg+2,f,c
  5728  001982  501F               	movf	___ftpack@sign,w,c
  5729  001984  A4D8               	btfss	status,2,c
  5730  001986  8E1D               	bsf	___ftpack@arg+2,7,c
  5731  001988  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  5732  00198C  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  5733  001990  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  5734  001994  0012               	return	
  5735  001996                     __end_of___ftpack:
  5736                           	opt stack 0
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           prodh	equ	0xFF4
  5742                           prodl	equ	0xFF3
  5743                           intcon	equ	0xFF2
  5744                           postinc0	equ	0xFEE
  5745                           wreg	equ	0xFE8
  5746                           indf1	equ	0xFE7
  5747                           fsr1h	equ	0xFE2
  5748                           fsr1l	equ	0xFE1
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           plusw2	equ	0xFDB
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _Splash *****************
  5758 ;; Defined at:
  5759 ;;		line 35 in file "Display.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         0       0       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    8
  5780 ;; This function calls:
  5781 ;;		_oledGotoYX
  5782 ;;		_oledPrint
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text21
  5789  00210E                     __ptext21:
  5790                           	opt stack 0
  5791  00210E                     _Splash:
  5792                           	opt stack 22
  5793                           
  5794                           ;Display.c: 36: oledGotoYX(2,3);
  5795                           
  5796                           ;incstack = 0
  5797  00210E  0E03               	movlw	3
  5798  002110  6E27               	movwf	oledGotoYX@Column,c
  5799  002112  0E02               	movlw	2
  5800  002114  ECBC  F010         	call	_oledGotoYX
  5801                           
  5802                           ;Display.c: 37: oledPrint("University");
  5803  002118  0EE3               	movlw	low STR_1
  5804  00211A  0100               	movlb	0	; () banked
  5805  00211C  6FC0               	movwf	oledPrint@s& (0+255),b
  5806  00211E  0E7F               	movlw	high STR_1
  5807  002120  0100               	movlb	0	; () banked
  5808  002122  6FC1               	movwf	(oledPrint@s+1)& (0+255),b
  5809  002124  EC48  F011         	call	_oledPrint	;wreg free
  5810                           
  5811                           ;Display.c: 38: oledGotoYX(3,3);
  5812  002128  0E03               	movlw	3
  5813  00212A  6E27               	movwf	oledGotoYX@Column,c
  5814  00212C  0E03               	movlw	3
  5815  00212E  ECBC  F010         	call	_oledGotoYX
  5816                           
  5817                           ;Display.c: 39: oledPrint("OF");
  5818  002132  0EFC               	movlw	low STR_2
  5819  002134  0100               	movlb	0	; () banked
  5820  002136  6FC0               	movwf	oledPrint@s& (0+255),b
  5821  002138  0E7F               	movlw	high STR_2
  5822  00213A  0100               	movlb	0	; () banked
  5823  00213C  6FC1               	movwf	(oledPrint@s+1)& (0+255),b
  5824  00213E  EC48  F011         	call	_oledPrint	;wreg free
  5825                           
  5826                           ;Display.c: 40: oledGotoYX(4,3);
  5827  002142  0E03               	movlw	3
  5828  002144  6E27               	movwf	oledGotoYX@Column,c
  5829  002146  0E04               	movlw	4
  5830  002148  ECBC  F010         	call	_oledGotoYX
  5831                           
  5832                           ;Display.c: 41: oledPrint("Akron");
  5833  00214C  0EF6               	movlw	low STR_3
  5834  00214E  0100               	movlb	0	; () banked
  5835  002150  6FC0               	movwf	oledPrint@s& (0+255),b
  5836  002152  0E7F               	movlw	high STR_3
  5837  002154  0100               	movlb	0	; () banked
  5838  002156  6FC1               	movwf	(oledPrint@s+1)& (0+255),b
  5839  002158  EC48  F011         	call	_oledPrint	;wreg free
  5840                           
  5841                           ;Display.c: 42: oledGotoYX(5,3);
  5842  00215C  0E03               	movlw	3
  5843  00215E  6E27               	movwf	oledGotoYX@Column,c
  5844  002160  0E05               	movlw	5
  5845  002162  ECBC  F010         	call	_oledGotoYX
  5846                           
  5847                           ;Display.c: 43: oledPrint("ZIPS-EV");
  5848  002166  0EEE               	movlw	low STR_4
  5849  002168  0100               	movlb	0	; () banked
  5850  00216A  6FC0               	movwf	oledPrint@s& (0+255),b
  5851  00216C  0E7F               	movlw	high STR_4
  5852  00216E  0100               	movlb	0	; () banked
  5853  002170  6FC1               	movwf	(oledPrint@s+1)& (0+255),b
  5854  002172  EC48  F011         	call	_oledPrint	;wreg free
  5855  002176  0012               	return		;funcret
  5856  002178                     __end_of_Splash:
  5857                           	opt stack 0
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           indf1	equ	0xFE7
  5868                           fsr1h	equ	0xFE2
  5869                           fsr1l	equ	0xFE1
  5870                           indf2	equ	0xFDF
  5871                           postinc2	equ	0xFDE
  5872                           postdec2	equ	0xFDD
  5873                           plusw2	equ	0xFDB
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _oledPrint *****************
  5879 ;; Defined at:
  5880 ;;		line 222 in file "OLED_Display.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  s               2   21[BANK0 ] PTR const unsigned char 
  5883 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  5884 ;;		 -> SetData@s(20), 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5896 ;;      Params:         0       2       0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0
  5899 ;;      Totals:         0       2       0       0       0       0       0
  5900 ;;Total ram usage:        2 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    7
  5903 ;; This function calls:
  5904 ;;		_oledPutChar
  5905 ;; This function is called by:
  5906 ;;		_Splash
  5907 ;;		_SetData
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text22
  5912  002290                     __ptext22:
  5913                           	opt stack 0
  5914  002290                     _oledPrint:
  5915                           	opt stack 22
  5916                           
  5917                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  5918                           
  5919                           ;incstack = 0
  5920  002290  D015               	goto	l6335
  5921  002292                     l6331:
  5922  002292  C0C0  FFF6         	movff	oledPrint@s,tblptrl
  5923  002296  C0C1  FFF7         	movff	oledPrint@s+1,tblptrh
  5924  00229A  6AF8               	clrf	tblptru,c
  5925  00229C  0E05               	movlw	(high __ramtop+-1)
  5926  00229E  64F7               	cpfsgt	tblptrh,c
  5927  0022A0  D003               	bra	u6457
  5928  0022A2  0008               	tblrd		*
  5929  0022A4  50F5               	movf	tablat,w,c
  5930  0022A6  D005               	bra	u6450
  5931  0022A8                     u6457:
  5932  0022A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5933  0022AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5934  0022B0  50EF               	movf	indf0,w,c
  5935  0022B2                     u6450:
  5936  0022B2  EC2D  F00B         	call	_oledPutChar
  5937  0022B6  0100               	movlb	0	; () banked
  5938  0022B8  4BC0               	infsnz	oledPrint@s& (0+255),f,b
  5939  0022BA  2BC1               	incf	(oledPrint@s+1)& (0+255),f,b
  5940  0022BC                     l6335:
  5941  0022BC  C0C0  FFF6         	movff	oledPrint@s,tblptrl
  5942  0022C0  C0C1  FFF7         	movff	oledPrint@s+1,tblptrh
  5943  0022C4  6AF8               	clrf	tblptru,c
  5944  0022C6  0E05               	movlw	(high __ramtop+-1)
  5945  0022C8  64F7               	cpfsgt	tblptrh,c
  5946  0022CA  D003               	bra	u6467
  5947  0022CC  0008               	tblrd		*
  5948  0022CE  50F5               	movf	tablat,w,c
  5949  0022D0  D005               	bra	u6460
  5950  0022D2                     u6467:
  5951  0022D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5952  0022D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5953  0022DA  50EF               	movf	indf0,w,c
  5954  0022DC                     u6460:
  5955  0022DC  0900               	iorlw	0
  5956  0022DE  B4D8               	btfsc	status,2,c
  5957  0022E0  0012               	return	
  5958  0022E2  D7D7               	goto	l6331
  5959  0022E4                     __end_of_oledPrint:
  5960                           	opt stack 0
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           indf0	equ	0xFEF
  5969                           postinc0	equ	0xFEE
  5970                           fsr0h	equ	0xFEA
  5971                           fsr0l	equ	0xFE9
  5972                           wreg	equ	0xFE8
  5973                           indf1	equ	0xFE7
  5974                           fsr1h	equ	0xFE2
  5975                           fsr1l	equ	0xFE1
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           postdec2	equ	0xFDD
  5979                           plusw2	equ	0xFDB
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _Setupdisplay *****************
  5985 ;; Defined at:
  5986 ;;		line 30 in file "Display.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6000 ;;      Params:         0       0       0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    9
  6007 ;; This function calls:
  6008 ;;		_OLED_init
  6009 ;;		_oledClear
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text23
  6016  002734                     __ptext23:
  6017                           	opt stack 0
  6018  002734                     _Setupdisplay:
  6019                           	opt stack 21
  6020                           
  6021                           ;Display.c: 31: OLED_init();
  6022                           
  6023                           ;incstack = 0
  6024  002734  EC88  F00F         	call	_OLED_init	;wreg free
  6025                           
  6026                           ;Display.c: 32: oledClear();
  6027  002738  EC1C  F011         	call	_oledClear	;wreg free
  6028  00273C  0012               	return		;funcret
  6029  00273E                     __end_of_Setupdisplay:
  6030                           	opt stack 0
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           indf0	equ	0xFEF
  6039                           postinc0	equ	0xFEE
  6040                           fsr0h	equ	0xFEA
  6041                           fsr0l	equ	0xFE9
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           plusw2	equ	0xFDB
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function _oledClear *****************
  6055 ;; Defined at:
  6056 ;;		line 212 in file "OLED_Display.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;		None
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  col             2   23[BANK0 ] unsigned int 
  6061 ;;  row             2   21[BANK0 ] unsigned int 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6071 ;;      Params:         0       0       0       0       0       0       0
  6072 ;;      Locals:         0       4       0       0       0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0
  6074 ;;      Totals:         0       4       0       0       0       0       0
  6075 ;;Total ram usage:        4 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    8
  6078 ;; This function calls:
  6079 ;;		_oledGotoYX
  6080 ;;		_oledPutChar
  6081 ;; This function is called by:
  6082 ;;		_Setupdisplay
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text24
  6087  002238                     __ptext24:
  6088                           	opt stack 0
  6089  002238                     _oledClear:
  6090                           	opt stack 21
  6091                           
  6092                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  6093                           
  6094                           ;incstack = 0
  6095  002238  0E00               	movlw	0
  6096  00223A  0100               	movlb	0	; () banked
  6097  00223C  6FC1               	movwf	(oledClear@row+1)& (0+255),b
  6098  00223E  0E00               	movlw	0
  6099  002240  6FC0               	movwf	oledClear@row& (0+255),b
  6100  002242                     l6307:
  6101                           
  6102                           ; BSR set to: 0
  6103  002242  0100               	movlb	0	; () banked
  6104  002244  51C1               	movf	(oledClear@row+1)& (0+255),w,b
  6105  002246  E123               	bnz	l1022
  6106  002248  0E08               	movlw	8
  6107  00224A  0100               	movlb	0	; () banked
  6108  00224C  5DC0               	subwf	oledClear@row& (0+255),w,b
  6109  00224E  B0D8               	btfsc	status,0,c
  6110  002250  0012               	return	
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  6114                           
  6115                           ; BSR set to: 0
  6116                           
  6117                           ; BSR set to: 0
  6118  002252  0E00               	movlw	0
  6119  002254  0100               	movlb	0	; () banked
  6120  002256  6FC3               	movwf	(oledClear@col+1)& (0+255),b
  6121  002258  0E00               	movlw	0
  6122  00225A  6FC2               	movwf	oledClear@col& (0+255),b
  6123  00225C                     l6313:
  6124                           
  6125                           ; BSR set to: 0
  6126  00225C  0100               	movlb	0	; () banked
  6127  00225E  51C3               	movf	(oledClear@col+1)& (0+255),w,b
  6128  002260  E112               	bnz	l6325
  6129  002262  0E10               	movlw	16
  6130  002264  0100               	movlb	0	; () banked
  6131  002266  5DC2               	subwf	oledClear@col& (0+255),w,b
  6132  002268  B0D8               	btfsc	status,0,c
  6133  00226A  D00D               	goto	l6325
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  6137                           
  6138                           ; BSR set to: 0
  6139                           
  6140                           ; BSR set to: 0
  6141  00226C  C0C2  F027         	movff	oledClear@col,oledGotoYX@Column
  6142  002270  0100               	movlb	0	; () banked
  6143  002272  51C0               	movf	oledClear@row& (0+255),w,b
  6144  002274  ECBC  F010         	call	_oledGotoYX
  6145                           
  6146                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  6147  002278  0E20               	movlw	32
  6148  00227A  EC2D  F00B         	call	_oledPutChar
  6149  00227E  0100               	movlb	0	; () banked
  6150  002280  4BC2               	infsnz	oledClear@col& (0+255),f,b
  6151  002282  2BC3               	incf	(oledClear@col+1)& (0+255),f,b
  6152  002284  D7EB               	goto	l6313
  6153  002286                     l6325:
  6154                           
  6155                           ; BSR set to: 0
  6156  002286  0100               	movlb	0	; () banked
  6157  002288  4BC0               	infsnz	oledClear@row& (0+255),f,b
  6158  00228A  2BC1               	incf	(oledClear@row+1)& (0+255),f,b
  6159  00228C  D7DA               	goto	l6307
  6160  00228E                     l1022:
  6161                           
  6162                           ; BSR set to: 0
  6163  00228E  0012               	return		;funcret
  6164  002290                     __end_of_oledClear:
  6165                           	opt stack 0
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           indf0	equ	0xFEF
  6174                           postinc0	equ	0xFEE
  6175                           fsr0h	equ	0xFEA
  6176                           fsr0l	equ	0xFE9
  6177                           wreg	equ	0xFE8
  6178                           indf1	equ	0xFE7
  6179                           fsr1h	equ	0xFE2
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           plusw2	equ	0xFDB
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _oledPutChar *****************
  6190 ;; Defined at:
  6191 ;;		line 178 in file "OLED_Display.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  ch              1    wreg     unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  ch              1   19[BANK0 ] unsigned char 
  6196 ;;  bytes           9    8[BANK0 ] unsigned char [9]
  6197 ;;  base            2   17[BANK0 ] PTR const unsigned char 
  6198 ;;		 -> OledFont(768), 
  6199 ;;  status          1   20[BANK0 ] enum E7146
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6209 ;;      Params:         0       0       0       0       0       0       0
  6210 ;;      Locals:         0      13       0       0       0       0       0
  6211 ;;      Temps:          4       0       0       0       0       0       0
  6212 ;;      Totals:         4      13       0       0       0       0       0
  6213 ;;Total ram usage:       17 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    6
  6216 ;; This function calls:
  6217 ;;		_I2C1_MasterWrite
  6218 ;;		_memmove
  6219 ;; This function is called by:
  6220 ;;		_oledClear
  6221 ;;		_oledPrint
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text25
  6226  00165A                     __ptext25:
  6227                           	opt stack 0
  6228  00165A                     _oledPutChar:
  6229                           	opt stack 22
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;incstack = 0
  6233                           ;oledPutChar@ch stored from wreg
  6234  00165A  0100               	movlb	0	; () banked
  6235  00165C  6FBE               	movwf	oledPutChar@ch& (0+255),b
  6236                           
  6237                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  6238  00165E  0E1F               	movlw	31
  6239  001660  0100               	movlb	0	; () banked
  6240  001662  65BE               	cpfsgt	oledPutChar@ch& (0+255),b
  6241  001664  D004               	goto	l6037
  6242                           
  6243                           ; BSR set to: 0
  6244  001666  0E7F               	movlw	127
  6245  001668  0100               	movlb	0	; () banked
  6246  00166A  65BE               	cpfsgt	oledPutChar@ch& (0+255),b
  6247  00166C  D003               	goto	l6039
  6248  00166E                     l6037:
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;OLED_Display.c: 180: ch = ' ';
  6252  00166E  0E20               	movlw	32
  6253  001670  0100               	movlb	0	; () banked
  6254  001672  6FBE               	movwf	oledPutChar@ch& (0+255),b
  6255  001674                     l6039:
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  6259  001674  0E00               	movlw	0
  6260  001676  6E27               	movwf	??_oledPutChar& (0+255),c
  6261  001678  0EFF               	movlw	255
  6262  00167A  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  6263  00167C  0100               	movlb	0	; () banked
  6264  00167E  51BE               	movf	oledPutChar@ch& (0+255),w,b
  6265  001680  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  6266  001682  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  6267  001684  90D8               	bcf	status,0,c
  6268  001686  3629               	rlcf	??_oledPutChar+2,f,c
  6269  001688  362A               	rlcf	??_oledPutChar+3,f,c
  6270  00168A  90D8               	bcf	status,0,c
  6271  00168C  3629               	rlcf	??_oledPutChar+2,f,c
  6272  00168E  362A               	rlcf	??_oledPutChar+3,f,c
  6273  001690  90D8               	bcf	status,0,c
  6274  001692  3629               	rlcf	??_oledPutChar+2,f,c
  6275  001694  362A               	rlcf	??_oledPutChar+3,f,c
  6276  001696  5027               	movf	??_oledPutChar,w,c
  6277  001698  2629               	addwf	??_oledPutChar+2,f,c
  6278  00169A  5028               	movf	??_oledPutChar+1,w,c
  6279  00169C  222A               	addwfc	??_oledPutChar+3,f,c
  6280  00169E  0ED3               	movlw	low _OledFont
  6281  0016A0  2429               	addwf	??_oledPutChar+2,w,c
  6282  0016A2  0100               	movlb	0	; () banked
  6283  0016A4  6FBC               	movwf	oledPutChar@base& (0+255),b
  6284  0016A6  0E7B               	movlw	high _OledFont
  6285  0016A8  202A               	addwfc	??_oledPutChar+3,w,c
  6286  0016AA  0100               	movlb	0	; () banked
  6287  0016AC  6FBD               	movwf	(oledPutChar@base+1)& (0+255),b
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;OLED_Display.c: 184: uint8_t bytes[9];
  6291                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  6292  0016AE  0E40               	movlw	64
  6293  0016B0  0100               	movlb	0	; () banked
  6294  0016B2  6FB3               	movwf	oledPutChar@bytes& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  6298  0016B4  0EB4               	movlw	low (oledPutChar@bytes+1)
  6299  0016B6  6E1B               	movwf	memmove@d1,c
  6300  0016B8  0E00               	movlw	high (oledPutChar@bytes+1)
  6301  0016BA  6E1C               	movwf	memmove@d1+1,c
  6302  0016BC  C0BC  F01D         	movff	oledPutChar@base,memmove@s1
  6303  0016C0  C0BD  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  6304  0016C4  0E00               	movlw	0
  6305  0016C6  6E20               	movwf	memmove@n+1,c
  6306  0016C8  0E08               	movlw	8
  6307  0016CA  6E1F               	movwf	memmove@n,c
  6308  0016CC  ECCB  F00C         	call	_memmove	;wreg free
  6309                           
  6310                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  6311  0016D0  0E02               	movlw	2
  6312  0016D2  0100               	movlb	0	; () banked
  6313  0016D4  6FBF               	movwf	oledPutChar@status& (0+255),b
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;OLED_Display.c: 190: timeOut = 0;
  6317  0016D6  0E00               	movlw	0
  6318  0016D8  0100               	movlb	0	; () banked
  6319  0016DA  6F98               	movwf	(_timeOut+1)& (0+255),b
  6320  0016DC  0E00               	movlw	0
  6321  0016DE  6F97               	movwf	_timeOut& (0+255),b
  6322                           
  6323                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  6324  0016E0  D030               	goto	l6069
  6325  0016E2                     l6049:
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  6329                           ;OLED_Display.c: 194: 9,
  6330                           ;OLED_Display.c: 195: 0x3C,
  6331                           ;OLED_Display.c: 196: &status);
  6332  0016E2  0EB3               	movlw	low oledPutChar@bytes
  6333  0016E4  0100               	movlb	0	; () banked
  6334  0016E6  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  6335  0016E8  0E00               	movlw	high oledPutChar@bytes
  6336  0016EA  0100               	movlb	0	; () banked
  6337  0016EC  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  6338  0016EE  0E00               	movlw	0
  6339  0016F0  0100               	movlb	0	; () banked
  6340  0016F2  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  6341  0016F4  0E09               	movlw	9
  6342  0016F6  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  6343  0016F8  0E00               	movlw	0
  6344  0016FA  0100               	movlb	0	; () banked
  6345  0016FC  6FB0               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  6346  0016FE  0E3C               	movlw	60
  6347  001700  6FAF               	movwf	I2C1_MasterWrite@address& (0+255),b
  6348  001702  0EBF               	movlw	low oledPutChar@status
  6349  001704  0100               	movlb	0	; () banked
  6350  001706  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  6351  001708  0E00               	movlw	high oledPutChar@status
  6352  00170A  0100               	movlb	0	; () banked
  6353  00170C  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  6354  00170E  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  6355  001712                     l6051:
  6356  001712  0E02               	movlw	2
  6357  001714  0100               	movlb	0	; () banked
  6358  001716  19BF               	xorwf	oledPutChar@status& (0+255),w,b
  6359  001718  B4D8               	btfsc	status,2,c
  6360  00171A  D7FB               	goto	l6051
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  6364                           
  6365                           ; BSR set to: 0
  6366  00171C  0100               	movlb	0	; () banked
  6367  00171E  51BF               	movf	oledPutChar@status& (0+255),w,b
  6368  001720  0100               	movlb	0	; () banked
  6369  001722  B4D8               	btfsc	status,2,c
  6370  001724  0012               	return	
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;OLED_Display.c: 203: if (timeOut == 2)
  6374                           
  6375                           ; BSR set to: 0
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;OLED_Display.c: 202: break;
  6379  001726  0E02               	movlw	2
  6380  001728  0100               	movlb	0	; () banked
  6381  00172A  1997               	xorwf	_timeOut& (0+255),w,b
  6382  00172C  0100               	movlb	0	; () banked
  6383  00172E  1198               	iorwf	(_timeOut+1)& (0+255),w,b
  6384  001730  B4D8               	btfsc	status,2,c
  6385  001732  0012               	return	
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  6389                           
  6390                           ; BSR set to: 0
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;OLED_Display.c: 204: break;
  6394  001734  0100               	movlb	0	; () banked
  6395  001736  05BF               	decf	oledPutChar@status& (0+255),w,b
  6396  001738  B4D8               	btfsc	status,2,c
  6397  00173A  0012               	return	
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;OLED_Display.c: 207: else
  6401                           ;OLED_Display.c: 208: timeOut++;
  6402                           
  6403                           ; BSR set to: 0
  6404                           
  6405                           ; BSR set to: 0
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;OLED_Display.c: 206: break;
  6409  00173C  0100               	movlb	0	; () banked
  6410  00173E  4B97               	infsnz	_timeOut& (0+255),f,b
  6411  001740  2B98               	incf	(_timeOut+1)& (0+255),f,b
  6412  001742                     l6069:
  6413                           
  6414                           ; BSR set to: 0
  6415  001742  0100               	movlb	0	; () banked
  6416  001744  05BF               	decf	oledPutChar@status& (0+255),w,b
  6417  001746  B4D8               	btfsc	status,2,c
  6418  001748  0012               	return	
  6419  00174A  D7CB               	goto	l6049
  6420  00174C                     __end_of_oledPutChar:
  6421                           	opt stack 0
  6422                           tblptru	equ	0xFF8
  6423                           tblptrh	equ	0xFF7
  6424                           tblptrl	equ	0xFF6
  6425                           tablat	equ	0xFF5
  6426                           prodh	equ	0xFF4
  6427                           prodl	equ	0xFF3
  6428                           intcon	equ	0xFF2
  6429                           indf0	equ	0xFEF
  6430                           postinc0	equ	0xFEE
  6431                           fsr0h	equ	0xFEA
  6432                           fsr0l	equ	0xFE9
  6433                           wreg	equ	0xFE8
  6434                           indf1	equ	0xFE7
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           postdec2	equ	0xFDD
  6440                           plusw2	equ	0xFDB
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function _memmove *****************
  6446 ;; Defined at:
  6447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memmove.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  d1              2   26[COMRAM] PTR void 
  6450 ;;		 -> oledPutChar@bytes(9), 
  6451 ;;  s1              2   28[COMRAM] PTR const void 
  6452 ;;		 -> OledFont(768), 
  6453 ;;  n               2   30[COMRAM] unsigned int 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  s               2   36[COMRAM] PTR const unsigned char 
  6456 ;;		 -> OledFont(768), 
  6457 ;;  d               2   34[COMRAM] PTR unsigned char 
  6458 ;;		 -> oledPutChar@bytes(9), 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2   26[COMRAM] PTR void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6468 ;;      Params:         6       0       0       0       0       0       0
  6469 ;;      Locals:         4       0       0       0       0       0       0
  6470 ;;      Temps:          2       0       0       0       0       0       0
  6471 ;;      Totals:        12       0       0       0       0       0       0
  6472 ;;Total ram usage:       12 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    4
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_oledPutChar
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text26
  6483  001996                     __ptext26:
  6484                           	opt stack 0
  6485  001996                     _memmove:
  6486                           	opt stack 23
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;incstack = 0
  6490  001996  C01D  F025         	movff	memmove@s1,memmove@s
  6491  00199A  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  6492  00199E  C01B  F023         	movff	memmove@d1,memmove@d
  6493  0019A2  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  6494  0019A6  5023               	movf	memmove@d,w,c
  6495  0019A8  5C25               	subwf	memmove@s,w,c
  6496  0019AA  5024               	movf	memmove@d+1,w,c
  6497  0019AC  5826               	subwfb	memmove@s+1,w,c
  6498  0019AE  B0D8               	btfsc	status,0,c
  6499  0019B0  D02D               	goto	l5961
  6500  0019B2  501F               	movf	memmove@n,w,c
  6501  0019B4  2425               	addwf	memmove@s,w,c
  6502  0019B6  6E21               	movwf	??_memmove& (0+255),c
  6503  0019B8  5020               	movf	memmove@n+1,w,c
  6504  0019BA  2026               	addwfc	memmove@s+1,w,c
  6505  0019BC  6E22               	movwf	(??_memmove+1)& (0+255),c
  6506  0019BE  5021               	movf	??_memmove,w,c
  6507  0019C0  5C23               	subwf	memmove@d,w,c
  6508  0019C2  5022               	movf	??_memmove+1,w,c
  6509  0019C4  5824               	subwfb	memmove@d+1,w,c
  6510  0019C6  B0D8               	btfsc	status,0,c
  6511  0019C8  D021               	goto	l5961
  6512  0019CA  501F               	movf	memmove@n,w,c
  6513  0019CC  2625               	addwf	memmove@s,f,c
  6514  0019CE  5020               	movf	memmove@n+1,w,c
  6515  0019D0  2226               	addwfc	memmove@s+1,f,c
  6516  0019D2  501F               	movf	memmove@n,w,c
  6517  0019D4  2623               	addwf	memmove@d,f,c
  6518  0019D6  5020               	movf	memmove@n+1,w,c
  6519  0019D8  2224               	addwfc	memmove@d+1,f,c
  6520  0019DA                     l5957:
  6521  0019DA  0625               	decf	memmove@s,f,c
  6522  0019DC  A0D8               	btfss	status,0,c
  6523  0019DE  0626               	decf	memmove@s+1,f,c
  6524  0019E0  C025  FFF6         	movff	memmove@s,tblptrl
  6525  0019E4  C026  FFF7         	movff	memmove@s+1,tblptrh
  6526  0019E8                     	if	0	;tblptru may be non-zero
  6527  0019E8                     	endif
  6528  0019E8                     	if	0	;tblptru may be non-zero
  6529  0019E8                     	endif
  6530  0019E8  0623               	decf	memmove@d,f,c
  6531  0019EA  A0D8               	btfss	status,0,c
  6532  0019EC  0624               	decf	memmove@d+1,f,c
  6533  0019EE  C023  FFD9         	movff	memmove@d,fsr2l
  6534  0019F2  C024  FFDA         	movff	memmove@d+1,fsr2h
  6535  0019F6  0008               	tblrd		*
  6536  0019F8  CFF5 FFDF          	movff	tablat,indf2
  6537  0019FC  061F               	decf	memmove@n,f,c
  6538  0019FE  A0D8               	btfss	status,0,c
  6539  001A00  0620               	decf	memmove@n+1,f,c
  6540  001A02  501F               	movf	memmove@n,w,c
  6541  001A04  1020               	iorwf	memmove@n+1,w,c
  6542  001A06  B4D8               	btfsc	status,2,c
  6543  001A08  0012               	return	
  6544  001A0A  D7E7               	goto	l5957
  6545  001A0C                     l5961:
  6546  001A0C  501F               	movf	memmove@n,w,c
  6547  001A0E  1020               	iorwf	memmove@n+1,w,c
  6548  001A10  B4D8               	btfsc	status,2,c
  6549  001A12  0012               	return	
  6550  001A14  C025  FFF6         	movff	memmove@s,tblptrl
  6551  001A18  C026  FFF7         	movff	memmove@s+1,tblptrh
  6552  001A1C                     	if	0	;tblptru may be non-zero
  6553  001A1C                     	endif
  6554  001A1C                     	if	0	;tblptru may be non-zero
  6555  001A1C                     	endif
  6556  001A1C  C023  FFD9         	movff	memmove@d,fsr2l
  6557  001A20  C024  FFDA         	movff	memmove@d+1,fsr2h
  6558  001A24  0008               	tblrd		*
  6559  001A26  CFF5 FFDF          	movff	tablat,indf2
  6560  001A2A  4A25               	infsnz	memmove@s,f,c
  6561  001A2C  2A26               	incf	memmove@s+1,f,c
  6562  001A2E  4A23               	infsnz	memmove@d,f,c
  6563  001A30  2A24               	incf	memmove@d+1,f,c
  6564  001A32  061F               	decf	memmove@n,f,c
  6565  001A34  A0D8               	btfss	status,0,c
  6566  001A36  0620               	decf	memmove@n+1,f,c
  6567  001A38  D7E9               	goto	l5961
  6568  001A3A                     __end_of_memmove:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           indf0	equ	0xFEF
  6578                           postinc0	equ	0xFEE
  6579                           fsr0h	equ	0xFEA
  6580                           fsr0l	equ	0xFE9
  6581                           wreg	equ	0xFE8
  6582                           indf1	equ	0xFE7
  6583                           fsr1h	equ	0xFE2
  6584                           fsr1l	equ	0xFE1
  6585                           indf2	equ	0xFDF
  6586                           postinc2	equ	0xFDE
  6587                           postdec2	equ	0xFDD
  6588                           plusw2	equ	0xFDB
  6589                           fsr2h	equ	0xFDA
  6590                           fsr2l	equ	0xFD9
  6591                           status	equ	0xFD8
  6592                           
  6593 ;; *************** function _oledGotoYX *****************
  6594 ;; Defined at:
  6595 ;;		line 39 in file "OLED_Display.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  Row             1    wreg     unsigned char 
  6598 ;;  Column          1   38[COMRAM] unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  Row             1   40[COMRAM] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6610 ;;      Params:         1       0       0       0       0       0       0
  6611 ;;      Locals:         1       0       0       0       0       0       0
  6612 ;;      Temps:          1       0       0       0       0       0       0
  6613 ;;      Totals:         3       0       0       0       0       0       0
  6614 ;;Total ram usage:        3 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    7
  6617 ;; This function calls:
  6618 ;;		_OLED_command
  6619 ;; This function is called by:
  6620 ;;		_oledClear
  6621 ;;		_Splash
  6622 ;;		_SetData
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text27
  6627  002178                     __ptext27:
  6628                           	opt stack 0
  6629  002178                     _oledGotoYX:
  6630                           	opt stack 22
  6631                           
  6632                           ;incstack = 0
  6633                           ;oledGotoYX@Row stored from wreg
  6634  002178  6E29               	movwf	oledGotoYX@Row,c
  6635                           
  6636                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  6637  00217A  5029               	movf	oledGotoYX@Row,w,c
  6638  00217C  0FB0               	addlw	176
  6639  00217E  EC10  F010         	call	_OLED_command
  6640                           
  6641                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  6642  002182  5029               	movf	oledGotoYX@Row,w,c
  6643  002184  0FB0               	addlw	176
  6644  002186  EC10  F010         	call	_OLED_command
  6645                           
  6646                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  6647  00218A  5027               	movf	oledGotoYX@Column,w,c
  6648  00218C  0D08               	mullw	8
  6649  00218E  50F3               	movf	prodl,w,c
  6650  002190  0B0F               	andlw	15
  6651  002192  EC10  F010         	call	_OLED_command
  6652                           
  6653                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  6654  002196  5027               	movf	oledGotoYX@Column,w,c
  6655  002198  0D08               	mullw	8
  6656  00219A  50F3               	movf	prodl,w,c
  6657  00219C  0B0F               	andlw	15
  6658  00219E  EC10  F010         	call	_OLED_command
  6659                           
  6660                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  6661  0021A2  5027               	movf	oledGotoYX@Column,w,c
  6662  0021A4  0D08               	mullw	8
  6663  0021A6  0E04               	movlw	4
  6664  0021A8  6E28               	movwf	??_oledGotoYX& (0+255),c
  6665  0021AA                     u5835:
  6666  0021AA  34F4               	rlcf	prodh,w,c
  6667  0021AC  32F4               	rrcf	prodh,f,c
  6668  0021AE  32F3               	rrcf	prodl,f,c
  6669  0021B0  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  6670  0021B2  D7FB               	goto	u5835
  6671  0021B4  50F3               	movf	prodl,w,c
  6672  0021B6  0B0F               	andlw	15
  6673  0021B8  0F10               	addlw	16
  6674  0021BA  EC10  F010         	call	_OLED_command
  6675                           
  6676                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  6677  0021BE  5027               	movf	oledGotoYX@Column,w,c
  6678  0021C0  0D08               	mullw	8
  6679  0021C2  0E04               	movlw	4
  6680  0021C4  6E28               	movwf	??_oledGotoYX& (0+255),c
  6681  0021C6                     u5845:
  6682  0021C6  34F4               	rlcf	prodh,w,c
  6683  0021C8  32F4               	rrcf	prodh,f,c
  6684  0021CA  32F3               	rrcf	prodl,f,c
  6685  0021CC  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  6686  0021CE  D7FB               	goto	u5845
  6687  0021D0  50F3               	movf	prodl,w,c
  6688  0021D2  0B0F               	andlw	15
  6689  0021D4  0F10               	addlw	16
  6690  0021D6  EC10  F010         	call	_OLED_command
  6691  0021DA  0012               	return		;funcret
  6692  0021DC                     __end_of_oledGotoYX:
  6693                           	opt stack 0
  6694                           tblptru	equ	0xFF8
  6695                           tblptrh	equ	0xFF7
  6696                           tblptrl	equ	0xFF6
  6697                           tablat	equ	0xFF5
  6698                           prodh	equ	0xFF4
  6699                           prodl	equ	0xFF3
  6700                           intcon	equ	0xFF2
  6701                           indf0	equ	0xFEF
  6702                           postinc0	equ	0xFEE
  6703                           fsr0h	equ	0xFEA
  6704                           fsr0l	equ	0xFE9
  6705                           wreg	equ	0xFE8
  6706                           indf1	equ	0xFE7
  6707                           fsr1h	equ	0xFE2
  6708                           fsr1l	equ	0xFE1
  6709                           indf2	equ	0xFDF
  6710                           postinc2	equ	0xFDE
  6711                           postdec2	equ	0xFDD
  6712                           plusw2	equ	0xFDB
  6713                           fsr2h	equ	0xFDA
  6714                           fsr2l	equ	0xFD9
  6715                           status	equ	0xFD8
  6716                           
  6717 ;; *************** function _OLED_init *****************
  6718 ;; Defined at:
  6719 ;;		line 146 in file "OLED_Display.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;		None
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6733 ;;      Params:         0       0       0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0
  6736 ;;      Totals:         0       0       0       0       0       0       0
  6737 ;;Total ram usage:        0 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    7
  6740 ;; This function calls:
  6741 ;;		_OLED_command
  6742 ;; This function is called by:
  6743 ;;		_Setupdisplay
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text28
  6748  001F10                     __ptext28:
  6749                           	opt stack 0
  6750  001F10                     _OLED_init:
  6751                           	opt stack 22
  6752                           
  6753                           ;OLED_Display.c: 148: OLED_command (0xae);
  6754                           
  6755                           ;incstack = 0
  6756  001F10  0EAE               	movlw	174
  6757  001F12  EC10  F010         	call	_OLED_command
  6758                           
  6759                           ;OLED_Display.c: 149: OLED_command (0xa8);
  6760  001F16  0EA8               	movlw	168
  6761  001F18  EC10  F010         	call	_OLED_command
  6762                           
  6763                           ;OLED_Display.c: 150: OLED_command (0x3f);
  6764  001F1C  0E3F               	movlw	63
  6765  001F1E  EC10  F010         	call	_OLED_command
  6766                           
  6767                           ;OLED_Display.c: 151: OLED_command (0xd3);
  6768  001F22  0ED3               	movlw	211
  6769  001F24  EC10  F010         	call	_OLED_command
  6770                           
  6771                           ;OLED_Display.c: 152: OLED_command (0x00);
  6772  001F28  0E00               	movlw	0
  6773  001F2A  EC10  F010         	call	_OLED_command
  6774                           
  6775                           ;OLED_Display.c: 153: OLED_command (0x40);
  6776  001F2E  0E40               	movlw	64
  6777  001F30  EC10  F010         	call	_OLED_command
  6778                           
  6779                           ;OLED_Display.c: 155: OLED_command (0xa0);
  6780  001F34  0EA0               	movlw	160
  6781  001F36  EC10  F010         	call	_OLED_command
  6782                           
  6783                           ;OLED_Display.c: 156: OLED_command (0xa1);
  6784  001F3A  0EA1               	movlw	161
  6785  001F3C  EC10  F010         	call	_OLED_command
  6786                           
  6787                           ;OLED_Display.c: 157: OLED_command (0xc0);
  6788  001F40  0EC0               	movlw	192
  6789  001F42  EC10  F010         	call	_OLED_command
  6790                           
  6791                           ;OLED_Display.c: 159: OLED_command (0xc8);
  6792  001F46  0EC8               	movlw	200
  6793  001F48  EC10  F010         	call	_OLED_command
  6794                           
  6795                           ;OLED_Display.c: 160: OLED_command (0xda);
  6796  001F4C  0EDA               	movlw	218
  6797  001F4E  EC10  F010         	call	_OLED_command
  6798                           
  6799                           ;OLED_Display.c: 161: OLED_command (0x12);
  6800  001F52  0E12               	movlw	18
  6801  001F54  EC10  F010         	call	_OLED_command
  6802                           
  6803                           ;OLED_Display.c: 162: OLED_command (0x81);
  6804  001F58  0E81               	movlw	129
  6805  001F5A  EC10  F010         	call	_OLED_command
  6806                           
  6807                           ;OLED_Display.c: 163: OLED_command (0xfF);
  6808  001F5E  0EFF               	movlw	255
  6809  001F60  EC10  F010         	call	_OLED_command
  6810                           
  6811                           ;OLED_Display.c: 164: OLED_command (0xa4);
  6812  001F64  0EA4               	movlw	164
  6813  001F66  EC10  F010         	call	_OLED_command
  6814                           
  6815                           ;OLED_Display.c: 165: OLED_command (0xa6);
  6816  001F6A  0EA6               	movlw	166
  6817  001F6C  EC10  F010         	call	_OLED_command
  6818                           
  6819                           ;OLED_Display.c: 166: OLED_command (0xd5);
  6820  001F70  0ED5               	movlw	213
  6821  001F72  EC10  F010         	call	_OLED_command
  6822                           
  6823                           ;OLED_Display.c: 167: OLED_command (0x80);
  6824  001F76  0E80               	movlw	128
  6825  001F78  EC10  F010         	call	_OLED_command
  6826                           
  6827                           ;OLED_Display.c: 168: OLED_command (0x8d);
  6828  001F7C  0E8D               	movlw	141
  6829  001F7E  EC10  F010         	call	_OLED_command
  6830                           
  6831                           ;OLED_Display.c: 169: OLED_command (0x14);
  6832  001F82  0E14               	movlw	20
  6833  001F84  EC10  F010         	call	_OLED_command
  6834                           
  6835                           ;OLED_Display.c: 170: OLED_command (0xAF);
  6836  001F88  0EAF               	movlw	175
  6837  001F8A  EC10  F010         	call	_OLED_command
  6838                           
  6839                           ;OLED_Display.c: 171: OLED_command (0x20);
  6840  001F8E  0E20               	movlw	32
  6841  001F90  EC10  F010         	call	_OLED_command
  6842                           
  6843                           ;OLED_Display.c: 172: OLED_command (0x00);
  6844  001F94  0E00               	movlw	0
  6845  001F96  EC10  F010         	call	_OLED_command
  6846  001F9A  0012               	return		;funcret
  6847  001F9C                     __end_of_OLED_init:
  6848                           	opt stack 0
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           indf0	equ	0xFEF
  6857                           postinc0	equ	0xFEE
  6858                           fsr0h	equ	0xFEA
  6859                           fsr0l	equ	0xFE9
  6860                           wreg	equ	0xFE8
  6861                           indf1	equ	0xFE7
  6862                           fsr1h	equ	0xFE2
  6863                           fsr1l	equ	0xFE1
  6864                           indf2	equ	0xFDF
  6865                           postinc2	equ	0xFDE
  6866                           postdec2	equ	0xFDD
  6867                           plusw2	equ	0xFDB
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function _OLED_command *****************
  6873 ;; Defined at:
  6874 ;;		line 10 in file "OLED_Display.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  com             1    wreg     unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  com             1   36[COMRAM] unsigned char 
  6879 ;;  status          1   37[COMRAM] enum E7146
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6889 ;;      Params:         0       0       0       0       0       0       0
  6890 ;;      Locals:         2       0       0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0
  6892 ;;      Totals:         2       0       0       0       0       0       0
  6893 ;;Total ram usage:        2 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    6
  6896 ;; This function calls:
  6897 ;;		_I2C1_MasterWrite
  6898 ;; This function is called by:
  6899 ;;		_oledGotoYX
  6900 ;;		_OLED_init
  6901 ;;		_Display
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text29
  6906  002020                     __ptext29:
  6907                           	opt stack 0
  6908  002020                     _OLED_command:
  6909                           	opt stack 22
  6910                           
  6911                           ;incstack = 0
  6912                           ;OLED_command@com stored from wreg
  6913  002020  6E25               	movwf	OLED_command@com,c
  6914                           
  6915                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  6916  002022  0E80               	movlw	128
  6917  002024  0100               	movlb	0	; () banked
  6918  002026  6FA9               	movwf	_Buff& (0+255),b
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;OLED_Display.c: 14: Buff[1] = com;
  6922  002028  C025  F0AA         	movff	OLED_command@com,_Buff+1
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  6926  00202C  0E02               	movlw	2
  6927  00202E  6E26               	movwf	OLED_command@status,c
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;OLED_Display.c: 17: timeOut = 0;
  6931  002030  0E00               	movlw	0
  6932  002032  0100               	movlb	0	; () banked
  6933  002034  6F98               	movwf	(_timeOut+1)& (0+255),b
  6934  002036  0E00               	movlw	0
  6935  002038  6F97               	movwf	_timeOut& (0+255),b
  6936                           
  6937                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  6938  00203A  D02C               	goto	l5949
  6939  00203C                     l5929:
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  6943                           ;OLED_Display.c: 21: 2,
  6944                           ;OLED_Display.c: 22: 0x3C,
  6945                           ;OLED_Display.c: 23: &status);
  6946  00203C  0EA9               	movlw	low _Buff
  6947  00203E  0100               	movlb	0	; () banked
  6948  002040  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  6949  002042  0E00               	movlw	high _Buff
  6950  002044  0100               	movlb	0	; () banked
  6951  002046  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  6952  002048  0E00               	movlw	0
  6953  00204A  0100               	movlb	0	; () banked
  6954  00204C  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  6955  00204E  0E02               	movlw	2
  6956  002050  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  6957  002052  0E00               	movlw	0
  6958  002054  0100               	movlb	0	; () banked
  6959  002056  6FB0               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  6960  002058  0E3C               	movlw	60
  6961  00205A  6FAF               	movwf	I2C1_MasterWrite@address& (0+255),b
  6962  00205C  0E26               	movlw	low OLED_command@status
  6963  00205E  0100               	movlb	0	; () banked
  6964  002060  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  6965  002062  0E00               	movlw	high OLED_command@status
  6966  002064  0100               	movlb	0	; () banked
  6967  002066  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  6968  002068  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  6969  00206C                     l5931:
  6970  00206C  0E02               	movlw	2
  6971  00206E  1826               	xorwf	OLED_command@status,w,c
  6972  002070  B4D8               	btfsc	status,2,c
  6973  002072  D7FC               	goto	l5931
  6974                           
  6975                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  6976  002074  5026               	movf	OLED_command@status,w,c
  6977  002076  B4D8               	btfsc	status,2,c
  6978  002078  0012               	return	
  6979                           
  6980                           ;OLED_Display.c: 30: if (timeOut == 2)
  6981                           
  6982                           ;OLED_Display.c: 29: break;
  6983  00207A  0E02               	movlw	2
  6984  00207C  0100               	movlb	0	; () banked
  6985  00207E  1997               	xorwf	_timeOut& (0+255),w,b
  6986  002080  0100               	movlb	0	; () banked
  6987  002082  1198               	iorwf	(_timeOut+1)& (0+255),w,b
  6988  002084  B4D8               	btfsc	status,2,c
  6989  002086  0012               	return	
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  6993                           
  6994                           ; BSR set to: 0
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;OLED_Display.c: 31: break;
  6998  002088  0426               	decf	OLED_command@status,w,c
  6999  00208A  B4D8               	btfsc	status,2,c
  7000  00208C  0012               	return	
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;OLED_Display.c: 34: else
  7004                           ;OLED_Display.c: 35: timeOut++;
  7005                           
  7006                           ; BSR set to: 0
  7007                           
  7008                           ; BSR set to: 0
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;OLED_Display.c: 33: break;
  7012  00208E  0100               	movlb	0	; () banked
  7013  002090  4B97               	infsnz	_timeOut& (0+255),f,b
  7014  002092  2B98               	incf	(_timeOut+1)& (0+255),f,b
  7015  002094                     l5949:
  7016                           
  7017                           ; BSR set to: 0
  7018  002094  0426               	decf	OLED_command@status,w,c
  7019  002096  B4D8               	btfsc	status,2,c
  7020  002098  0012               	return	
  7021  00209A  D7D0               	goto	l5929
  7022  00209C                     __end_of_OLED_command:
  7023                           	opt stack 0
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           indf0	equ	0xFEF
  7032                           postinc0	equ	0xFEE
  7033                           fsr0h	equ	0xFEA
  7034                           fsr0l	equ	0xFE9
  7035                           wreg	equ	0xFE8
  7036                           indf1	equ	0xFE7
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           indf2	equ	0xFDF
  7040                           postinc2	equ	0xFDE
  7041                           postdec2	equ	0xFDD
  7042                           plusw2	equ	0xFDB
  7043                           fsr2h	equ	0xFDA
  7044                           fsr2l	equ	0xFD9
  7045                           status	equ	0xFD8
  7046                           
  7047 ;; *************** function _SYSTEM_Initialize *****************
  7048 ;; Defined at:
  7049 ;;		line 112 in file "mcc_generated_files/mcc.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7063 ;;      Params:         0       0       0       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0
  7066 ;;      Totals:         0       0       0       0       0       0       0
  7067 ;;Total ram usage:        0 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    7
  7070 ;; This function calls:
  7071 ;;		_ADC_Initialize
  7072 ;;		_EUSART1_Initialize
  7073 ;;		_I2C1_Initialize
  7074 ;;		_INTERRUPT_Initialize
  7075 ;;		_OSCILLATOR_Initialize
  7076 ;;		_PIN_MANAGER_Initialize
  7077 ;;		_TMR0_Initialize
  7078 ;;		_TMR2_Initialize
  7079 ;; This function is called by:
  7080 ;;		_main
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text30
  7085  0025EC                     __ptext30:
  7086                           	opt stack 0
  7087  0025EC                     _SYSTEM_Initialize:
  7088                           	opt stack 23
  7089                           
  7090                           ;mcc.c: 114: OSCILLATOR_Initialize();
  7091                           
  7092                           ;incstack = 0
  7093  0025EC  EC93  F013         	call	_OSCILLATOR_Initialize	;wreg free
  7094                           
  7095                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  7096  0025F0  EC4E  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  7097                           
  7098                           ;mcc.c: 116: INTERRUPT_Initialize();
  7099  0025F4  EC83  F013         	call	_INTERRUPT_Initialize	;wreg free
  7100                           
  7101                           ;mcc.c: 117: ADC_Initialize();
  7102  0025F8  EC56  F013         	call	_ADC_Initialize	;wreg free
  7103                           
  7104                           ;mcc.c: 118: TMR0_Initialize();
  7105  0025FC  EC29  F013         	call	_TMR0_Initialize	;wreg free
  7106                           
  7107                           ;mcc.c: 119: TMR2_Initialize();
  7108  002600  EC07  F013         	call	_TMR2_Initialize	;wreg free
  7109                           
  7110                           ;mcc.c: 120: EUSART1_Initialize();
  7111  002604  EC09  F012         	call	_EUSART1_Initialize	;wreg free
  7112                           
  7113                           ;mcc.c: 121: I2C1_Initialize();
  7114  002608  EC8D  F012         	call	_I2C1_Initialize	;wreg free
  7115  00260C  0012               	return		;funcret
  7116  00260E                     __end_of_SYSTEM_Initialize:
  7117                           	opt stack 0
  7118                           tblptru	equ	0xFF8
  7119                           tblptrh	equ	0xFF7
  7120                           tblptrl	equ	0xFF6
  7121                           tablat	equ	0xFF5
  7122                           prodh	equ	0xFF4
  7123                           prodl	equ	0xFF3
  7124                           intcon	equ	0xFF2
  7125                           indf0	equ	0xFEF
  7126                           postinc0	equ	0xFEE
  7127                           fsr0h	equ	0xFEA
  7128                           fsr0l	equ	0xFE9
  7129                           wreg	equ	0xFE8
  7130                           indf1	equ	0xFE7
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           indf2	equ	0xFDF
  7134                           postinc2	equ	0xFDE
  7135                           postdec2	equ	0xFDD
  7136                           plusw2	equ	0xFDB
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           
  7141 ;; *************** function _TMR2_Initialize *****************
  7142 ;; Defined at:
  7143 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7157 ;;      Params:         0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    5
  7164 ;; This function calls:
  7165 ;;		_TMR2_SetInterruptHandler
  7166 ;;		_TMR2_StartTimer
  7167 ;; This function is called by:
  7168 ;;		_SYSTEM_Initialize
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text31
  7173  00260E                     __ptext31:
  7174                           	opt stack 0
  7175  00260E                     _TMR2_Initialize:
  7176                           	opt stack 24
  7177                           
  7178                           ;tmr2.c: 67: T2CON = 0x7E;
  7179                           
  7180                           ;incstack = 0
  7181  00260E  0E7E               	movlw	126
  7182  002610  6EBA               	movwf	4026,c	;volatile
  7183                           
  7184                           ;tmr2.c: 70: PR2 = 0x30;
  7185  002612  0E30               	movlw	48
  7186  002614  6EBB               	movwf	4027,c	;volatile
  7187                           
  7188                           ;tmr2.c: 73: TMR2 = 0x00;
  7189  002616  0E00               	movlw	0
  7190  002618  6EBC               	movwf	4028,c	;volatile
  7191                           
  7192                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  7193  00261A  929E               	bcf	3998,1,c	;volatile
  7194                           
  7195                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  7196  00261C  829D               	bsf	3997,1,c	;volatile
  7197                           
  7198                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  7199  00261E  0E84               	movlw	low _TMR2_DefaultInterruptHandler
  7200  002620  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  7201  002622  0E27               	movlw	high _TMR2_DefaultInterruptHandler
  7202  002624  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  7203  002626  EC9F  F013         	call	_TMR2_SetInterruptHandler	;wreg free
  7204                           
  7205                           ;tmr2.c: 85: TMR2_StartTimer();
  7206  00262A  ECBC  F013         	call	_TMR2_StartTimer	;wreg free
  7207  00262E  0012               	return		;funcret
  7208  002630                     __end_of_TMR2_Initialize:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           intcon	equ	0xFF2
  7217                           indf0	equ	0xFEF
  7218                           postinc0	equ	0xFEE
  7219                           fsr0h	equ	0xFEA
  7220                           fsr0l	equ	0xFE9
  7221                           wreg	equ	0xFE8
  7222                           indf1	equ	0xFE7
  7223                           fsr1h	equ	0xFE2
  7224                           fsr1l	equ	0xFE1
  7225                           indf2	equ	0xFDF
  7226                           postinc2	equ	0xFDE
  7227                           postdec2	equ	0xFDD
  7228                           plusw2	equ	0xFDB
  7229                           fsr2h	equ	0xFDA
  7230                           fsr2l	equ	0xFD9
  7231                           status	equ	0xFD8
  7232                           
  7233 ;; *************** function _TMR2_StartTimer *****************
  7234 ;; Defined at:
  7235 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		None
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7249 ;;      Params:         0       0       0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    4
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_TMR2_Initialize
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text32
  7264  002778                     __ptext32:
  7265                           	opt stack 0
  7266  002778                     _TMR2_StartTimer:
  7267                           	opt stack 24
  7268                           
  7269                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  7270                           
  7271                           ;incstack = 0
  7272  002778  84BA               	bsf	4026,2,c	;volatile
  7273  00277A  0012               	return		;funcret
  7274  00277C                     __end_of_TMR2_StartTimer:
  7275                           	opt stack 0
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           prodh	equ	0xFF4
  7281                           prodl	equ	0xFF3
  7282                           intcon	equ	0xFF2
  7283                           indf0	equ	0xFEF
  7284                           postinc0	equ	0xFEE
  7285                           fsr0h	equ	0xFEA
  7286                           fsr0l	equ	0xFE9
  7287                           wreg	equ	0xFE8
  7288                           indf1	equ	0xFE7
  7289                           fsr1h	equ	0xFE2
  7290                           fsr1l	equ	0xFE1
  7291                           indf2	equ	0xFDF
  7292                           postinc2	equ	0xFDE
  7293                           postdec2	equ	0xFDD
  7294                           plusw2	equ	0xFDB
  7295                           fsr2h	equ	0xFDA
  7296                           fsr2l	equ	0xFD9
  7297                           status	equ	0xFD8
  7298                           
  7299 ;; *************** function _TMR2_SetInterruptHandler *****************
  7300 ;; Defined at:
  7301 ;;		line 291 in file "mcc_generated_files/tmr2.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  InterruptHan    2   26[COMRAM] PTR void 
  7304 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7316 ;;      Params:         2       0       0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0
  7319 ;;      Totals:         2       0       0       0       0       0       0
  7320 ;;Total ram usage:        2 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    4
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_TMR2_Initialize
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text33
  7331  00273E                     __ptext33:
  7332                           	opt stack 0
  7333  00273E                     _TMR2_SetInterruptHandler:
  7334                           	opt stack 24
  7335                           
  7336                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  7337                           
  7338                           ;incstack = 0
  7339  00273E  C01B  F0D2         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  7340  002742  C01C  F0D3         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  7341  002746  0012               	return		;funcret
  7342  002748                     __end_of_TMR2_SetInterruptHandler:
  7343                           	opt stack 0
  7344                           tblptru	equ	0xFF8
  7345                           tblptrh	equ	0xFF7
  7346                           tblptrl	equ	0xFF6
  7347                           tablat	equ	0xFF5
  7348                           prodh	equ	0xFF4
  7349                           prodl	equ	0xFF3
  7350                           intcon	equ	0xFF2
  7351                           indf0	equ	0xFEF
  7352                           postinc0	equ	0xFEE
  7353                           fsr0h	equ	0xFEA
  7354                           fsr0l	equ	0xFE9
  7355                           wreg	equ	0xFE8
  7356                           indf1	equ	0xFE7
  7357                           fsr1h	equ	0xFE2
  7358                           fsr1l	equ	0xFE1
  7359                           indf2	equ	0xFDF
  7360                           postinc2	equ	0xFDE
  7361                           postdec2	equ	0xFDD
  7362                           plusw2	equ	0xFDB
  7363                           fsr2h	equ	0xFDA
  7364                           fsr2l	equ	0xFD9
  7365                           status	equ	0xFD8
  7366                           
  7367 ;; *************** function _TMR0_Initialize *****************
  7368 ;; Defined at:
  7369 ;;		line 23 in file "mcc_generated_files/tmr0.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;		None
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;		None
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7383 ;;      Params:         0       0       0       0       0       0       0
  7384 ;;      Locals:         0       0       0       0       0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0
  7386 ;;      Totals:         0       0       0       0       0       0       0
  7387 ;;Total ram usage:        0 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    5
  7390 ;; This function calls:
  7391 ;;		_TMR0_StartTimer
  7392 ;; This function is called by:
  7393 ;;		_SYSTEM_Initialize
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text34
  7398  002652                     __ptext34:
  7399                           	opt stack 0
  7400  002652                     _TMR0_Initialize:
  7401                           	opt stack 24
  7402                           
  7403                           ;tmr0.c: 27: T0CON = 0x94;
  7404                           
  7405                           ;incstack = 0
  7406  002652  0E94               	movlw	148
  7407  002654  6ED5               	movwf	4053,c	;volatile
  7408                           
  7409                           ;tmr0.c: 30: TMR0H = 0xCF;
  7410  002656  0ECF               	movlw	207
  7411  002658  6ED7               	movwf	4055,c	;volatile
  7412                           
  7413                           ;tmr0.c: 33: TMR0L = 0x2C;
  7414  00265A  0E2C               	movlw	44
  7415  00265C  6ED6               	movwf	4054,c	;volatile
  7416                           
  7417                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  7418  00265E  0ECF               	movlw	207
  7419  002660  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  7420  002662  0E2C               	movlw	44
  7421  002664  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  7422                           
  7423                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  7424  002666  94F2               	bcf	intcon,2,c	;volatile
  7425                           
  7426                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  7427  002668  8AF2               	bsf	intcon,5,c	;volatile
  7428                           
  7429                           ;tmr0.c: 45: TMR0_StartTimer();
  7430  00266A  ECBE  F013         	call	_TMR0_StartTimer	;wreg free
  7431  00266E  0012               	return		;funcret
  7432  002670                     __end_of_TMR0_Initialize:
  7433                           	opt stack 0
  7434                           tblptru	equ	0xFF8
  7435                           tblptrh	equ	0xFF7
  7436                           tblptrl	equ	0xFF6
  7437                           tablat	equ	0xFF5
  7438                           prodh	equ	0xFF4
  7439                           prodl	equ	0xFF3
  7440                           intcon	equ	0xFF2
  7441                           indf0	equ	0xFEF
  7442                           postinc0	equ	0xFEE
  7443                           fsr0h	equ	0xFEA
  7444                           fsr0l	equ	0xFE9
  7445                           wreg	equ	0xFE8
  7446                           indf1	equ	0xFE7
  7447                           fsr1h	equ	0xFE2
  7448                           fsr1l	equ	0xFE1
  7449                           indf2	equ	0xFDF
  7450                           postinc2	equ	0xFDE
  7451                           postdec2	equ	0xFDD
  7452                           plusw2	equ	0xFDB
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8
  7456                           
  7457 ;; *************** function _TMR0_StartTimer *****************
  7458 ;; Defined at:
  7459 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		None
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7473 ;;      Params:         0       0       0       0       0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0
  7476 ;;      Totals:         0       0       0       0       0       0       0
  7477 ;;Total ram usage:        0 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    4
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_TMR0_Initialize
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text35
  7488  00277C                     __ptext35:
  7489                           	opt stack 0
  7490  00277C                     _TMR0_StartTimer:
  7491                           	opt stack 24
  7492                           
  7493                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  7494                           
  7495                           ;incstack = 0
  7496  00277C  8ED5               	bsf	4053,7,c	;volatile
  7497  00277E  0012               	return		;funcret
  7498  002780                     __end_of_TMR0_StartTimer:
  7499                           	opt stack 0
  7500                           tblptru	equ	0xFF8
  7501                           tblptrh	equ	0xFF7
  7502                           tblptrl	equ	0xFF6
  7503                           tablat	equ	0xFF5
  7504                           prodh	equ	0xFF4
  7505                           prodl	equ	0xFF3
  7506                           intcon	equ	0xFF2
  7507                           indf0	equ	0xFEF
  7508                           postinc0	equ	0xFEE
  7509                           fsr0h	equ	0xFEA
  7510                           fsr0l	equ	0xFE9
  7511                           wreg	equ	0xFE8
  7512                           indf1	equ	0xFE7
  7513                           fsr1h	equ	0xFE2
  7514                           fsr1l	equ	0xFE1
  7515                           indf2	equ	0xFDF
  7516                           postinc2	equ	0xFDE
  7517                           postdec2	equ	0xFDD
  7518                           plusw2	equ	0xFDB
  7519                           fsr2h	equ	0xFDA
  7520                           fsr2l	equ	0xFD9
  7521                           status	equ	0xFD8
  7522                           
  7523 ;; *************** function _PIN_MANAGER_Initialize *****************
  7524 ;; Defined at:
  7525 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7539 ;;      Params:         0       0       0       0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0
  7542 ;;      Totals:         0       0       0       0       0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    4
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_SYSTEM_Initialize
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text36
  7554  00209C                     __ptext36:
  7555                           	opt stack 0
  7556  00209C                     _PIN_MANAGER_Initialize:
  7557                           	opt stack 25
  7558                           
  7559                           ;pin_manager.c: 52: LATA = 0x00;
  7560                           
  7561                           ;incstack = 0
  7562  00209C  0E00               	movlw	0
  7563  00209E  6E89               	movwf	3977,c	;volatile
  7564                           
  7565                           ;pin_manager.c: 53: TRISA = 0xF7;
  7566  0020A0  0EF7               	movlw	247
  7567  0020A2  6E92               	movwf	3986,c	;volatile
  7568                           
  7569                           ;pin_manager.c: 54: ANSELA = 0x20;
  7570  0020A4  0E20               	movlw	32
  7571  0020A6  010F               	movlb	15	; () banked
  7572  0020A8  6F38               	movwf	56,b	;volatile
  7573                           
  7574                           ;pin_manager.c: 56: LATB = 0x00;
  7575  0020AA  0E00               	movlw	0
  7576  0020AC  6E8A               	movwf	3978,c	;volatile
  7577                           
  7578                           ;pin_manager.c: 57: TRISB = 0xD7;
  7579  0020AE  0ED7               	movlw	215
  7580  0020B0  6E93               	movwf	3987,c	;volatile
  7581                           
  7582                           ;pin_manager.c: 58: ANSELB = 0x00;
  7583  0020B2  0E00               	movlw	0
  7584  0020B4  010F               	movlb	15	; () banked
  7585  0020B6  6F39               	movwf	57,b	;volatile
  7586                           
  7587                           ;pin_manager.c: 59: WPUB = 0x00;
  7588  0020B8  0E00               	movlw	0
  7589  0020BA  6E61               	movwf	3937,c	;volatile
  7590                           
  7591                           ;pin_manager.c: 61: LATC = 0x18;
  7592  0020BC  0E18               	movlw	24
  7593  0020BE  6E8B               	movwf	3979,c	;volatile
  7594                           
  7595                           ;pin_manager.c: 62: TRISC = 0xDF;
  7596  0020C0  0EDF               	movlw	223
  7597  0020C2  6E94               	movwf	3988,c	;volatile
  7598                           
  7599                           ;pin_manager.c: 65: LATD = 0x00;
  7600  0020C4  0E00               	movlw	0
  7601  0020C6  6E8C               	movwf	3980,c	;volatile
  7602                           
  7603                           ;pin_manager.c: 66: TRISD = 0xFD;
  7604  0020C8  0EFD               	movlw	253
  7605  0020CA  6E95               	movwf	3989,c	;volatile
  7606                           
  7607                           ;pin_manager.c: 67: ANSELD = 0xDD;
  7608  0020CC  0EDD               	movlw	221
  7609  0020CE  010F               	movlb	15	; () banked
  7610  0020D0  6F3B               	movwf	59,b	;volatile
  7611                           
  7612                           ;pin_manager.c: 69: LATE = 0x00;
  7613  0020D2  0E00               	movlw	0
  7614  0020D4  6E8D               	movwf	3981,c	;volatile
  7615                           
  7616                           ;pin_manager.c: 70: TRISE = 0x00;
  7617  0020D6  0E00               	movlw	0
  7618  0020D8  6E96               	movwf	3990,c	;volatile
  7619                           
  7620                           ;pin_manager.c: 71: ANSELE = 0x00;
  7621  0020DA  0E00               	movlw	0
  7622  0020DC  010F               	movlb	15	; () banked
  7623  0020DE  6F3C               	movwf	60,b	;volatile
  7624                           
  7625                           ;pin_manager.c: 73: ANSELC = 0xE4;
  7626  0020E0  0EE4               	movlw	228
  7627  0020E2  010F               	movlb	15	; () banked
  7628  0020E4  6F3A               	movwf	58,b	;volatile
  7629                           
  7630                           ; BSR set to: 15
  7631                           ;pin_manager.c: 76: TRISCbits.RC5 = 0;
  7632  0020E6  9A94               	bcf	3988,5,c	;volatile
  7633                           
  7634                           ; BSR set to: 15
  7635                           ;pin_manager.c: 77: ANSELCbits.ANSC5 = 0;
  7636  0020E8  010F               	movlb	15	; () banked
  7637  0020EA  9B3A               	bcf	58,5,b	;volatile
  7638                           
  7639                           ; BSR set to: 15
  7640                           ;pin_manager.c: 78: LATCbits.LATC5 = 0;
  7641  0020EC  9A8B               	bcf	3979,5,c	;volatile
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;pin_manager.c: 80: TRISCbits.TRISC5=0;
  7645  0020EE  9A94               	bcf	3988,5,c	;volatile
  7646                           
  7647                           ; BSR set to: 15
  7648                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 0x01;
  7649  0020F0  8EF1               	bsf	intcon2,7,c	;volatile
  7650                           
  7651                           ; BSR set to: 15
  7652                           ;pin_manager.c: 84: TRISAbits.RA3 = 0;
  7653  0020F2  9692               	bcf	3986,3,c	;volatile
  7654                           
  7655                           ; BSR set to: 15
  7656                           ;pin_manager.c: 85: ANSELAbits.ANSA3 = 0;
  7657  0020F4  010F               	movlb	15	; () banked
  7658  0020F6  9738               	bcf	56,3,b	;volatile
  7659                           
  7660                           ; BSR set to: 15
  7661                           ;pin_manager.c: 88: TRISCbits.RC6 = 0;
  7662  0020F8  9C94               	bcf	3988,6,c	;volatile
  7663                           
  7664                           ; BSR set to: 15
  7665                           ;pin_manager.c: 89: TRISCbits.RC7 = 1;
  7666  0020FA  8E94               	bsf	3988,7,c	;volatile
  7667                           
  7668                           ; BSR set to: 15
  7669                           ;pin_manager.c: 90: ANSELCbits.ANSC6 = 0;
  7670  0020FC  010F               	movlb	15	; () banked
  7671  0020FE  9D3A               	bcf	58,6,b	;volatile
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;pin_manager.c: 91: ANSELCbits.ANSC7 = 0;
  7675  002100  010F               	movlb	15	; () banked
  7676  002102  9F3A               	bcf	58,7,b	;volatile
  7677                           
  7678                           ; BSR set to: 15
  7679                           
  7680                           ; BSR set to: 15
  7681                           
  7682                           ;pin_manager.c: 93: do { TRISA6 = 0; } while(0);
  7683  002104  9C92               	bcf	3986,6,c	;volatile
  7684                           
  7685                           ; BSR set to: 15
  7686                           
  7687                           ; BSR set to: 15
  7688                           
  7689                           ;pin_manager.c: 94: do { TRISC1 = 0; } while(0);
  7690                           
  7691                           ; BSR set to: 15
  7692  002106  9294               	bcf	3988,1,c	;volatile
  7693                           
  7694                           ; BSR set to: 15
  7695                           ;pin_manager.c: 95: LATA6 = 0;
  7696                           
  7697                           ; BSR set to: 15
  7698  002108  9C89               	bcf	3977,6,c	;volatile
  7699                           
  7700                           ; BSR set to: 15
  7701                           ;pin_manager.c: 96: LATC1 = 0;
  7702  00210A  928B               	bcf	3979,1,c	;volatile
  7703                           
  7704                           ; BSR set to: 15
  7705  00210C  0012               	return		;funcret
  7706  00210E                     __end_of_PIN_MANAGER_Initialize:
  7707                           	opt stack 0
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           prodh	equ	0xFF4
  7713                           prodl	equ	0xFF3
  7714                           intcon	equ	0xFF2
  7715                           intcon2	equ	0xFF1
  7716                           indf0	equ	0xFEF
  7717                           postinc0	equ	0xFEE
  7718                           fsr0h	equ	0xFEA
  7719                           fsr0l	equ	0xFE9
  7720                           wreg	equ	0xFE8
  7721                           indf1	equ	0xFE7
  7722                           fsr1h	equ	0xFE2
  7723                           fsr1l	equ	0xFE1
  7724                           indf2	equ	0xFDF
  7725                           postinc2	equ	0xFDE
  7726                           postdec2	equ	0xFDD
  7727                           plusw2	equ	0xFDB
  7728                           fsr2h	equ	0xFDA
  7729                           fsr2l	equ	0xFD9
  7730                           status	equ	0xFD8
  7731                           
  7732 ;; *************** function _OSCILLATOR_Initialize *****************
  7733 ;; Defined at:
  7734 ;;		line 124 in file "mcc_generated_files/mcc.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;		None
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7748 ;;      Params:         0       0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0
  7751 ;;      Totals:         0       0       0       0       0       0       0
  7752 ;;Total ram usage:        0 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    4
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_SYSTEM_Initialize
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text37
  7763  002726                     __ptext37:
  7764                           	opt stack 0
  7765  002726                     _OSCILLATOR_Initialize:
  7766                           	opt stack 25
  7767                           
  7768                           ;mcc.c: 127: OSCCON = 0x72;
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;incstack = 0
  7772  002726  0E72               	movlw	114
  7773  002728  6ED3               	movwf	4051,c	;volatile
  7774                           
  7775                           ;mcc.c: 129: OSCCON2 = 0x04;
  7776  00272A  0E04               	movlw	4
  7777  00272C  6ED2               	movwf	4050,c	;volatile
  7778                           
  7779                           ;mcc.c: 131: OSCTUNE = 0x00;
  7780  00272E  0E00               	movlw	0
  7781  002730  6E9B               	movwf	3995,c	;volatile
  7782  002732  0012               	return		;funcret
  7783  002734                     __end_of_OSCILLATOR_Initialize:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           prodh	equ	0xFF4
  7790                           prodl	equ	0xFF3
  7791                           intcon	equ	0xFF2
  7792                           intcon2	equ	0xFF1
  7793                           indf0	equ	0xFEF
  7794                           postinc0	equ	0xFEE
  7795                           fsr0h	equ	0xFEA
  7796                           fsr0l	equ	0xFE9
  7797                           wreg	equ	0xFE8
  7798                           indf1	equ	0xFE7
  7799                           fsr1h	equ	0xFE2
  7800                           fsr1l	equ	0xFE1
  7801                           indf2	equ	0xFDF
  7802                           postinc2	equ	0xFDE
  7803                           postdec2	equ	0xFDD
  7804                           plusw2	equ	0xFDB
  7805                           fsr2h	equ	0xFDA
  7806                           fsr2l	equ	0xFD9
  7807                           status	equ	0xFD8
  7808                           
  7809 ;; *************** function _INTERRUPT_Initialize *****************
  7810 ;; Defined at:
  7811 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		None
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7825 ;;      Params:         0       0       0       0       0       0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0
  7828 ;;      Totals:         0       0       0       0       0       0       0
  7829 ;;Total ram usage:        0 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    4
  7832 ;; This function calls:
  7833 ;;		Nothing
  7834 ;; This function is called by:
  7835 ;;		_SYSTEM_Initialize
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text38
  7840  002706                     __ptext38:
  7841                           	opt stack 0
  7842  002706                     _INTERRUPT_Initialize:
  7843                           	opt stack 25
  7844                           
  7845                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
  7846                           
  7847                           ;incstack = 0
  7848  002706  9ED0               	bcf	4048,7,c	;volatile
  7849                           
  7850                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
  7851  002708  9A9F               	bcf	3999,5,c	;volatile
  7852                           
  7853                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
  7854  00270A  989F               	bcf	3999,4,c	;volatile
  7855                           
  7856                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
  7857  00270C  94F1               	bcf	intcon2,2,c	;volatile
  7858                           
  7859                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
  7860  00270E  9C9F               	bcf	3999,6,c	;volatile
  7861                           
  7862                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
  7863  002710  969F               	bcf	3999,3,c	;volatile
  7864                           
  7865                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
  7866  002712  96A2               	bcf	4002,3,c	;volatile
  7867                           
  7868                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
  7869  002714  929F               	bcf	3999,1,c	;volatile
  7870  002716  0012               	return		;funcret
  7871  002718                     __end_of_INTERRUPT_Initialize:
  7872                           	opt stack 0
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           prodh	equ	0xFF4
  7878                           prodl	equ	0xFF3
  7879                           intcon	equ	0xFF2
  7880                           intcon2	equ	0xFF1
  7881                           indf0	equ	0xFEF
  7882                           postinc0	equ	0xFEE
  7883                           fsr0h	equ	0xFEA
  7884                           fsr0l	equ	0xFE9
  7885                           wreg	equ	0xFE8
  7886                           indf1	equ	0xFE7
  7887                           fsr1h	equ	0xFE2
  7888                           fsr1l	equ	0xFE1
  7889                           indf2	equ	0xFDF
  7890                           postinc2	equ	0xFDE
  7891                           postdec2	equ	0xFDD
  7892                           plusw2	equ	0xFDB
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function _I2C1_Initialize *****************
  7898 ;; Defined at:
  7899 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;		None
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;		None
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, status,2, status,0
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7913 ;;      Params:         0       0       0       0       0       0       0
  7914 ;;      Locals:         0       0       0       0       0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0       0
  7916 ;;      Totals:         0       0       0       0       0       0       0
  7917 ;;Total ram usage:        0 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; Hardware stack levels required when called:    4
  7920 ;; This function calls:
  7921 ;;		Nothing
  7922 ;; This function is called by:
  7923 ;;		_SYSTEM_Initialize
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text39
  7928  00251A                     __ptext39:
  7929                           	opt stack 0
  7930  00251A                     _I2C1_Initialize:
  7931                           	opt stack 25
  7932                           
  7933                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  7934                           
  7935                           ;incstack = 0
  7936  00251A  0EA4               	movlw	low _i2c1_tr_queue
  7937  00251C  6E2E               	movwf	_i2c1_object+2,c
  7938  00251E  0E00               	movlw	high _i2c1_tr_queue
  7939  002520  6E2F               	movwf	_i2c1_object+3,c
  7940                           
  7941                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  7942  002522  0EA4               	movlw	low _i2c1_tr_queue
  7943  002524  6E2C               	movwf	_i2c1_object,c
  7944  002526  0E00               	movlw	high _i2c1_tr_queue
  7945  002528  6E2D               	movwf	_i2c1_object+1,c
  7946                           
  7947                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  7948  00252A  8230               	bsf	_i2c1_object+4,1,c
  7949                           
  7950                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  7951  00252C  9030               	bcf	_i2c1_object+4,0,c
  7952                           
  7953                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  7954  00252E  0E00               	movlw	0
  7955  002530  6E32               	movwf	_i2c1_object+6,c
  7956                           
  7957                           ;i2c1.c: 161: SSP1STAT = 0x80;
  7958  002532  0E80               	movlw	128
  7959  002534  6EC7               	movwf	4039,c	;volatile
  7960                           
  7961                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  7962  002536  0E28               	movlw	40
  7963  002538  6EC6               	movwf	4038,c	;volatile
  7964                           
  7965                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  7966  00253A  0E00               	movlw	0
  7967  00253C  6ECB               	movwf	4043,c	;volatile
  7968                           
  7969                           ;i2c1.c: 167: SSP1ADD = 0x03;
  7970  00253E  0E03               	movlw	3
  7971  002540  6EC8               	movwf	4040,c	;volatile
  7972                           
  7973                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  7974  002542  969E               	bcf	3998,3,c	;volatile
  7975                           
  7976                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  7977  002544  869D               	bsf	3997,3,c	;volatile
  7978  002546  0012               	return		;funcret
  7979  002548                     __end_of_I2C1_Initialize:
  7980                           	opt stack 0
  7981                           tblptru	equ	0xFF8
  7982                           tblptrh	equ	0xFF7
  7983                           tblptrl	equ	0xFF6
  7984                           tablat	equ	0xFF5
  7985                           prodh	equ	0xFF4
  7986                           prodl	equ	0xFF3
  7987                           intcon	equ	0xFF2
  7988                           intcon2	equ	0xFF1
  7989                           indf0	equ	0xFEF
  7990                           postinc0	equ	0xFEE
  7991                           fsr0h	equ	0xFEA
  7992                           fsr0l	equ	0xFE9
  7993                           wreg	equ	0xFE8
  7994                           indf1	equ	0xFE7
  7995                           fsr1h	equ	0xFE2
  7996                           fsr1l	equ	0xFE1
  7997                           indf2	equ	0xFDF
  7998                           postinc2	equ	0xFDE
  7999                           postdec2	equ	0xFDD
  8000                           plusw2	equ	0xFDB
  8001                           fsr2h	equ	0xFDA
  8002                           fsr2l	equ	0xFD9
  8003                           status	equ	0xFD8
  8004                           
  8005 ;; *************** function _EUSART1_Initialize *****************
  8006 ;; Defined at:
  8007 ;;		line 21 in file "UART.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8021 ;;      Params:         0       0       0       0       0       0       0
  8022 ;;      Locals:         0       0       0       0       0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0       0
  8024 ;;      Totals:         0       0       0       0       0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    6
  8028 ;; This function calls:
  8029 ;;		_UART_buff_init
  8030 ;; This function is called by:
  8031 ;;		_SYSTEM_Initialize
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text40
  8036  002412                     __ptext40:
  8037                           	opt stack 0
  8038  002412                     _EUSART1_Initialize:
  8039                           	opt stack 23
  8040                           
  8041                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  8042                           
  8043                           ;incstack = 0
  8044  002412  9A9D               	bcf	3997,5,c	;volatile
  8045                           
  8046                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  8047  002414  989D               	bcf	3997,4,c	;volatile
  8048                           
  8049                           ;UART.c: 29: BAUD1CON = 0x48;
  8050  002416  0E48               	movlw	72
  8051  002418  6EB8               	movwf	4024,c	;volatile
  8052                           
  8053                           ;UART.c: 32: RC1STA = 0x98;
  8054  00241A  0E98               	movlw	152
  8055  00241C  6EAB               	movwf	4011,c	;volatile
  8056                           
  8057                           ;UART.c: 35: TX1STA = 0x26;
  8058  00241E  0E26               	movlw	38
  8059  002420  6EAC               	movwf	4012,c	;volatile
  8060                           
  8061                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  8062  002422  0E67               	movlw	103
  8063  002424  6EAF               	movwf	4015,c	;volatile
  8064                           
  8065                           ;UART.c: 41: SPBRGH1 = 0x00;
  8066  002426  0E00               	movlw	0
  8067  002428  6EB0               	movwf	4016,c	;volatile
  8068                           
  8069                           ;UART.c: 44: TXREG1 = 0x00;
  8070  00242A  0E00               	movlw	0
  8071  00242C  6EAD               	movwf	4013,c	;volatile
  8072                           
  8073                           ;UART.c: 47: RCREG1 = 0x00;
  8074  00242E  0E00               	movlw	0
  8075  002430  6EAE               	movwf	4014,c	;volatile
  8076                           
  8077                           ;UART.c: 49: UART_buff_init(&input_buffer);
  8078  002432  0E00               	movlw	low _input_buffer
  8079  002434  6E23               	movwf	UART_buff_init@_this,c
  8080  002436  0E02               	movlw	high _input_buffer
  8081  002438  6E24               	movwf	UART_buff_init@_this+1,c
  8082  00243A  EC38  F013         	call	_UART_buff_init	;wreg free
  8083                           
  8084                           ;UART.c: 50: UART_buff_init(&output_buffer);
  8085  00243E  0E00               	movlw	low _output_buffer
  8086  002440  6E23               	movwf	UART_buff_init@_this,c
  8087  002442  0E03               	movlw	high _output_buffer
  8088  002444  6E24               	movwf	UART_buff_init@_this+1,c
  8089  002446  EC38  F013         	call	_UART_buff_init	;wreg free
  8090                           
  8091                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  8092  00244A  8A9D               	bsf	3997,5,c	;volatile
  8093  00244C  0012               	return		;funcret
  8094  00244E                     __end_of_EUSART1_Initialize:
  8095                           	opt stack 0
  8096                           tblptru	equ	0xFF8
  8097                           tblptrh	equ	0xFF7
  8098                           tblptrl	equ	0xFF6
  8099                           tablat	equ	0xFF5
  8100                           prodh	equ	0xFF4
  8101                           prodl	equ	0xFF3
  8102                           intcon	equ	0xFF2
  8103                           intcon2	equ	0xFF1
  8104                           indf0	equ	0xFEF
  8105                           postinc0	equ	0xFEE
  8106                           fsr0h	equ	0xFEA
  8107                           fsr0l	equ	0xFE9
  8108                           wreg	equ	0xFE8
  8109                           indf1	equ	0xFE7
  8110                           fsr1h	equ	0xFE2
  8111                           fsr1l	equ	0xFE1
  8112                           indf2	equ	0xFDF
  8113                           postinc2	equ	0xFDE
  8114                           postdec2	equ	0xFDD
  8115                           plusw2	equ	0xFDB
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function _UART_buff_init *****************
  8121 ;; Defined at:
  8122 ;;		line 56 in file "UART.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  8125 ;;		 -> output_buffer(206), input_buffer(206), 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;		None
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8137 ;;      Params:         2       0       0       0       0       0       0
  8138 ;;      Locals:         0       0       0       0       0       0       0
  8139 ;;      Temps:          0       0       0       0       0       0       0
  8140 ;;      Totals:         2       0       0       0       0       0       0
  8141 ;;Total ram usage:        2 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:    5
  8144 ;; This function calls:
  8145 ;;		_memset
  8146 ;; This function is called by:
  8147 ;;		_EUSART1_Initialize
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text41
  8152  002670                     __ptext41:
  8153                           	opt stack 0
  8154  002670                     _UART_buff_init:
  8155                           	opt stack 23
  8156                           
  8157                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  8158                           
  8159                           ;incstack = 0
  8160  002670  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  8161  002674  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  8162  002678  0E00               	movlw	0
  8163  00267A  6E1E               	movwf	memset@c+1,c
  8164  00267C  0E00               	movlw	0
  8165  00267E  6E1D               	movwf	memset@c,c
  8166  002680  0E00               	movlw	0
  8167  002682  6E20               	movwf	memset@n+1,c
  8168  002684  0ECE               	movlw	206
  8169  002686  6E1F               	movwf	memset@n,c
  8170  002688  ECA4  F012         	call	_memset	;wreg free
  8171  00268C  0012               	return		;funcret
  8172  00268E                     __end_of_UART_buff_init:
  8173                           	opt stack 0
  8174                           tblptru	equ	0xFF8
  8175                           tblptrh	equ	0xFF7
  8176                           tblptrl	equ	0xFF6
  8177                           tablat	equ	0xFF5
  8178                           prodh	equ	0xFF4
  8179                           prodl	equ	0xFF3
  8180                           intcon	equ	0xFF2
  8181                           intcon2	equ	0xFF1
  8182                           indf0	equ	0xFEF
  8183                           postinc0	equ	0xFEE
  8184                           fsr0h	equ	0xFEA
  8185                           fsr0l	equ	0xFE9
  8186                           wreg	equ	0xFE8
  8187                           indf1	equ	0xFE7
  8188                           fsr1h	equ	0xFE2
  8189                           fsr1l	equ	0xFE1
  8190                           indf2	equ	0xFDF
  8191                           postinc2	equ	0xFDE
  8192                           postdec2	equ	0xFDD
  8193                           plusw2	equ	0xFDB
  8194                           fsr2h	equ	0xFDA
  8195                           fsr2l	equ	0xFD9
  8196                           status	equ	0xFD8
  8197                           
  8198 ;; *************** function _memset *****************
  8199 ;; Defined at:
  8200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  p1              2   26[COMRAM] PTR void 
  8203 ;;		 -> output_buffer(206), input_buffer(206), 
  8204 ;;  c               2   28[COMRAM] int 
  8205 ;;  n               2   30[COMRAM] unsigned int 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  p               2   32[COMRAM] PTR unsigned char 
  8208 ;;		 -> output_buffer(206), input_buffer(206), 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  2   26[COMRAM] PTR void 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8218 ;;      Params:         6       0       0       0       0       0       0
  8219 ;;      Locals:         2       0       0       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0
  8221 ;;      Totals:         8       0       0       0       0       0       0
  8222 ;;Total ram usage:        8 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    4
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_UART_buff_init
  8229 ;;		_UART_buff_flush
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text42
  8234  002548                     __ptext42:
  8235                           	opt stack 0
  8236  002548                     _memset:
  8237                           	opt stack 23
  8238                           
  8239                           ;incstack = 0
  8240  002548  C01B  F021         	movff	memset@p1,memset@p
  8241  00254C  C01C  F022         	movff	memset@p1+1,memset@p+1
  8242  002550  D008               	goto	l4069
  8243  002552                     l4065:
  8244  002552  C021  FFD9         	movff	memset@p,fsr2l
  8245  002556  C022  FFDA         	movff	memset@p+1,fsr2h
  8246  00255A  C01D  FFDF         	movff	memset@c,indf2
  8247  00255E  4A21               	infsnz	memset@p,f,c
  8248  002560  2A22               	incf	memset@p+1,f,c
  8249  002562                     l4069:
  8250  002562  061F               	decf	memset@n,f,c
  8251  002564  A0D8               	btfss	status,0,c
  8252  002566  0620               	decf	memset@n+1,f,c
  8253  002568  281F               	incf	memset@n,w,c
  8254  00256A  E1F3               	bnz	l4065
  8255  00256C  2820               	incf	memset@n+1,w,c
  8256  00256E  B4D8               	btfsc	status,2,c
  8257  002570  0012               	return	
  8258  002572  D7EF               	goto	l4065
  8259  002574                     __end_of_memset:
  8260                           	opt stack 0
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           intcon2	equ	0xFF1
  8269                           indf0	equ	0xFEF
  8270                           postinc0	equ	0xFEE
  8271                           fsr0h	equ	0xFEA
  8272                           fsr0l	equ	0xFE9
  8273                           wreg	equ	0xFE8
  8274                           indf1	equ	0xFE7
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _ADC_Initialize *****************
  8286 ;; Defined at:
  8287 ;;		line 59 in file "mcc_generated_files/adc.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8301 ;;      Params:         0       0       0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0
  8304 ;;      Totals:         0       0       0       0       0       0       0
  8305 ;;Total ram usage:        0 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    4
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_SYSTEM_Initialize
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text43
  8316  0026AC                     __ptext43:
  8317                           	opt stack 0
  8318  0026AC                     _ADC_Initialize:
  8319                           	opt stack 25
  8320                           
  8321                           ;adc.c: 64: ADCON0 = 0x01;
  8322                           
  8323                           ;incstack = 0
  8324  0026AC  0E01               	movlw	1
  8325  0026AE  6EC2               	movwf	4034,c	;volatile
  8326                           
  8327                           ;adc.c: 67: ADCON1 = 0x80;
  8328  0026B0  0E80               	movlw	128
  8329  0026B2  6EC1               	movwf	4033,c	;volatile
  8330                           
  8331                           ;adc.c: 70: ADCON2 = 0x05;
  8332  0026B4  0E05               	movlw	5
  8333  0026B6  6EC0               	movwf	4032,c	;volatile
  8334                           
  8335                           ;adc.c: 73: ADRESL = 0x00;
  8336  0026B8  0E00               	movlw	0
  8337  0026BA  6EC3               	movwf	4035,c	;volatile
  8338                           
  8339                           ;adc.c: 76: ADRESH = 0x00;
  8340  0026BC  0E00               	movlw	0
  8341  0026BE  6EC4               	movwf	4036,c	;volatile
  8342                           
  8343                           ;adc.c: 79: PIE1bits.ADIE = 1;
  8344  0026C0  8C9D               	bsf	3997,6,c	;volatile
  8345  0026C2  0012               	return		;funcret
  8346  0026C4                     __end_of_ADC_Initialize:
  8347                           	opt stack 0
  8348                           tblptru	equ	0xFF8
  8349                           tblptrh	equ	0xFF7
  8350                           tblptrl	equ	0xFF6
  8351                           tablat	equ	0xFF5
  8352                           prodh	equ	0xFF4
  8353                           prodl	equ	0xFF3
  8354                           intcon	equ	0xFF2
  8355                           intcon2	equ	0xFF1
  8356                           indf0	equ	0xFEF
  8357                           postinc0	equ	0xFEE
  8358                           fsr0h	equ	0xFEA
  8359                           fsr0l	equ	0xFE9
  8360                           wreg	equ	0xFE8
  8361                           indf1	equ	0xFE7
  8362                           fsr1h	equ	0xFE2
  8363                           fsr1l	equ	0xFE1
  8364                           indf2	equ	0xFDF
  8365                           postinc2	equ	0xFDE
  8366                           postdec2	equ	0xFDD
  8367                           plusw2	equ	0xFDB
  8368                           fsr2h	equ	0xFDA
  8369                           fsr2l	equ	0xFD9
  8370                           status	equ	0xFD8
  8371                           
  8372 ;; *************** function _LEDwriteDisplay *****************
  8373 ;; Defined at:
  8374 ;;		line 116 in file "LED_BarGraph.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  i2c_addr        1    wreg     unsigned char 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;  i2c_addr        1   28[BANK0 ] unsigned char 
  8379 ;;  writeBuffer    20    8[BANK0 ] unsigned char [20]
  8380 ;;  timeOut         2   29[BANK0 ] unsigned int 
  8381 ;;  status          1   31[BANK0 ] enum E6985
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8391 ;;      Params:         0       0       0       0       0       0       0
  8392 ;;      Locals:         0      24       0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0
  8394 ;;      Totals:         0      24       0       0       0       0       0
  8395 ;;Total ram usage:       24 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; Hardware stack levels required when called:    6
  8398 ;; This function calls:
  8399 ;;		_I2C1_MasterWrite
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;;		_TestBarGraph
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text44
  8407  000E3A                     __ptext44:
  8408                           	opt stack 0
  8409  000E3A                     _LEDwriteDisplay:
  8410                           	opt stack 24
  8411                           
  8412                           ;incstack = 0
  8413                           ;LEDwriteDisplay@i2c_addr stored from wreg
  8414  000E3A  0100               	movlb	0	; () banked
  8415  000E3C  6FC7               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
  8416                           
  8417                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
  8418                           ;LED_BarGraph.c: 118: uint16_t timeOut;
  8419                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
  8420  000E3E  0E00               	movlw	0
  8421  000E40  0100               	movlb	0	; () banked
  8422  000E42  6FB3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8423                           
  8424                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8425  000E44  0E02               	movlw	2
  8426  000E46  0100               	movlb	0	; () banked
  8427  000E48  6FCA               	movwf	LEDwriteDisplay@status& (0+255),b
  8428                           
  8429                           ;LED_BarGraph.c: 122: timeOut = 0;
  8430  000E4A  0E00               	movlw	0
  8431  000E4C  0100               	movlb	0	; () banked
  8432  000E4E  6FC9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8433  000E50  0E00               	movlw	0
  8434  000E52  6FC8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8435                           
  8436                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
  8437  000E54  D02F               	goto	l6589
  8438  000E56                     l6569:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
  8442                           ;LED_BarGraph.c: 126: 1,
  8443                           ;LED_BarGraph.c: 127: i2c_addr,
  8444                           ;LED_BarGraph.c: 128: &status);
  8445  000E56  0EB3               	movlw	low LEDwriteDisplay@writeBuffer
  8446  000E58  0100               	movlb	0	; () banked
  8447  000E5A  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8448  000E5C  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  8449  000E5E  0100               	movlb	0	; () banked
  8450  000E60  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8451  000E62  0E00               	movlw	0
  8452  000E64  0100               	movlb	0	; () banked
  8453  000E66  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8454  000E68  0E01               	movlw	1
  8455  000E6A  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  8456  000E6C  C0C7  F0AF         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8457  000E70  0100               	movlb	0	; () banked
  8458  000E72  6BB0               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
  8459  000E74  0ECA               	movlw	low LEDwriteDisplay@status
  8460  000E76  0100               	movlb	0	; () banked
  8461  000E78  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8462  000E7A  0E00               	movlw	high LEDwriteDisplay@status
  8463  000E7C  0100               	movlb	0	; () banked
  8464  000E7E  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8465  000E80  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  8466  000E84                     l6571:
  8467  000E84  0E02               	movlw	2
  8468  000E86  0100               	movlb	0	; () banked
  8469  000E88  19CA               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8470  000E8A  B4D8               	btfsc	status,2,c
  8471  000E8C  D7FB               	goto	l6571
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
  8475                           
  8476                           ; BSR set to: 0
  8477  000E8E  0100               	movlb	0	; () banked
  8478  000E90  51CA               	movf	LEDwriteDisplay@status& (0+255),w,b
  8479  000E92  0100               	movlb	0	; () banked
  8480  000E94  B4D8               	btfsc	status,2,c
  8481  000E96  D012               	goto	l6591
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;LED_BarGraph.c: 135: if (timeOut == 4)
  8485                           
  8486                           ; BSR set to: 0
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;LED_BarGraph.c: 134: break;
  8490  000E98  0E04               	movlw	4
  8491  000E9A  0100               	movlb	0	; () banked
  8492  000E9C  19C8               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8493  000E9E  0100               	movlb	0	; () banked
  8494  000EA0  11C9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8495  000EA2  B4D8               	btfsc	status,2,c
  8496  000EA4  D00B               	goto	l6591
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
  8500                           
  8501                           ; BSR set to: 0
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;LED_BarGraph.c: 136: break;
  8505  000EA6  0100               	movlb	0	; () banked
  8506  000EA8  05CA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8507  000EAA  B4D8               	btfsc	status,2,c
  8508  000EAC  D007               	goto	l6591
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;LED_BarGraph.c: 139: else
  8512                           ;LED_BarGraph.c: 140: timeOut++;
  8513                           
  8514                           ; BSR set to: 0
  8515                           
  8516                           ; BSR set to: 0
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;LED_BarGraph.c: 138: break;
  8520  000EAE  0100               	movlb	0	; () banked
  8521  000EB0  4BC8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8522  000EB2  2BC9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8523  000EB4                     l6589:
  8524                           
  8525                           ; BSR set to: 0
  8526  000EB4  0100               	movlb	0	; () banked
  8527  000EB6  05CA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8528  000EB8  A4D8               	btfss	status,2,c
  8529  000EBA  D7CD               	goto	l6569
  8530  000EBC                     l6591:
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;LED_BarGraph.c: 141: }
  8534                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8535  000EBC  0E02               	movlw	2
  8536  000EBE  0100               	movlb	0	; () banked
  8537  000EC0  6FCA               	movwf	LEDwriteDisplay@status& (0+255),b
  8538                           
  8539                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
  8540  000EC2  0E00               	movlw	0
  8541  000EC4  0100               	movlb	0	; () banked
  8542  000EC6  6FB3               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
  8546  000EC8  C060  F0B4         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
  8550  000ECC  C061  F0B5         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
  8554  000ED0  C064  F0B6         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
  8558  000ED4  C065  F0B7         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
  8562  000ED8  C068  F0B8         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
  8566  000EDC  C069  F0B9         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
  8570  000EE0  C06C  F0BA         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
  8574  000EE4  C06D  F0BB         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
  8578  000EE8  C070  F0BC         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
  8582  000EEC  C071  F0BD         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
  8586  000EF0  C074  F0BE         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
  8590  000EF4  C075  F0BF         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
  8594  000EF8  C078  F0C0         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
  8598  000EFC  C079  F0C1         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
  8602  000F00  C07C  F0C2         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
  8606  000F04  C07D  F0C3         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
  8610  000F08  C080  F0C4         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
  8614  000F0C  C081  F0C5         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
  8615                           
  8616                           ;LED_BarGraph.c: 167: timeOut = 0;
  8617  000F10  0E00               	movlw	0
  8618  000F12  0100               	movlb	0	; () banked
  8619  000F14  6FC9               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
  8620  000F16  0E00               	movlw	0
  8621  000F18  6FC8               	movwf	LEDwriteDisplay@timeOut& (0+255),b
  8622                           
  8623                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
  8624  000F1A  D02F               	goto	l6649
  8625  000F1C                     l6629:
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
  8629                           ;LED_BarGraph.c: 171: 17,
  8630                           ;LED_BarGraph.c: 172: i2c_addr,
  8631                           ;LED_BarGraph.c: 173: &status);
  8632  000F1C  0EB3               	movlw	low LEDwriteDisplay@writeBuffer
  8633  000F1E  0100               	movlb	0	; () banked
  8634  000F20  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8635  000F22  0E00               	movlw	high LEDwriteDisplay@writeBuffer
  8636  000F24  0100               	movlb	0	; () banked
  8637  000F26  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8638  000F28  0E00               	movlw	0
  8639  000F2A  0100               	movlb	0	; () banked
  8640  000F2C  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8641  000F2E  0E11               	movlw	17
  8642  000F30  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  8643  000F32  C0C7  F0AF         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
  8644  000F36  0100               	movlb	0	; () banked
  8645  000F38  6BB0               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
  8646  000F3A  0ECA               	movlw	low LEDwriteDisplay@status
  8647  000F3C  0100               	movlb	0	; () banked
  8648  000F3E  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8649  000F40  0E00               	movlw	high LEDwriteDisplay@status
  8650  000F42  0100               	movlb	0	; () banked
  8651  000F44  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8652  000F46  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  8653  000F4A                     l6631:
  8654  000F4A  0E02               	movlw	2
  8655  000F4C  0100               	movlb	0	; () banked
  8656  000F4E  19CA               	xorwf	LEDwriteDisplay@status& (0+255),w,b
  8657  000F50  B4D8               	btfsc	status,2,c
  8658  000F52  D7FB               	goto	l6631
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
  8662                           
  8663                           ; BSR set to: 0
  8664  000F54  0100               	movlb	0	; () banked
  8665  000F56  51CA               	movf	LEDwriteDisplay@status& (0+255),w,b
  8666  000F58  0100               	movlb	0	; () banked
  8667  000F5A  B4D8               	btfsc	status,2,c
  8668  000F5C  0012               	return	
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;LED_BarGraph.c: 180: if (timeOut == 4)
  8672                           
  8673                           ; BSR set to: 0
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;LED_BarGraph.c: 179: break;
  8677  000F5E  0E04               	movlw	4
  8678  000F60  0100               	movlb	0	; () banked
  8679  000F62  19C8               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
  8680  000F64  0100               	movlb	0	; () banked
  8681  000F66  11C9               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
  8682  000F68  B4D8               	btfsc	status,2,c
  8683  000F6A  0012               	return	
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
  8687                           
  8688                           ; BSR set to: 0
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;LED_BarGraph.c: 181: break;
  8692  000F6C  0100               	movlb	0	; () banked
  8693  000F6E  05CA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8694  000F70  B4D8               	btfsc	status,2,c
  8695  000F72  0012               	return	
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;LED_BarGraph.c: 184: else
  8699                           ;LED_BarGraph.c: 185: timeOut++;
  8700                           
  8701                           ; BSR set to: 0
  8702                           
  8703                           ; BSR set to: 0
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;LED_BarGraph.c: 183: break;
  8707  000F74  0100               	movlb	0	; () banked
  8708  000F76  4BC8               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
  8709  000F78  2BC9               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
  8710  000F7A                     l6649:
  8711                           
  8712                           ; BSR set to: 0
  8713  000F7A  0100               	movlb	0	; () banked
  8714  000F7C  05CA               	decf	LEDwriteDisplay@status& (0+255),w,b
  8715  000F7E  B4D8               	btfsc	status,2,c
  8716  000F80  0012               	return	
  8717  000F82  D7CC               	goto	l6629
  8718  000F84                     __end_of_LEDwriteDisplay:
  8719                           	opt stack 0
  8720                           tblptru	equ	0xFF8
  8721                           tblptrh	equ	0xFF7
  8722                           tblptrl	equ	0xFF6
  8723                           tablat	equ	0xFF5
  8724                           prodh	equ	0xFF4
  8725                           prodl	equ	0xFF3
  8726                           intcon	equ	0xFF2
  8727                           intcon2	equ	0xFF1
  8728                           indf0	equ	0xFEF
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           indf1	equ	0xFE7
  8734                           fsr1h	equ	0xFE2
  8735                           fsr1l	equ	0xFE1
  8736                           indf2	equ	0xFDF
  8737                           postinc2	equ	0xFDE
  8738                           postdec2	equ	0xFDD
  8739                           plusw2	equ	0xFDB
  8740                           fsr2h	equ	0xFDA
  8741                           fsr2l	equ	0xFD9
  8742                           status	equ	0xFD8
  8743                           
  8744 ;; *************** function _LEDsetValue *****************
  8745 ;; Defined at:
  8746 ;;		line 11 in file "LED_BarGraph.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  value           2   24[BANK0 ] int 
  8749 ;;  color           2   26[BANK0 ] int 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  k               2   29[BANK0 ] int 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  1    wreg      void 
  8754 ;; Registers used:
  8755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8761 ;;      Params:         0       4       0       0       0       0       0
  8762 ;;      Locals:         0       2       0       0       0       0       0
  8763 ;;      Temps:          0       1       0       0       0       0       0
  8764 ;;      Totals:         0       7       0       0       0       0       0
  8765 ;;Total ram usage:        7 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    6
  8768 ;; This function calls:
  8769 ;;		_LEDsetBar
  8770 ;; This function is called by:
  8771 ;;		_main
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text45
  8776  001A3A                     __ptext45:
  8777                           	opt stack 0
  8778  001A3A                     _LEDsetValue:
  8779                           	opt stack 24
  8780                           
  8781                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;incstack = 0
  8785  001A3A  0100               	movlb	0	; () banked
  8786  001A3C  BFC4               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
  8787  001A3E  D00D               	goto	l6549
  8788  001A40  0100               	movlb	0	; () banked
  8789  001A42  51C4               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8790  001A44  E105               	bnz	u6800
  8791  001A46  0E19               	movlw	25
  8792  001A48  0100               	movlb	0	; () banked
  8793  001A4A  5DC3               	subwf	LEDsetValue@value& (0+255),w,b
  8794  001A4C  A0D8               	btfss	status,0,c
  8795  001A4E  D005               	goto	l6549
  8796  001A50                     u6800:
  8797                           
  8798                           ; BSR set to: 0
  8799  001A50  0E00               	movlw	0
  8800  001A52  0100               	movlb	0	; () banked
  8801  001A54  6FC4               	movwf	(LEDsetValue@value+1)& (0+255),b
  8802  001A56  0E18               	movlw	24
  8803  001A58  6FC3               	movwf	LEDsetValue@value& (0+255),b
  8804  001A5A                     l6549:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
  8808  001A5A  0100               	movlb	0	; () banked
  8809  001A5C  AFC4               	btfss	(LEDsetValue@value+1)& (0+255),7,b
  8810  001A5E  D005               	goto	l619
  8811                           
  8812                           ; BSR set to: 0
  8813  001A60  0E00               	movlw	0
  8814  001A62  0100               	movlb	0	; () banked
  8815  001A64  6FC4               	movwf	(LEDsetValue@value+1)& (0+255),b
  8816  001A66  0E00               	movlw	0
  8817  001A68  6FC3               	movwf	LEDsetValue@value& (0+255),b
  8818  001A6A                     l619:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;LED_BarGraph.c: 14: int k;
  8822                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
  8823  001A6A  0E00               	movlw	0
  8824  001A6C  0100               	movlb	0	; () banked
  8825  001A6E  6FC9               	movwf	(LEDsetValue@k+1)& (0+255),b
  8826  001A70  0E00               	movlw	0
  8827  001A72  6FC8               	movwf	LEDsetValue@k& (0+255),b
  8828  001A74                     l6553:
  8829                           
  8830                           ; BSR set to: 0
  8831  001A74  0100               	movlb	0	; () banked
  8832  001A76  BFC9               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
  8833  001A78  D008               	goto	l6557
  8834  001A7A  0100               	movlb	0	; () banked
  8835  001A7C  51C9               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8836  001A7E  E12E               	bnz	l624
  8837  001A80  0E18               	movlw	24
  8838  001A82  0100               	movlb	0	; () banked
  8839  001A84  5DC8               	subwf	LEDsetValue@k& (0+255),w,b
  8840  001A86  B0D8               	btfsc	status,0,c
  8841  001A88  0012               	return	
  8842  001A8A                     l6557:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;LED_BarGraph.c: 16: if (k < value){
  8846  001A8A  0100               	movlb	0	; () banked
  8847  001A8C  51C3               	movf	LEDsetValue@value& (0+255),w,b
  8848  001A8E  0100               	movlb	0	; () banked
  8849  001A90  5DC8               	subwf	LEDsetValue@k& (0+255),w,b
  8850  001A92  0100               	movlb	0	; () banked
  8851  001A94  51C9               	movf	(LEDsetValue@k+1)& (0+255),w,b
  8852  001A96  0A80               	xorlw	128
  8853  001A98  0100               	movlb	0	; () banked
  8854  001A9A  6FC7               	movwf	??_LEDsetValue& (0+255),b
  8855  001A9C  0100               	movlb	0	; () banked
  8856  001A9E  51C4               	movf	(LEDsetValue@value+1)& (0+255),w,b
  8857  001AA0  0A80               	xorlw	128
  8858  001AA2  0100               	movlb	0	; () banked
  8859  001AA4  59C7               	subwfb	??_LEDsetValue& (0+255),w,b
  8860  001AA6  B0D8               	btfsc	status,0,c
  8861  001AA8  D00B               	goto	l6561
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
  8865  001AAA  C0C8  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8866  001AAE  C0C9  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8867  001AB2  C0C5  F025         	movff	LEDsetValue@color,LEDsetBar@color
  8868  001AB6  C0C6  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
  8869  001ABA  EC6A  F000         	call	_LEDsetBar	;wreg free
  8870  001ABE  D00A               	goto	l6563
  8871  001AC0                     l6561:
  8872                           
  8873                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
  8874  001AC0  C0C8  F023         	movff	LEDsetValue@k,LEDsetBar@bar
  8875  001AC4  C0C9  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
  8876  001AC8  0E00               	movlw	0
  8877  001ACA  6E26               	movwf	LEDsetBar@color+1,c
  8878  001ACC  0E00               	movlw	0
  8879  001ACE  6E25               	movwf	LEDsetBar@color,c
  8880  001AD0  EC6A  F000         	call	_LEDsetBar	;wreg free
  8881  001AD4                     l6563:
  8882  001AD4  0100               	movlb	0	; () banked
  8883  001AD6  4BC8               	infsnz	LEDsetValue@k& (0+255),f,b
  8884  001AD8  2BC9               	incf	(LEDsetValue@k+1)& (0+255),f,b
  8885  001ADA  D7CC               	goto	l6553
  8886  001ADC                     l624:
  8887                           
  8888                           ; BSR set to: 0
  8889  001ADC  0012               	return		;funcret
  8890  001ADE                     __end_of_LEDsetValue:
  8891                           	opt stack 0
  8892                           tblptru	equ	0xFF8
  8893                           tblptrh	equ	0xFF7
  8894                           tblptrl	equ	0xFF6
  8895                           tablat	equ	0xFF5
  8896                           prodh	equ	0xFF4
  8897                           prodl	equ	0xFF3
  8898                           intcon	equ	0xFF2
  8899                           intcon2	equ	0xFF1
  8900                           indf0	equ	0xFEF
  8901                           postinc0	equ	0xFEE
  8902                           fsr0h	equ	0xFEA
  8903                           fsr0l	equ	0xFE9
  8904                           wreg	equ	0xFE8
  8905                           indf1	equ	0xFE7
  8906                           fsr1h	equ	0xFE2
  8907                           fsr1l	equ	0xFE1
  8908                           indf2	equ	0xFDF
  8909                           postinc2	equ	0xFDE
  8910                           postdec2	equ	0xFDD
  8911                           plusw2	equ	0xFDB
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8
  8915                           
  8916 ;; *************** function _LEDsetBar *****************
  8917 ;; Defined at:
  8918 ;;		line 195 in file "LED_BarGraph.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  bar             2   34[COMRAM] int 
  8921 ;;  color           2   36[COMRAM] int 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  a               2   40[COMRAM] unsigned int 
  8924 ;;  c               2   38[COMRAM] unsigned int 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8934 ;;      Params:         4       0       0       0       0       0       0
  8935 ;;      Locals:         4       0       0       0       0       0       0
  8936 ;;      Temps:          0      16       0       0       0       0       0
  8937 ;;      Totals:         8      16       0       0       0       0       0
  8938 ;;Total ram usage:       24 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    5
  8941 ;; This function calls:
  8942 ;;		___awdiv
  8943 ;; This function is called by:
  8944 ;;		_LEDsetValue
  8945 ;;		_TestBarGraph
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text46
  8950  0000D4                     __ptext46:
  8951                           	opt stack 0
  8952  0000D4                     _LEDsetBar:
  8953                           	opt stack 24
  8954                           
  8955                           ;LED_BarGraph.c: 196: uint16_t a, c;
  8956                           ;LED_BarGraph.c: 198: if (bar < 12)
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;incstack = 0
  8960  0000D4  BE24               	btfsc	LEDsetBar@bar+1,7,c
  8961  0000D6  D006               	goto	l6181
  8962  0000D8  5024               	movf	LEDsetBar@bar+1,w,c
  8963  0000DA  E10F               	bnz	l6183
  8964  0000DC  0E0C               	movlw	12
  8965  0000DE  5C23               	subwf	LEDsetBar@bar,w,c
  8966  0000E0  B0D8               	btfsc	status,0,c
  8967  0000E2  D00B               	goto	l6183
  8968  0000E4                     l6181:
  8969                           
  8970                           ;LED_BarGraph.c: 199: c = bar / 4;
  8971  0000E4  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
  8972  0000E8  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
  8973  0000EC  0E00               	movlw	0
  8974  0000EE  6E1E               	movwf	___awdiv@divisor+1,c
  8975  0000F0  0E04               	movlw	4
  8976  0000F2  6E1D               	movwf	___awdiv@divisor,c
  8977  0000F4  ECCE  F00F         	call	___awdiv	;wreg free
  8978  0000F8  D00C               	goto	L1
  8979  0000FA                     l6183:
  8980                           
  8981                           ;LED_BarGraph.c: 200: else
  8982                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
  8983  0000FA  0EF4               	movlw	244
  8984  0000FC  2423               	addwf	LEDsetBar@bar,w,c
  8985  0000FE  6E1B               	movwf	___awdiv@dividend,c
  8986  000100  0EFF               	movlw	255
  8987  000102  2024               	addwfc	LEDsetBar@bar+1,w,c
  8988  000104  6E1C               	movwf	___awdiv@dividend+1,c
  8989  000106  0E00               	movlw	0
  8990  000108  6E1E               	movwf	___awdiv@divisor+1,c
  8991  00010A  0E04               	movlw	4
  8992  00010C  6E1D               	movwf	___awdiv@divisor,c
  8993  00010E  ECCE  F00F         	call	___awdiv	;wreg free
  8994  000112                     L1:
  8995  000112  C01B  F027         	movff	?___awdiv,LEDsetBar@c
  8996  000116  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
  8997                           
  8998                           ;LED_BarGraph.c: 203: a = bar % 4;
  8999  00011A  0E03               	movlw	3
  9000  00011C  1423               	andwf	LEDsetBar@bar,w,c
  9001  00011E  6E29               	movwf	LEDsetBar@a,c
  9002  000120  6A2A               	clrf	LEDsetBar@a+1,c
  9003                           
  9004                           ;LED_BarGraph.c: 204: if (bar >= 12)
  9005  000122  BE24               	btfsc	LEDsetBar@bar+1,7,c
  9006  000124  D00A               	goto	l698
  9007  000126  5024               	movf	LEDsetBar@bar+1,w,c
  9008  000128  E104               	bnz	u6090
  9009  00012A  0E0C               	movlw	12
  9010  00012C  5C23               	subwf	LEDsetBar@bar,w,c
  9011  00012E  A0D8               	btfss	status,0,c
  9012  000130  D004               	goto	l698
  9013  000132                     u6090:
  9014                           
  9015                           ;LED_BarGraph.c: 205: a += 4;
  9016  000132  0E04               	movlw	4
  9017  000134  2629               	addwf	LEDsetBar@a,f,c
  9018  000136  0E00               	movlw	0
  9019  000138  222A               	addwfc	LEDsetBar@a+1,f,c
  9020  00013A                     l698:
  9021                           
  9022                           ;LED_BarGraph.c: 208: if (color == 1) {
  9023  00013A  0425               	decf	LEDsetBar@color,w,c
  9024  00013C  1026               	iorwf	LEDsetBar@color+1,w,c
  9025  00013E  A4D8               	btfss	status,2,c
  9026  000140  D07D               	goto	l6193
  9027                           
  9028                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
  9029  000142  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9030  000146  0E01               	movlw	1
  9031  000148  0100               	movlb	0	; () banked
  9032  00014A  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9033  00014C  0E00               	movlw	0
  9034  00014E  0100               	movlb	0	; () banked
  9035  000150  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9036  000152  0100               	movlb	0	; () banked
  9037  000154  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9038  000156  D004               	goto	u6114
  9039  000158                     u6115:
  9040  000158  90D8               	bcf	status,0,c
  9041  00015A  0100               	movlb	0	; () banked
  9042  00015C  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9043  00015E  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9044  000160                     u6114:
  9045  000160  0100               	movlb	0	; () banked
  9046  000162  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9047  000164  D7F9               	goto	u6115
  9048  000166  C0AC  F0AE         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9049  00016A  C0AD  F0AF         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9050  00016E  0E00               	movlw	0
  9051  000170  0100               	movlb	0	; () banked
  9052  000172  BFAF               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9053  000174  0EFF               	movlw	255
  9054  000176  6FB0               	movwf	(??_LEDsetBar+5)& (0+255),b
  9055  000178  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9056  00017A  0E60               	movlw	low _displaybuffer
  9057  00017C  0100               	movlb	0	; () banked
  9058  00017E  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9059  000180  0E00               	movlw	high _displaybuffer
  9060  000182  0100               	movlb	0	; () banked
  9061  000184  6FB3               	movwf	(??_LEDsetBar+8)& (0+255),b
  9062  000186  90D8               	bcf	status,0,c
  9063  000188  3427               	rlcf	LEDsetBar@c,w,c
  9064  00018A  6ED9               	movwf	fsr2l,c
  9065  00018C  3428               	rlcf	LEDsetBar@c+1,w,c
  9066  00018E  6EDA               	movwf	fsr2h,c
  9067  000190  90D8               	bcf	status,0,c
  9068  000192  36D9               	rlcf	fsr2l,f,c
  9069  000194  36DA               	rlcf	fsr2h,f,c
  9070  000196  0100               	movlb	0	; () banked
  9071  000198  51B2               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9072  00019A  26D9               	addwf	fsr2l,f,c
  9073  00019C  0100               	movlb	0	; () banked
  9074  00019E  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9075  0001A0  22DA               	addwfc	fsr2h,f,c
  9076  0001A2  0100               	movlb	0	; () banked
  9077  0001A4  51AE               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9078  0001A6  12DE               	iorwf	postinc2,f,c
  9079  0001A8  51AF               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9080  0001AA  12DE               	iorwf	postinc2,f,c
  9081  0001AC  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9082  0001AE  12DE               	iorwf	postinc2,f,c
  9083  0001B0  51B1               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9084  0001B2  12DE               	iorwf	postinc2,f,c
  9085                           
  9086                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
  9087  0001B4  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9088  0001B8  0E08               	movlw	8
  9089  0001BA  0100               	movlb	0	; () banked
  9090  0001BC  27AB               	addwf	??_LEDsetBar& (0+255),f,b
  9091  0001BE  0E01               	movlw	1
  9092  0001C0  0100               	movlb	0	; () banked
  9093  0001C2  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9094  0001C4  0E00               	movlw	0
  9095  0001C6  0100               	movlb	0	; () banked
  9096  0001C8  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9097  0001CA  0100               	movlb	0	; () banked
  9098  0001CC  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9099  0001CE  D004               	goto	u6124
  9100  0001D0                     u6125:
  9101  0001D0  90D8               	bcf	status,0,c
  9102  0001D2  0100               	movlb	0	; () banked
  9103  0001D4  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9104  0001D6  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9105  0001D8                     u6124:
  9106  0001D8  0100               	movlb	0	; () banked
  9107  0001DA  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9108  0001DC  D7F9               	goto	u6125
  9109  0001DE  0100               	movlb	0	; () banked
  9110  0001E0  1DAC               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9111  0001E2  0100               	movlb	0	; () banked
  9112  0001E4  6FAE               	movwf	(??_LEDsetBar+3)& (0+255),b
  9113  0001E6  0100               	movlb	0	; () banked
  9114  0001E8  1DAD               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9115  0001EA  0100               	movlb	0	; () banked
  9116  0001EC  6FAF               	movwf	(??_LEDsetBar+4)& (0+255),b
  9117  0001EE  0100               	movlb	0	; () banked
  9118  0001F0  6BB0               	clrf	(??_LEDsetBar+5)& (0+255),b
  9119  0001F2  0100               	movlb	0	; () banked
  9120  0001F4  BFAF               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9121  0001F6  07B0               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9122  0001F8  0100               	movlb	0	; () banked
  9123  0001FA  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9124  0001FC  0100               	movlb	0	; () banked
  9125  0001FE  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9126  000200  0E60               	movlw	low _displaybuffer
  9127  000202  0100               	movlb	0	; () banked
  9128  000204  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9129  000206  0E00               	movlw	high _displaybuffer
  9130  000208  0100               	movlb	0	; () banked
  9131  00020A  6FB3               	movwf	(??_LEDsetBar+8)& (0+255),b
  9132  00020C  90D8               	bcf	status,0,c
  9133  00020E  3427               	rlcf	LEDsetBar@c,w,c
  9134  000210  6ED9               	movwf	fsr2l,c
  9135  000212  3428               	rlcf	LEDsetBar@c+1,w,c
  9136  000214  6EDA               	movwf	fsr2h,c
  9137  000216  90D8               	bcf	status,0,c
  9138  000218  36D9               	rlcf	fsr2l,f,c
  9139  00021A  36DA               	rlcf	fsr2h,f,c
  9140  00021C  0100               	movlb	0	; () banked
  9141  00021E  51B2               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9142  000220  26D9               	addwf	fsr2l,f,c
  9143  000222  0100               	movlb	0	; () banked
  9144  000224  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9145  000226  22DA               	addwfc	fsr2h,f,c
  9146  000228  0100               	movlb	0	; () banked
  9147  00022A  51AE               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9148  00022C  16DE               	andwf	postinc2,f,c
  9149  00022E  51AF               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9150  000230  16DE               	andwf	postinc2,f,c
  9151  000232  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9152  000234  16DE               	andwf	postinc2,f,c
  9153  000236  51B1               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9154  000238  16DE               	andwf	postinc2,f,c
  9155                           
  9156                           ;LED_BarGraph.c: 213: } else if (color == 2) {
  9157  00023A  0012               	return	
  9158  00023C                     l6193:
  9159  00023C  0E02               	movlw	2
  9160  00023E  1825               	xorwf	LEDsetBar@color,w,c
  9161  000240  1026               	iorwf	LEDsetBar@color+1,w,c
  9162  000242  A4D8               	btfss	status,2,c
  9163  000244  D05A               	goto	l6197
  9164                           
  9165                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
  9166  000246  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9167  00024A  0E08               	movlw	8
  9168  00024C  0100               	movlb	0	; () banked
  9169  00024E  27AB               	addwf	??_LEDsetBar& (0+255),f,b
  9170  000250  0E01               	movlw	1
  9171  000252  0100               	movlb	0	; () banked
  9172  000254  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9173  000256  0E00               	movlw	0
  9174  000258  0100               	movlb	0	; () banked
  9175  00025A  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9176  00025C  0100               	movlb	0	; () banked
  9177  00025E  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9178  000260  D004               	goto	u6144
  9179  000262                     u6145:
  9180  000262  90D8               	bcf	status,0,c
  9181  000264  0100               	movlb	0	; () banked
  9182  000266  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9183  000268  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9184  00026A                     u6144:
  9185  00026A  0100               	movlb	0	; () banked
  9186  00026C  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9187  00026E  D7F9               	goto	u6145
  9188  000270  C029  F0AE         	movff	LEDsetBar@a,??_LEDsetBar+3
  9189  000274  0E01               	movlw	1
  9190  000276  0100               	movlb	0	; () banked
  9191  000278  6FAF               	movwf	(??_LEDsetBar+4)& (0+255),b
  9192  00027A  0E00               	movlw	0
  9193  00027C  0100               	movlb	0	; () banked
  9194  00027E  6FB0               	movwf	(??_LEDsetBar+5)& (0+255),b
  9195  000280  0100               	movlb	0	; () banked
  9196  000282  2BAE               	incf	(??_LEDsetBar+3)& (0+255),f,b
  9197  000284  D004               	goto	u6154
  9198  000286                     u6155:
  9199  000286  90D8               	bcf	status,0,c
  9200  000288  0100               	movlb	0	; () banked
  9201  00028A  37AF               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
  9202  00028C  37B0               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
  9203  00028E                     u6154:
  9204  00028E  0100               	movlb	0	; () banked
  9205  000290  2FAE               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
  9206  000292  D7F9               	goto	u6155
  9207  000294  0100               	movlb	0	; () banked
  9208  000296  51AC               	movf	(??_LEDsetBar+1)& (0+255),w,b
  9209  000298  0100               	movlb	0	; () banked
  9210  00029A  11AF               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
  9211  00029C  0100               	movlb	0	; () banked
  9212  00029E  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9213  0002A0  0100               	movlb	0	; () banked
  9214  0002A2  51AD               	movf	(??_LEDsetBar+2)& (0+255),w,b
  9215  0002A4  0100               	movlb	0	; () banked
  9216  0002A6  11B0               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
  9217  0002A8  0100               	movlb	0	; () banked
  9218  0002AA  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9219  0002AC  0100               	movlb	0	; () banked
  9220  0002AE  6BB3               	clrf	(??_LEDsetBar+8)& (0+255),b
  9221  0002B0  0100               	movlb	0	; () banked
  9222  0002B2  BFB2               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
  9223  0002B4  07B3               	decf	(??_LEDsetBar+8)& (0+255),f,b
  9224  0002B6  0100               	movlb	0	; () banked
  9225  0002B8  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9226  0002BA  0100               	movlb	0	; () banked
  9227  0002BC  6FB4               	movwf	(??_LEDsetBar+9)& (0+255),b
  9228  0002BE  0E60               	movlw	low _displaybuffer
  9229  0002C0  0100               	movlb	0	; () banked
  9230  0002C2  6FB5               	movwf	(??_LEDsetBar+10)& (0+255),b
  9231  0002C4  0E00               	movlw	high _displaybuffer
  9232  0002C6  0100               	movlb	0	; () banked
  9233  0002C8  6FB6               	movwf	(??_LEDsetBar+11)& (0+255),b
  9234  0002CA  90D8               	bcf	status,0,c
  9235  0002CC  3427               	rlcf	LEDsetBar@c,w,c
  9236  0002CE  6ED9               	movwf	fsr2l,c
  9237  0002D0  3428               	rlcf	LEDsetBar@c+1,w,c
  9238  0002D2  6EDA               	movwf	fsr2h,c
  9239  0002D4  90D8               	bcf	status,0,c
  9240  0002D6  36D9               	rlcf	fsr2l,f,c
  9241  0002D8  36DA               	rlcf	fsr2h,f,c
  9242  0002DA  0100               	movlb	0	; () banked
  9243  0002DC  51B5               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9244  0002DE  26D9               	addwf	fsr2l,f,c
  9245  0002E0  0100               	movlb	0	; () banked
  9246  0002E2  51B6               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9247  0002E4  22DA               	addwfc	fsr2h,f,c
  9248  0002E6  0100               	movlb	0	; () banked
  9249  0002E8  51B1               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9250  0002EA  12DE               	iorwf	postinc2,f,c
  9251  0002EC  51B2               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9252  0002EE  12DE               	iorwf	postinc2,f,c
  9253  0002F0  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9254  0002F2  12DE               	iorwf	postinc2,f,c
  9255  0002F4  51B4               	movf	(??_LEDsetBar+9)& (0+255),w,b
  9256  0002F6  12DE               	iorwf	postinc2,f,c
  9257                           
  9258                           ;LED_BarGraph.c: 216: } else if (color == 0) {
  9259  0002F8  0012               	return	
  9260  0002FA                     l6197:
  9261  0002FA  5025               	movf	LEDsetBar@color,w,c
  9262  0002FC  1026               	iorwf	LEDsetBar@color+1,w,c
  9263  0002FE  A4D8               	btfss	status,2,c
  9264  000300  D06A               	goto	l6201
  9265                           
  9266                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
  9267  000302  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9268  000306  0E08               	movlw	8
  9269  000308  0100               	movlb	0	; () banked
  9270  00030A  27AB               	addwf	??_LEDsetBar& (0+255),f,b
  9271  00030C  0E01               	movlw	1
  9272  00030E  0100               	movlb	0	; () banked
  9273  000310  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9274  000312  0E00               	movlw	0
  9275  000314  0100               	movlb	0	; () banked
  9276  000316  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9277  000318  0100               	movlb	0	; () banked
  9278  00031A  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9279  00031C  D004               	goto	u6174
  9280  00031E                     u6175:
  9281  00031E  90D8               	bcf	status,0,c
  9282  000320  0100               	movlb	0	; () banked
  9283  000322  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9284  000324  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9285  000326                     u6174:
  9286  000326  0100               	movlb	0	; () banked
  9287  000328  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9288  00032A  D7F9               	goto	u6175
  9289  00032C  0100               	movlb	0	; () banked
  9290  00032E  1DAC               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9291  000330  0100               	movlb	0	; () banked
  9292  000332  6FAE               	movwf	(??_LEDsetBar+3)& (0+255),b
  9293  000334  0100               	movlb	0	; () banked
  9294  000336  1DAD               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9295  000338  0100               	movlb	0	; () banked
  9296  00033A  6FAF               	movwf	(??_LEDsetBar+4)& (0+255),b
  9297  00033C  C029  F0B0         	movff	LEDsetBar@a,??_LEDsetBar+5
  9298  000340  0E01               	movlw	1
  9299  000342  0100               	movlb	0	; () banked
  9300  000344  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9301  000346  0E00               	movlw	0
  9302  000348  0100               	movlb	0	; () banked
  9303  00034A  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9304  00034C  0100               	movlb	0	; () banked
  9305  00034E  2BB0               	incf	(??_LEDsetBar+5)& (0+255),f,b
  9306  000350  D004               	goto	u6184
  9307  000352                     u6185:
  9308  000352  90D8               	bcf	status,0,c
  9309  000354  0100               	movlb	0	; () banked
  9310  000356  37B1               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
  9311  000358  37B2               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
  9312  00035A                     u6184:
  9313  00035A  0100               	movlb	0	; () banked
  9314  00035C  2FB0               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
  9315  00035E  D7F9               	goto	u6185
  9316  000360  0100               	movlb	0	; () banked
  9317  000362  1DB1               	comf	(??_LEDsetBar+6)& (0+255),w,b
  9318  000364  0100               	movlb	0	; () banked
  9319  000366  6FB3               	movwf	(??_LEDsetBar+8)& (0+255),b
  9320  000368  0100               	movlb	0	; () banked
  9321  00036A  1DB2               	comf	(??_LEDsetBar+7)& (0+255),w,b
  9322  00036C  0100               	movlb	0	; () banked
  9323  00036E  6FB4               	movwf	(??_LEDsetBar+9)& (0+255),b
  9324  000370  0100               	movlb	0	; () banked
  9325  000372  51AE               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9326  000374  0100               	movlb	0	; () banked
  9327  000376  15B3               	andwf	(??_LEDsetBar+8)& (0+255),w,b
  9328  000378  0100               	movlb	0	; () banked
  9329  00037A  6FB5               	movwf	(??_LEDsetBar+10)& (0+255),b
  9330  00037C  0100               	movlb	0	; () banked
  9331  00037E  51AF               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9332  000380  0100               	movlb	0	; () banked
  9333  000382  15B4               	andwf	(??_LEDsetBar+9)& (0+255),w,b
  9334  000384  0100               	movlb	0	; () banked
  9335  000386  6FB6               	movwf	(??_LEDsetBar+11)& (0+255),b
  9336  000388  0100               	movlb	0	; () banked
  9337  00038A  6BB7               	clrf	(??_LEDsetBar+12)& (0+255),b
  9338  00038C  0100               	movlb	0	; () banked
  9339  00038E  BFB6               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
  9340  000390  07B7               	decf	(??_LEDsetBar+12)& (0+255),f,b
  9341  000392  0100               	movlb	0	; () banked
  9342  000394  51B7               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9343  000396  0100               	movlb	0	; () banked
  9344  000398  6FB8               	movwf	(??_LEDsetBar+13)& (0+255),b
  9345  00039A  0E60               	movlw	low _displaybuffer
  9346  00039C  0100               	movlb	0	; () banked
  9347  00039E  6FB9               	movwf	(??_LEDsetBar+14)& (0+255),b
  9348  0003A0  0E00               	movlw	high _displaybuffer
  9349  0003A2  0100               	movlb	0	; () banked
  9350  0003A4  6FBA               	movwf	(??_LEDsetBar+15)& (0+255),b
  9351  0003A6  90D8               	bcf	status,0,c
  9352  0003A8  3427               	rlcf	LEDsetBar@c,w,c
  9353  0003AA  6ED9               	movwf	fsr2l,c
  9354  0003AC  3428               	rlcf	LEDsetBar@c+1,w,c
  9355  0003AE  6EDA               	movwf	fsr2h,c
  9356  0003B0  90D8               	bcf	status,0,c
  9357  0003B2  36D9               	rlcf	fsr2l,f,c
  9358  0003B4  36DA               	rlcf	fsr2h,f,c
  9359  0003B6  0100               	movlb	0	; () banked
  9360  0003B8  51B9               	movf	(??_LEDsetBar+14)& (0+255),w,b
  9361  0003BA  26D9               	addwf	fsr2l,f,c
  9362  0003BC  0100               	movlb	0	; () banked
  9363  0003BE  51BA               	movf	(??_LEDsetBar+15)& (0+255),w,b
  9364  0003C0  22DA               	addwfc	fsr2h,f,c
  9365  0003C2  0100               	movlb	0	; () banked
  9366  0003C4  51B5               	movf	(??_LEDsetBar+10)& (0+255),w,b
  9367  0003C6  16DE               	andwf	postinc2,f,c
  9368  0003C8  51B6               	movf	(??_LEDsetBar+11)& (0+255),w,b
  9369  0003CA  16DE               	andwf	postinc2,f,c
  9370  0003CC  51B7               	movf	(??_LEDsetBar+12)& (0+255),w,b
  9371  0003CE  16DE               	andwf	postinc2,f,c
  9372  0003D0  51B8               	movf	(??_LEDsetBar+13)& (0+255),w,b
  9373  0003D2  16DE               	andwf	postinc2,f,c
  9374                           
  9375                           ;LED_BarGraph.c: 219: } else if (color == 3) {
  9376  0003D4  0012               	return	
  9377  0003D6                     l6201:
  9378  0003D6  0E03               	movlw	3
  9379  0003D8  1825               	xorwf	LEDsetBar@color,w,c
  9380  0003DA  1026               	iorwf	LEDsetBar@color+1,w,c
  9381  0003DC  A4D8               	btfss	status,2,c
  9382  0003DE  0012               	return	
  9383                           
  9384                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
  9385  0003E0  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9386  0003E4  0E08               	movlw	8
  9387  0003E6  0100               	movlb	0	; () banked
  9388  0003E8  27AB               	addwf	??_LEDsetBar& (0+255),f,b
  9389  0003EA  0E01               	movlw	1
  9390  0003EC  0100               	movlb	0	; () banked
  9391  0003EE  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9392  0003F0  0E00               	movlw	0
  9393  0003F2  0100               	movlb	0	; () banked
  9394  0003F4  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9395  0003F6  0100               	movlb	0	; () banked
  9396  0003F8  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9397  0003FA  D004               	goto	u6204
  9398  0003FC                     u6205:
  9399  0003FC  90D8               	bcf	status,0,c
  9400  0003FE  0100               	movlb	0	; () banked
  9401  000400  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9402  000402  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9403  000404                     u6204:
  9404  000404  0100               	movlb	0	; () banked
  9405  000406  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9406  000408  D7F9               	goto	u6205
  9407  00040A  C0AC  F0AE         	movff	??_LEDsetBar+1,??_LEDsetBar+3
  9408  00040E  C0AD  F0AF         	movff	??_LEDsetBar+2,??_LEDsetBar+4
  9409  000412  0E00               	movlw	0
  9410  000414  0100               	movlb	0	; () banked
  9411  000416  BFAF               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9412  000418  0EFF               	movlw	255
  9413  00041A  6FB0               	movwf	(??_LEDsetBar+5)& (0+255),b
  9414  00041C  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9415  00041E  0E60               	movlw	low _displaybuffer
  9416  000420  0100               	movlb	0	; () banked
  9417  000422  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9418  000424  0E00               	movlw	high _displaybuffer
  9419  000426  0100               	movlb	0	; () banked
  9420  000428  6FB3               	movwf	(??_LEDsetBar+8)& (0+255),b
  9421  00042A  90D8               	bcf	status,0,c
  9422  00042C  3427               	rlcf	LEDsetBar@c,w,c
  9423  00042E  6ED9               	movwf	fsr2l,c
  9424  000430  3428               	rlcf	LEDsetBar@c+1,w,c
  9425  000432  6EDA               	movwf	fsr2h,c
  9426  000434  90D8               	bcf	status,0,c
  9427  000436  36D9               	rlcf	fsr2l,f,c
  9428  000438  36DA               	rlcf	fsr2h,f,c
  9429  00043A  0100               	movlb	0	; () banked
  9430  00043C  51B2               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9431  00043E  26D9               	addwf	fsr2l,f,c
  9432  000440  0100               	movlb	0	; () banked
  9433  000442  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9434  000444  22DA               	addwfc	fsr2h,f,c
  9435  000446  0100               	movlb	0	; () banked
  9436  000448  51AE               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9437  00044A  12DE               	iorwf	postinc2,f,c
  9438  00044C  51AF               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9439  00044E  12DE               	iorwf	postinc2,f,c
  9440  000450  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9441  000452  12DE               	iorwf	postinc2,f,c
  9442  000454  51B1               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9443  000456  12DE               	iorwf	postinc2,f,c
  9444                           
  9445                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
  9446  000458  C029  F0AB         	movff	LEDsetBar@a,??_LEDsetBar
  9447  00045C  0E01               	movlw	1
  9448  00045E  0100               	movlb	0	; () banked
  9449  000460  6FAC               	movwf	(??_LEDsetBar+1)& (0+255),b
  9450  000462  0E00               	movlw	0
  9451  000464  0100               	movlb	0	; () banked
  9452  000466  6FAD               	movwf	(??_LEDsetBar+2)& (0+255),b
  9453  000468  0100               	movlb	0	; () banked
  9454  00046A  2BAB               	incf	??_LEDsetBar& (0+255),f,b
  9455  00046C  D004               	goto	u6214
  9456  00046E                     u6215:
  9457  00046E  90D8               	bcf	status,0,c
  9458  000470  0100               	movlb	0	; () banked
  9459  000472  37AC               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
  9460  000474  37AD               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
  9461  000476                     u6214:
  9462  000476  0100               	movlb	0	; () banked
  9463  000478  2FAB               	decfsz	??_LEDsetBar& (0+255),f,b
  9464  00047A  D7F9               	goto	u6215
  9465  00047C  0100               	movlb	0	; () banked
  9466  00047E  1DAC               	comf	(??_LEDsetBar+1)& (0+255),w,b
  9467  000480  0100               	movlb	0	; () banked
  9468  000482  6FAE               	movwf	(??_LEDsetBar+3)& (0+255),b
  9469  000484  0100               	movlb	0	; () banked
  9470  000486  1DAD               	comf	(??_LEDsetBar+2)& (0+255),w,b
  9471  000488  0100               	movlb	0	; () banked
  9472  00048A  6FAF               	movwf	(??_LEDsetBar+4)& (0+255),b
  9473  00048C  0100               	movlb	0	; () banked
  9474  00048E  6BB0               	clrf	(??_LEDsetBar+5)& (0+255),b
  9475  000490  0100               	movlb	0	; () banked
  9476  000492  BFAF               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
  9477  000494  07B0               	decf	(??_LEDsetBar+5)& (0+255),f,b
  9478  000496  0100               	movlb	0	; () banked
  9479  000498  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9480  00049A  0100               	movlb	0	; () banked
  9481  00049C  6FB1               	movwf	(??_LEDsetBar+6)& (0+255),b
  9482  00049E  0E60               	movlw	low _displaybuffer
  9483  0004A0  0100               	movlb	0	; () banked
  9484  0004A2  6FB2               	movwf	(??_LEDsetBar+7)& (0+255),b
  9485  0004A4  0E00               	movlw	high _displaybuffer
  9486  0004A6  0100               	movlb	0	; () banked
  9487  0004A8  6FB3               	movwf	(??_LEDsetBar+8)& (0+255),b
  9488  0004AA  90D8               	bcf	status,0,c
  9489  0004AC  3427               	rlcf	LEDsetBar@c,w,c
  9490  0004AE  6ED9               	movwf	fsr2l,c
  9491  0004B0  3428               	rlcf	LEDsetBar@c+1,w,c
  9492  0004B2  6EDA               	movwf	fsr2h,c
  9493  0004B4  90D8               	bcf	status,0,c
  9494  0004B6  36D9               	rlcf	fsr2l,f,c
  9495  0004B8  36DA               	rlcf	fsr2h,f,c
  9496  0004BA  0100               	movlb	0	; () banked
  9497  0004BC  51B2               	movf	(??_LEDsetBar+7)& (0+255),w,b
  9498  0004BE  26D9               	addwf	fsr2l,f,c
  9499  0004C0  0100               	movlb	0	; () banked
  9500  0004C2  51B3               	movf	(??_LEDsetBar+8)& (0+255),w,b
  9501  0004C4  22DA               	addwfc	fsr2h,f,c
  9502  0004C6  0100               	movlb	0	; () banked
  9503  0004C8  51AE               	movf	(??_LEDsetBar+3)& (0+255),w,b
  9504  0004CA  16DE               	andwf	postinc2,f,c
  9505  0004CC  51AF               	movf	(??_LEDsetBar+4)& (0+255),w,b
  9506  0004CE  16DE               	andwf	postinc2,f,c
  9507  0004D0  51B0               	movf	(??_LEDsetBar+5)& (0+255),w,b
  9508  0004D2  16DE               	andwf	postinc2,f,c
  9509  0004D4  51B1               	movf	(??_LEDsetBar+6)& (0+255),w,b
  9510  0004D6  16DE               	andwf	postinc2,f,c
  9511                           
  9512                           ; BSR set to: 0
  9513                           
  9514                           ; BSR set to: 0
  9515                           
  9516                           ; BSR set to: 0
  9517  0004D8  0012               	return	
  9518  0004DA                     __end_of_LEDsetBar:
  9519                           	opt stack 0
  9520                           tblptru	equ	0xFF8
  9521                           tblptrh	equ	0xFF7
  9522                           tblptrl	equ	0xFF6
  9523                           tablat	equ	0xFF5
  9524                           prodh	equ	0xFF4
  9525                           prodl	equ	0xFF3
  9526                           intcon	equ	0xFF2
  9527                           intcon2	equ	0xFF1
  9528                           indf0	equ	0xFEF
  9529                           postinc0	equ	0xFEE
  9530                           fsr0h	equ	0xFEA
  9531                           fsr0l	equ	0xFE9
  9532                           wreg	equ	0xFE8
  9533                           indf1	equ	0xFE7
  9534                           fsr1h	equ	0xFE2
  9535                           fsr1l	equ	0xFE1
  9536                           indf2	equ	0xFDF
  9537                           postinc2	equ	0xFDE
  9538                           postdec2	equ	0xFDD
  9539                           plusw2	equ	0xFDB
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8
  9543                           
  9544 ;; *************** function ___awdiv *****************
  9545 ;; Defined at:
  9546 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  dividend        2   26[COMRAM] int 
  9549 ;;  divisor         2   28[COMRAM] int 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  quotient        2   32[COMRAM] int 
  9552 ;;  sign            1   31[COMRAM] unsigned char 
  9553 ;;  counter         1   30[COMRAM] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  2   26[COMRAM] int 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9563 ;;      Params:         4       0       0       0       0       0       0
  9564 ;;      Locals:         4       0       0       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0
  9566 ;;      Totals:         8       0       0       0       0       0       0
  9567 ;;Total ram usage:        8 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    4
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_LEDsetBar
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text47
  9578  001F9C                     __ptext47:
  9579                           	opt stack 0
  9580  001F9C                     ___awdiv:
  9581                           	opt stack 24
  9582                           
  9583                           ;incstack = 0
  9584  001F9C  0E00               	movlw	0
  9585  001F9E  6E20               	movwf	___awdiv@sign,c
  9586  001FA0  AE1E               	btfss	___awdiv@divisor+1,7,c
  9587  001FA2  D006               	goto	l4365
  9588  001FA4  6C1D               	negf	___awdiv@divisor,c
  9589  001FA6  1E1E               	comf	___awdiv@divisor+1,f,c
  9590  001FA8  B0D8               	btfsc	status,0,c
  9591  001FAA  2A1E               	incf	___awdiv@divisor+1,f,c
  9592  001FAC  0E01               	movlw	1
  9593  001FAE  6E20               	movwf	___awdiv@sign,c
  9594  001FB0                     l4365:
  9595  001FB0  AE1C               	btfss	___awdiv@dividend+1,7,c
  9596  001FB2  D006               	goto	l4371
  9597  001FB4  6C1B               	negf	___awdiv@dividend,c
  9598  001FB6  1E1C               	comf	___awdiv@dividend+1,f,c
  9599  001FB8  B0D8               	btfsc	status,0,c
  9600  001FBA  2A1C               	incf	___awdiv@dividend+1,f,c
  9601  001FBC  0E01               	movlw	1
  9602  001FBE  1A20               	xorwf	___awdiv@sign,f,c
  9603  001FC0                     l4371:
  9604  001FC0  0E00               	movlw	0
  9605  001FC2  6E22               	movwf	___awdiv@quotient+1,c
  9606  001FC4  0E00               	movlw	0
  9607  001FC6  6E21               	movwf	___awdiv@quotient,c
  9608  001FC8  501D               	movf	___awdiv@divisor,w,c
  9609  001FCA  101E               	iorwf	___awdiv@divisor+1,w,c
  9610  001FCC  B4D8               	btfsc	status,2,c
  9611  001FCE  D01C               	goto	l4393
  9612  001FD0  0E01               	movlw	1
  9613  001FD2  6E1F               	movwf	___awdiv@counter,c
  9614  001FD4  D004               	goto	l4379
  9615  001FD6                     l4377:
  9616  001FD6  90D8               	bcf	status,0,c
  9617  001FD8  361D               	rlcf	___awdiv@divisor,f,c
  9618  001FDA  361E               	rlcf	___awdiv@divisor+1,f,c
  9619  001FDC  2A1F               	incf	___awdiv@counter,f,c
  9620  001FDE                     l4379:
  9621  001FDE  AE1E               	btfss	___awdiv@divisor+1,7,c
  9622  001FE0  D7FA               	goto	l4377
  9623  001FE2                     l4381:
  9624  001FE2  90D8               	bcf	status,0,c
  9625  001FE4  3621               	rlcf	___awdiv@quotient,f,c
  9626  001FE6  3622               	rlcf	___awdiv@quotient+1,f,c
  9627  001FE8  501D               	movf	___awdiv@divisor,w,c
  9628  001FEA  5C1B               	subwf	___awdiv@dividend,w,c
  9629  001FEC  501E               	movf	___awdiv@divisor+1,w,c
  9630  001FEE  581C               	subwfb	___awdiv@dividend+1,w,c
  9631  001FF0  A0D8               	btfss	status,0,c
  9632  001FF2  D005               	goto	l4389
  9633  001FF4  501D               	movf	___awdiv@divisor,w,c
  9634  001FF6  5E1B               	subwf	___awdiv@dividend,f,c
  9635  001FF8  501E               	movf	___awdiv@divisor+1,w,c
  9636  001FFA  5A1C               	subwfb	___awdiv@dividend+1,f,c
  9637  001FFC  8021               	bsf	___awdiv@quotient,0,c
  9638  001FFE                     l4389:
  9639  001FFE  90D8               	bcf	status,0,c
  9640  002000  321E               	rrcf	___awdiv@divisor+1,f,c
  9641  002002  321D               	rrcf	___awdiv@divisor,f,c
  9642  002004  2E1F               	decfsz	___awdiv@counter,f,c
  9643  002006  D7ED               	goto	l4381
  9644  002008                     l4393:
  9645  002008  5020               	movf	___awdiv@sign,w,c
  9646  00200A  B4D8               	btfsc	status,2,c
  9647  00200C  D004               	goto	l4397
  9648  00200E  6C21               	negf	___awdiv@quotient,c
  9649  002010  1E22               	comf	___awdiv@quotient+1,f,c
  9650  002012  B0D8               	btfsc	status,0,c
  9651  002014  2A22               	incf	___awdiv@quotient+1,f,c
  9652  002016                     l4397:
  9653  002016  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  9654  00201A  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  9655  00201E  0012               	return	
  9656  002020                     __end_of___awdiv:
  9657                           	opt stack 0
  9658                           tblptru	equ	0xFF8
  9659                           tblptrh	equ	0xFF7
  9660                           tblptrl	equ	0xFF6
  9661                           tablat	equ	0xFF5
  9662                           prodh	equ	0xFF4
  9663                           prodl	equ	0xFF3
  9664                           intcon	equ	0xFF2
  9665                           intcon2	equ	0xFF1
  9666                           indf0	equ	0xFEF
  9667                           postinc0	equ	0xFEE
  9668                           fsr0h	equ	0xFEA
  9669                           fsr0l	equ	0xFE9
  9670                           wreg	equ	0xFE8
  9671                           indf1	equ	0xFE7
  9672                           fsr1h	equ	0xFE2
  9673                           fsr1l	equ	0xFE1
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           postdec2	equ	0xFDD
  9677                           plusw2	equ	0xFDB
  9678                           fsr2h	equ	0xFDA
  9679                           fsr2l	equ	0xFD9
  9680                           status	equ	0xFD8
  9681                           
  9682 ;; *************** function _LEDbegin *****************
  9683 ;; Defined at:
  9684 ;;		line 85 in file "LED_BarGraph.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  i2c_addr        1    wreg     unsigned char 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  i2c_addr        1   18[BANK0 ] unsigned char 
  9689 ;;  writeBuffer     3   13[BANK0 ] unsigned char [3]
  9690 ;;  timeOut         2   16[BANK0 ] unsigned int 
  9691 ;;  status          1   19[BANK0 ] enum E6985
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9701 ;;      Params:         0       0       0       0       0       0       0
  9702 ;;      Locals:         0       7       0       0       0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0
  9704 ;;      Totals:         0       7       0       0       0       0       0
  9705 ;;Total ram usage:        7 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    7
  9708 ;; This function calls:
  9709 ;;		_I2C1_MasterWrite
  9710 ;;		_LEDBsetBrightness
  9711 ;;		_LEDblinkRate
  9712 ;; This function is called by:
  9713 ;;		_main
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text48
  9718  001ADE                     __ptext48:
  9719                           	opt stack 0
  9720  001ADE                     _LEDbegin:
  9721                           	opt stack 23
  9722                           
  9723                           ;incstack = 0
  9724                           ;LEDbegin@i2c_addr stored from wreg
  9725  001ADE  0100               	movlb	0	; () banked
  9726  001AE0  6FBD               	movwf	LEDbegin@i2c_addr& (0+255),b
  9727                           
  9728                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
  9729                           ;LED_BarGraph.c: 87: uint16_t timeOut;
  9730                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
  9731  001AE2  0E21               	movlw	33
  9732  001AE4  0100               	movlb	0	; () banked
  9733  001AE6  6FB8               	movwf	LEDbegin@writeBuffer& (0+255),b
  9734                           
  9735                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9736  001AE8  0E02               	movlw	2
  9737  001AEA  0100               	movlb	0	; () banked
  9738  001AEC  6FBE               	movwf	LEDbegin@status& (0+255),b
  9739                           
  9740                           ;LED_BarGraph.c: 91: timeOut = 0;
  9741  001AEE  0E00               	movlw	0
  9742  001AF0  0100               	movlb	0	; () banked
  9743  001AF2  6FBC               	movwf	(LEDbegin@timeOut+1)& (0+255),b
  9744  001AF4  0E00               	movlw	0
  9745  001AF6  6FBB               	movwf	LEDbegin@timeOut& (0+255),b
  9746                           
  9747                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
  9748  001AF8  D02F               	goto	l6523
  9749  001AFA                     l6503:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
  9753                           ;LED_BarGraph.c: 95: 1,
  9754                           ;LED_BarGraph.c: 96: i2c_addr,
  9755                           ;LED_BarGraph.c: 97: &status);
  9756  001AFA  0EB8               	movlw	low LEDbegin@writeBuffer
  9757  001AFC  0100               	movlb	0	; () banked
  9758  001AFE  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9759  001B00  0E00               	movlw	high LEDbegin@writeBuffer
  9760  001B02  0100               	movlb	0	; () banked
  9761  001B04  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9762  001B06  0E00               	movlw	0
  9763  001B08  0100               	movlb	0	; () banked
  9764  001B0A  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9765  001B0C  0E01               	movlw	1
  9766  001B0E  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  9767  001B10  C0BD  F0AF         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
  9768  001B14  0100               	movlb	0	; () banked
  9769  001B16  6BB0               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
  9770  001B18  0EBE               	movlw	low LEDbegin@status
  9771  001B1A  0100               	movlb	0	; () banked
  9772  001B1C  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9773  001B1E  0E00               	movlw	high LEDbegin@status
  9774  001B20  0100               	movlb	0	; () banked
  9775  001B22  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9776  001B24  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  9777  001B28                     l6505:
  9778  001B28  0E02               	movlw	2
  9779  001B2A  0100               	movlb	0	; () banked
  9780  001B2C  19BE               	xorwf	LEDbegin@status& (0+255),w,b
  9781  001B2E  B4D8               	btfsc	status,2,c
  9782  001B30  D7FB               	goto	l6505
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
  9786                           
  9787                           ; BSR set to: 0
  9788  001B32  0100               	movlb	0	; () banked
  9789  001B34  51BE               	movf	LEDbegin@status& (0+255),w,b
  9790  001B36  0100               	movlb	0	; () banked
  9791  001B38  B4D8               	btfsc	status,2,c
  9792  001B3A  D012               	goto	l6525
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;LED_BarGraph.c: 104: if (timeOut == 4)
  9796                           
  9797                           ; BSR set to: 0
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;LED_BarGraph.c: 103: break;
  9801  001B3C  0E04               	movlw	4
  9802  001B3E  0100               	movlb	0	; () banked
  9803  001B40  19BB               	xorwf	LEDbegin@timeOut& (0+255),w,b
  9804  001B42  0100               	movlb	0	; () banked
  9805  001B44  11BC               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
  9806  001B46  B4D8               	btfsc	status,2,c
  9807  001B48  D00B               	goto	l6525
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
  9811                           
  9812                           ; BSR set to: 0
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;LED_BarGraph.c: 105: break;
  9816  001B4A  0100               	movlb	0	; () banked
  9817  001B4C  05BE               	decf	LEDbegin@status& (0+255),w,b
  9818  001B4E  B4D8               	btfsc	status,2,c
  9819  001B50  D007               	goto	l6525
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;LED_BarGraph.c: 108: else
  9823                           ;LED_BarGraph.c: 109: timeOut++;
  9824                           
  9825                           ; BSR set to: 0
  9826                           
  9827                           ; BSR set to: 0
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;LED_BarGraph.c: 107: break;
  9831  001B52  0100               	movlb	0	; () banked
  9832  001B54  4BBB               	infsnz	LEDbegin@timeOut& (0+255),f,b
  9833  001B56  2BBC               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
  9834  001B58                     l6523:
  9835                           
  9836                           ; BSR set to: 0
  9837  001B58  0100               	movlb	0	; () banked
  9838  001B5A  05BE               	decf	LEDbegin@status& (0+255),w,b
  9839  001B5C  A4D8               	btfss	status,2,c
  9840  001B5E  D7CD               	goto	l6503
  9841  001B60                     l6525:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;LED_BarGraph.c: 110: }
  9845                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
  9846  001B60  0E00               	movlw	0
  9847  001B62  6E26               	movwf	LEDblinkRate@b+1,c
  9848  001B64  0E00               	movlw	0
  9849  001B66  6E25               	movwf	LEDblinkRate@b,c
  9850  001B68  C0BD  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
  9851  001B6C  ECC1  F00D         	call	_LEDblinkRate	;wreg free
  9852                           
  9853                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
  9854  001B70  0E00               	movlw	0
  9855  001B72  6E26               	movwf	LEDBsetBrightness@b+1,c
  9856  001B74  0E0F               	movlw	15
  9857  001B76  6E25               	movwf	LEDBsetBrightness@b,c
  9858  001B78  C0BD  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
  9859  001B7C  EC5D  F00E         	call	_LEDBsetBrightness	;wreg free
  9860  001B80  0012               	return		;funcret
  9861  001B82                     __end_of_LEDbegin:
  9862                           	opt stack 0
  9863                           tblptru	equ	0xFF8
  9864                           tblptrh	equ	0xFF7
  9865                           tblptrl	equ	0xFF6
  9866                           tablat	equ	0xFF5
  9867                           prodh	equ	0xFF4
  9868                           prodl	equ	0xFF3
  9869                           intcon	equ	0xFF2
  9870                           intcon2	equ	0xFF1
  9871                           indf0	equ	0xFEF
  9872                           postinc0	equ	0xFEE
  9873                           fsr0h	equ	0xFEA
  9874                           fsr0l	equ	0xFE9
  9875                           wreg	equ	0xFE8
  9876                           indf1	equ	0xFE7
  9877                           fsr1h	equ	0xFE2
  9878                           fsr1l	equ	0xFE1
  9879                           indf2	equ	0xFDF
  9880                           postinc2	equ	0xFDE
  9881                           postdec2	equ	0xFDD
  9882                           plusw2	equ	0xFDB
  9883                           fsr2h	equ	0xFDA
  9884                           fsr2l	equ	0xFD9
  9885                           status	equ	0xFD8
  9886                           
  9887 ;; *************** function _LEDblinkRate *****************
  9888 ;; Defined at:
  9889 ;;		line 55 in file "LED_BarGraph.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  b               2   36[COMRAM] int 
  9892 ;;  i2c_addr        1   38[COMRAM] unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  writeBuffer     2   10[BANK0 ] unsigned char [2]
  9895 ;;  timeOut         2    8[BANK0 ] unsigned int 
  9896 ;;  status          1   12[BANK0 ] enum E6985
  9897 ;; Return value:  Size  Location     Type
  9898 ;;                  1    wreg      void 
  9899 ;; Registers used:
  9900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9906 ;;      Params:         3       0       0       0       0       0       0
  9907 ;;      Locals:         0       5       0       0       0       0       0
  9908 ;;      Temps:          0       0       0       0       0       0       0
  9909 ;;      Totals:         3       5       0       0       0       0       0
  9910 ;;Total ram usage:        8 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    6
  9913 ;; This function calls:
  9914 ;;		_I2C1_MasterWrite
  9915 ;; This function is called by:
  9916 ;;		_LEDbegin
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text49
  9921  001B82                     __ptext49:
  9922                           	opt stack 0
  9923  001B82                     _LEDblinkRate:
  9924                           	opt stack 23
  9925                           
  9926                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
  9927                           
  9928                           ;incstack = 0
  9929  001B82  BE26               	btfsc	LEDblinkRate@b+1,7,c
  9930  001B84  D00A               	goto	l6241
  9931  001B86  5026               	movf	LEDblinkRate@b+1,w,c
  9932  001B88  E104               	bnz	u6280
  9933  001B8A  0E04               	movlw	4
  9934  001B8C  5C25               	subwf	LEDblinkRate@b,w,c
  9935  001B8E  A0D8               	btfss	status,0,c
  9936  001B90  D004               	goto	l6241
  9937  001B92                     u6280:
  9938  001B92  0E00               	movlw	0
  9939  001B94  6E26               	movwf	LEDblinkRate@b+1,c
  9940  001B96  0E00               	movlw	0
  9941  001B98  6E25               	movwf	LEDblinkRate@b,c
  9942  001B9A                     l6241:
  9943                           
  9944                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
  9945                           ;LED_BarGraph.c: 58: uint16_t timeOut;
  9946                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
  9947  001B9A  5025               	movf	LEDblinkRate@b,w,c
  9948  001B9C  2425               	addwf	LEDblinkRate@b,w,c
  9949  001B9E  0981               	iorlw	129
  9950  001BA0  0100               	movlb	0	; () banked
  9951  001BA2  6FB5               	movwf	LEDblinkRate@writeBuffer& (0+255),b
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9955  001BA4  0E02               	movlw	2
  9956  001BA6  0100               	movlb	0	; () banked
  9957  001BA8  6FB7               	movwf	LEDblinkRate@status& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;LED_BarGraph.c: 62: timeOut = 0;
  9961  001BAA  0E00               	movlw	0
  9962  001BAC  0100               	movlb	0	; () banked
  9963  001BAE  6FB4               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
  9964  001BB0  0E00               	movlw	0
  9965  001BB2  6FB3               	movwf	LEDblinkRate@timeOut& (0+255),b
  9966                           
  9967                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
  9968  001BB4  D02F               	goto	l6267
  9969  001BB6                     l6247:
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
  9973                           ;LED_BarGraph.c: 66: 1,
  9974                           ;LED_BarGraph.c: 67: i2c_addr,
  9975                           ;LED_BarGraph.c: 68: &status);
  9976  001BB6  0EB5               	movlw	low LEDblinkRate@writeBuffer
  9977  001BB8  0100               	movlb	0	; () banked
  9978  001BBA  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9979  001BBC  0E00               	movlw	high LEDblinkRate@writeBuffer
  9980  001BBE  0100               	movlb	0	; () banked
  9981  001BC0  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9982  001BC2  0E00               	movlw	0
  9983  001BC4  0100               	movlb	0	; () banked
  9984  001BC6  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9985  001BC8  0E01               	movlw	1
  9986  001BCA  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
  9987  001BCC  C027  F0AF         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
  9988  001BD0  0100               	movlb	0	; () banked
  9989  001BD2  6BB0               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
  9990  001BD4  0EB7               	movlw	low LEDblinkRate@status
  9991  001BD6  0100               	movlb	0	; () banked
  9992  001BD8  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9993  001BDA  0E00               	movlw	high LEDblinkRate@status
  9994  001BDC  0100               	movlb	0	; () banked
  9995  001BDE  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9996  001BE0  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
  9997  001BE4                     l6249:
  9998  001BE4  0E02               	movlw	2
  9999  001BE6  0100               	movlb	0	; () banked
 10000  001BE8  19B7               	xorwf	LEDblinkRate@status& (0+255),w,b
 10001  001BEA  B4D8               	btfsc	status,2,c
 10002  001BEC  D7FB               	goto	l6249
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 10006                           
 10007                           ; BSR set to: 0
 10008  001BEE  0100               	movlb	0	; () banked
 10009  001BF0  51B7               	movf	LEDblinkRate@status& (0+255),w,b
 10010  001BF2  0100               	movlb	0	; () banked
 10011  001BF4  B4D8               	btfsc	status,2,c
 10012  001BF6  0012               	return	
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;LED_BarGraph.c: 75: if (timeOut == 4)
 10016                           
 10017                           ; BSR set to: 0
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;LED_BarGraph.c: 74: break;
 10021  001BF8  0E04               	movlw	4
 10022  001BFA  0100               	movlb	0	; () banked
 10023  001BFC  19B3               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 10024  001BFE  0100               	movlb	0	; () banked
 10025  001C00  11B4               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 10026  001C02  B4D8               	btfsc	status,2,c
 10027  001C04  0012               	return	
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 10031                           
 10032                           ; BSR set to: 0
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;LED_BarGraph.c: 76: break;
 10036  001C06  0100               	movlb	0	; () banked
 10037  001C08  05B7               	decf	LEDblinkRate@status& (0+255),w,b
 10038  001C0A  B4D8               	btfsc	status,2,c
 10039  001C0C  0012               	return	
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;LED_BarGraph.c: 79: else
 10043                           ;LED_BarGraph.c: 80: timeOut++;
 10044                           
 10045                           ; BSR set to: 0
 10046                           
 10047                           ; BSR set to: 0
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;LED_BarGraph.c: 78: break;
 10051  001C0E  0100               	movlb	0	; () banked
 10052  001C10  4BB3               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 10053  001C12  2BB4               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 10054  001C14                     l6267:
 10055                           
 10056                           ; BSR set to: 0
 10057  001C14  0100               	movlb	0	; () banked
 10058  001C16  05B7               	decf	LEDblinkRate@status& (0+255),w,b
 10059  001C18  B4D8               	btfsc	status,2,c
 10060  001C1A  0012               	return	
 10061  001C1C  D7CC               	goto	l6247
 10062  001C1E                     __end_of_LEDblinkRate:
 10063                           	opt stack 0
 10064                           tblptru	equ	0xFF8
 10065                           tblptrh	equ	0xFF7
 10066                           tblptrl	equ	0xFF6
 10067                           tablat	equ	0xFF5
 10068                           prodh	equ	0xFF4
 10069                           prodl	equ	0xFF3
 10070                           intcon	equ	0xFF2
 10071                           intcon2	equ	0xFF1
 10072                           indf0	equ	0xFEF
 10073                           postinc0	equ	0xFEE
 10074                           fsr0h	equ	0xFEA
 10075                           fsr0l	equ	0xFE9
 10076                           wreg	equ	0xFE8
 10077                           indf1	equ	0xFE7
 10078                           fsr1h	equ	0xFE2
 10079                           fsr1l	equ	0xFE1
 10080                           indf2	equ	0xFDF
 10081                           postinc2	equ	0xFDE
 10082                           postdec2	equ	0xFDD
 10083                           plusw2	equ	0xFDB
 10084                           fsr2h	equ	0xFDA
 10085                           fsr2l	equ	0xFD9
 10086                           status	equ	0xFD8
 10087                           
 10088 ;; *************** function _LEDBsetBrightness *****************
 10089 ;; Defined at:
 10090 ;;		line 25 in file "LED_BarGraph.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  b               2   36[COMRAM] int 
 10093 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  writeBuffer     2   10[BANK0 ] unsigned char [2]
 10096 ;;  timeOut         2    8[BANK0 ] unsigned int 
 10097 ;;  status          1   12[BANK0 ] enum E6985
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10107 ;;      Params:         3       0       0       0       0       0       0
 10108 ;;      Locals:         0       5       0       0       0       0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0
 10110 ;;      Totals:         3       5       0       0       0       0       0
 10111 ;;Total ram usage:        8 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    6
 10114 ;; This function calls:
 10115 ;;		_I2C1_MasterWrite
 10116 ;; This function is called by:
 10117 ;;		_LEDbegin
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text50
 10122  001CBA                     __ptext50:
 10123                           	opt stack 0
 10124  001CBA                     _LEDBsetBrightness:
 10125                           	opt stack 23
 10126                           
 10127                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;incstack = 0
 10131  001CBA  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 10132  001CBC  D00A               	goto	l6209
 10133  001CBE  5026               	movf	LEDBsetBrightness@b+1,w,c
 10134  001CC0  E104               	bnz	u6220
 10135  001CC2  0E10               	movlw	16
 10136  001CC4  5C25               	subwf	LEDBsetBrightness@b,w,c
 10137  001CC6  A0D8               	btfss	status,0,c
 10138  001CC8  D004               	goto	l6209
 10139  001CCA                     u6220:
 10140  001CCA  0E00               	movlw	0
 10141  001CCC  6E26               	movwf	LEDBsetBrightness@b+1,c
 10142  001CCE  0E0F               	movlw	15
 10143  001CD0  6E25               	movwf	LEDBsetBrightness@b,c
 10144  001CD2                     l6209:
 10145                           
 10146                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 10147                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 10148                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 10149  001CD2  5025               	movf	LEDBsetBrightness@b,w,c
 10150  001CD4  09E0               	iorlw	224
 10151  001CD6  0100               	movlb	0	; () banked
 10152  001CD8  6FB5               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10156  001CDA  0E02               	movlw	2
 10157  001CDC  0100               	movlb	0	; () banked
 10158  001CDE  6FB7               	movwf	LEDBsetBrightness@status& (0+255),b
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;LED_BarGraph.c: 32: timeOut = 0;
 10162  001CE0  0E00               	movlw	0
 10163  001CE2  0100               	movlb	0	; () banked
 10164  001CE4  6FB4               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 10165  001CE6  0E00               	movlw	0
 10166  001CE8  6FB3               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 10167                           
 10168                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 10169  001CEA  D02F               	goto	l6235
 10170  001CEC                     l6215:
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 10174                           ;LED_BarGraph.c: 36: 1,
 10175                           ;LED_BarGraph.c: 37: i2c_addr,
 10176                           ;LED_BarGraph.c: 38: &status);
 10177  001CEC  0EB5               	movlw	low LEDBsetBrightness@writeBuffer
 10178  001CEE  0100               	movlb	0	; () banked
 10179  001CF0  6FAB               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10180  001CF2  0E00               	movlw	high LEDBsetBrightness@writeBuffer
 10181  001CF4  0100               	movlb	0	; () banked
 10182  001CF6  6FAC               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10183  001CF8  0E00               	movlw	0
 10184  001CFA  0100               	movlb	0	; () banked
 10185  001CFC  6FAE               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10186  001CFE  0E01               	movlw	1
 10187  001D00  6FAD               	movwf	I2C1_MasterWrite@length& (0+255),b
 10188  001D02  C027  F0AF         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 10189  001D06  0100               	movlb	0	; () banked
 10190  001D08  6BB0               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10191  001D0A  0EB7               	movlw	low LEDBsetBrightness@status
 10192  001D0C  0100               	movlb	0	; () banked
 10193  001D0E  6FB1               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10194  001D10  0E00               	movlw	high LEDBsetBrightness@status
 10195  001D12  0100               	movlb	0	; () banked
 10196  001D14  6FB2               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10197  001D16  EC72  F011         	call	_I2C1_MasterWrite	;wreg free
 10198  001D1A                     l6217:
 10199  001D1A  0E02               	movlw	2
 10200  001D1C  0100               	movlb	0	; () banked
 10201  001D1E  19B7               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 10202  001D20  B4D8               	btfsc	status,2,c
 10203  001D22  D7FB               	goto	l6217
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 10207                           
 10208                           ; BSR set to: 0
 10209  001D24  0100               	movlb	0	; () banked
 10210  001D26  51B7               	movf	LEDBsetBrightness@status& (0+255),w,b
 10211  001D28  0100               	movlb	0	; () banked
 10212  001D2A  B4D8               	btfsc	status,2,c
 10213  001D2C  0012               	return	
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;LED_BarGraph.c: 45: if (timeOut == 4)
 10217                           
 10218                           ; BSR set to: 0
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;LED_BarGraph.c: 44: break;
 10222  001D2E  0E04               	movlw	4
 10223  001D30  0100               	movlb	0	; () banked
 10224  001D32  19B3               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 10225  001D34  0100               	movlb	0	; () banked
 10226  001D36  11B4               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 10227  001D38  B4D8               	btfsc	status,2,c
 10228  001D3A  0012               	return	
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 10232                           
 10233                           ; BSR set to: 0
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;LED_BarGraph.c: 46: break;
 10237  001D3C  0100               	movlb	0	; () banked
 10238  001D3E  05B7               	decf	LEDBsetBrightness@status& (0+255),w,b
 10239  001D40  B4D8               	btfsc	status,2,c
 10240  001D42  0012               	return	
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;LED_BarGraph.c: 49: else
 10244                           ;LED_BarGraph.c: 50: timeOut++;
 10245                           
 10246                           ; BSR set to: 0
 10247                           
 10248                           ; BSR set to: 0
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;LED_BarGraph.c: 48: break;
 10252  001D44  0100               	movlb	0	; () banked
 10253  001D46  4BB3               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 10254  001D48  2BB4               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 10255  001D4A                     l6235:
 10256                           
 10257                           ; BSR set to: 0
 10258  001D4A  0100               	movlb	0	; () banked
 10259  001D4C  05B7               	decf	LEDBsetBrightness@status& (0+255),w,b
 10260  001D4E  B4D8               	btfsc	status,2,c
 10261  001D50  0012               	return	
 10262  001D52  D7CC               	goto	l6215
 10263  001D54                     __end_of_LEDBsetBrightness:
 10264                           	opt stack 0
 10265                           tblptru	equ	0xFF8
 10266                           tblptrh	equ	0xFF7
 10267                           tblptrl	equ	0xFF6
 10268                           tablat	equ	0xFF5
 10269                           prodh	equ	0xFF4
 10270                           prodl	equ	0xFF3
 10271                           intcon	equ	0xFF2
 10272                           intcon2	equ	0xFF1
 10273                           indf0	equ	0xFEF
 10274                           postinc0	equ	0xFEE
 10275                           fsr0h	equ	0xFEA
 10276                           fsr0l	equ	0xFE9
 10277                           wreg	equ	0xFE8
 10278                           indf1	equ	0xFE7
 10279                           fsr1h	equ	0xFE2
 10280                           fsr1l	equ	0xFE1
 10281                           indf2	equ	0xFDF
 10282                           postinc2	equ	0xFDE
 10283                           postdec2	equ	0xFDD
 10284                           plusw2	equ	0xFDB
 10285                           fsr2h	equ	0xFDA
 10286                           fsr2l	equ	0xFD9
 10287                           status	equ	0xFD8
 10288                           
 10289 ;; *************** function _I2C1_MasterWrite *****************
 10290 ;; Defined at:
 10291 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 10294 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 10295 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 10296 ;;  length          2    2[BANK0 ] int 
 10297 ;;  address         2    4[BANK0 ] unsigned int 
 10298 ;;  pflag           2    6[BANK0 ] PTR enum E6966
 10299 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 10300 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;		None
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      void 
 10305 ;; Registers used:
 10306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10312 ;;      Params:         0       8       0       0       0       0       0
 10313 ;;      Locals:         0       0       0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0
 10315 ;;      Totals:         0       8       0       0       0       0       0
 10316 ;;Total ram usage:        8 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    5
 10319 ;; This function calls:
 10320 ;;		_I2C1_MasterTRBInsert
 10321 ;;		_I2C1_MasterWriteTRBBuild
 10322 ;; This function is called by:
 10323 ;;		_LEDBsetBrightness
 10324 ;;		_LEDblinkRate
 10325 ;;		_LEDbegin
 10326 ;;		_LEDwriteDisplay
 10327 ;;		_OLED_command
 10328 ;;		_oledPutChar
 10329 ;;		_Display
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text51
 10334  0022E4                     __ptext51:
 10335                           	opt stack 0
 10336  0022E4                     _I2C1_MasterWrite:
 10337                           	opt stack 22
 10338                           
 10339                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 10340                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;incstack = 0
 10344  0022E4  B030               	btfsc	_i2c1_object+4,0,c
 10345  0022E6  D021               	goto	l5811
 10346                           
 10347                           ;i2c1.c: 561: {
 10348                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 10349  0022E8  0E75               	movlw	low I2C1_MasterWrite@trBlock
 10350  0022EA  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 10351  0022EC  0E01               	movlw	high I2C1_MasterWrite@trBlock
 10352  0022EE  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 10353  0022F0  C0AB  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 10354  0022F4  C0AC  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 10355  0022F8  C0AD  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 10356  0022FC  C0AE  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 10357  002300  C0AF  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 10358  002304  C0B0  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 10359  002308  ECE7  F011         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 10360                           
 10361                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10362  00230C  0E00               	movlw	0
 10363  00230E  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 10364  002310  0E01               	movlw	1
 10365  002312  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 10366  002314  0E75               	movlw	low I2C1_MasterWrite@trBlock
 10367  002316  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 10368  002318  0E01               	movlw	high I2C1_MasterWrite@trBlock
 10369  00231A  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 10370  00231C  C0B1  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 10371  002320  C0B2  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 10372  002324  EC0F  F00E         	call	_I2C1_MasterTRBInsert	;wreg free
 10373                           
 10374                           ;i2c1.c: 564: }
 10375  002328  0012               	return	
 10376  00232A                     l5811:
 10377                           
 10378                           ;i2c1.c: 565: else
 10379                           ;i2c1.c: 566: {
 10380                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 10381  00232A  C0B1  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 10382  00232E  C0B2  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 10383  002332  0E01               	movlw	1
 10384  002334  6EDF               	movwf	indf2,c
 10385  002336  0012               	return	
 10386  002338                     __end_of_I2C1_MasterWrite:
 10387                           	opt stack 0
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           intcon	equ	0xFF2
 10395                           intcon2	equ	0xFF1
 10396                           indf0	equ	0xFEF
 10397                           postinc0	equ	0xFEE
 10398                           fsr0h	equ	0xFEA
 10399                           fsr0l	equ	0xFE9
 10400                           wreg	equ	0xFE8
 10401                           indf1	equ	0xFE7
 10402                           fsr1h	equ	0xFE2
 10403                           fsr1l	equ	0xFE1
 10404                           indf2	equ	0xFDF
 10405                           postinc2	equ	0xFDE
 10406                           postdec2	equ	0xFDD
 10407                           plusw2	equ	0xFDB
 10408                           fsr2h	equ	0xFDA
 10409                           fsr2l	equ	0xFD9
 10410                           status	equ	0xFD8
 10411                           
 10412 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10413 ;; Defined at:
 10414 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  ptrb            2   26[COMRAM] PTR struct .
 10417 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 10418 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 10419 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 10420 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 10421 ;;  length          2   30[COMRAM] int 
 10422 ;;  address         2   32[COMRAM] unsigned int 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;		None
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10434 ;;      Params:         8       0       0       0       0       0       0
 10435 ;;      Locals:         0       0       0       0       0       0       0
 10436 ;;      Temps:          2       0       0       0       0       0       0
 10437 ;;      Totals:        10       0       0       0       0       0       0
 10438 ;;Total ram usage:       10 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    4
 10441 ;; This function calls:
 10442 ;;		Nothing
 10443 ;; This function is called by:
 10444 ;;		_I2C1_MasterWrite
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text52
 10449  0023CE                     __ptext52:
 10450                           	opt stack 0
 10451  0023CE                     _I2C1_MasterWriteTRBBuild:
 10452                           	opt stack 22
 10453                           
 10454                           ;i2c1.c: 666: ptrb->address = address << 1;
 10455                           
 10456                           ;incstack = 0
 10457  0023CE  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 10458  0023D2  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 10459  0023D6  90D8               	bcf	status,0,c
 10460  0023D8  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 10461  0023DA  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 10462  0023DC  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 10463  0023E0  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 10464  0023E4  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 10465  0023E8  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 10466                           
 10467                           ;i2c1.c: 667: ptrb->length = length;
 10468  0023EC  EE20 F002          	lfsr	2,2
 10469  0023F0  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10470  0023F2  26D9               	addwf	fsr2l,f,c
 10471  0023F4  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10472  0023F6  22DA               	addwfc	fsr2h,f,c
 10473  0023F8  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 10474                           
 10475                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 10476  0023FC  EE20 F003          	lfsr	2,3
 10477  002400  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 10478  002402  26D9               	addwf	fsr2l,f,c
 10479  002404  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 10480  002406  22DA               	addwfc	fsr2h,f,c
 10481  002408  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 10482  00240C  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 10483  002410  0012               	return		;funcret
 10484  002412                     __end_of_I2C1_MasterWriteTRBBuild:
 10485                           	opt stack 0
 10486                           tblptru	equ	0xFF8
 10487                           tblptrh	equ	0xFF7
 10488                           tblptrl	equ	0xFF6
 10489                           tablat	equ	0xFF5
 10490                           prodh	equ	0xFF4
 10491                           prodl	equ	0xFF3
 10492                           intcon	equ	0xFF2
 10493                           intcon2	equ	0xFF1
 10494                           indf0	equ	0xFEF
 10495                           postinc0	equ	0xFEE
 10496                           fsr0h	equ	0xFEA
 10497                           fsr0l	equ	0xFE9
 10498                           wreg	equ	0xFE8
 10499                           indf1	equ	0xFE7
 10500                           fsr1h	equ	0xFE2
 10501                           fsr1l	equ	0xFE1
 10502                           indf2	equ	0xFDF
 10503                           postinc2	equ	0xFDE
 10504                           postdec2	equ	0xFDD
 10505                           plusw2	equ	0xFDB
 10506                           fsr2h	equ	0xFDA
 10507                           fsr2l	equ	0xFD9
 10508                           status	equ	0xFD8
 10509                           
 10510 ;; *************** function _I2C1_MasterTRBInsert *****************
 10511 ;; Defined at:
 10512 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  count           2   26[COMRAM] int 
 10515 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 10516 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 10517 ;;  pflag           2   30[COMRAM] PTR enum E6966
 10518 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 10519 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10531 ;;      Params:         6       0       0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0
 10533 ;;      Temps:          1       0       0       0       0       0       0
 10534 ;;      Totals:         7       0       0       0       0       0       0
 10535 ;;Total ram usage:        7 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    4
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_I2C1_MasterWrite
 10542 ;;		_I2C1_MasterRead
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text53
 10547  001C1E                     __ptext53:
 10548                           	opt stack 0
 10549  001C1E                     _I2C1_MasterTRBInsert:
 10550                           	opt stack 22
 10551                           
 10552                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 10553                           
 10554                           ;incstack = 0
 10555  001C1E  B030               	btfsc	_i2c1_object+4,0,c
 10556  001C20  D039               	goto	l5773
 10557                           
 10558                           ;i2c1.c: 602: {
 10559                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 10560  001C22  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10561  001C26  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10562  001C2A  0E02               	movlw	2
 10563  001C2C  6EDF               	movwf	indf2,c
 10564                           
 10565                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10566  001C2E  EE20 F001          	lfsr	2,1
 10567  001C32  502C               	movf	_i2c1_object,w,c
 10568  001C34  26D9               	addwf	fsr2l,f,c
 10569  001C36  502D               	movf	_i2c1_object+1,w,c
 10570  001C38  22DA               	addwfc	fsr2h,f,c
 10571  001C3A  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 10572  001C3E  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 10573                           
 10574                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 10575  001C42  C02C  FFD9         	movff	_i2c1_object,fsr2l
 10576  001C46  C02D  FFDA         	movff	_i2c1_object+1,fsr2h
 10577  001C4A  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 10578                           
 10579                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 10580  001C4E  EE20 F003          	lfsr	2,3
 10581  001C52  502C               	movf	_i2c1_object,w,c
 10582  001C54  26D9               	addwf	fsr2l,f,c
 10583  001C56  502D               	movf	_i2c1_object+1,w,c
 10584  001C58  22DA               	addwfc	fsr2h,f,c
 10585  001C5A  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 10586  001C5E  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 10587                           
 10588                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 10589  001C62  0E05               	movlw	5
 10590  001C64  262C               	addwf	_i2c1_object,f,c
 10591  001C66  0E00               	movlw	0
 10592  001C68  222D               	addwfc	_i2c1_object+1,f,c
 10593                           
 10594                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 10595  001C6A  0EA9               	movlw	low (_i2c1_tr_queue+5)
 10596  001C6C  182C               	xorwf	_i2c1_object,w,c
 10597  001C6E  E108               	bnz	l5769
 10598  001C70  0E00               	movlw	high (_i2c1_tr_queue+5)
 10599  001C72  182D               	xorwf	_i2c1_object+1,w,c
 10600  001C74  A4D8               	btfss	status,2,c
 10601  001C76  D004               	goto	l5769
 10602                           
 10603                           ;i2c1.c: 612: {
 10604                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 10605  001C78  0EA4               	movlw	low _i2c1_tr_queue
 10606  001C7A  6E2C               	movwf	_i2c1_object,c
 10607  001C7C  0E00               	movlw	high _i2c1_tr_queue
 10608  001C7E  6E2D               	movwf	_i2c1_object+1,c
 10609  001C80                     l5769:
 10610                           
 10611                           ;i2c1.c: 615: }
 10612                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 10613  001C80  9230               	bcf	_i2c1_object+4,1,c
 10614                           
 10615                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 10616  001C82  502C               	movf	_i2c1_object,w,c
 10617  001C84  182E               	xorwf	_i2c1_object+2,w,c
 10618  001C86  E10C               	bnz	l5775
 10619  001C88  502D               	movf	_i2c1_object+1,w,c
 10620  001C8A  182F               	xorwf	_i2c1_object+3,w,c
 10621  001C8C  A4D8               	btfss	status,2,c
 10622  001C8E  D008               	goto	l5775
 10623                           
 10624                           ;i2c1.c: 623: {
 10625                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 10626  001C90  8030               	bsf	_i2c1_object+4,0,c
 10627                           
 10628                           ;i2c1.c: 626: }
 10629                           ;i2c1.c: 628: }
 10630  001C92  D006               	goto	l5775
 10631  001C94                     l5773:
 10632                           
 10633                           ;i2c1.c: 629: else
 10634                           ;i2c1.c: 630: {
 10635                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 10636  001C94  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10637  001C98  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10638  001C9C  0E01               	movlw	1
 10639  001C9E  6EDF               	movwf	indf2,c
 10640  001CA0                     l5775:
 10641                           
 10642                           ;i2c1.c: 632: }
 10643                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 10644  001CA0  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 10645  001CA4  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 10646  001CA8  0E02               	movlw	2
 10647  001CAA  18DE               	xorwf	postinc2,w,c
 10648  001CAC  A4D8               	btfss	status,2,c
 10649  001CAE  0012               	return	
 10650  001CB0                     l5779:
 10651  001CB0  503F               	movf	_i2c1_state,w,c
 10652  001CB2  A4D8               	btfss	status,2,c
 10653  001CB4  D7FD               	goto	l5779
 10654                           
 10655                           ;i2c1.c: 638: {
 10656                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 10657  001CB6  869E               	bsf	3998,3,c	;volatile
 10658  001CB8  0012               	return	
 10659  001CBA                     __end_of_I2C1_MasterTRBInsert:
 10660                           	opt stack 0
 10661                           tblptru	equ	0xFF8
 10662                           tblptrh	equ	0xFF7
 10663                           tblptrl	equ	0xFF6
 10664                           tablat	equ	0xFF5
 10665                           prodh	equ	0xFF4
 10666                           prodl	equ	0xFF3
 10667                           intcon	equ	0xFF2
 10668                           intcon2	equ	0xFF1
 10669                           indf0	equ	0xFEF
 10670                           postinc0	equ	0xFEE
 10671                           fsr0h	equ	0xFEA
 10672                           fsr0l	equ	0xFE9
 10673                           wreg	equ	0xFE8
 10674                           indf1	equ	0xFE7
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           plusw2	equ	0xFDB
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function _GetTime *****************
 10686 ;; Defined at:
 10687 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  2   26[COMRAM] int 
 10694 ;; Registers used:
 10695 ;;		None
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10701 ;;      Params:         2       0       0       0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0
 10704 ;;      Totals:         2       0       0       0       0       0       0
 10705 ;;Total ram usage:        2 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    4
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_main
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text54
 10716  00275C                     __ptext54:
 10717                           	opt stack 0
 10718  00275C                     _GetTime:
 10719                           	opt stack 26
 10720                           
 10721                           ;tmr0.c: 98: return time;
 10722                           
 10723                           ;incstack = 0
 10724  00275C  C03D  F01B         	movff	_time,?_GetTime	;volatile
 10725  002760  6A1C               	clrf	?_GetTime+1,c
 10726  002762  0012               	return		;funcret
 10727  002764                     __end_of_GetTime:
 10728                           	opt stack 0
 10729                           tblptru	equ	0xFF8
 10730                           tblptrh	equ	0xFF7
 10731                           tblptrl	equ	0xFF6
 10732                           tablat	equ	0xFF5
 10733                           prodh	equ	0xFF4
 10734                           prodl	equ	0xFF3
 10735                           intcon	equ	0xFF2
 10736                           intcon2	equ	0xFF1
 10737                           indf0	equ	0xFEF
 10738                           postinc0	equ	0xFEE
 10739                           fsr0h	equ	0xFEA
 10740                           fsr0l	equ	0xFE9
 10741                           wreg	equ	0xFE8
 10742                           indf1	equ	0xFE7
 10743                           fsr1h	equ	0xFE2
 10744                           fsr1l	equ	0xFE1
 10745                           indf2	equ	0xFDF
 10746                           postinc2	equ	0xFDE
 10747                           postdec2	equ	0xFDD
 10748                           plusw2	equ	0xFDB
 10749                           fsr2h	equ	0xFDA
 10750                           fsr2l	equ	0xFD9
 10751                           status	equ	0xFD8
 10752                           
 10753 ;; *************** function _GetDataBarGraphB *****************
 10754 ;; Defined at:
 10755 ;;		line 47 in file "Communications.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;		None
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;		None
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  2   26[COMRAM] unsigned int 
 10762 ;; Registers used:
 10763 ;;		None
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10769 ;;      Params:         2       0       0       0       0       0       0
 10770 ;;      Locals:         0       0       0       0       0       0       0
 10771 ;;      Temps:          0       0       0       0       0       0       0
 10772 ;;      Totals:         2       0       0       0       0       0       0
 10773 ;;Total ram usage:        2 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    4
 10776 ;; This function calls:
 10777 ;;		Nothing
 10778 ;; This function is called by:
 10779 ;;		_main
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text55
 10784  002748                     __ptext55:
 10785                           	opt stack 0
 10786  002748                     _GetDataBarGraphB:
 10787                           	opt stack 26
 10788                           
 10789                           ;Communications.c: 48: return DataBarGraphA;
 10790                           
 10791                           ;incstack = 0
 10792  002748  C09F  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphB
 10793  00274C  C0A0  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphB+1
 10794  002750  0012               	return		;funcret
 10795  002752                     __end_of_GetDataBarGraphB:
 10796                           	opt stack 0
 10797                           tblptru	equ	0xFF8
 10798                           tblptrh	equ	0xFF7
 10799                           tblptrl	equ	0xFF6
 10800                           tablat	equ	0xFF5
 10801                           prodh	equ	0xFF4
 10802                           prodl	equ	0xFF3
 10803                           intcon	equ	0xFF2
 10804                           intcon2	equ	0xFF1
 10805                           indf0	equ	0xFEF
 10806                           postinc0	equ	0xFEE
 10807                           fsr0h	equ	0xFEA
 10808                           fsr0l	equ	0xFE9
 10809                           wreg	equ	0xFE8
 10810                           indf1	equ	0xFE7
 10811                           fsr1h	equ	0xFE2
 10812                           fsr1l	equ	0xFE1
 10813                           indf2	equ	0xFDF
 10814                           postinc2	equ	0xFDE
 10815                           postdec2	equ	0xFDD
 10816                           plusw2	equ	0xFDB
 10817                           fsr2h	equ	0xFDA
 10818                           fsr2l	equ	0xFD9
 10819                           status	equ	0xFD8
 10820                           
 10821 ;; *************** function _GetDataBarGraphA *****************
 10822 ;; Defined at:
 10823 ;;		line 43 in file "Communications.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  2   26[COMRAM] unsigned int 
 10830 ;; Registers used:
 10831 ;;		None
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10837 ;;      Params:         2       0       0       0       0       0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0
 10840 ;;      Totals:         2       0       0       0       0       0       0
 10841 ;;Total ram usage:        2 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    4
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_main
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text56
 10852  002752                     __ptext56:
 10853                           	opt stack 0
 10854  002752                     _GetDataBarGraphA:
 10855                           	opt stack 26
 10856                           
 10857                           ;Communications.c: 44: return DataBarGraphA;
 10858                           
 10859                           ;incstack = 0
 10860  002752  C09F  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphA
 10861  002756  C0A0  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphA+1
 10862  00275A  0012               	return		;funcret
 10863  00275C                     __end_of_GetDataBarGraphA:
 10864                           	opt stack 0
 10865                           tblptru	equ	0xFF8
 10866                           tblptrh	equ	0xFF7
 10867                           tblptrl	equ	0xFF6
 10868                           tablat	equ	0xFF5
 10869                           prodh	equ	0xFF4
 10870                           prodl	equ	0xFF3
 10871                           intcon	equ	0xFF2
 10872                           intcon2	equ	0xFF1
 10873                           indf0	equ	0xFEF
 10874                           postinc0	equ	0xFEE
 10875                           fsr0h	equ	0xFEA
 10876                           fsr0l	equ	0xFE9
 10877                           wreg	equ	0xFE8
 10878                           indf1	equ	0xFE7
 10879                           fsr1h	equ	0xFE2
 10880                           fsr1l	equ	0xFE1
 10881                           indf2	equ	0xFDF
 10882                           postinc2	equ	0xFDE
 10883                           postdec2	equ	0xFDD
 10884                           plusw2	equ	0xFDB
 10885                           fsr2h	equ	0xFDA
 10886                           fsr2l	equ	0xFD9
 10887                           status	equ	0xFD8
 10888                           
 10889 ;; *************** function _ClearTime *****************
 10890 ;; Defined at:
 10891 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      void 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10905 ;;      Params:         0       0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    4
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_main
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text57
 10920  002772                     __ptext57:
 10921                           	opt stack 0
 10922  002772                     _ClearTime:
 10923                           	opt stack 26
 10924                           
 10925                           ;tmr0.c: 103: time = 0;
 10926                           
 10927                           ;incstack = 0
 10928  002772  0E00               	movlw	0
 10929  002774  6E3D               	movwf	_time,c	;volatile
 10930  002776  0012               	return		;funcret
 10931  002778                     __end_of_ClearTime:
 10932                           	opt stack 0
 10933                           tblptru	equ	0xFF8
 10934                           tblptrh	equ	0xFF7
 10935                           tblptrl	equ	0xFF6
 10936                           tablat	equ	0xFF5
 10937                           prodh	equ	0xFF4
 10938                           prodl	equ	0xFF3
 10939                           intcon	equ	0xFF2
 10940                           intcon2	equ	0xFF1
 10941                           indf0	equ	0xFEF
 10942                           postinc0	equ	0xFEE
 10943                           fsr0h	equ	0xFEA
 10944                           fsr0l	equ	0xFE9
 10945                           wreg	equ	0xFE8
 10946                           indf1	equ	0xFE7
 10947                           fsr1h	equ	0xFE2
 10948                           fsr1l	equ	0xFE1
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           postdec2	equ	0xFDD
 10952                           plusw2	equ	0xFDB
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function _INTERRUPT_InterruptManager *****************
 10958 ;; Defined at:
 10959 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10973 ;;      Params:         0       0       0       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0
 10975 ;;      Temps:         14       0       0       0       0       0       0
 10976 ;;      Totals:        14       0       0       0       0       0       0
 10977 ;;Total ram usage:       14 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    3
 10980 ;; This function calls:
 10981 ;;		_ADC_ISR
 10982 ;;		_EUSART1_Receive_ISR
 10983 ;;		_EUSART1_Transmit_ISR
 10984 ;;		_I2C1_BusCollisionISR
 10985 ;;		_I2C1_ISR
 10986 ;;		_TMR0_ISR
 10987 ;;		_TMR2_ISR
 10988 ;; This function is called by:
 10989 ;;		Interrupt level 2
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	intcode
 10994  000008                     __pintcode:
 10995                           	opt stack 0
 10996  000008                     _INTERRUPT_InterruptManager:
 10997                           	opt stack 20
 10998                           
 10999                           ;incstack = 0
 11000  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11001  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 11002  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11003  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11004  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11005  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11006  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11007  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11008  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11009  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11010  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11011  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11012  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11013  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11014  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11015                           
 11016                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 11017  000042  BA9D               	btfsc	3997,5,c	;volatile
 11018  000044  AA9E               	btfss	3998,5,c	;volatile
 11019  000046  D003               	goto	i2l291
 11020                           
 11021                           ;interrupt_manager.c: 35: {
 11022                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 11023  000048  EC47  F013         	call	_EUSART1_Receive_ISR	;wreg free
 11024                           
 11025                           ;interrupt_manager.c: 37: }
 11026  00004C  D023               	goto	i2l305
 11027  00004E                     i2l291:
 11028                           
 11029                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 11030  00004E  B89D               	btfsc	3997,4,c	;volatile
 11031  000050  A89E               	btfss	3998,4,c	;volatile
 11032  000052  D003               	goto	i2l293
 11033                           
 11034                           ;interrupt_manager.c: 39: {
 11035                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 11036  000054  EC5D  F012         	call	_EUSART1_Transmit_ISR	;wreg free
 11037                           
 11038                           ;interrupt_manager.c: 41: }
 11039  000058  D01D               	goto	i2l305
 11040  00005A                     i2l293:
 11041                           
 11042                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11043  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 11044  00005C  A4F2               	btfss	intcon,2,c	;volatile
 11045  00005E  D003               	goto	i2l295
 11046                           
 11047                           ;interrupt_manager.c: 43: {
 11048                           ;interrupt_manager.c: 44: TMR0_ISR();
 11049  000060  EC27  F012         	call	_TMR0_ISR	;wreg free
 11050                           
 11051                           ;interrupt_manager.c: 45: }
 11052  000064  D017               	goto	i2l305
 11053  000066                     i2l295:
 11054                           
 11055                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11056  000066  B29D               	btfsc	3997,1,c	;volatile
 11057  000068  A29E               	btfss	3998,1,c	;volatile
 11058  00006A  D003               	goto	i2l297
 11059                           
 11060                           ;interrupt_manager.c: 47: {
 11061                           ;interrupt_manager.c: 48: TMR2_ISR();
 11062  00006C  ECB2  F013         	call	_TMR2_ISR	;wreg free
 11063                           
 11064                           ;interrupt_manager.c: 49: }
 11065  000070  D011               	goto	i2l305
 11066  000072                     i2l297:
 11067                           
 11068                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11069  000072  BC9D               	btfsc	3997,6,c	;volatile
 11070  000074  AC9E               	btfss	3998,6,c	;volatile
 11071  000076  D003               	goto	i2l299
 11072                           
 11073                           ;interrupt_manager.c: 51: {
 11074                           ;interrupt_manager.c: 52: ADC_ISR();
 11075  000078  ECC0  F013         	call	_ADC_ISR	;wreg free
 11076                           
 11077                           ;interrupt_manager.c: 53: }
 11078  00007C  D00B               	goto	i2l305
 11079  00007E                     i2l299:
 11080                           
 11081                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 11082  00007E  B69D               	btfsc	3997,3,c	;volatile
 11083  000080  A69E               	btfss	3998,3,c	;volatile
 11084  000082  D003               	goto	i2l301
 11085                           
 11086                           ;interrupt_manager.c: 55: {
 11087                           ;interrupt_manager.c: 56: I2C1_ISR();
 11088  000084  EC6D  F002         	call	_I2C1_ISR	;wreg free
 11089                           
 11090                           ;interrupt_manager.c: 57: }
 11091  000088  D005               	goto	i2l305
 11092  00008A                     i2l301:
 11093                           
 11094                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 11095  00008A  B6A0               	btfsc	4000,3,c	;volatile
 11096  00008C  A6A1               	btfss	4001,3,c	;volatile
 11097  00008E  D002               	goto	i2l305
 11098                           
 11099                           ;interrupt_manager.c: 59: {
 11100                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 11101  000090  ECC3  F013         	call	_I2C1_BusCollisionISR	;wreg free
 11102  000094                     i2l305:
 11103  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11104  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11105  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11106  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11107  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11108  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11109  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11110  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11111  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11112  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11113  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11114  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11115  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11116  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11117  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11118  0000CE  0011               	retfie		f
 11119  0000D0                     __end_of_INTERRUPT_InterruptManager:
 11120                           	opt stack 0
 11121                           pclatu	equ	0xFFB
 11122                           pclath	equ	0xFFA
 11123                           tblptru	equ	0xFF8
 11124                           tblptrh	equ	0xFF7
 11125                           tblptrl	equ	0xFF6
 11126                           tablat	equ	0xFF5
 11127                           prodh	equ	0xFF4
 11128                           prodl	equ	0xFF3
 11129                           intcon	equ	0xFF2
 11130                           intcon2	equ	0xFF1
 11131                           indf0	equ	0xFEF
 11132                           postinc0	equ	0xFEE
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           indf1	equ	0xFE7
 11137                           fsr1h	equ	0xFE2
 11138                           fsr1l	equ	0xFE1
 11139                           indf2	equ	0xFDF
 11140                           postinc2	equ	0xFDE
 11141                           postdec2	equ	0xFDD
 11142                           plusw2	equ	0xFDB
 11143                           fsr2h	equ	0xFDA
 11144                           fsr2l	equ	0xFD9
 11145                           status	equ	0xFD8
 11146                           
 11147 ;; *************** function _TMR2_ISR *****************
 11148 ;; Defined at:
 11149 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11163 ;;      Params:         0       0       0       0       0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:    2
 11170 ;; This function calls:
 11171 ;;		_TMR2_CallBack
 11172 ;; This function is called by:
 11173 ;;		_INTERRUPT_InterruptManager
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text59
 11178  002764                     __ptext59:
 11179                           	opt stack 0
 11180  002764                     _TMR2_ISR:
 11181                           	opt stack 20
 11182                           
 11183                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 11184                           
 11185                           ;incstack = 0
 11186  002764  929E               	bcf	3998,1,c	;volatile
 11187                           
 11188                           ;tmr2.c: 128: TMR2_CallBack();
 11189  002766  ECC0  F003         	call	_TMR2_CallBack	;wreg free
 11190  00276A  0012               	return		;funcret
 11191  00276C                     __end_of_TMR2_ISR:
 11192                           	opt stack 0
 11193                           pclatu	equ	0xFFB
 11194                           pclath	equ	0xFFA
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           indf0	equ	0xFEF
 11204                           postinc0	equ	0xFEE
 11205                           fsr0h	equ	0xFEA
 11206                           fsr0l	equ	0xFE9
 11207                           wreg	equ	0xFE8
 11208                           indf1	equ	0xFE7
 11209                           fsr1h	equ	0xFE2
 11210                           fsr1l	equ	0xFE1
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           plusw2	equ	0xFDB
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function _TMR2_CallBack *****************
 11220 ;; Defined at:
 11221 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;		None
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  i               2    2[COMRAM] int 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11235 ;;      Params:         0       0       0       0       0       0       0
 11236 ;;      Locals:         2       0       0       0       0       0       0
 11237 ;;      Temps:          2       0       0       0       0       0       0
 11238 ;;      Totals:         4       0       0       0       0       0       0
 11239 ;;Total ram usage:        4 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    1
 11242 ;; This function calls:
 11243 ;;		Absolute function
 11244 ;;		_TMR2_DefaultInterruptHandler
 11245 ;; This function is called by:
 11246 ;;		_TMR2_ISR
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           	psect	text60
 11251  000780                     __ptext60:
 11252                           	opt stack 0
 11253  000780                     _TMR2_CallBack:
 11254                           	opt stack 20
 11255                           
 11256                           ;tmr2.c: 133: int i = 0;
 11257                           
 11258                           ;incstack = 0
 11259  000780  0E00               	movlw	0
 11260  000782  6E04               	movwf	TMR2_CallBack@i+1,c
 11261  000784  0E00               	movlw	0
 11262  000786  6E03               	movwf	TMR2_CallBack@i,c
 11263                           
 11264                           ;tmr2.c: 134: while (i <= 5) {
 11265  000788  D0C3               	goto	i2l458
 11266  00078A                     i2l4491:
 11267                           
 11268                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 11269  00078A  90D8               	bcf	status,0,c
 11270  00078C  3403               	rlcf	TMR2_CallBack@i,w,c
 11271  00078E  6ED9               	movwf	fsr2l,c
 11272  000790  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11273  000792  6EDA               	movwf	fsr2h,c
 11274  000794  0E10               	movlw	low _LEDNUM_ENAB
 11275  000796  26D9               	addwf	fsr2l,f,c
 11276  000798  0E01               	movlw	high _LEDNUM_ENAB
 11277  00079A  22DA               	addwfc	fsr2h,f,c
 11278  00079C  04DE               	decf	postinc2,w,c
 11279  00079E  10DE               	iorwf	postinc2,w,c
 11280  0007A0  B4D8               	btfsc	status,2,c
 11281  0007A2  D098               	goto	i2l4509
 11282  0007A4  D0AF               	goto	i2l4511
 11283  0007A6                     i2l465:
 11284  0007A6  B28B               	btfsc	3979,1,c	;volatile
 11285  0007A8  D002               	goto	i2u355_40
 11286  0007AA  828B               	bsf	3979,1,c	;volatile
 11287  0007AC  D03B               	goto	i2l4499
 11288  0007AE                     i2u355_40:
 11289  0007AE  928B               	bcf	3979,1,c	;volatile
 11290                           
 11291                           ;tmr2.c: 142: break;
 11292  0007B0  D039               	goto	i2l4499
 11293  0007B2                     i2l469:
 11294  0007B2  BC89               	btfsc	3977,6,c	;volatile
 11295  0007B4  D002               	goto	i2u357_40
 11296  0007B6  8C89               	bsf	3977,6,c	;volatile
 11297  0007B8  D035               	goto	i2l4499
 11298  0007BA                     i2u357_40:
 11299  0007BA  9C89               	bcf	3977,6,c	;volatile
 11300                           
 11301                           ;tmr2.c: 145: break;
 11302  0007BC  D033               	goto	i2l4499
 11303  0007BE                     i2l472:
 11304  0007BE  BE89               	btfsc	3977,7,c	;volatile
 11305  0007C0  D002               	goto	i2u359_40
 11306  0007C2  8E89               	bsf	3977,7,c	;volatile
 11307  0007C4  D02F               	goto	i2l4499
 11308  0007C6                     i2u359_40:
 11309  0007C6  9E89               	bcf	3977,7,c	;volatile
 11310                           
 11311                           ;tmr2.c: 148: break;
 11312  0007C8  D02D               	goto	i2l4499
 11313  0007CA                     i2l475:
 11314  0007CA  B48D               	btfsc	3981,2,c	;volatile
 11315  0007CC  D002               	goto	i2u361_40
 11316  0007CE  848D               	bsf	3981,2,c	;volatile
 11317  0007D0  D029               	goto	i2l4499
 11318  0007D2                     i2u361_40:
 11319  0007D2  948D               	bcf	3981,2,c	;volatile
 11320                           
 11321                           ;tmr2.c: 151: break;
 11322  0007D4  D027               	goto	i2l4499
 11323  0007D6                     i2l478:
 11324  0007D6  B28D               	btfsc	3981,1,c	;volatile
 11325  0007D8  D002               	goto	i2u363_40
 11326  0007DA  828D               	bsf	3981,1,c	;volatile
 11327  0007DC  D023               	goto	i2l4499
 11328  0007DE                     i2u363_40:
 11329  0007DE  928D               	bcf	3981,1,c	;volatile
 11330                           
 11331                           ;tmr2.c: 154: break;
 11332  0007E0  D021               	goto	i2l4499
 11333  0007E2                     i2l481:
 11334  0007E2  B08D               	btfsc	3981,0,c	;volatile
 11335  0007E4  D002               	goto	i2u365_40
 11336  0007E6  808D               	bsf	3981,0,c	;volatile
 11337  0007E8  D01D               	goto	i2l4499
 11338  0007EA                     i2u365_40:
 11339  0007EA  908D               	bcf	3981,0,c	;volatile
 11340                           
 11341                           ;tmr2.c: 158: }
 11342                           
 11343                           ;tmr2.c: 157: break;
 11344  0007EC  D01B               	goto	i2l4499
 11345  0007EE                     i2l4497:
 11346  0007EE  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 11347  0007F2  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 11348                           
 11349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11350                           ; Switch size 1, requested type "space"
 11351                           ; Number of cases is 1, Range of values is 0 to 0
 11352                           ; switch strategies available:
 11353                           ; Name         Instructions Cycles
 11354                           ; simple_byte            4     3 (average)
 11355                           ;	Chosen strategy is simple_byte
 11356  0007F6  5002               	movf	??_TMR2_CallBack+1,w,c
 11357  0007F8  0A00               	xorlw	0	; case 0
 11358  0007FA  A4D8               	btfss	status,2,c
 11359  0007FC  D013               	goto	i2l4499
 11360                           
 11361                           ; Switch size 1, requested type "space"
 11362                           ; Number of cases is 6, Range of values is 0 to 5
 11363                           ; switch strategies available:
 11364                           ; Name         Instructions Cycles
 11365                           ; simple_byte           19    10 (average)
 11366                           ;	Chosen strategy is simple_byte
 11367  0007FE  5001               	movf	??_TMR2_CallBack,w,c
 11368  000800  0A00               	xorlw	0	; case 0
 11369  000802  B4D8               	btfsc	status,2,c
 11370  000804  D7D0               	goto	i2l465
 11371  000806  0A01               	xorlw	1	; case 1
 11372  000808  B4D8               	btfsc	status,2,c
 11373  00080A  D7D3               	goto	i2l469
 11374  00080C  0A03               	xorlw	3	; case 2
 11375  00080E  B4D8               	btfsc	status,2,c
 11376  000810  D7D6               	goto	i2l472
 11377  000812  0A01               	xorlw	1	; case 3
 11378  000814  B4D8               	btfsc	status,2,c
 11379  000816  D7D9               	goto	i2l475
 11380  000818  0A07               	xorlw	7	; case 4
 11381  00081A  B4D8               	btfsc	status,2,c
 11382  00081C  D7DC               	goto	i2l478
 11383  00081E  0A01               	xorlw	1	; case 5
 11384  000820  B4D8               	btfsc	status,2,c
 11385  000822  D7DF               	goto	i2l481
 11386  000824                     i2l4499:
 11387                           
 11388                           ;tmr2.c: 159: LEDState[i] = 1;
 11389  000824  90D8               	bcf	status,0,c
 11390  000826  3403               	rlcf	TMR2_CallBack@i,w,c
 11391  000828  6ED9               	movwf	fsr2l,c
 11392  00082A  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11393  00082C  6EDA               	movwf	fsr2h,c
 11394  00082E  0E88               	movlw	low _LEDState
 11395  000830  26D9               	addwf	fsr2l,f,c
 11396  000832  0E00               	movlw	high _LEDState
 11397  000834  22DA               	addwfc	fsr2h,f,c
 11398  000836  0E01               	movlw	1
 11399  000838  D049               	goto	L2
 11400  00083A                     i2l487:
 11401  00083A  B28B               	btfsc	3979,1,c	;volatile
 11402  00083C  D002               	goto	i2u367_40
 11403  00083E  828B               	bsf	3979,1,c	;volatile
 11404  000840  D03B               	goto	i2l4505
 11405  000842                     i2u367_40:
 11406  000842  928B               	bcf	3979,1,c	;volatile
 11407                           
 11408                           ;tmr2.c: 165: break;
 11409  000844  D039               	goto	i2l4505
 11410  000846                     i2l491:
 11411  000846  BC89               	btfsc	3977,6,c	;volatile
 11412  000848  D002               	goto	i2u369_40
 11413  00084A  8C89               	bsf	3977,6,c	;volatile
 11414  00084C  D035               	goto	i2l4505
 11415  00084E                     i2u369_40:
 11416  00084E  9C89               	bcf	3977,6,c	;volatile
 11417                           
 11418                           ;tmr2.c: 168: break;
 11419  000850  D033               	goto	i2l4505
 11420  000852                     i2l494:
 11421  000852  BE89               	btfsc	3977,7,c	;volatile
 11422  000854  D002               	goto	i2u371_40
 11423  000856  8E89               	bsf	3977,7,c	;volatile
 11424  000858  D02F               	goto	i2l4505
 11425  00085A                     i2u371_40:
 11426  00085A  9E89               	bcf	3977,7,c	;volatile
 11427                           
 11428                           ;tmr2.c: 171: break;
 11429  00085C  D02D               	goto	i2l4505
 11430  00085E                     i2l497:
 11431  00085E  B48D               	btfsc	3981,2,c	;volatile
 11432  000860  D002               	goto	i2u373_40
 11433  000862  848D               	bsf	3981,2,c	;volatile
 11434  000864  D029               	goto	i2l4505
 11435  000866                     i2u373_40:
 11436  000866  948D               	bcf	3981,2,c	;volatile
 11437                           
 11438                           ;tmr2.c: 174: break;
 11439  000868  D027               	goto	i2l4505
 11440  00086A                     i2l500:
 11441  00086A  B28D               	btfsc	3981,1,c	;volatile
 11442  00086C  D002               	goto	i2u375_40
 11443  00086E  828D               	bsf	3981,1,c	;volatile
 11444  000870  D023               	goto	i2l4505
 11445  000872                     i2u375_40:
 11446  000872  928D               	bcf	3981,1,c	;volatile
 11447                           
 11448                           ;tmr2.c: 177: break;
 11449  000874  D021               	goto	i2l4505
 11450  000876                     i2l503:
 11451  000876  B08D               	btfsc	3981,0,c	;volatile
 11452  000878  D002               	goto	i2u377_40
 11453  00087A  808D               	bsf	3981,0,c	;volatile
 11454  00087C  D01D               	goto	i2l4505
 11455  00087E                     i2u377_40:
 11456  00087E  908D               	bcf	3981,0,c	;volatile
 11457                           
 11458                           ;tmr2.c: 181: }
 11459                           
 11460                           ;tmr2.c: 180: break;
 11461  000880  D01B               	goto	i2l4505
 11462  000882                     i2l4503:
 11463  000882  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 11464  000886  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 11465                           
 11466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11467                           ; Switch size 1, requested type "space"
 11468                           ; Number of cases is 1, Range of values is 0 to 0
 11469                           ; switch strategies available:
 11470                           ; Name         Instructions Cycles
 11471                           ; simple_byte            4     3 (average)
 11472                           ;	Chosen strategy is simple_byte
 11473  00088A  5002               	movf	??_TMR2_CallBack+1,w,c
 11474  00088C  0A00               	xorlw	0	; case 0
 11475  00088E  A4D8               	btfss	status,2,c
 11476  000890  D013               	goto	i2l4505
 11477                           
 11478                           ; Switch size 1, requested type "space"
 11479                           ; Number of cases is 6, Range of values is 0 to 5
 11480                           ; switch strategies available:
 11481                           ; Name         Instructions Cycles
 11482                           ; simple_byte           19    10 (average)
 11483                           ;	Chosen strategy is simple_byte
 11484  000892  5001               	movf	??_TMR2_CallBack,w,c
 11485  000894  0A00               	xorlw	0	; case 0
 11486  000896  B4D8               	btfsc	status,2,c
 11487  000898  D7D0               	goto	i2l487
 11488  00089A  0A01               	xorlw	1	; case 1
 11489  00089C  B4D8               	btfsc	status,2,c
 11490  00089E  D7D3               	goto	i2l491
 11491  0008A0  0A03               	xorlw	3	; case 2
 11492  0008A2  B4D8               	btfsc	status,2,c
 11493  0008A4  D7D6               	goto	i2l494
 11494  0008A6  0A01               	xorlw	1	; case 3
 11495  0008A8  B4D8               	btfsc	status,2,c
 11496  0008AA  D7D9               	goto	i2l497
 11497  0008AC  0A07               	xorlw	7	; case 4
 11498  0008AE  B4D8               	btfsc	status,2,c
 11499  0008B0  D7DC               	goto	i2l500
 11500  0008B2  0A01               	xorlw	1	; case 5
 11501  0008B4  B4D8               	btfsc	status,2,c
 11502  0008B6  D7DF               	goto	i2l503
 11503  0008B8                     i2l4505:
 11504                           
 11505                           ;tmr2.c: 182: LEDState[i] = 0;
 11506  0008B8  90D8               	bcf	status,0,c
 11507  0008BA  3403               	rlcf	TMR2_CallBack@i,w,c
 11508  0008BC  6ED9               	movwf	fsr2l,c
 11509  0008BE  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11510  0008C0  6EDA               	movwf	fsr2h,c
 11511  0008C2  0E88               	movlw	low _LEDState
 11512  0008C4  26D9               	addwf	fsr2l,f,c
 11513  0008C6  0E00               	movlw	high _LEDState
 11514  0008C8  22DA               	addwfc	fsr2h,f,c
 11515  0008CA  0E00               	movlw	0
 11516  0008CC                     L2:
 11517  0008CC  6EDE               	movwf	postinc2,c
 11518  0008CE  0E00               	movlw	0
 11519  0008D0  6EDD               	movwf	postdec2,c
 11520                           
 11521                           ;tmr2.c: 184: }
 11522                           
 11523                           ;tmr2.c: 183: break;
 11524  0008D2  D018               	goto	i2l4511
 11525  0008D4                     i2l4509:
 11526  0008D4  90D8               	bcf	status,0,c
 11527  0008D6  3403               	rlcf	TMR2_CallBack@i,w,c
 11528  0008D8  6ED9               	movwf	fsr2l,c
 11529  0008DA  3404               	rlcf	TMR2_CallBack@i+1,w,c
 11530  0008DC  6EDA               	movwf	fsr2h,c
 11531  0008DE  0E88               	movlw	low _LEDState
 11532  0008E0  26D9               	addwf	fsr2l,f,c
 11533  0008E2  0E00               	movlw	high _LEDState
 11534  0008E4  22DA               	addwfc	fsr2h,f,c
 11535  0008E6  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 11536  0008EA  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 11537                           
 11538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11539                           ; Switch size 1, requested type "space"
 11540                           ; Number of cases is 1, Range of values is 0 to 0
 11541                           ; switch strategies available:
 11542                           ; Name         Instructions Cycles
 11543                           ; simple_byte            4     3 (average)
 11544                           ;	Chosen strategy is simple_byte
 11545  0008EE  5002               	movf	??_TMR2_CallBack+1,w,c
 11546  0008F0  0A00               	xorlw	0	; case 0
 11547  0008F2  A4D8               	btfss	status,2,c
 11548  0008F4  D007               	goto	i2l4511
 11549                           
 11550                           ; Switch size 1, requested type "space"
 11551                           ; Number of cases is 2, Range of values is 0 to 1
 11552                           ; switch strategies available:
 11553                           ; Name         Instructions Cycles
 11554                           ; simple_byte            7     4 (average)
 11555                           ;	Chosen strategy is simple_byte
 11556  0008F6  5001               	movf	??_TMR2_CallBack,w,c
 11557  0008F8  0A00               	xorlw	0	; case 0
 11558  0008FA  B4D8               	btfsc	status,2,c
 11559  0008FC  D778               	goto	i2l4497
 11560  0008FE  0A01               	xorlw	1	; case 1
 11561  000900  B4D8               	btfsc	status,2,c
 11562  000902  D7BF               	goto	i2l4503
 11563  000904                     i2l4511:
 11564                           
 11565                           ;tmr2.c: 185: }
 11566                           ;tmr2.c: 186: i = i + 1;
 11567  000904  0E01               	movlw	1
 11568  000906  2403               	addwf	TMR2_CallBack@i,w,c
 11569  000908  6E03               	movwf	TMR2_CallBack@i,c
 11570  00090A  0E00               	movlw	0
 11571  00090C  2004               	addwfc	TMR2_CallBack@i+1,w,c
 11572  00090E  6E04               	movwf	TMR2_CallBack@i+1,c
 11573  000910                     i2l458:
 11574  000910  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 11575  000912  D73B               	goto	i2l4491
 11576  000914  5004               	movf	TMR2_CallBack@i+1,w,c
 11577  000916  E104               	bnz	i2l4513
 11578  000918  0E06               	movlw	6
 11579  00091A  5C03               	subwf	TMR2_CallBack@i,w,c
 11580  00091C  A0D8               	btfss	status,0,c
 11581  00091E  D735               	goto	i2l4491
 11582  000920                     i2l4513:
 11583                           
 11584                           ;tmr2.c: 187: }
 11585                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 11586  000920  0100               	movlb	0	; () banked
 11587  000922  51D2               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11588  000924  0100               	movlb	0	; () banked
 11589  000926  11D3               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11590  000928  B4D8               	btfsc	status,2,c
 11591  00092A  0012               	return	
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;tmr2.c: 192: {
 11595                           ;tmr2.c: 193: TMR2_InterruptHandler();
 11596  00092C  D801               	call	i2u381_48
 11597  00092E  0012               	return	
 11598  000930                     i2u381_48:
 11599  000930  0005               	push	
 11600  000932  0100               	movlb	0	; () banked
 11601  000934  6EFA               	movwf	pclath,c
 11602  000936  51D2               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11603  000938  6EFD               	movwf	tosl,c
 11604  00093A  51D3               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11605  00093C  6EFE               	movwf	tosh,c
 11606  00093E  50F8               	movf	tblptru,w,c
 11607  000940  6EFF               	movwf	tosu,c
 11608  000942  50FA               	movf	pclath,w,c
 11609  000944  0012               	return		;indir
 11610  000946                     __end_of_TMR2_CallBack:
 11611                           	opt stack 0
 11612                           tosu	equ	0xFFF
 11613                           tosh	equ	0xFFE
 11614                           tosl	equ	0xFFD
 11615                           pclatu	equ	0xFFB
 11616                           pclath	equ	0xFFA
 11617                           tblptru	equ	0xFF8
 11618                           tblptrh	equ	0xFF7
 11619                           tblptrl	equ	0xFF6
 11620                           tablat	equ	0xFF5
 11621                           prodh	equ	0xFF4
 11622                           prodl	equ	0xFF3
 11623                           intcon	equ	0xFF2
 11624                           intcon2	equ	0xFF1
 11625                           indf0	equ	0xFEF
 11626                           postinc0	equ	0xFEE
 11627                           fsr0h	equ	0xFEA
 11628                           fsr0l	equ	0xFE9
 11629                           wreg	equ	0xFE8
 11630                           indf1	equ	0xFE7
 11631                           fsr1h	equ	0xFE2
 11632                           fsr1l	equ	0xFE1
 11633                           indf2	equ	0xFDF
 11634                           postinc2	equ	0xFDE
 11635                           postdec2	equ	0xFDD
 11636                           plusw2	equ	0xFDB
 11637                           fsr2h	equ	0xFDA
 11638                           fsr2l	equ	0xFD9
 11639                           status	equ	0xFD8
 11640                           
 11641 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 11642 ;; Defined at:
 11643 ;;		line 295 in file "mcc_generated_files/tmr2.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;		None
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  1    wreg      void 
 11650 ;; Registers used:
 11651 ;;		None
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11657 ;;      Params:         0       0       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0
 11660 ;;      Totals:         0       0       0       0       0       0       0
 11661 ;;Total ram usage:        0 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; This function calls:
 11664 ;;		Nothing
 11665 ;; This function is called by:
 11666 ;;		_TMR2_Initialize
 11667 ;;		_TMR2_CallBack
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text61
 11672  002784                     __ptext61:
 11673                           	opt stack 0
 11674  002784                     _TMR2_DefaultInterruptHandler:
 11675                           	opt stack 20
 11676                           
 11677                           ;incstack = 0
 11678  002784  0012               	return		;funcret
 11679  002786                     __end_of_TMR2_DefaultInterruptHandler:
 11680                           	opt stack 0
 11681                           tosu	equ	0xFFF
 11682                           tosh	equ	0xFFE
 11683                           tosl	equ	0xFFD
 11684                           pclatu	equ	0xFFB
 11685                           pclath	equ	0xFFA
 11686                           tblptru	equ	0xFF8
 11687                           tblptrh	equ	0xFF7
 11688                           tblptrl	equ	0xFF6
 11689                           tablat	equ	0xFF5
 11690                           prodh	equ	0xFF4
 11691                           prodl	equ	0xFF3
 11692                           intcon	equ	0xFF2
 11693                           intcon2	equ	0xFF1
 11694                           indf0	equ	0xFEF
 11695                           postinc0	equ	0xFEE
 11696                           fsr0h	equ	0xFEA
 11697                           fsr0l	equ	0xFE9
 11698                           wreg	equ	0xFE8
 11699                           indf1	equ	0xFE7
 11700                           fsr1h	equ	0xFE2
 11701                           fsr1l	equ	0xFE1
 11702                           indf2	equ	0xFDF
 11703                           postinc2	equ	0xFDE
 11704                           postdec2	equ	0xFDD
 11705                           plusw2	equ	0xFDB
 11706                           fsr2h	equ	0xFDA
 11707                           fsr2l	equ	0xFD9
 11708                           status	equ	0xFD8
 11709                           
 11710 ;; *************** function _TMR0_ISR *****************
 11711 ;; Defined at:
 11712 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;		None
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  x               2    4[COMRAM] int 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11726 ;;      Params:         0       0       0       0       0       0       0
 11727 ;;      Locals:         2       0       0       0       0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0
 11729 ;;      Totals:         2       0       0       0       0       0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; Hardware stack levels required when called:    1
 11733 ;; This function calls:
 11734 ;;		_ReadButtonState
 11735 ;; This function is called by:
 11736 ;;		_INTERRUPT_InterruptManager
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           	psect	text62
 11741  00244E                     __ptext62:
 11742                           	opt stack 0
 11743  00244E                     _TMR0_ISR:
 11744                           	opt stack 21
 11745                           
 11746                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 11747                           
 11748                           ;incstack = 0
 11749  00244E  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 11750  002450  6ED7               	movwf	4055,c	;volatile
 11751                           
 11752                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 11753  002452  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 11754                           
 11755                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 11756  002456  0E00               	movlw	0
 11757  002458  6E06               	movwf	TMR0_ISR@x+1,c
 11758  00245A  0E00               	movlw	0
 11759  00245C  6E05               	movwf	TMR0_ISR@x,c
 11760  00245E                     i2l4955:
 11761  00245E  BE06               	btfsc	TMR0_ISR@x+1,7,c
 11762  002460  D006               	goto	i2l4959
 11763  002462  5006               	movf	TMR0_ISR@x+1,w,c
 11764  002464  E10D               	bnz	i2l4965
 11765  002466  0E08               	movlw	8
 11766  002468  5C05               	subwf	TMR0_ISR@x,w,c
 11767  00246A  B0D8               	btfsc	status,0,c
 11768  00246C  D009               	goto	i2l4965
 11769  00246E                     i2l4959:
 11770                           
 11771                           ;tmr0.c: 89: ReadButtonState(x);
 11772  00246E  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 11773  002472  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 11774  002476  ECA2  F00A         	call	_ReadButtonState	;wreg free
 11775  00247A  4A05               	infsnz	TMR0_ISR@x,f,c
 11776  00247C  2A06               	incf	TMR0_ISR@x+1,f,c
 11777  00247E  D7EF               	goto	i2l4955
 11778  002480                     i2l4965:
 11779                           
 11780                           ;tmr0.c: 90: }
 11781                           ;tmr0.c: 91: time++;
 11782  002480  2A3D               	incf	_time,f,c	;volatile
 11783                           
 11784                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 11785  002482  94F2               	bcf	intcon,2,c	;volatile
 11786  002484  0012               	return		;funcret
 11787  002486                     __end_of_TMR0_ISR:
 11788                           	opt stack 0
 11789                           tosu	equ	0xFFF
 11790                           tosh	equ	0xFFE
 11791                           tosl	equ	0xFFD
 11792                           pclatu	equ	0xFFB
 11793                           pclath	equ	0xFFA
 11794                           tblptru	equ	0xFF8
 11795                           tblptrh	equ	0xFF7
 11796                           tblptrl	equ	0xFF6
 11797                           tablat	equ	0xFF5
 11798                           prodh	equ	0xFF4
 11799                           prodl	equ	0xFF3
 11800                           intcon	equ	0xFF2
 11801                           intcon2	equ	0xFF1
 11802                           indf0	equ	0xFEF
 11803                           postinc0	equ	0xFEE
 11804                           fsr0h	equ	0xFEA
 11805                           fsr0l	equ	0xFE9
 11806                           wreg	equ	0xFE8
 11807                           indf1	equ	0xFE7
 11808                           fsr1h	equ	0xFE2
 11809                           fsr1l	equ	0xFE1
 11810                           indf2	equ	0xFDF
 11811                           postinc2	equ	0xFDE
 11812                           postdec2	equ	0xFDD
 11813                           plusw2	equ	0xFDB
 11814                           fsr2h	equ	0xFDA
 11815                           fsr2l	equ	0xFD9
 11816                           status	equ	0xFD8
 11817                           
 11818 ;; *************** function _ReadButtonState *****************
 11819 ;; Defined at:
 11820 ;;		line 154 in file "IO.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  btnnum          2    0[COMRAM] int 
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;		None
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  1    wreg      void 
 11827 ;; Registers used:
 11828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11829 ;; Tracked objects:
 11830 ;;		On entry : 0/0
 11831 ;;		On exit  : 0/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11834 ;;      Params:         2       0       0       0       0       0       0
 11835 ;;      Locals:         0       0       0       0       0       0       0
 11836 ;;      Temps:          2       0       0       0       0       0       0
 11837 ;;      Totals:         4       0       0       0       0       0       0
 11838 ;;Total ram usage:        4 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; This function calls:
 11841 ;;		Nothing
 11842 ;; This function is called by:
 11843 ;;		_TMR0_ISR
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text63
 11848  001544                     __ptext63:
 11849                           	opt stack 0
 11850  001544                     _ReadButtonState:
 11851                           	opt stack 21
 11852                           
 11853                           ;IO.c: 155: switch (btnnum) {
 11854                           
 11855                           ;incstack = 0
 11856  001544  D068               	goto	i2l4483
 11857  001546                     i2l4465:
 11858                           
 11859                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 11860  001546  0E26               	movlw	low _butnarray
 11861  001548  2401               	addwf	ReadButtonState@btnnum,w,c
 11862  00154A  6ED9               	movwf	fsr2l,c
 11863  00154C  0E01               	movlw	high _butnarray
 11864  00154E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11865  001550  6EDA               	movwf	fsr2h,c
 11866  001552  AA83               	btfss	3971,5,c	;volatile
 11867  001554  D002               	goto	i2u346_40
 11868  001556  0E01               	movlw	1
 11869  001558  D001               	goto	i2u346_46
 11870  00155A                     i2u346_40:
 11871  00155A  0E00               	movlw	0
 11872  00155C                     i2u346_46:
 11873  00155C  6EDF               	movwf	indf2,c
 11874                           
 11875                           ;IO.c: 158: break;
 11876  00155E  0012               	return	
 11877  001560                     i2l4467:
 11878                           
 11879                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 11880  001560  0E26               	movlw	low _butnarray
 11881  001562  2401               	addwf	ReadButtonState@btnnum,w,c
 11882  001564  6ED9               	movwf	fsr2l,c
 11883  001566  0E01               	movlw	high _butnarray
 11884  001568  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11885  00156A  6EDA               	movwf	fsr2h,c
 11886  00156C  A081               	btfss	3969,0,c	;volatile
 11887  00156E  D002               	goto	i2u347_40
 11888  001570  0E01               	movlw	1
 11889  001572  D001               	goto	i2u347_46
 11890  001574                     i2u347_40:
 11891  001574  0E00               	movlw	0
 11892  001576                     i2u347_46:
 11893  001576  6EDF               	movwf	indf2,c
 11894                           
 11895                           ;IO.c: 161: break;
 11896  001578  0012               	return	
 11897  00157A                     i2l4469:
 11898                           
 11899                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 11900  00157A  0E26               	movlw	low _butnarray
 11901  00157C  2401               	addwf	ReadButtonState@btnnum,w,c
 11902  00157E  6ED9               	movwf	fsr2l,c
 11903  001580  0E01               	movlw	high _butnarray
 11904  001582  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11905  001584  6EDA               	movwf	fsr2h,c
 11906  001586  A281               	btfss	3969,1,c	;volatile
 11907  001588  D002               	goto	i2u348_40
 11908  00158A  0E01               	movlw	1
 11909  00158C  D001               	goto	i2u348_46
 11910  00158E                     i2u348_40:
 11911  00158E  0E00               	movlw	0
 11912  001590                     i2u348_46:
 11913  001590  6EDF               	movwf	indf2,c
 11914                           
 11915                           ;IO.c: 164: break;
 11916  001592  0012               	return	
 11917  001594                     i2l4471:
 11918                           
 11919                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 11920  001594  0E26               	movlw	low _butnarray
 11921  001596  2401               	addwf	ReadButtonState@btnnum,w,c
 11922  001598  6ED9               	movwf	fsr2l,c
 11923  00159A  0E01               	movlw	high _butnarray
 11924  00159C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11925  00159E  6EDA               	movwf	fsr2h,c
 11926  0015A0  A481               	btfss	3969,2,c	;volatile
 11927  0015A2  D002               	goto	i2u349_40
 11928  0015A4  0E01               	movlw	1
 11929  0015A6  D001               	goto	i2u349_46
 11930  0015A8                     i2u349_40:
 11931  0015A8  0E00               	movlw	0
 11932  0015AA                     i2u349_46:
 11933  0015AA  6EDF               	movwf	indf2,c
 11934                           
 11935                           ;IO.c: 167: break;
 11936  0015AC  0012               	return	
 11937  0015AE                     i2l4473:
 11938                           
 11939                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 11940  0015AE  0E26               	movlw	low _butnarray
 11941  0015B0  2401               	addwf	ReadButtonState@btnnum,w,c
 11942  0015B2  6ED9               	movwf	fsr2l,c
 11943  0015B4  0E01               	movlw	high _butnarray
 11944  0015B6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11945  0015B8  6EDA               	movwf	fsr2h,c
 11946  0015BA  A881               	btfss	3969,4,c	;volatile
 11947  0015BC  D002               	goto	i2u350_40
 11948  0015BE  0E01               	movlw	1
 11949  0015C0  D001               	goto	i2u350_46
 11950  0015C2                     i2u350_40:
 11951  0015C2  0E00               	movlw	0
 11952  0015C4                     i2u350_46:
 11953  0015C4  6EDF               	movwf	indf2,c
 11954                           
 11955                           ;IO.c: 170: break;
 11956  0015C6  0012               	return	
 11957  0015C8                     i2l4475:
 11958                           
 11959                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 11960  0015C8  0E26               	movlw	low _butnarray
 11961  0015CA  2401               	addwf	ReadButtonState@btnnum,w,c
 11962  0015CC  6ED9               	movwf	fsr2l,c
 11963  0015CE  0E01               	movlw	high _butnarray
 11964  0015D0  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11965  0015D2  6EDA               	movwf	fsr2h,c
 11966  0015D4  A080               	btfss	3968,0,c	;volatile
 11967  0015D6  D002               	goto	i2u351_40
 11968  0015D8  0E01               	movlw	1
 11969  0015DA  D001               	goto	i2u351_46
 11970  0015DC                     i2u351_40:
 11971  0015DC  0E00               	movlw	0
 11972  0015DE                     i2u351_46:
 11973  0015DE  6EDF               	movwf	indf2,c
 11974                           
 11975                           ;IO.c: 173: break;
 11976  0015E0  0012               	return	
 11977  0015E2                     i2l4477:
 11978                           
 11979                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 11980  0015E2  0E26               	movlw	low _butnarray
 11981  0015E4  2401               	addwf	ReadButtonState@btnnum,w,c
 11982  0015E6  6ED9               	movwf	fsr2l,c
 11983  0015E8  0E01               	movlw	high _butnarray
 11984  0015EA  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 11985  0015EC  6EDA               	movwf	fsr2h,c
 11986  0015EE  A280               	btfss	3968,1,c	;volatile
 11987  0015F0  D002               	goto	i2u352_40
 11988  0015F2  0E01               	movlw	1
 11989  0015F4  D001               	goto	i2u352_46
 11990  0015F6                     i2u352_40:
 11991  0015F6  0E00               	movlw	0
 11992  0015F8                     i2u352_46:
 11993  0015F8  6EDF               	movwf	indf2,c
 11994                           
 11995                           ;IO.c: 176: break;
 11996  0015FA  0012               	return	
 11997  0015FC                     i2l4479:
 11998                           
 11999                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 12000  0015FC  0E26               	movlw	low _butnarray
 12001  0015FE  2401               	addwf	ReadButtonState@btnnum,w,c
 12002  001600  6ED9               	movwf	fsr2l,c
 12003  001602  0E01               	movlw	high _butnarray
 12004  001604  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 12005  001606  6EDA               	movwf	fsr2h,c
 12006  001608  A480               	btfss	3968,2,c	;volatile
 12007  00160A  D002               	goto	i2u353_40
 12008  00160C  0E01               	movlw	1
 12009  00160E  D001               	goto	i2u353_46
 12010  001610                     i2u353_40:
 12011  001610  0E00               	movlw	0
 12012  001612                     i2u353_46:
 12013  001612  6EDF               	movwf	indf2,c
 12014                           
 12015                           ;IO.c: 181: }
 12016                           
 12017                           ;IO.c: 179: break;
 12018  001614  0012               	return	
 12019  001616                     i2l4483:
 12020  001616  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 12021  00161A  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 12022                           
 12023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12024                           ; Switch size 1, requested type "space"
 12025                           ; Number of cases is 1, Range of values is 0 to 0
 12026                           ; switch strategies available:
 12027                           ; Name         Instructions Cycles
 12028                           ; simple_byte            4     3 (average)
 12029                           ;	Chosen strategy is simple_byte
 12030  00161E  5004               	movf	??_ReadButtonState+1,w,c
 12031  001620  0A00               	xorlw	0	; case 0
 12032  001622  A4D8               	btfss	status,2,c
 12033  001624  0012               	return	
 12034                           
 12035                           ; Switch size 1, requested type "space"
 12036                           ; Number of cases is 8, Range of values is 0 to 7
 12037                           ; switch strategies available:
 12038                           ; Name         Instructions Cycles
 12039                           ; simple_byte           25    13 (average)
 12040                           ;	Chosen strategy is simple_byte
 12041  001626  5003               	movf	??_ReadButtonState,w,c
 12042  001628  0A00               	xorlw	0	; case 0
 12043  00162A  B4D8               	btfsc	status,2,c
 12044  00162C  D78C               	goto	i2l4465
 12045  00162E  0A01               	xorlw	1	; case 1
 12046  001630  B4D8               	btfsc	status,2,c
 12047  001632  D796               	goto	i2l4467
 12048  001634  0A03               	xorlw	3	; case 2
 12049  001636  B4D8               	btfsc	status,2,c
 12050  001638  D7A0               	goto	i2l4469
 12051  00163A  0A01               	xorlw	1	; case 3
 12052  00163C  B4D8               	btfsc	status,2,c
 12053  00163E  D7AA               	goto	i2l4471
 12054  001640  0A07               	xorlw	7	; case 4
 12055  001642  B4D8               	btfsc	status,2,c
 12056  001644  D7B4               	goto	i2l4473
 12057  001646  0A01               	xorlw	1	; case 5
 12058  001648  B4D8               	btfsc	status,2,c
 12059  00164A  D7BE               	goto	i2l4475
 12060  00164C  0A03               	xorlw	3	; case 6
 12061  00164E  B4D8               	btfsc	status,2,c
 12062  001650  D7C8               	goto	i2l4477
 12063  001652  0A01               	xorlw	1	; case 7
 12064  001654  A4D8               	btfss	status,2,c
 12065  001656  0012               	return	
 12066  001658  D7D1               	goto	i2l4479
 12067  00165A                     __end_of_ReadButtonState:
 12068                           	opt stack 0
 12069                           tosu	equ	0xFFF
 12070                           tosh	equ	0xFFE
 12071                           tosl	equ	0xFFD
 12072                           pclatu	equ	0xFFB
 12073                           pclath	equ	0xFFA
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodh	equ	0xFF4
 12079                           prodl	equ	0xFF3
 12080                           intcon	equ	0xFF2
 12081                           intcon2	equ	0xFF1
 12082                           indf0	equ	0xFEF
 12083                           postinc0	equ	0xFEE
 12084                           fsr0h	equ	0xFEA
 12085                           fsr0l	equ	0xFE9
 12086                           wreg	equ	0xFE8
 12087                           indf1	equ	0xFE7
 12088                           fsr1h	equ	0xFE2
 12089                           fsr1l	equ	0xFE1
 12090                           indf2	equ	0xFDF
 12091                           postinc2	equ	0xFDE
 12092                           postdec2	equ	0xFDD
 12093                           plusw2	equ	0xFDB
 12094                           fsr2h	equ	0xFDA
 12095                           fsr2l	equ	0xFD9
 12096                           status	equ	0xFD8
 12097                           
 12098 ;; *************** function _I2C1_ISR *****************
 12099 ;; Defined at:
 12100 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12114 ;;      Params:         0       0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0
 12116 ;;      Temps:          2       0       0       0       0       0       0
 12117 ;;      Totals:         2       0       0       0       0       0       0
 12118 ;;Total ram usage:        2 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    1
 12121 ;; This function calls:
 12122 ;;		_I2C1_FunctionComplete
 12123 ;;		_I2C1_Stop
 12124 ;; This function is called by:
 12125 ;;		_INTERRUPT_InterruptManager
 12126 ;; This function uses a non-reentrant model
 12127 ;;
 12128                           
 12129                           	psect	text64
 12130  0004DA                     __ptext64:
 12131                           	opt stack 0
 12132  0004DA                     _I2C1_ISR:
 12133                           	opt stack 21
 12134                           
 12135                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 12136                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 12137                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 12138                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 12139                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 12140                           
 12141                           ;incstack = 0
 12142  0004DA  969E               	bcf	3998,3,c	;volatile
 12143                           
 12144                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 12145  0004DC  AEC6               	btfss	4038,7,c	;volatile
 12146  0004DE  D12D               	goto	i2l6499
 12147                           
 12148                           ;i2c1.c: 199: {
 12149                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 12150  0004E0  9EC6               	bcf	4038,7,c	;volatile
 12151                           
 12152                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 12153  0004E2  0E00               	movlw	0
 12154  0004E4  6E3F               	movwf	_i2c1_state,c
 12155                           
 12156                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 12157  0004E6  EE20 F003          	lfsr	2,3
 12158  0004EA  5037               	movf	_p_i2c1_current,w,c
 12159  0004EC  26D9               	addwf	fsr2l,f,c
 12160  0004EE  5038               	movf	_p_i2c1_current+1,w,c
 12161  0004F0  22DA               	addwfc	fsr2h,f,c
 12162  0004F2  CFDE FFF6          	movff	postinc2,tblptrl
 12163  0004F6  CFDE FFF7          	movff	postinc2,tblptrh
 12164  0004FA  0E05               	movlw	(high __ramtop+-1)
 12165  0004FC  64F7               	cpfsgt	tblptrh,c
 12166  0004FE  D004               	bra	i2u657_47
 12167  000500  0E01               	movlw	1
 12168  000502  6EF5               	movwf	tablat,c
 12169  000504  000C               	tblwt		*
 12170  000506  D006               	bra	i2u657_40
 12171  000508                     i2u657_47:
 12172  000508  CFF6 FFE9          	movff	tblptrl,fsr0l
 12173  00050C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12174  000510  0E01               	movlw	1
 12175  000512  6EEF               	movwf	indf0,c
 12176  000514                     i2u657_40:
 12177                           
 12178                           ;i2c1.c: 206: p_i2c1_current = (0);
 12179  000514  0E00               	movlw	0
 12180  000516  6E37               	movwf	_p_i2c1_current,c
 12181  000518  0E00               	movlw	0
 12182  00051A  6E38               	movwf	_p_i2c1_current+1,c
 12183                           
 12184                           ;i2c1.c: 208: return;
 12185  00051C  0012               	return	
 12186  00051E                     i2l60:
 12187                           
 12188                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 12189  00051E  B230               	btfsc	_i2c1_object+4,1,c
 12190  000520  0012               	return	
 12191                           
 12192                           ;i2c1.c: 217: {
 12193                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 12194  000522  C02E  F037         	movff	_i2c1_object+2,_p_i2c1_current
 12195  000526  C02F  F038         	movff	_i2c1_object+3,_p_i2c1_current+1
 12196                           
 12197                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 12198  00052A  C02E  FFD9         	movff	_i2c1_object+2,fsr2l
 12199  00052E  C02F  FFDA         	movff	_i2c1_object+3,fsr2h
 12200  000532  50DF               	movf	indf2,w,c
 12201  000534  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12202  000536  5004               	movf	??_I2C1_ISR,w,c
 12203  000538  6E3B               	movwf	_i2c1_trb_count,c
 12204  00053A  6A3C               	clrf	_i2c1_trb_count+1,c
 12205                           
 12206                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 12207  00053C  EE20 F001          	lfsr	2,1
 12208  000540  502E               	movf	_i2c1_object+2,w,c
 12209  000542  26D9               	addwf	fsr2l,f,c
 12210  000544  502F               	movf	_i2c1_object+3,w,c
 12211  000546  22DA               	addwfc	fsr2h,f,c
 12212  000548  CFDE F039          	movff	postinc2,_p_i2c1_trb_current
 12213  00054C  CFDD F03A          	movff	postdec2,_p_i2c1_trb_current+1
 12214                           
 12215                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 12216  000550  0E05               	movlw	5
 12217  000552  262E               	addwf	_i2c1_object+2,f,c
 12218  000554  0E00               	movlw	0
 12219  000556  222F               	addwfc	_i2c1_object+3,f,c
 12220                           
 12221                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 12222  000558  0EA9               	movlw	low (_i2c1_tr_queue+5)
 12223  00055A  182E               	xorwf	_i2c1_object+2,w,c
 12224  00055C  E108               	bnz	i2l6393
 12225  00055E  0E00               	movlw	high (_i2c1_tr_queue+5)
 12226  000560  182F               	xorwf	_i2c1_object+3,w,c
 12227  000562  A4D8               	btfss	status,2,c
 12228  000564  D004               	goto	i2l6393
 12229                           
 12230                           ;i2c1.c: 227: {
 12231                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 12232  000566  0EA4               	movlw	low _i2c1_tr_queue
 12233  000568  6E2E               	movwf	_i2c1_object+2,c
 12234  00056A  0E00               	movlw	high _i2c1_tr_queue
 12235  00056C  6E2F               	movwf	_i2c1_object+3,c
 12236  00056E                     i2l6393:
 12237                           
 12238                           ;i2c1.c: 230: }
 12239                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 12240  00056E  9030               	bcf	_i2c1_object+4,0,c
 12241                           
 12242                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 12243  000570  502C               	movf	_i2c1_object,w,c
 12244  000572  182E               	xorwf	_i2c1_object+2,w,c
 12245  000574  E104               	bnz	i2l63
 12246  000576  502D               	movf	_i2c1_object+1,w,c
 12247  000578  182F               	xorwf	_i2c1_object+3,w,c
 12248  00057A  B4D8               	btfsc	status,2,c
 12249                           
 12250                           ;i2c1.c: 238: {
 12251                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 12252  00057C  8230               	bsf	_i2c1_object+4,1,c
 12253  00057E                     i2l63:
 12254                           
 12255                           ;i2c1.c: 241: }
 12256                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 12257  00057E  80C5               	bsf	4037,0,c	;volatile
 12258                           
 12259                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 12260  000580  0E02               	movlw	2
 12261  000582  6E3F               	movwf	_i2c1_state,c
 12262                           
 12263                           ;i2c1.c: 248: }
 12264                           ;i2c1.c: 250: break;
 12265  000584  0012               	return	
 12266  000586                     i2l65:
 12267                           
 12268                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 12269  000586  82C5               	bsf	4037,1,c	;volatile
 12270                           
 12271                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 12272  000588  0E02               	movlw	2
 12273  00058A  6E3F               	movwf	_i2c1_state,c
 12274                           
 12275                           ;i2c1.c: 262: break;
 12276  00058C  0012               	return	
 12277  00058E                     i2l66:
 12278                           
 12279                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 12280  00058E  ACC5               	btfss	4037,6,c	;volatile
 12281  000590  D005               	goto	i2l6405
 12282                           
 12283                           ;i2c1.c: 267: {
 12284                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 12285  000592  2A32               	incf	_i2c1_object+6,f,c
 12286                           
 12287                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12288  000594  0E04               	movlw	4
 12289  000596  EC9C  F011         	call	_I2C1_Stop
 12290                           
 12291                           ;i2c1.c: 270: }
 12292  00059A  0012               	return	
 12293  00059C                     i2l6405:
 12294                           
 12295                           ;i2c1.c: 271: else
 12296                           ;i2c1.c: 272: {
 12297                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12298  00059C  90D8               	bcf	status,0,c
 12299  00059E  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 12300  0005A0  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 12301  0005A2  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 12302  0005A4  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12303  0005A6  5004               	movf	??_I2C1_ISR,w,c
 12304  0005A8  6EC9               	movwf	4041,c	;volatile
 12305                           
 12306                           ;i2c1.c: 277: if(i2c_address & 0x01)
 12307  0005AA  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12308  0005AC  D003               	goto	i2l6411
 12309                           
 12310                           ;i2c1.c: 278: {
 12311                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 12312  0005AE  0E0B               	movlw	11
 12313  0005B0  6E3F               	movwf	_i2c1_state,c
 12314                           
 12315                           ;i2c1.c: 282: }
 12316  0005B2  0012               	return	
 12317  0005B4                     i2l6411:
 12318                           
 12319                           ;i2c1.c: 283: else
 12320                           ;i2c1.c: 284: {
 12321                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 12322  0005B4  0E03               	movlw	3
 12323  0005B6  6E3F               	movwf	_i2c1_state,c
 12324                           
 12325                           ;i2c1.c: 287: }
 12326                           ;i2c1.c: 288: }
 12327                           ;i2c1.c: 290: break;
 12328  0005B8  0012               	return	
 12329  0005BA                     i2l71:
 12330                           
 12331                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 12332  0005BA  ACC5               	btfss	4037,6,c	;volatile
 12333  0005BC  D005               	goto	i2l72
 12334                           
 12335                           ;i2c1.c: 295: {
 12336                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 12337  0005BE  2A32               	incf	_i2c1_object+6,f,c
 12338                           
 12339                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12340  0005C0  0E04               	movlw	4
 12341  0005C2  EC9C  F011         	call	_I2C1_Stop
 12342                           
 12343                           ;i2c1.c: 298: }
 12344  0005C6  0012               	return	
 12345  0005C8                     i2l72:
 12346                           
 12347                           ;i2c1.c: 299: else
 12348                           ;i2c1.c: 300: {
 12349                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 12350  0005C8  82C5               	bsf	4037,1,c	;volatile
 12351                           
 12352                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 12353  0005CA  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 12354  0005CE  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 12355  0005D2  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 12356  0005D6  6A05               	clrf	??_I2C1_ISR+1,c
 12357  0005D8  0E06               	movlw	6
 12358  0005DA  1604               	andwf	??_I2C1_ISR,f,c
 12359  0005DC  0E00               	movlw	0
 12360  0005DE  1605               	andwf	??_I2C1_ISR+1,f,c
 12361  0005E0  0EF0               	movlw	240
 12362  0005E2  1004               	iorwf	??_I2C1_ISR,w,c
 12363  0005E4  6E40               	movwf	I2C1_ISR@i2c_address,c
 12364  0005E6  5005               	movf	??_I2C1_ISR+1,w,c
 12365  0005E8  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 12366                           
 12367                           ;i2c1.c: 310: i2c_address |= 0x0001;
 12368  0005EA  8040               	bsf	I2C1_ISR@i2c_address,0,c
 12369                           
 12370                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 12371  0005EC  0E01               	movlw	1
 12372  0005EE  6E3E               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 12373                           
 12374                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 12375  0005F0  0E02               	movlw	2
 12376  0005F2  6E3F               	movwf	_i2c1_state,c
 12377                           
 12378                           ;i2c1.c: 317: }
 12379                           ;i2c1.c: 319: break;
 12380  0005F4  0012               	return	
 12381  0005F6                     i2l6425:
 12382                           
 12383                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 12384  0005F6  043E               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 12385  0005F8  B4D8               	btfsc	status,2,c
 12386  0005FA  D01D               	goto	i2l76
 12387                           
 12388                           ;i2c1.c: 335: {
 12389                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 12390  0005FC  C039  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 12391  000600  C03A  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 12392  000604  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 12393  000608  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 12394                           
 12395                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 12396  00060C  EE20 F003          	lfsr	2,3
 12397  000610  5039               	movf	_p_i2c1_trb_current,w,c
 12398  000612  26D9               	addwf	fsr2l,f,c
 12399  000614  503A               	movf	_p_i2c1_trb_current+1,w,c
 12400  000616  22DA               	addwfc	fsr2h,f,c
 12401  000618  CFDE F035          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 12402  00061C  CFDD F036          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 12403                           
 12404                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 12405  000620  EE20 F002          	lfsr	2,2
 12406  000624  5039               	movf	_p_i2c1_trb_current,w,c
 12407  000626  26D9               	addwf	fsr2l,f,c
 12408  000628  503A               	movf	_p_i2c1_trb_current+1,w,c
 12409  00062A  22DA               	addwfc	fsr2h,f,c
 12410  00062C  50DF               	movf	indf2,w,c
 12411  00062E  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12412  000630  5004               	movf	??_I2C1_ISR,w,c
 12413  000632  6E33               	movwf	I2C1_ISR@i2c_bytes_left,c
 12414  000634  6A34               	clrf	I2C1_ISR@i2c_bytes_left+1,c
 12415  000636                     i2l76:
 12416                           
 12417                           ;i2c1.c: 362: else
 12418                           ;i2c1.c: 363: {
 12419                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 12420  000636  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 12421                           
 12422                           ;i2c1.c: 366: if(i2c_address & 0x01)
 12423  00063A  A040               	btfss	I2C1_ISR@i2c_address,0,c
 12424  00063C  D003               	goto	i2l6445
 12425                           
 12426                           ;i2c1.c: 367: {
 12427                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 12428  00063E  0E05               	movlw	5
 12429  000640  6E3F               	movwf	_i2c1_state,c
 12430                           
 12431                           ;i2c1.c: 370: }
 12432  000642  0012               	return	
 12433  000644                     i2l6445:
 12434                           
 12435                           ;i2c1.c: 371: else
 12436                           ;i2c1.c: 372: {
 12437                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 12438  000644  0E03               	movlw	3
 12439  000646  6E3F               	movwf	_i2c1_state,c
 12440                           
 12441                           ;i2c1.c: 375: }
 12442                           ;i2c1.c: 376: }
 12443                           ;i2c1.c: 377: break;
 12444  000648  0012               	return	
 12445  00064A                     i2l82:
 12446                           
 12447                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 12448  00064A  ACC5               	btfss	4037,6,c	;volatile
 12449  00064C  D006               	goto	i2l6453
 12450                           
 12451                           ;i2c1.c: 383: {
 12452                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 12453  00064E  2A32               	incf	_i2c1_object+6,f,c
 12454                           
 12455                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 12456  000650  9CC5               	bcf	4037,6,c	;volatile
 12457                           
 12458                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 12459  000652  0E05               	movlw	5
 12460  000654  EC9C  F011         	call	_I2C1_Stop
 12461                           
 12462                           ;i2c1.c: 393: }
 12463  000658  0012               	return	
 12464  00065A                     i2l6453:
 12465                           
 12466                           ;i2c1.c: 394: else
 12467                           ;i2c1.c: 395: {
 12468                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 12469  00065A  5033               	movf	I2C1_ISR@i2c_bytes_left,w,c
 12470  00065C  6E04               	movwf	??_I2C1_ISR& (0+255),c
 12471  00065E  5034               	movf	I2C1_ISR@i2c_bytes_left+1,w,c
 12472  000660  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 12473  000662  0E01               	movlw	1
 12474  000664  5E33               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 12475  000666  0E00               	movlw	0
 12476  000668  5A34               	subwfb	I2C1_ISR@i2c_bytes_left+1,f,c
 12477  00066A  5004               	movf	??_I2C1_ISR,w,c
 12478  00066C  1005               	iorwf	??_I2C1_ISR+1,w,c
 12479  00066E  A4D8               	btfss	status,2,c
 12480  000670  D013               	goto	i2l6461
 12481                           
 12482                           ;i2c1.c: 398: {
 12483                           ;i2c1.c: 402: p_i2c1_trb_current++;
 12484  000672  0E05               	movlw	5
 12485  000674  2639               	addwf	_p_i2c1_trb_current,f,c
 12486  000676  0E00               	movlw	0
 12487  000678  223A               	addwfc	_p_i2c1_trb_current+1,f,c
 12488                           
 12489                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 12490  00067A  063B               	decf	_i2c1_trb_count,f,c
 12491  00067C  A0D8               	btfss	status,0,c
 12492  00067E  063C               	decf	_i2c1_trb_count+1,f,c
 12493  000680  503B               	movf	_i2c1_trb_count,w,c
 12494  000682  103C               	iorwf	_i2c1_trb_count+1,w,c
 12495  000684  A4D8               	btfss	status,2,c
 12496  000686  D004               	goto	i2l86
 12497                           
 12498                           ;i2c1.c: 406: {
 12499                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12500  000688  0E00               	movlw	0
 12501  00068A  EC9C  F011         	call	_I2C1_Stop
 12502                           
 12503                           ;i2c1.c: 408: }
 12504  00068E  0012               	return	
 12505  000690                     i2l86:
 12506                           
 12507                           ;i2c1.c: 409: else
 12508                           ;i2c1.c: 410: {
 12509                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 12510  000690  82C5               	bsf	4037,1,c	;volatile
 12511                           
 12512                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 12513  000692  0E02               	movlw	2
 12514  000694  6E3F               	movwf	_i2c1_state,c
 12515                           
 12516                           ;i2c1.c: 422: }
 12517                           ;i2c1.c: 423: }
 12518  000696  0012               	return	
 12519  000698                     i2l6461:
 12520                           
 12521                           ;i2c1.c: 424: else
 12522                           ;i2c1.c: 425: {
 12523                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 12524  000698  C035  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 12525  00069C  C036  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 12526  0006A0  6AF8               	clrf	tblptru,c
 12527  0006A2  0E05               	movlw	(high __ramtop+-1)
 12528  0006A4  64F7               	cpfsgt	tblptrh,c
 12529  0006A6  D003               	bra	i2u671_47
 12530  0006A8  0008               	tblrd		*
 12531  0006AA  50F5               	movf	tablat,w,c
 12532  0006AC  D005               	bra	i2u671_40
 12533  0006AE                     i2u671_47:
 12534  0006AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 12535  0006B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 12536  0006B6  50EF               	movf	indf0,w,c
 12537  0006B8                     i2u671_40:
 12538  0006B8  6EC9               	movwf	4041,c	;volatile
 12539  0006BA  4A35               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
 12540  0006BC  2A36               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
 12541                           
 12542                           ;i2c1.c: 428: }
 12543                           ;i2c1.c: 429: }
 12544                           ;i2c1.c: 430: break;
 12545  0006BE  0012               	return	
 12546  0006C0                     i2l89:
 12547                           
 12548                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 12549  0006C0  ACC5               	btfss	4037,6,c	;volatile
 12550  0006C2  D006               	goto	i2l90
 12551                           
 12552                           ;i2c1.c: 436: {
 12553                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 12554  0006C4  2A32               	incf	_i2c1_object+6,f,c
 12555                           
 12556                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 12557  0006C6  0E04               	movlw	4
 12558  0006C8  EC9C  F011         	call	_I2C1_Stop
 12559                           
 12560                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 12561  0006CC  9CC5               	bcf	4037,6,c	;volatile
 12562                           
 12563                           ;i2c1.c: 446: }
 12564  0006CE  0012               	return	
 12565  0006D0                     i2l90:
 12566                           
 12567                           ;i2c1.c: 447: else
 12568                           ;i2c1.c: 448: {
 12569                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 12570  0006D0  86C5               	bsf	4037,3,c	;volatile
 12571                           
 12572                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12573  0006D2  0E08               	movlw	8
 12574  0006D4  6E3F               	movwf	_i2c1_state,c
 12575                           
 12576                           ;i2c1.c: 451: }
 12577                           ;i2c1.c: 452: break;
 12578  0006D6  0012               	return	
 12579  0006D8                     i2l6473:
 12580                           
 12581                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 12582  0006D8  0E08               	movlw	8
 12583  0006DA  6E3F               	movwf	_i2c1_state,c
 12584                           
 12585                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 12586  0006DC  86C5               	bsf	4037,3,c	;volatile
 12587                           
 12588                           ;i2c1.c: 464: break;
 12589  0006DE  0012               	return	
 12590  0006E0                     i2l6477:
 12591                           
 12592                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 12593  0006E0  C035  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 12594  0006E4  C036  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 12595  0006E8  6AF8               	clrf	tblptru,c
 12596  0006EA  0E05               	movlw	(high __ramtop+-1)
 12597  0006EC  64F7               	cpfsgt	tblptrh,c
 12598  0006EE  D004               	bra	i2u673_47
 12599  0006F0  CFC9 FFF5          	movff	4041,tablat	;volatile
 12600  0006F4  000C               	tblwt		*
 12601  0006F6  D006               	bra	i2u673_40
 12602  0006F8                     i2u673_47:
 12603  0006F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 12604  0006FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 12605  000700  CFC9 FFEF          	movff	4041,indf0	;volatile
 12606  000704                     i2u673_40:
 12607  000704  4A35               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
 12608  000706  2A36               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
 12609                           
 12610                           ;i2c1.c: 472: if(--i2c_bytes_left)
 12611  000708  0633               	decf	I2C1_ISR@i2c_bytes_left,f,c
 12612  00070A  A0D8               	btfss	status,0,c
 12613  00070C  0634               	decf	I2C1_ISR@i2c_bytes_left+1,f,c
 12614  00070E  5033               	movf	I2C1_ISR@i2c_bytes_left,w,c
 12615  000710  1034               	iorwf	I2C1_ISR@i2c_bytes_left+1,w,c
 12616  000712  B4D8               	btfsc	status,2,c
 12617  000714  D004               	goto	i2l94
 12618                           
 12619                           ;i2c1.c: 473: {
 12620                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 12621  000716  9AC5               	bcf	4037,5,c	;volatile
 12622                           
 12623                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 12624  000718  0E06               	movlw	6
 12625  00071A  6E3F               	movwf	_i2c1_state,c
 12626                           
 12627                           ;i2c1.c: 483: }
 12628  00071C  D003               	goto	i2l6489
 12629  00071E                     i2l94:
 12630                           
 12631                           ;i2c1.c: 484: else
 12632                           ;i2c1.c: 485: {
 12633                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 12634  00071E  8AC5               	bsf	4037,5,c	;volatile
 12635                           
 12636                           ;i2c1.c: 491: I2C1_FunctionComplete();
 12637  000720  EC18  F013         	call	_I2C1_FunctionComplete	;wreg free
 12638  000724                     i2l6489:
 12639                           
 12640                           ;i2c1.c: 492: }
 12641                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 12642  000724  88C5               	bsf	4037,4,c	;volatile
 12643                           
 12644                           ;i2c1.c: 496: break;
 12645  000726  0012               	return	
 12646  000728                     i2l6491:
 12647                           
 12648                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 12649                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12650  000728  0E00               	movlw	0
 12651  00072A  EC9C  F011         	call	_I2C1_Stop
 12652                           
 12653                           ;i2c1.c: 503: break;
 12654  00072E  0012               	return	
 12655  000730                     i2l6493:
 12656                           
 12657                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 12658  000730  2A32               	incf	_i2c1_object+6,f,c
 12659                           
 12660                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 12661  000732  0E06               	movlw	6
 12662  000734  EC9C  F011         	call	_I2C1_Stop
 12663                           
 12664                           ;i2c1.c: 513: }
 12665                           
 12666                           ;i2c1.c: 511: break;
 12667  000738  0012               	return	
 12668  00073A                     i2l6499:
 12669  00073A  503F               	movf	_i2c1_state,w,c
 12670                           
 12671                           ; Switch size 1, requested type "space"
 12672                           ; Number of cases is 11, Range of values is 0 to 11
 12673                           ; switch strategies available:
 12674                           ; Name         Instructions Cycles
 12675                           ; simple_byte           34    18 (average)
 12676                           ;	Chosen strategy is simple_byte
 12677  00073C  0A00               	xorlw	0	; case 0
 12678  00073E  B4D8               	btfsc	status,2,c
 12679  000740  D6EE               	goto	i2l60
 12680  000742  0A01               	xorlw	1	; case 1
 12681  000744  B4D8               	btfsc	status,2,c
 12682  000746  D71F               	goto	i2l65
 12683  000748  0A03               	xorlw	3	; case 2
 12684  00074A  B4D8               	btfsc	status,2,c
 12685  00074C  D754               	goto	i2l6425
 12686  00074E  0A01               	xorlw	1	; case 3
 12687  000750  B4D8               	btfsc	status,2,c
 12688  000752  D77B               	goto	i2l82
 12689  000754  0A07               	xorlw	7	; case 4
 12690  000756  B4D8               	btfsc	status,2,c
 12691  000758  D7E7               	goto	i2l6491
 12692  00075A  0A01               	xorlw	1	; case 5
 12693  00075C  B4D8               	btfsc	status,2,c
 12694  00075E  D7B0               	goto	i2l89
 12695  000760  0A03               	xorlw	3	; case 6
 12696  000762  B4D8               	btfsc	status,2,c
 12697  000764  D7B9               	goto	i2l6473
 12698  000766  0A01               	xorlw	1	; case 7
 12699  000768  B4D8               	btfsc	status,2,c
 12700  00076A  D7DE               	goto	i2l6491
 12701  00076C  0A0F               	xorlw	15	; case 8
 12702  00076E  B4D8               	btfsc	status,2,c
 12703  000770  D7B7               	goto	i2l6477
 12704  000772  0A02               	xorlw	2	; case 10
 12705  000774  B4D8               	btfsc	status,2,c
 12706  000776  D70B               	goto	i2l66
 12707  000778  0A01               	xorlw	1	; case 11
 12708  00077A  B4D8               	btfsc	status,2,c
 12709  00077C  D71E               	goto	i2l71
 12710  00077E  D7D8               	goto	i2l6493
 12711  000780                     __end_of_I2C1_ISR:
 12712                           	opt stack 0
 12713                           tosu	equ	0xFFF
 12714                           tosh	equ	0xFFE
 12715                           tosl	equ	0xFFD
 12716                           pclatu	equ	0xFFB
 12717                           pclath	equ	0xFFA
 12718                           tblptru	equ	0xFF8
 12719                           tblptrh	equ	0xFF7
 12720                           tblptrl	equ	0xFF6
 12721                           tablat	equ	0xFF5
 12722                           prodh	equ	0xFF4
 12723                           prodl	equ	0xFF3
 12724                           intcon	equ	0xFF2
 12725                           intcon2	equ	0xFF1
 12726                           indf0	equ	0xFEF
 12727                           postinc0	equ	0xFEE
 12728                           fsr0h	equ	0xFEA
 12729                           fsr0l	equ	0xFE9
 12730                           wreg	equ	0xFE8
 12731                           indf1	equ	0xFE7
 12732                           fsr1h	equ	0xFE2
 12733                           fsr1l	equ	0xFE1
 12734                           indf2	equ	0xFDF
 12735                           postinc2	equ	0xFDE
 12736                           postdec2	equ	0xFDD
 12737                           plusw2	equ	0xFDB
 12738                           fsr2h	equ	0xFDA
 12739                           fsr2l	equ	0xFD9
 12740                           status	equ	0xFD8
 12741                           
 12742 ;; *************** function _I2C1_Stop *****************
 12743 ;; Defined at:
 12744 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;  completion_c    1    wreg     enum E6966
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;  completion_c    1    2[COMRAM] enum E6966
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  1    wreg      void 
 12751 ;; Registers used:
 12752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12758 ;;      Params:         0       0       0       0       0       0       0
 12759 ;;      Locals:         1       0       0       0       0       0       0
 12760 ;;      Temps:          2       0       0       0       0       0       0
 12761 ;;      Totals:         3       0       0       0       0       0       0
 12762 ;;Total ram usage:        3 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; This function calls:
 12765 ;;		Nothing
 12766 ;; This function is called by:
 12767 ;;		_I2C1_ISR
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text65
 12772  002338                     __ptext65:
 12773                           	opt stack 0
 12774  002338                     _I2C1_Stop:
 12775                           	opt stack 21
 12776                           
 12777                           ;incstack = 0
 12778                           ;I2C1_Stop@completion_code stored from wreg
 12779  002338  6E03               	movwf	I2C1_Stop@completion_code,c
 12780                           
 12781                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 12782  00233A  84C5               	bsf	4037,2,c	;volatile
 12783                           
 12784                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 12785  00233C  EE20 F003          	lfsr	2,3
 12786  002340  5037               	movf	_p_i2c1_current,w,c
 12787  002342  26D9               	addwf	fsr2l,f,c
 12788  002344  5038               	movf	_p_i2c1_current+1,w,c
 12789  002346  22DA               	addwfc	fsr2h,f,c
 12790  002348  50DE               	movf	postinc2,w,c
 12791  00234A  10DE               	iorwf	postinc2,w,c
 12792  00234C  B4D8               	btfsc	status,2,c
 12793  00234E  D017               	goto	i2l6171
 12794                           
 12795                           ;i2c1.c: 541: {
 12796                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 12797  002350  EE20 F003          	lfsr	2,3
 12798  002354  5037               	movf	_p_i2c1_current,w,c
 12799  002356  26D9               	addwf	fsr2l,f,c
 12800  002358  5038               	movf	_p_i2c1_current+1,w,c
 12801  00235A  22DA               	addwfc	fsr2h,f,c
 12802  00235C  CFDE FFF6          	movff	postinc2,tblptrl
 12803  002360  CFDE FFF7          	movff	postinc2,tblptrh
 12804  002364  0E05               	movlw	(high __ramtop+-1)
 12805  002366  64F7               	cpfsgt	tblptrh,c
 12806  002368  D004               	bra	i2u606_47
 12807  00236A  C003  FFF5         	movff	I2C1_Stop@completion_code,tablat
 12808  00236E  000C               	tblwt		*
 12809  002370  D006               	bra	i2u606_40
 12810  002372                     i2u606_47:
 12811  002372  CFF6 FFE9          	movff	tblptrl,fsr0l
 12812  002376  CFF7 FFEA          	movff	tblptrh,fsr0h
 12813  00237A  C003  FFEF         	movff	I2C1_Stop@completion_code,indf0
 12814  00237E                     i2u606_40:
 12815  00237E                     i2l6171:
 12816                           
 12817                           ;i2c1.c: 544: }
 12818                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 12819  00237E  0E00               	movlw	0
 12820  002380  6E3F               	movwf	_i2c1_state,c
 12821  002382  0012               	return		;funcret
 12822  002384                     __end_of_I2C1_Stop:
 12823                           	opt stack 0
 12824                           tosu	equ	0xFFF
 12825                           tosh	equ	0xFFE
 12826                           tosl	equ	0xFFD
 12827                           pclatu	equ	0xFFB
 12828                           pclath	equ	0xFFA
 12829                           tblptru	equ	0xFF8
 12830                           tblptrh	equ	0xFF7
 12831                           tblptrl	equ	0xFF6
 12832                           tablat	equ	0xFF5
 12833                           prodh	equ	0xFF4
 12834                           prodl	equ	0xFF3
 12835                           intcon	equ	0xFF2
 12836                           intcon2	equ	0xFF1
 12837                           indf0	equ	0xFEF
 12838                           postinc0	equ	0xFEE
 12839                           fsr0h	equ	0xFEA
 12840                           fsr0l	equ	0xFE9
 12841                           wreg	equ	0xFE8
 12842                           indf1	equ	0xFE7
 12843                           fsr1h	equ	0xFE2
 12844                           fsr1l	equ	0xFE1
 12845                           indf2	equ	0xFDF
 12846                           postinc2	equ	0xFDE
 12847                           postdec2	equ	0xFDD
 12848                           plusw2	equ	0xFDB
 12849                           fsr2h	equ	0xFDA
 12850                           fsr2l	equ	0xFD9
 12851                           status	equ	0xFD8
 12852                           
 12853 ;; *************** function _I2C1_FunctionComplete *****************
 12854 ;; Defined at:
 12855 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;		None
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;		None
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      void 
 12862 ;; Registers used:
 12863 ;;		wreg, status,2, status,0
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12869 ;;      Params:         0       0       0       0       0       0       0
 12870 ;;      Locals:         0       0       0       0       0       0       0
 12871 ;;      Temps:          0       0       0       0       0       0       0
 12872 ;;      Totals:         0       0       0       0       0       0       0
 12873 ;;Total ram usage:        0 bytes
 12874 ;; Hardware stack levels used:    1
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_I2C1_ISR
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text66
 12883  002630                     __ptext66:
 12884                           	opt stack 0
 12885  002630                     _I2C1_FunctionComplete:
 12886                           	opt stack 21
 12887                           
 12888                           ;i2c1.c: 520: p_i2c1_trb_current++;
 12889                           
 12890                           ;incstack = 0
 12891  002630  0E05               	movlw	5
 12892  002632  2639               	addwf	_p_i2c1_trb_current,f,c
 12893  002634  0E00               	movlw	0
 12894  002636  223A               	addwfc	_p_i2c1_trb_current+1,f,c
 12895                           
 12896                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 12897  002638  063B               	decf	_i2c1_trb_count,f,c
 12898  00263A  A0D8               	btfss	status,0,c
 12899  00263C  063C               	decf	_i2c1_trb_count+1,f,c
 12900  00263E  503B               	movf	_i2c1_trb_count,w,c
 12901  002640  103C               	iorwf	_i2c1_trb_count+1,w,c
 12902  002642  A4D8               	btfss	status,2,c
 12903  002644  D003               	goto	i2l6177
 12904                           
 12905                           ;i2c1.c: 524: {
 12906                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 12907  002646  0E04               	movlw	4
 12908  002648  6E3F               	movwf	_i2c1_state,c
 12909                           
 12910                           ;i2c1.c: 526: }
 12911  00264A  0012               	return	
 12912  00264C                     i2l6177:
 12913                           
 12914                           ;i2c1.c: 527: else
 12915                           ;i2c1.c: 528: {
 12916                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 12917  00264C  0E01               	movlw	1
 12918  00264E  6E3F               	movwf	_i2c1_state,c
 12919  002650  0012               	return	
 12920  002652                     __end_of_I2C1_FunctionComplete:
 12921                           	opt stack 0
 12922                           tosu	equ	0xFFF
 12923                           tosh	equ	0xFFE
 12924                           tosl	equ	0xFFD
 12925                           pclatu	equ	0xFFB
 12926                           pclath	equ	0xFFA
 12927                           tblptru	equ	0xFF8
 12928                           tblptrh	equ	0xFF7
 12929                           tblptrl	equ	0xFF6
 12930                           tablat	equ	0xFF5
 12931                           prodh	equ	0xFF4
 12932                           prodl	equ	0xFF3
 12933                           intcon	equ	0xFF2
 12934                           intcon2	equ	0xFF1
 12935                           indf0	equ	0xFEF
 12936                           postinc0	equ	0xFEE
 12937                           fsr0h	equ	0xFEA
 12938                           fsr0l	equ	0xFE9
 12939                           wreg	equ	0xFE8
 12940                           indf1	equ	0xFE7
 12941                           fsr1h	equ	0xFE2
 12942                           fsr1l	equ	0xFE1
 12943                           indf2	equ	0xFDF
 12944                           postinc2	equ	0xFDE
 12945                           postdec2	equ	0xFDD
 12946                           plusw2	equ	0xFDB
 12947                           fsr2h	equ	0xFDA
 12948                           fsr2l	equ	0xFD9
 12949                           status	equ	0xFD8
 12950                           
 12951 ;; *************** function _I2C1_BusCollisionISR *****************
 12952 ;; Defined at:
 12953 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		None
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12967 ;;      Params:         0       0       0       0       0       0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0
 12970 ;;      Totals:         0       0       0       0       0       0       0
 12971 ;;Total ram usage:        0 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_INTERRUPT_InterruptManager
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text67
 12981  002786                     __ptext67:
 12982                           	opt stack 0
 12983  002786                     _I2C1_BusCollisionISR:
 12984                           	opt stack 22
 12985                           
 12986                           ;incstack = 0
 12987  002786  0012               	return		;funcret
 12988  002788                     __end_of_I2C1_BusCollisionISR:
 12989                           	opt stack 0
 12990                           tosu	equ	0xFFF
 12991                           tosh	equ	0xFFE
 12992                           tosl	equ	0xFFD
 12993                           pclatu	equ	0xFFB
 12994                           pclath	equ	0xFFA
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           intcon2	equ	0xFF1
 13003                           indf0	equ	0xFEF
 13004                           postinc0	equ	0xFEE
 13005                           fsr0h	equ	0xFEA
 13006                           fsr0l	equ	0xFE9
 13007                           wreg	equ	0xFE8
 13008                           indf1	equ	0xFE7
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           indf2	equ	0xFDF
 13012                           postinc2	equ	0xFDE
 13013                           postdec2	equ	0xFDD
 13014                           plusw2	equ	0xFDB
 13015                           fsr2h	equ	0xFDA
 13016                           fsr2l	equ	0xFD9
 13017                           status	equ	0xFD8
 13018                           
 13019 ;; *************** function _EUSART1_Transmit_ISR *****************
 13020 ;; Defined at:
 13021 ;;		line 150 in file "UART.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;		None
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13035 ;;      Params:         0       0       0       0       0       0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0
 13038 ;;      Totals:         0       0       0       0       0       0       0
 13039 ;;Total ram usage:        0 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    2
 13042 ;; This function calls:
 13043 ;;		i2_UART_buff_get
 13044 ;;		i2_UART_buff_size
 13045 ;; This function is called by:
 13046 ;;		_INTERRUPT_InterruptManager
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text68
 13051  0024BA                     __ptext68:
 13052                           	opt stack 0
 13053  0024BA                     _EUSART1_Transmit_ISR:
 13054                           	opt stack 20
 13055                           
 13056                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 13057                           
 13058                           ;incstack = 0
 13059  0024BA  0E00               	movlw	low _output_buffer
 13060  0024BC  6E01               	movwf	i2UART_buff_size@_this,c
 13061  0024BE  0E03               	movlw	high _output_buffer
 13062  0024C0  6E02               	movwf	i2UART_buff_size@_this+1,c
 13063  0024C2  EC78  F013         	call	i2_UART_buff_size	;wreg free
 13064  0024C6  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 13065  0024C8  D00D               	goto	i2l4947
 13066  0024CA  5002               	movf	?i2_UART_buff_size+1,w,c
 13067  0024CC  E103               	bnz	i2u452_40
 13068  0024CE  0401               	decf	?i2_UART_buff_size,w,c
 13069  0024D0  A0D8               	btfss	status,0,c
 13070  0024D2  D008               	goto	i2l4947
 13071  0024D4                     i2u452_40:
 13072                           
 13073                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 13074  0024D4  0E00               	movlw	low _output_buffer
 13075  0024D6  6E07               	movwf	i2UART_buff_get@_this,c
 13076  0024D8  0E03               	movlw	high _output_buffer
 13077  0024DA  6E08               	movwf	i2UART_buff_get@_this+1,c
 13078  0024DC  EC3F  F00F         	call	i2_UART_buff_get	;wreg free
 13079  0024E0  6EAD               	movwf	4013,c	;volatile
 13080                           
 13081                           ;UART.c: 154: } else {
 13082  0024E2  0012               	return	
 13083  0024E4                     i2l4947:
 13084                           
 13085                           ;UART.c: 155: Transmit_stall = 1;
 13086  0024E4  0E01               	movlw	1
 13087  0024E6  6E44               	movwf	_Transmit_stall,c
 13088                           
 13089                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 13090  0024E8  989D               	bcf	3997,4,c	;volatile
 13091  0024EA  0012               	return	
 13092  0024EC                     __end_of_EUSART1_Transmit_ISR:
 13093                           	opt stack 0
 13094                           tosu	equ	0xFFF
 13095                           tosh	equ	0xFFE
 13096                           tosl	equ	0xFFD
 13097                           pclatu	equ	0xFFB
 13098                           pclath	equ	0xFFA
 13099                           tblptru	equ	0xFF8
 13100                           tblptrh	equ	0xFF7
 13101                           tblptrl	equ	0xFF6
 13102                           tablat	equ	0xFF5
 13103                           prodh	equ	0xFF4
 13104                           prodl	equ	0xFF3
 13105                           intcon	equ	0xFF2
 13106                           intcon2	equ	0xFF1
 13107                           indf0	equ	0xFEF
 13108                           postinc0	equ	0xFEE
 13109                           fsr0h	equ	0xFEA
 13110                           fsr0l	equ	0xFE9
 13111                           wreg	equ	0xFE8
 13112                           indf1	equ	0xFE7
 13113                           fsr1h	equ	0xFE2
 13114                           fsr1l	equ	0xFE1
 13115                           indf2	equ	0xFDF
 13116                           postinc2	equ	0xFDE
 13117                           postdec2	equ	0xFDD
 13118                           plusw2	equ	0xFDB
 13119                           fsr2h	equ	0xFDA
 13120                           fsr2l	equ	0xFD9
 13121                           status	equ	0xFD8
 13122                           
 13123 ;; *************** function i2_UART_buff_size *****************
 13124 ;; Defined at:
 13125 ;;		line 102 in file "UART.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 13128 ;;		 -> output_buffer(206), input_buffer(206), 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  2    0[COMRAM] int 
 13133 ;; Registers used:
 13134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13140 ;;      Params:         2       0       0       0       0       0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0
 13142 ;;      Temps:          0       0       0       0       0       0       0
 13143 ;;      Totals:         2       0       0       0       0       0       0
 13144 ;;Total ram usage:        2 bytes
 13145 ;; Hardware stack levels used:    1
 13146 ;; This function calls:
 13147 ;;		Nothing
 13148 ;; This function is called by:
 13149 ;;		_EUSART1_Transmit_ISR
 13150 ;; This function uses a non-reentrant model
 13151 ;;
 13152                           
 13153                           	psect	text69
 13154  0026F0                     __ptext69:
 13155                           	opt stack 0
 13156  0026F0                     i2_UART_buff_size:
 13157                           	opt stack 21
 13158                           
 13159                           ;UART.c: 103: return (_this->count);
 13160                           
 13161                           ;incstack = 0
 13162  0026F0  EE20 F0CC          	lfsr	2,204
 13163  0026F4  5001               	movf	i2UART_buff_size@_this,w,c
 13164  0026F6  26D9               	addwf	fsr2l,f,c
 13165  0026F8  5002               	movf	i2UART_buff_size@_this+1,w,c
 13166  0026FA  22DA               	addwfc	fsr2h,f,c
 13167  0026FC  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 13168  002700  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 13169  002704  0012               	return	
 13170  002706                     __end_ofi2_UART_buff_size:
 13171                           	opt stack 0
 13172                           tosu	equ	0xFFF
 13173                           tosh	equ	0xFFE
 13174                           tosl	equ	0xFFD
 13175                           pclatu	equ	0xFFB
 13176                           pclath	equ	0xFFA
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           intcon	equ	0xFF2
 13184                           intcon2	equ	0xFF1
 13185                           indf0	equ	0xFEF
 13186                           postinc0	equ	0xFEE
 13187                           fsr0h	equ	0xFEA
 13188                           fsr0l	equ	0xFE9
 13189                           wreg	equ	0xFE8
 13190                           indf1	equ	0xFE7
 13191                           fsr1h	equ	0xFE2
 13192                           fsr1l	equ	0xFE1
 13193                           indf2	equ	0xFDF
 13194                           postinc2	equ	0xFDE
 13195                           postdec2	equ	0xFDD
 13196                           plusw2	equ	0xFDB
 13197                           fsr2h	equ	0xFDA
 13198                           fsr2l	equ	0xFD9
 13199                           status	equ	0xFD8
 13200                           
 13201 ;; *************** function i2_UART_buff_get *****************
 13202 ;; Defined at:
 13203 ;;		line 81 in file "UART.c"
 13204 ;; Parameters:    Size  Location     Type
 13205 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13206 ;;		 -> output_buffer(206), input_buffer(206), 
 13207 ;; Auto vars:     Size  Location     Type
 13208 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  1    wreg      unsigned char 
 13211 ;; Registers used:
 13212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13213 ;; Tracked objects:
 13214 ;;		On entry : 0/0
 13215 ;;		On exit  : 0/0
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13218 ;;      Params:         2       0       0       0       0       0       0
 13219 ;;      Locals:         1       0       0       0       0       0       0
 13220 ;;      Temps:          2       0       0       0       0       0       0
 13221 ;;      Totals:         5       0       0       0       0       0       0
 13222 ;;Total ram usage:        5 bytes
 13223 ;; Hardware stack levels used:    1
 13224 ;; Hardware stack levels required when called:    1
 13225 ;; This function calls:
 13226 ;;		i2_UART_buff_modulo_inc
 13227 ;; This function is called by:
 13228 ;;		_EUSART1_Transmit_ISR
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           	psect	text70
 13233  001E7E                     __ptext70:
 13234                           	opt stack 0
 13235  001E7E                     i2_UART_buff_get:
 13236                           	opt stack 20
 13237                           
 13238                           ;UART.c: 82: unsigned char c;
 13239                           ;UART.c: 83: if (_this->count > 0) {
 13240                           
 13241                           ;incstack = 0
 13242  001E7E  EE20 F0CC          	lfsr	2,204
 13243  001E82  5007               	movf	i2UART_buff_get@_this,w,c
 13244  001E84  26D9               	addwf	fsr2l,f,c
 13245  001E86  5008               	movf	i2UART_buff_get@_this+1,w,c
 13246  001E88  22DA               	addwfc	fsr2h,f,c
 13247  001E8A  0E01               	movlw	1
 13248  001E8C  BEDB               	btfsc	plusw2,7,c
 13249  001E8E  D03C               	goto	i2l4801
 13250  001E90  0E01               	movlw	1
 13251  001E92  50DB               	movf	plusw2,w,c
 13252  001E94  E103               	bnz	i2u431_40
 13253  001E96  04DE               	decf	postinc2,w,c
 13254  001E98  A0D8               	btfss	status,0,c
 13255  001E9A  D036               	goto	i2l4801
 13256  001E9C                     i2u431_40:
 13257                           
 13258                           ;UART.c: 84: c = _this->buf[_this->tail];
 13259  001E9C  EE20 F0CA          	lfsr	2,202
 13260  001EA0  5007               	movf	i2UART_buff_get@_this,w,c
 13261  001EA2  26D9               	addwf	fsr2l,f,c
 13262  001EA4  5008               	movf	i2UART_buff_get@_this+1,w,c
 13263  001EA6  22DA               	addwfc	fsr2h,f,c
 13264  001EA8  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 13265  001EAC  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 13266  001EB0  5009               	movf	??i2_UART_buff_get,w,c
 13267  001EB2  2407               	addwf	i2UART_buff_get@_this,w,c
 13268  001EB4  6ED9               	movwf	fsr2l,c
 13269  001EB6  500A               	movf	??i2_UART_buff_get+1,w,c
 13270  001EB8  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 13271  001EBA  6EDA               	movwf	fsr2h,c
 13272  001EBC  50DF               	movf	indf2,w,c
 13273  001EBE  6E0B               	movwf	i2UART_buff_get@c,c
 13274                           
 13275                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13276  001EC0  EE20 F0CA          	lfsr	2,202
 13277  001EC4  5007               	movf	i2UART_buff_get@_this,w,c
 13278  001EC6  26D9               	addwf	fsr2l,f,c
 13279  001EC8  5008               	movf	i2UART_buff_get@_this+1,w,c
 13280  001ECA  22DA               	addwfc	fsr2h,f,c
 13281  001ECC  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13282  001ED0  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13283  001ED4  0E00               	movlw	0
 13284  001ED6  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13285  001ED8  0EC8               	movlw	200
 13286  001EDA  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13287  001EDC  ECCF  F012         	call	i2_UART_buff_modulo_inc	;wreg free
 13288  001EE0  EE20 F0CA          	lfsr	2,202
 13289  001EE4  5007               	movf	i2UART_buff_get@_this,w,c
 13290  001EE6  26D9               	addwf	fsr2l,f,c
 13291  001EE8  5008               	movf	i2UART_buff_get@_this+1,w,c
 13292  001EEA  22DA               	addwfc	fsr2h,f,c
 13293  001EEC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13294  001EF0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13295                           
 13296                           ;UART.c: 86: --_this->count;
 13297  001EF4  EE20 F0CC          	lfsr	2,204
 13298  001EF8  5007               	movf	i2UART_buff_get@_this,w,c
 13299  001EFA  26D9               	addwf	fsr2l,f,c
 13300  001EFC  5008               	movf	i2UART_buff_get@_this+1,w,c
 13301  001EFE  22DA               	addwfc	fsr2h,f,c
 13302  001F00  06DE               	decf	postinc2,f,c
 13303  001F02  0E00               	movlw	0
 13304  001F04  5ADD               	subwfb	postdec2,f,c
 13305                           
 13306                           ;UART.c: 87: } else {
 13307  001F06  D002               	goto	i2l922
 13308  001F08                     i2l4801:
 13309                           
 13310                           ;UART.c: 88: c = 0;
 13311  001F08  0E00               	movlw	0
 13312  001F0A  6E0B               	movwf	i2UART_buff_get@c,c
 13313  001F0C                     i2l922:
 13314                           
 13315                           ;UART.c: 89: }
 13316                           ;UART.c: 90: return (c);
 13317  001F0C  500B               	movf	i2UART_buff_get@c,w,c
 13318  001F0E  0012               	return	
 13319  001F10                     __end_ofi2_UART_buff_get:
 13320                           	opt stack 0
 13321                           tosu	equ	0xFFF
 13322                           tosh	equ	0xFFE
 13323                           tosl	equ	0xFFD
 13324                           pclatu	equ	0xFFB
 13325                           pclath	equ	0xFFA
 13326                           tblptru	equ	0xFF8
 13327                           tblptrh	equ	0xFF7
 13328                           tblptrl	equ	0xFF6
 13329                           tablat	equ	0xFF5
 13330                           prodh	equ	0xFF4
 13331                           prodl	equ	0xFF3
 13332                           intcon	equ	0xFF2
 13333                           intcon2	equ	0xFF1
 13334                           indf0	equ	0xFEF
 13335                           postinc0	equ	0xFEE
 13336                           fsr0h	equ	0xFEA
 13337                           fsr0l	equ	0xFE9
 13338                           wreg	equ	0xFE8
 13339                           indf1	equ	0xFE7
 13340                           fsr1h	equ	0xFE2
 13341                           fsr1l	equ	0xFE1
 13342                           indf2	equ	0xFDF
 13343                           postinc2	equ	0xFDE
 13344                           postdec2	equ	0xFDD
 13345                           plusw2	equ	0xFDB
 13346                           fsr2h	equ	0xFDA
 13347                           fsr2l	equ	0xFD9
 13348                           status	equ	0xFD8
 13349                           
 13350 ;; *************** function _EUSART1_Receive_ISR *****************
 13351 ;; Defined at:
 13352 ;;		line 139 in file "UART.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;		None
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;  data            1   11[COMRAM] unsigned char 
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      void 
 13359 ;; Registers used:
 13360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13366 ;;      Params:         0       0       0       0       0       0       0
 13367 ;;      Locals:         1       0       0       0       0       0       0
 13368 ;;      Temps:          0       0       0       0       0       0       0
 13369 ;;      Totals:         1       0       0       0       0       0       0
 13370 ;;Total ram usage:        1 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:    2
 13373 ;; This function calls:
 13374 ;;		i2_UART_buff_put
 13375 ;; This function is called by:
 13376 ;;		_INTERRUPT_InterruptManager
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text71
 13381  00268E                     __ptext71:
 13382                           	opt stack 0
 13383  00268E                     _EUSART1_Receive_ISR:
 13384                           	opt stack 20
 13385                           
 13386                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 13387                           
 13388                           ;incstack = 0
 13389  00268E  A2AB               	btfss	4011,1,c	;volatile
 13390  002690  D002               	goto	i2l953
 13391                           
 13392                           ;UART.c: 143: RC1STAbits.CREN = 0;
 13393  002692  98AB               	bcf	4011,4,c	;volatile
 13394                           
 13395                           ;UART.c: 144: RC1STAbits.CREN = 1;
 13396  002694  88AB               	bsf	4011,4,c	;volatile
 13397  002696                     i2l953:
 13398                           
 13399                           ;UART.c: 145: }
 13400                           ;UART.c: 146: unsigned char data = RCREG1;
 13401  002696  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 13402                           
 13403                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 13404  00269A  0E00               	movlw	low _input_buffer
 13405  00269C  6E07               	movwf	i2UART_buff_put@_this,c
 13406  00269E  0E02               	movlw	high _input_buffer
 13407  0026A0  6E08               	movwf	i2UART_buff_put@_this+1,c
 13408  0026A2  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 13409  0026A6  EC15  F00A         	call	i2_UART_buff_put	;wreg free
 13410  0026AA  0012               	return		;funcret
 13411  0026AC                     __end_of_EUSART1_Receive_ISR:
 13412                           	opt stack 0
 13413                           tosu	equ	0xFFF
 13414                           tosh	equ	0xFFE
 13415                           tosl	equ	0xFFD
 13416                           pclatu	equ	0xFFB
 13417                           pclath	equ	0xFFA
 13418                           tblptru	equ	0xFF8
 13419                           tblptrh	equ	0xFF7
 13420                           tblptrl	equ	0xFF6
 13421                           tablat	equ	0xFF5
 13422                           prodh	equ	0xFF4
 13423                           prodl	equ	0xFF3
 13424                           intcon	equ	0xFF2
 13425                           intcon2	equ	0xFF1
 13426                           indf0	equ	0xFEF
 13427                           postinc0	equ	0xFEE
 13428                           fsr0h	equ	0xFEA
 13429                           fsr0l	equ	0xFE9
 13430                           wreg	equ	0xFE8
 13431                           indf1	equ	0xFE7
 13432                           fsr1h	equ	0xFE2
 13433                           fsr1l	equ	0xFE1
 13434                           indf2	equ	0xFDF
 13435                           postinc2	equ	0xFDE
 13436                           postdec2	equ	0xFDD
 13437                           plusw2	equ	0xFDB
 13438                           fsr2h	equ	0xFDA
 13439                           fsr2l	equ	0xFD9
 13440                           status	equ	0xFD8
 13441                           
 13442 ;; *************** function i2_UART_buff_put *****************
 13443 ;; Defined at:
 13444 ;;		line 68 in file "UART.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 13447 ;;		 -> output_buffer(206), input_buffer(206), 
 13448 ;;  c               1    8[COMRAM] const unsigned char 
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;		None
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  1    wreg      void 
 13453 ;; Registers used:
 13454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/0
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13460 ;;      Params:         3       0       0       0       0       0       0
 13461 ;;      Locals:         0       0       0       0       0       0       0
 13462 ;;      Temps:          2       0       0       0       0       0       0
 13463 ;;      Totals:         5       0       0       0       0       0       0
 13464 ;;Total ram usage:        5 bytes
 13465 ;; Hardware stack levels used:    1
 13466 ;; Hardware stack levels required when called:    1
 13467 ;; This function calls:
 13468 ;;		i2_UART_buff_modulo_inc
 13469 ;; This function is called by:
 13470 ;;		_EUSART1_Receive_ISR
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text72
 13475  00142A                     __ptext72:
 13476                           	opt stack 0
 13477  00142A                     i2_UART_buff_put:
 13478                           	opt stack 20
 13479                           
 13480                           ;UART.c: 69: if (_this->count < 200) {
 13481                           
 13482                           ;incstack = 0
 13483  00142A  EE20 F0CC          	lfsr	2,204
 13484  00142E  5007               	movf	i2UART_buff_put@_this,w,c
 13485  001430  26D9               	addwf	fsr2l,f,c
 13486  001432  5008               	movf	i2UART_buff_put@_this+1,w,c
 13487  001434  22DA               	addwfc	fsr2h,f,c
 13488  001436  0E01               	movlw	1
 13489  001438  BEDB               	btfsc	plusw2,7,c
 13490  00143A  D007               	goto	i2l4781
 13491  00143C  0E01               	movlw	1
 13492  00143E  50DB               	movf	plusw2,w,c
 13493  001440  E13A               	bnz	i2l4787
 13494  001442  0EC8               	movlw	200
 13495  001444  5CDE               	subwf	postinc2,w,c
 13496  001446  B0D8               	btfsc	status,0,c
 13497  001448  D036               	goto	i2l4787
 13498  00144A                     i2l4781:
 13499                           
 13500                           ;UART.c: 70: _this->buf[_this->head] = c;
 13501  00144A  EE20 F0C8          	lfsr	2,200
 13502  00144E  5007               	movf	i2UART_buff_put@_this,w,c
 13503  001450  26D9               	addwf	fsr2l,f,c
 13504  001452  5008               	movf	i2UART_buff_put@_this+1,w,c
 13505  001454  22DA               	addwfc	fsr2h,f,c
 13506  001456  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13507  00145A  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13508  00145E  500A               	movf	??i2_UART_buff_put,w,c
 13509  001460  2407               	addwf	i2UART_buff_put@_this,w,c
 13510  001462  6ED9               	movwf	fsr2l,c
 13511  001464  500B               	movf	??i2_UART_buff_put+1,w,c
 13512  001466  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13513  001468  6EDA               	movwf	fsr2h,c
 13514  00146A  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13515                           
 13516                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13517  00146E  EE20 F0C8          	lfsr	2,200
 13518  001472  5007               	movf	i2UART_buff_put@_this,w,c
 13519  001474  26D9               	addwf	fsr2l,f,c
 13520  001476  5008               	movf	i2UART_buff_put@_this+1,w,c
 13521  001478  22DA               	addwfc	fsr2h,f,c
 13522  00147A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13523  00147E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13524  001482  0E00               	movlw	0
 13525  001484  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13526  001486  0EC8               	movlw	200
 13527  001488  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13528  00148A  ECCF  F012         	call	i2_UART_buff_modulo_inc	;wreg free
 13529  00148E  EE20 F0C8          	lfsr	2,200
 13530  001492  5007               	movf	i2UART_buff_put@_this,w,c
 13531  001494  26D9               	addwf	fsr2l,f,c
 13532  001496  5008               	movf	i2UART_buff_put@_this+1,w,c
 13533  001498  22DA               	addwfc	fsr2h,f,c
 13534  00149A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13535  00149E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13536                           
 13537                           ;UART.c: 72: ++_this->count;
 13538  0014A2  EE20 F0CC          	lfsr	2,204
 13539  0014A6  5007               	movf	i2UART_buff_put@_this,w,c
 13540  0014A8  26D9               	addwf	fsr2l,f,c
 13541  0014AA  5008               	movf	i2UART_buff_put@_this+1,w,c
 13542  0014AC  22DA               	addwfc	fsr2h,f,c
 13543  0014AE  2ADE               	incf	postinc2,f,c
 13544  0014B0  0E00               	movlw	0
 13545  0014B2  22DD               	addwfc	postdec2,f,c
 13546                           
 13547                           ;UART.c: 73: } else {
 13548  0014B4  0012               	return	
 13549  0014B6                     i2l4787:
 13550                           
 13551                           ;UART.c: 74: _this->buf[_this->head] = c;
 13552  0014B6  EE20 F0C8          	lfsr	2,200
 13553  0014BA  5007               	movf	i2UART_buff_put@_this,w,c
 13554  0014BC  26D9               	addwf	fsr2l,f,c
 13555  0014BE  5008               	movf	i2UART_buff_put@_this+1,w,c
 13556  0014C0  22DA               	addwfc	fsr2h,f,c
 13557  0014C2  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 13558  0014C6  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 13559  0014CA  500A               	movf	??i2_UART_buff_put,w,c
 13560  0014CC  2407               	addwf	i2UART_buff_put@_this,w,c
 13561  0014CE  6ED9               	movwf	fsr2l,c
 13562  0014D0  500B               	movf	??i2_UART_buff_put+1,w,c
 13563  0014D2  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 13564  0014D4  6EDA               	movwf	fsr2h,c
 13565  0014D6  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 13566                           
 13567                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 13568  0014DA  EE20 F0C8          	lfsr	2,200
 13569  0014DE  5007               	movf	i2UART_buff_put@_this,w,c
 13570  0014E0  26D9               	addwf	fsr2l,f,c
 13571  0014E2  5008               	movf	i2UART_buff_put@_this+1,w,c
 13572  0014E4  22DA               	addwfc	fsr2h,f,c
 13573  0014E6  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13574  0014EA  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13575  0014EE  0E00               	movlw	0
 13576  0014F0  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13577  0014F2  0EC8               	movlw	200
 13578  0014F4  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13579  0014F6  ECCF  F012         	call	i2_UART_buff_modulo_inc	;wreg free
 13580  0014FA  EE20 F0C8          	lfsr	2,200
 13581  0014FE  5007               	movf	i2UART_buff_put@_this,w,c
 13582  001500  26D9               	addwf	fsr2l,f,c
 13583  001502  5008               	movf	i2UART_buff_put@_this+1,w,c
 13584  001504  22DA               	addwfc	fsr2h,f,c
 13585  001506  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13586  00150A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13587                           
 13588                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 13589  00150E  EE20 F0CA          	lfsr	2,202
 13590  001512  5007               	movf	i2UART_buff_put@_this,w,c
 13591  001514  26D9               	addwf	fsr2l,f,c
 13592  001516  5008               	movf	i2UART_buff_put@_this+1,w,c
 13593  001518  22DA               	addwfc	fsr2h,f,c
 13594  00151A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 13595  00151E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 13596  001522  0E00               	movlw	0
 13597  001524  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 13598  001526  0EC8               	movlw	200
 13599  001528  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 13600  00152A  ECCF  F012         	call	i2_UART_buff_modulo_inc	;wreg free
 13601  00152E  EE20 F0CA          	lfsr	2,202
 13602  001532  5007               	movf	i2UART_buff_put@_this,w,c
 13603  001534  26D9               	addwf	fsr2l,f,c
 13604  001536  5008               	movf	i2UART_buff_put@_this+1,w,c
 13605  001538  22DA               	addwfc	fsr2h,f,c
 13606  00153A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 13607  00153E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 13608  001542  0012               	return	
 13609  001544                     __end_ofi2_UART_buff_put:
 13610                           	opt stack 0
 13611                           tosu	equ	0xFFF
 13612                           tosh	equ	0xFFE
 13613                           tosl	equ	0xFFD
 13614                           pclatu	equ	0xFFB
 13615                           pclath	equ	0xFFA
 13616                           tblptru	equ	0xFF8
 13617                           tblptrh	equ	0xFF7
 13618                           tblptrl	equ	0xFF6
 13619                           tablat	equ	0xFF5
 13620                           prodh	equ	0xFF4
 13621                           prodl	equ	0xFF3
 13622                           intcon	equ	0xFF2
 13623                           intcon2	equ	0xFF1
 13624                           indf0	equ	0xFEF
 13625                           postinc0	equ	0xFEE
 13626                           fsr0h	equ	0xFEA
 13627                           fsr0l	equ	0xFE9
 13628                           wreg	equ	0xFE8
 13629                           indf1	equ	0xFE7
 13630                           fsr1h	equ	0xFE2
 13631                           fsr1l	equ	0xFE1
 13632                           indf2	equ	0xFDF
 13633                           postinc2	equ	0xFDE
 13634                           postdec2	equ	0xFDD
 13635                           plusw2	equ	0xFDB
 13636                           fsr2h	equ	0xFDA
 13637                           fsr2l	equ	0xFD9
 13638                           status	equ	0xFD8
 13639                           
 13640 ;; *************** function i2_UART_buff_modulo_inc *****************
 13641 ;; Defined at:
 13642 ;;		line 106 in file "UART.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  value           2    0[COMRAM] const unsigned int 
 13645 ;;  modulus         2    2[COMRAM] const unsigned int 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  2    0[COMRAM] unsigned int 
 13650 ;; Registers used:
 13651 ;;		wreg, status,2, status,0
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13657 ;;      Params:         4       0       0       0       0       0       0
 13658 ;;      Locals:         2       0       0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0
 13660 ;;      Totals:         6       0       0       0       0       0       0
 13661 ;;Total ram usage:        6 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		i2_UART_buff_put
 13667 ;;		i2_UART_buff_get
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text73
 13672  00259E                     __ptext73:
 13673                           	opt stack 0
 13674  00259E                     i2_UART_buff_modulo_inc:
 13675                           	opt stack 20
 13676                           
 13677                           ;UART.c: 107: unsigned int my_value = value + 1;
 13678                           
 13679                           ;incstack = 0
 13680  00259E  0E01               	movlw	1
 13681  0025A0  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 13682  0025A2  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13683  0025A4  0E00               	movlw	0
 13684  0025A6  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 13685  0025A8  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13686                           
 13687                           ;UART.c: 108: if (my_value >= modulus) {
 13688  0025AA  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 13689  0025AC  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 13690  0025AE  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 13691  0025B0  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 13692  0025B2  A0D8               	btfss	status,0,c
 13693  0025B4  D004               	goto	i2l4405
 13694                           
 13695                           ;UART.c: 109: my_value = 0;
 13696  0025B6  0E00               	movlw	0
 13697  0025B8  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 13698  0025BA  0E00               	movlw	0
 13699  0025BC  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 13700  0025BE                     i2l4405:
 13701                           
 13702                           ;UART.c: 110: }
 13703                           ;UART.c: 111: return (my_value);
 13704  0025BE  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 13705  0025C2  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 13706  0025C6  0012               	return	
 13707  0025C8                     __end_ofi2_UART_buff_modulo_inc:
 13708                           	opt stack 0
 13709                           tosu	equ	0xFFF
 13710                           tosh	equ	0xFFE
 13711                           tosl	equ	0xFFD
 13712                           pclatu	equ	0xFFB
 13713                           pclath	equ	0xFFA
 13714                           tblptru	equ	0xFF8
 13715                           tblptrh	equ	0xFF7
 13716                           tblptrl	equ	0xFF6
 13717                           tablat	equ	0xFF5
 13718                           prodh	equ	0xFF4
 13719                           prodl	equ	0xFF3
 13720                           intcon	equ	0xFF2
 13721                           intcon2	equ	0xFF1
 13722                           indf0	equ	0xFEF
 13723                           postinc0	equ	0xFEE
 13724                           fsr0h	equ	0xFEA
 13725                           fsr0l	equ	0xFE9
 13726                           wreg	equ	0xFE8
 13727                           indf1	equ	0xFE7
 13728                           fsr1h	equ	0xFE2
 13729                           fsr1l	equ	0xFE1
 13730                           indf2	equ	0xFDF
 13731                           postinc2	equ	0xFDE
 13732                           postdec2	equ	0xFDD
 13733                           plusw2	equ	0xFDB
 13734                           fsr2h	equ	0xFDA
 13735                           fsr2l	equ	0xFD9
 13736                           status	equ	0xFD8
 13737                           
 13738 ;; *************** function _ADC_ISR *****************
 13739 ;; Defined at:
 13740 ;;		line 128 in file "mcc_generated_files/adc.c"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;		None
 13743 ;; Auto vars:     Size  Location     Type
 13744 ;;		None
 13745 ;; Return value:  Size  Location     Type
 13746 ;;                  1    wreg      void 
 13747 ;; Registers used:
 13748 ;;		None
 13749 ;; Tracked objects:
 13750 ;;		On entry : 0/0
 13751 ;;		On exit  : 0/0
 13752 ;;		Unchanged: 0/0
 13753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13754 ;;      Params:         0       0       0       0       0       0       0
 13755 ;;      Locals:         0       0       0       0       0       0       0
 13756 ;;      Temps:          0       0       0       0       0       0       0
 13757 ;;      Totals:         0       0       0       0       0       0       0
 13758 ;;Total ram usage:        0 bytes
 13759 ;; Hardware stack levels used:    1
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_INTERRUPT_InterruptManager
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767                           	psect	text74
 13768  002780                     __ptext74:
 13769                           	opt stack 0
 13770  002780                     _ADC_ISR:
 13771                           	opt stack 22
 13772                           
 13773                           ;adc.c: 131: PIR1bits.ADIF = 0;
 13774                           
 13775                           ;incstack = 0
 13776  002780  9C9E               	bcf	3998,6,c	;volatile
 13777  002782  0012               	return		;funcret
 13778  002784                     __end_of_ADC_ISR:
 13779                           	opt stack 0
 13780                           tosu	equ	0xFFF
 13781                           tosh	equ	0xFFE
 13782                           tosl	equ	0xFFD
 13783                           pclatu	equ	0xFFB
 13784                           pclath	equ	0xFFA
 13785                           tblptru	equ	0xFF8
 13786                           tblptrh	equ	0xFF7
 13787                           tblptrl	equ	0xFF6
 13788                           tablat	equ	0xFF5
 13789                           prodh	equ	0xFF4
 13790                           prodl	equ	0xFF3
 13791                           intcon	equ	0xFF2
 13792                           intcon2	equ	0xFF1
 13793                           indf0	equ	0xFEF
 13794                           postinc0	equ	0xFEE
 13795                           fsr0h	equ	0xFEA
 13796                           fsr0l	equ	0xFE9
 13797                           wreg	equ	0xFE8
 13798                           indf1	equ	0xFE7
 13799                           fsr1h	equ	0xFE2
 13800                           fsr1l	equ	0xFE1
 13801                           indf2	equ	0xFDF
 13802                           postinc2	equ	0xFDE
 13803                           postdec2	equ	0xFDD
 13804                           plusw2	equ	0xFDB
 13805                           fsr2h	equ	0xFDA
 13806                           fsr2l	equ	0xFD9
 13807                           status	equ	0xFD8
 13808                           tosu	equ	0xFFF
 13809                           tosh	equ	0xFFE
 13810                           tosl	equ	0xFFD
 13811                           pclatu	equ	0xFFB
 13812                           pclath	equ	0xFFA
 13813                           tblptru	equ	0xFF8
 13814                           tblptrh	equ	0xFF7
 13815                           tblptrl	equ	0xFF6
 13816                           tablat	equ	0xFF5
 13817                           prodh	equ	0xFF4
 13818                           prodl	equ	0xFF3
 13819                           intcon	equ	0xFF2
 13820                           intcon2	equ	0xFF1
 13821                           indf0	equ	0xFEF
 13822                           postinc0	equ	0xFEE
 13823                           fsr0h	equ	0xFEA
 13824                           fsr0l	equ	0xFE9
 13825                           wreg	equ	0xFE8
 13826                           indf1	equ	0xFE7
 13827                           fsr1h	equ	0xFE2
 13828                           fsr1l	equ	0xFE1
 13829                           indf2	equ	0xFDF
 13830                           postinc2	equ	0xFDE
 13831                           postdec2	equ	0xFDD
 13832                           plusw2	equ	0xFDB
 13833                           fsr2h	equ	0xFDA
 13834                           fsr2l	equ	0xFD9
 13835                           status	equ	0xFD8
 13836                           
 13837                           	psect	text75
 13838  000000                     __ptext75:
 13839                           	opt stack 0
 13840                           tosu	equ	0xFFF
 13841                           tosh	equ	0xFFE
 13842                           tosl	equ	0xFFD
 13843                           pclatu	equ	0xFFB
 13844                           pclath	equ	0xFFA
 13845                           tblptru	equ	0xFF8
 13846                           tblptrh	equ	0xFF7
 13847                           tblptrl	equ	0xFF6
 13848                           tablat	equ	0xFF5
 13849                           prodh	equ	0xFF4
 13850                           prodl	equ	0xFF3
 13851                           intcon	equ	0xFF2
 13852                           intcon2	equ	0xFF1
 13853                           indf0	equ	0xFEF
 13854                           postinc0	equ	0xFEE
 13855                           fsr0h	equ	0xFEA
 13856                           fsr0l	equ	0xFE9
 13857                           wreg	equ	0xFE8
 13858                           indf1	equ	0xFE7
 13859                           fsr1h	equ	0xFE2
 13860                           fsr1l	equ	0xFE1
 13861                           indf2	equ	0xFDF
 13862                           postinc2	equ	0xFDE
 13863                           postdec2	equ	0xFDD
 13864                           plusw2	equ	0xFDB
 13865                           fsr2h	equ	0xFDA
 13866                           fsr2l	equ	0xFD9
 13867                           status	equ	0xFD8
 13868                           
 13869                           	psect	rparam
 13870  0000                     tosu	equ	0xFFF
 13871                           tosh	equ	0xFFE
 13872                           tosl	equ	0xFFD
 13873                           pclatu	equ	0xFFB
 13874                           pclath	equ	0xFFA
 13875                           tblptru	equ	0xFF8
 13876                           tblptrh	equ	0xFF7
 13877                           tblptrl	equ	0xFF6
 13878                           tablat	equ	0xFF5
 13879                           prodh	equ	0xFF4
 13880                           prodl	equ	0xFF3
 13881                           intcon	equ	0xFF2
 13882                           intcon2	equ	0xFF1
 13883                           indf0	equ	0xFEF
 13884                           postinc0	equ	0xFEE
 13885                           fsr0h	equ	0xFEA
 13886                           fsr0l	equ	0xFE9
 13887                           wreg	equ	0xFE8
 13888                           indf1	equ	0xFE7
 13889                           fsr1h	equ	0xFE2
 13890                           fsr1l	equ	0xFE1
 13891                           indf2	equ	0xFDF
 13892                           postinc2	equ	0xFDE
 13893                           postdec2	equ	0xFDD
 13894                           plusw2	equ	0xFDB
 13895                           fsr2h	equ	0xFDA
 13896                           fsr2l	equ	0xFD9
 13897                           status	equ	0xFD8
 13898                           
 13899                           	psect	temp
 13900  000045                     btemp:
 13901                           	opt stack 0
 13902  000045                     	ds	1
 13903  0000                     int$flags	set	btemp
 13904                           tosu	equ	0xFFF
 13905                           tosh	equ	0xFFE
 13906                           tosl	equ	0xFFD
 13907                           pclatu	equ	0xFFB
 13908                           pclath	equ	0xFFA
 13909                           tblptru	equ	0xFF8
 13910                           tblptrh	equ	0xFF7
 13911                           tblptrl	equ	0xFF6
 13912                           tablat	equ	0xFF5
 13913                           prodh	equ	0xFF4
 13914                           prodl	equ	0xFF3
 13915                           intcon	equ	0xFF2
 13916                           intcon2	equ	0xFF1
 13917                           indf0	equ	0xFEF
 13918                           postinc0	equ	0xFEE
 13919                           fsr0h	equ	0xFEA
 13920                           fsr0l	equ	0xFE9
 13921                           wreg	equ	0xFE8
 13922                           indf1	equ	0xFE7
 13923                           fsr1h	equ	0xFE2
 13924                           fsr1l	equ	0xFE1
 13925                           indf2	equ	0xFDF
 13926                           postinc2	equ	0xFDE
 13927                           postdec2	equ	0xFDD
 13928                           plusw2	equ	0xFDB
 13929                           fsr2h	equ	0xFDA
 13930                           fsr2l	equ	0xFD9
 13931                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         631
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160     39     116
    BANK1           256     68     190
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E6966 size(2) Largest target is 0
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK0[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK0[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    GetDataDict@DataArray	PTR unsigned char  size(2) Largest target is 4
		 -> ComController@DataToSend(BANK0[4]), 

    ComController@DTI	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    sendData@DTS	PTR unsigned char  size(2) Largest target is 4
		 -> ComController@DataToSend(BANK0[4]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), sendData@SendArray(BANK1[30]), 

    cobs_decode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK1[30]), 

    cobs_decode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK1[30]), 

    cobs_decode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK1[30]), 

    cobs_encode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK1[30]), 

    cobs_encode@dst_code_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK1[30]), 

    cobs_encode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK1[30]), 

    cobs_encode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK1[30]), 

    cobs_encode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK1[30]), 

    cobs_encode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK1[30]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK0[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK3[206]), input_buffer(BANK2[206]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK0[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK1[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E6966 size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E6966 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK0[1]), 
		 -> LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    F7078.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_MasterWrite@pflag	PTR enum E6966 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK0[1]), 
		 -> LEDbegin@status(BANK0[1]), LEDblinkRate@status(BANK0[1]), LEDBsetBrightness@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK0[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@writeBuffer(BANK0[2]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    F7073.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E6966 size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    S33$pTrFlag	PTR enum E6966 size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    p_i2c1_current.pTrFlag	PTR enum E6966 size(2) Largest target is 272
		 -> picture(CODE[272]), Display@status(COMRAM[1]), oledPutChar@status(BANK0[1]), oledPutChar@bytes(BANK0[9]), 
		 -> OLED_command@status(COMRAM[1]), Buff(BANK0[2]), LEDwriteDisplay@status(BANK0[1]), LEDwriteDisplay@writeBuffer(BANK0[20]), 
		 -> LEDbegin@status(BANK0[1]), LEDbegin@writeBuffer(BANK0[3]), LEDblinkRate@status(BANK0[1]), LEDblinkRate@writeBuffer(BANK0[2]), 
		 -> LEDBsetBrightness@status(BANK0[1]), LEDBsetBrightness@writeBuffer(BANK0[2]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK1[5]), I2C1_MasterWrite@trBlock(BANK1[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _receiveData->_ComController
    _Receive_get->_UART_buff_get
    _Receive_available->_UART_buff_size
    _ComController->_sendData
    _sendData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _UART_buff_get->_UART_buff_modulo_inc
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->___ftmul
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _receiveData->_ComController
    _ComController->_sendData
    _sendData->_cobs_encode
    ___fttol->___ftmul
    _Splash->_oledPrint
    _oledPrint->_oledPutChar
    _Setupdisplay->_oledClear
    _oledClear->_oledPutChar
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___fttol
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ComController->_sendData

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   71037
                          _ClearTime
                   _GetDataBarGraphA
                   _GetDataBarGraphB
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   12128
                        _receiveData
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         11    11      0   12128
                                             28 BANK0     11    11      0
                               _CRC8
                      _ComController
                  _Receive_available
                        _Receive_get
                        _cobs_decode
 ---------------------------------------------------------------------------------
 (3) _cobs_decode                                         24    16      8    1783
                                             26 COMRAM    10     2      8
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1308
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     148
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     148
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ComController                                        9     5      4    8087
                                             42 COMRAM     1     1      0
                                             20 BANK0      8     4      4
                              _Delay
                        _GetDataDict
                           _sendData
 ---------------------------------------------------------------------------------
 (4) _sendData                                            79    72      7    6751
                                             38 COMRAM     4     4      0
                                             13 BANK0      7     0      7
                                              0 BANK1     68    68      0
                               _CRC8
                           _Send_put
                        _cobs_encode
 ---------------------------------------------------------------------------------
 (5) _cobs_encode                                         23    15      8    1613
                                             26 COMRAM    10     2      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) _Send_put                                             1     1      0    2913
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (6) _UART_buff_put                                        5     2      3    1574
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (4) _UART_buff_get                                        5     3      2    1308
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _UART_buff_modulo_inc                                 6     2      4     850
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CRC8                                                 7     4      3     604
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (4) _GetDataDict                                          8     4      4     574
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Delay                                                5     3      2     350
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2984
                                             34 COMRAM     3     0      3
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     551
                                              9 BANK0     15    11      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3761
                                             37 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2773
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   11755
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    6041
                                             21 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   15976
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   11438
                                             21 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    5526
                                             38 COMRAM     4     4      0
                                              8 BANK0     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5714
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    4538
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    4538
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     824
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     726
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2     726
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     552
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    5556
                                              8 BANK0     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3060
                                             24 BANK0      7     3      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2409
                                             34 COMRAM     8     4      4
                                              0 BANK0     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   14442
                                             13 BANK0      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4875
                                             36 COMRAM     3     0      3
                                              8 BANK0      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4875
                                             36 COMRAM     3     0      3
                                              8 BANK0      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    4307
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     546
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     726
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphB                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphA                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                          14    14      0    1760
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR2_CallBack                                       4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             2     2      0     342
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (10) _ReadButtonState                                     4     2      2     274
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (10) _I2C1_Stop                                           3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_size                                    2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_get                                     5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_put                                     5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (11) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetDataBarGraphA
   _GetDataBarGraphB
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     _LEDsetBar (ARG)
       ___awdiv
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftmul (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _GetDataBarGraphA (ARG)
           _GetDataBarGraphB (ARG)
           ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   ___ftmul
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___fttol
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
   _updateComms
     _receiveData
       _CRC8
       _ComController
         _Delay
         _GetDataDict
         _sendData
           _CRC8
           _Send_put
             _UART_buff_get
               _UART_buff_modulo_inc
             _UART_buff_put
               _UART_buff_modulo_inc
           _cobs_encode
       _Receive_available
         _UART_buff_size
       _Receive_get
         _UART_buff_get
           _UART_buff_modulo_inc
       _cobs_decode

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     44      BE       6       74.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     27      74       4       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     312       9        0.0%
DATA                 0      0     312      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 20 16:39:55 2017

                     __end_of_GetDataDict 1DEC                    i2_UART_buff_modulo_inc 259E  
        __end_of_TMR2_SetInterruptHandler 2748                                         _i 0099  
                                       _k 00A1                  cobs_encode@dst_write_ptr 00B3  
                            ___awdiv@sign 0020                  GetDataDict@ReturnCounter 0022  
                LEDBsetBrightness@timeOut 00B3                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l624 1ADC  
                                     l619 1A6A                                       l922 1E7A  
                                     l698 013A                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 2784                           _TMR2_Initialize 260E  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 0780  
                                    l1022 228E                                      l1090 24A4  
                                    l1238 1DD8                                      l1176 23B6  
                                    l4201 1DDC                                      l1478 1976  
                                    l4127 2490                                      l4065 2552  
                                    l4069 2562                                      l4181 1D64  
                                    l6013 0C60                                      l6005 0BF6  
                                    l4191 1D9E                                      l4183 1D6C  
                                    l6111 0A44                                      l6103 0A08  
                                    l6201 03D6                                      l4193 1DA6  
                                    l6017 0C7C                                      l6009 0C34  
                                    l6113 0A48                                      l4371 1FC0  
                                    l6051 1712                                      l4381 1FE2  
                                    l4365 1FB0                                      l6037 166E  
                                    l4189 1D94                                      l6125 0A72  
                                    l6133 0A8A                                      l6215 1CEC  
                                    l6039 1674                                      l4199 1DCE  
                                    l6143 0ABE                                      l6217 1D1A  
                                    l6209 1CD2                                      l6241 1B9A  
                                    l4377 1FD6                                      l4393 2008  
                                    l6049 16E2                                      l6313 225C  
                                    l6235 1D4A                                      l4379 1FDE  
                                    l6307 2242                                      l6331 2292  
                                    l6147 0AD2                                      l6083 099E  
                                    l4397 2016                                      l4389 1FFE  
                                    l6181 00E4                                      l6069 1742  
                                    l6325 2286                                      l6341 18F8  
                                    l6093 09C8                                      l6085 09A6  
                                    l6077 098A                                      l6247 1BB6  
                                    l6503 1AFA                                      l6183 00FA  
                                    l6335 22BC                                      l6249 1BE4  
                                    l6505 1B28                                      l6193 023C  
                                    l6353 1944                                      l6345 1906  
                                    l5811 232A                                      l6267 1C14  
                                    l6523 1B58                                      l6355 1962  
                                    l6347 1910                                      l5803 1E76  
                                    l6275 121C                                      l6525 1B60  
                                    l6197 02FA                                      l6357 196C  
                                    l6349 192E                                      l6631 0F4A  
                                    l5743 2594                                      l6295 12FA  
                                    l6561 1AC0                                      l6553 1A74  
                                    l6705 0FBE                                      l5905 23A0  
                                    l5913 23BC                                      l5841 0D22  
                                    l5833 0D06                                      l6289 12DE  
                                    l6563 1AD4                                      l6571 0E84  
                                    l5931 206C                                      l6723 1050  
                                    l5915 23C2                                      l6299 130C  
                                    l5773 1C94                                      l6557 1A8A  
                                    l6549 1A5A                                      l6629 0F1C  
                                    l6741 10B6                                      l6733 1080  
                                    l5845 0D3C                                      l5775 1CA0  
                                    l6591 0EBC                                      l6663 112C  
                                    l6735 1090                                      l6727 1064  
                                    l5783 1330                                      l5863 0D8A  
                                    l5839 0D1A                                      l5769 1C80  
                                    l6649 0F7A                                      l6569 0E56  
                                    l5929 203C                                      l5961 1A0C  
                                    l6681 1184                                      l6657 10FA  
                                    l6737 109A                                      l5779 1CB0  
                                    l6691 11B6                                      l5891 0E08  
                                    l5883 0DDA                                      l6589 0EB4  
                                    l5949 2094                                      l5957 19DA  
                                    l6677 116E                                      l5789 139C  
                                    l6687 11A0                                      l5991 0B74  
                                    l5889 0DFC                                      l5985 0B34  
                                    l5899 238A                                      l6795 176A  
                                    STR_1 7FE3                     __end_of_ComController 18E8  
                                    STR_2 7FFC                                      STR_3 7FF6  
                                    STR_4 7FEE                                      _CRC8 2384  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6114 0160  
                                    u6115 0158                                      u7011 0F9A  
                                    u6220 1CCA                                      u6204 0404  
                                    u6124 01D8                                      u6205 03FC  
                                    u6125 01D0                                      u6214 0476  
                                    u7030 0FE4                                      u6215 046E  
                                    u6144 026A                                      u6145 0262  
                                    u6154 028E                                      u6090 0132  
                                    u6155 0286                                      u7035 0FDA  
                                    u6340 1208                                      u6174 0326  
                                    u5550 1E0A                                      u6175 031E  
                                    u6280 1B92                                      u6184 035A  
                                    u7240 1782                                      u6185 0352  
                                    u6450 22B2                                      i2l60 051E  
                                    u6460 22DC                                      u6380 12DC  
                                    i2l71 05BA                                      i2l63 057E  
                                    i2l72 05C8                                      u6800 1A50  
                                    i2l65 0586                                      u6457 22A8  
                                    i2l90 06D0                                      i2l82 064A  
                                    i2l66 058E                                      u5835 21AA  
                                    u6467 22D2                                      i2l76 0636  
                                    u5845 21C6                                      i2l94 071E  
                                    i2l86 0690                                      i2l89 06C0  
                                    u7387 123A                                      u7397 2496  
                                    u6951 10DC                                      u6971 110E  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                                    _Data 00A3                                      _Buff 00A9  
                __end_of_GetDataBarGraphA 275C                  __end_of_GetDataBarGraphB 2752  
                           oledPutChar@ch 00BE                                      _main 174C  
                            ___ftpack@arg 001B                              ___ftpack@exp 001E  
                         _TMR0_StartTimer 277C                                      _time 003D  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                    ??_I2C1_MasterTRBInsert 0021  
                                    btemp 0045                             __CFG_BORV$190 000000  
                         OLED_command@com 0025                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00D0  
                           __CFG_IESO$OFF 000000                           __end_of_GetTime 2764  
                            ___ftmul@cntr 00B2                              ___param_bank 000000  
                            ___ftmul@sign 00B3            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                              ___fttol@exp1 00C2  
                      __size_of_LEDsetBar 0406                              ___fttol@lval 00BE  
                                   ?_CRC8 001B                   ComController@DataToSend 00C3  
                 __end_of_TMR0_Initialize 2670                                _i2c1_state 003F  
                      __size_of_OLED_init 008C            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 001B             __end_of_OSCILLATOR_Initialize 2734  
               I2C1_MasterTRBInsert@pflag 001F                          LEDbegin@i2c_addr 00BD  
                        __end_of_LEDbegin 1B82                                     ?_main 0001  
                         __end_of___awdiv 2020                         __end_of_I2C1_Stop 2384  
                         __end_of___ftmul 11F4                                     _T0CON 000FD5  
                         ___awdiv@divisor 001D                           __end_of___fttol 10C8  
                                   _T2CON 000FBA                                     _LATA3 007C4B  
                                   _LATC1 007C59                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     _LATE0 007C68  
                                   _LATE1 007C69                                     _LATC5 007C5D  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l301 008A                                     i2l305 0094  
                                   i2l500 086A                                     i2l503 0876  
                                   i2l291 004E                                     i2l293 005A  
                                   i2l295 0066                                     i2l472 07BE  
                                   i2l481 07E2                                     i2l465 07A6  
                                   i2l297 0072                                     i2l458 0910  
                                   i2l491 0846                                     i2l475 07CA  
                                   i2l299 007E                                     i2l469 07B2  
                                   i2l494 0852                                     i2l478 07D6  
                                   i2l487 083A                                     i2l497 085E  
                                   i2l922 1F0C                                     i2l953 2696  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2486              __end_of_I2C1_BusCollisionISR 2788  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                    _EUSART1_Transmit_ISR 24BA                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                       ??_I2C1_Initialize 001B                          __end_of_TMR0_ISR 2486  
                        __end_of_TMR2_ISR 276C                             __CFG_WRTB$OFF 000000  
                            ?_LEDsetValue 00C3                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                         __end_of_memmove 1A3A                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                           __end_of_picture 7FE3  
                                   pclath 000FFA                              ?_oledPutChar 0001  
                                   tablat 000FF5                             ??_Receive_get 0026  
                           receiveData@CS 00CC                                     plusw2 000FDB  
                                   status 000FD8                               _GetDataDict 1D54  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 2778  
                            ?_receiveData 0001                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0021  
                            __end_of_CRC8 23CE                           __initialization 21DC  
                   I2C1_MasterWrite@pdata 00AB                     I2C1_MasterWrite@pflag 00B1  
              __end_of_EUSART1_Initialize 244E                              __end_of_main 1838  
                                  ??_CRC8 001E                             ?_LEDblinkRate 0025  
                 __end_of_TMR2_Initialize 2630                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7ED3  
                      __size_of_ClearTime 0006                               _i2c1_object 002C  
                _TMR2_SetInterruptHandler 273E                                    ??_main 002C  
                           ___fttol@sign1 00BD                             __activetblptr 000002  
                        __end_of_Send_put 251A                 __size_ofi2_UART_buff_size 0016  
                                  ?_Delay 001B                     ?_EUSART1_Transmit_ISR 0001  
                    GetDataDict@DataArray 001C                      GetDataDict@DataCount 0021  
                    GetDataDict@DataTable 0020                   __end_of_TMR0_StartTimer 2780  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                      __size_of_cobs_decode 01BE  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                        ___awdiv@dividend 001B                      __size_of_cobs_encode 0198  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 1996  
                       __end_of_LEDsetBar 04DA                           i2_UART_buff_get 1E7E  
                                  _RC1STA 000FAB                           i2_UART_buff_put 142A  
                          __CFG_WDTEN$OFF 000000                                    Delay@x 001E  
                                  i2l4405 25BE                                    i2l4503 0882  
                                  i2l4511 0904                                    i2l4513 0920  
                                  i2l4505 08B8               UART_buff_modulo_inc@modulus 001D  
                                  i2l4509 08D4                                    i2l4471 1594  
                                  i2l4801 1F08                                    i2l4473 15AE  
                                  i2l4465 1546                                    i2l6171 237E  
                                  i2l6411 05B4                                    i2l4475 15C8  
                                  i2l4467 1560                                    i2l4483 1616  
                                  i2l4491 078A                                    i2l6405 059C  
                                  i2l4477 15E2                                    i2l4469 157A  
                                  i2l4479 15FC                                    i2l6177 264C  
                                  i2l6425 05F6                                    i2l4497 07EE  
                                  i2l4499 0824                                    i2l4781 144A  
                                  i2l6461 0698                                    i2l6453 065A  
                                  i2l6445 0644                                    i2l6473 06D8  
                                  i2l6393 056E                                    i2l4787 14B6  
                                  i2l4947 24E4                                    i2l6491 0728  
                                  i2l4955 245E                                    i2l6493 0730  
                                  i2l6477 06E0                                    i2l4965 2480  
                                  i2l4959 246E                                    i2l6489 0724  
                                  i2l6499 073A                                    _RCREG1 000FAE  
                       __end_of_OLED_init 1F9C                          __end_of___lwtoft 25EC  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                               ??_GetTime 001D                                    _TX1STA 000FAC  
                                  _TRISC1 007CA1                                    _TRISA6 007C96  
                                  _TXREG1 000FAD                         ?_I2C1_MasterWrite 00AB  
                          __CFG_XINST$OFF 000000                        ??_I2C1_MasterWrite 0025  
                     __end_of_Receive_get 2726                                    _Splash 210E  
                          _p_i2c1_current 0037                             _output_buffer 0300  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                         oledPutChar@base 00BC                            __CFG_STVREN$ON 000000  
                               ??___ftmul 00AB                                 ??___fttol 00B8  
                          ??_LEDblinkRate 0028                ??_I2C1_MasterWriteTRBBuild 0023  
                        ?_TMR0_Initialize 0001                                    _memset 2548  
                               ?_I2C1_ISR 0001                                    clear_0 21F4  
                                  clear_1 2200                                    clear_2 220C  
                                  clear_3 2218                                    clear_4 2224  
                        ___awdiv@quotient 0021                             ?_OLED_command 0001  
                        __end_of_sendData 0CA2                     ___ftmul@f3_as_product 00AF  
                            __pdataCOMRAM 0044                                 ??_memmove 0021  
                  cobs_encode@dst_buf_len 001D                    cobs_encode@dst_buf_ptr 001B  
                           Send_put@_data 0026                              __mediumconst 7BD2  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8              __end_of_UART_buff_modulo_inc 259E  
                           _DataBarGraphA 009F                             _DataBarGraphB 009D  
                 __end_of_TMR2_StartTimer 277C  TMR2_SetInterruptHandler@InterruptHandler 001B  
           I2C1_MasterWriteTRBBuild@pdata 001D                        LEDblinkRate@status 00B7  
           __size_of_INTERRUPT_Initialize 0012                         _SYSTEM_Initialize 25EC  
                       __end_of_ClearTime 2778                                __accesstop 0060  
                 __end_of__initialization 222A                             sendData@count 01BB  
                           sendData@lenth 00BD                     __end_of_TMR2_CallBack 0946  
                      ?_SYSTEM_Initialize 0001                                 ?_LEDbegin 0001  
                           ___rparam_used 000001                   ?i2_UART_buff_modulo_inc 0001  
                          _i2c1_trb_count 003B                              ?_updateComms 0001  
                           __end_of_Delay 24BA                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                     _I2C1_FunctionComplete 2630  
                    _I2C1_BusCollisionISR 2786                                ___fttol@f1 00B4  
                  LEDwriteDisplay@timeOut 00C8                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 00AD                       ??_SYSTEM_Initialize 0025  
                               ?_TMR0_ISR 0001                                 ?_TMR2_ISR 0001  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001                                ___lwtoft@c 0023  
                      UART_buff_get@_this 0021                     __end_of_UART_buff_get 1E7E  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 142A  
                                 ??_Delay 001D                            LEDbegin@status 00BE  
                 __end_ofi2_UART_buff_get 1F10                   __end_ofi2_UART_buff_put 1544  
             __end_of_EUSART1_Receive_ISR 26AC                                   CRC8@crc 0021  
                                 CRC8@len 001D                                   CRC8@sum 001E  
                        ?_TMR0_StartTimer 0001                 __end_of_SYSTEM_Initialize 260E  
                             sendData@DTS 00BB                      __size_of_LEDsetValue 00A4  
                  cobs_decode@dst_buf_len 001D                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                    cobs_decode@dst_buf_ptr 001B  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 2718  
                       ?_GetDataBarGraphA 001B                         ?_GetDataBarGraphB 001B  
          __end_ofi2_UART_buff_modulo_inc 25C8                                __pnvCOMRAM 0042  
                    __size_of_oledPutChar 00F2                   __size_of_UART_buff_init 001E  
                              ??_LEDbegin 0028                               _ReciveArray 0152  
                 __size_of_UART_buff_size 0016                        __size_of_oledClear 0058  
                      ??_GetDataBarGraphA 001D                        ??_GetDataBarGraphB 001D  
                               ?_Send_put 0001                     ?_I2C1_BusCollisionISR 0001  
                      __size_of_oledPrint 0054                      __size_of_receiveData 011C  
                      __CFG_CCP2MX$PORTC1 000000                                   ?_Splash 0001  
                __size_of_LEDwriteDisplay 014A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
                cobs_decode@dst_write_ptr 00B3                cobs_decode@remaining_bytes 00B1  
                         _I2C1_Initialize 251A                                   _ADC_ISR 2780  
                                 ?_memset 001B                                 ?___ftpack 001B  
                               TMR0_ISR@x 0005                   __size_of_ADC_Initialize 0018  
                               ?___lwtoft 0023                        UART_buff_put@_this 0021  
                         cobs_decode@F192 0131                          i2_UART_buff_size 26F0  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2338                         _Receive_available 26C4  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 01B6  
                         _ReadButtonState 1544                                   _SSP1BUF 000FC9  
                        ?_TMR2_StartTimer 0001                        ?_Receive_available 001D  
                    __end_of_LEDblinkRate 1C1E             I2C1_MasterTRBInsert@ptrb_list 001D  
                                 _GetTime 275C                              ?_GetDataDict 001B  
                        ComController@DTI 00BF                       ??_Receive_available 001F  
                               ?_sendData 00B8                           __CFG_PWRTEN$OFF 000000  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 009C  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                      _p_i2c1_trb_current 0039                    cobs_encode@src_end_ptr 00AB  
                         __size_of_Splash 006A                                   ___awdiv 1F9C  
                    _UART_buff_modulo_inc 2574                                   ___ftmul 10C8  
                                 ___fttol 0F84                                   __pcinit 21DC  
                              ??___ftpack 0020                    __size_of_ComController 00B0  
                         __size_of_memset 002C                                   __ramtop 0600  
                        oledPutChar@bytes 00B3                          i2UART_buff_get@c 000B  
                           ?_Setupdisplay 0001                                   __ptext0 174C  
                                 __ptext1 276C                                   __ptext2 11F4  
                                 __ptext3 0946                                   __ptext4 2718  
                                 __ptext5 26C4                                   __ptext6 26DA  
                                 __ptext7 1838                                   __ptext8 0B04  
                                 __ptext9 0CA2                                _oledGotoYX 2178  
                              ??___lwtoft 0026                                 _T0CONbits 000FD5  
                        i2UART_buff_put@c 0009                cobs_encode@dst_buf_end_ptr 00AE  
                   _OSCILLATOR_Initialize 2726                 __end_of_Receive_available 26DA  
                               _T2CONbits 000FBA                       cobs_encode@src_byte 00AD  
                                 _memmove 1996                         __end_of_oledClear 2290  
                      _EUSART1_Initialize 2412                          ?i2_UART_buff_get 0007  
                ??_PIN_MANAGER_Initialize 001B                                   _picture 7ED3  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
                       __end_of_oledPrint 22E4                                   _timeOut 0097  
                          TMR2_CallBack@i 0003                __size_of_SYSTEM_Initialize 0022  
                    I2C1_ISR@pi2c_buf_ptr 0035                      end_of_initialization 222A  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 00C7                                 _LED_array 0100  
                            oledClear@col 00C2                      __end_of_OLED_command 209C  
                         cobs_encode@F180 0094                              oledClear@row 00C0  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7BD2                                 _LEDsetBar 00D4  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2548                                 _OLED_init 1F10  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 0006  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                     ReadButtonState@btnnum 0001  
                      OLED_command@status 0026                              LEDsetValue@k 00C8  
                    ??_EUSART1_Initialize 0025                       LEDblinkRate@timeOut 00B3  
                          ??_Setupdisplay 002B                         cobs_decode@result 00B6  
                  cobs_decode@src_end_ptr 00AB                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 0025                   __end_of_ReadButtonState 165A  
               __size_of_I2C1_MasterWrite 0054                         __size_of_I2C1_ISR 02A6  
                           ??_cobs_decode 0023                             ??_cobs_encode 0023  
                               _TRISAbits 000F92                                 _TRISCbits 000F94  
                 LEDBsetBrightness@status 00B7                            sendData@result 01B8  
       I2C1_ISR@i2c_10bit_address_restart 003E                       LEDbegin@writeBuffer 00B8  
                           _ComController 1838                     i2UART_buff_size@_this 0001  
                          _UART_buff_init 2670                            _UART_buff_size 26DA  
                              ?_LEDsetBar 0023                                ?_OLED_init 0001  
                 I2C1_MasterWrite@address 00AF                                 _ClearTime 2772  
               LEDBsetBrightness@i2c_addr 0027                               ___ftmul@exp 00AE  
                       __size_of_LEDbegin 00A4                      _timer0ReloadVal16bit 0042  
            __end_of_INTERRUPT_Initialize 2718      __end_of_TMR2_DefaultInterruptHandler 2786  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 2784  
                          __end_of_Splash 2178                    GetDataDict@numbofbytes 001E  
                 I2C1_MasterWrite@trBlock 0175                             __pidataCOMRAM 2788  
                       __size_of_TMR0_ISR 0038                  I2C1_Stop@completion_code 0003  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 26AC  
                             ?_oledGotoYX 0027                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 2574                              receiveData@i 00CD  
              __size_of_Receive_available 0016                         _LEDBsetBrightness 1CBA  
                     start_initialization 21DC                     __size_of_LEDblinkRate 009C  
                             ??_I2C1_Stop 0001                  __size_of_TMR0_Initialize 001E  
         __size_of_PIN_MANAGER_Initialize 0072                        ?_LEDBsetBrightness 0025  
       __size_of_I2C1_MasterWriteTRBBuild 0044                        ComController@lenth 00C1  
               ?_I2C1_MasterWriteTRBBuild 001B                            ?_ComController 00BF  
                     __end_of_cobs_decode 0B04                    __end_of_UART_buff_init 268E  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 26F0  
                     __end_of_cobs_encode 0E3A                              ?_Receive_get 0001  
                          UART_buff_put@c 0023                           LEDbegin@timeOut 00BB  
                     ??_LEDBsetBrightness 0028                  __end_ofi2_UART_buff_size 2706  
                    __size_of_GetDataDict 0098                                ?_ClearTime 0001  
                        ?_I2C1_Initialize 0001                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                                  ??_Splash 002B  
                       __size_of_Send_put 002E                LEDwriteDisplay@writeBuffer 00B3  
                  __end_of_ADC_Initialize 26C4                                LEDsetBar@a 0029  
                              LEDsetBar@c 0027                                  ?_ADC_ISR 0001  
                                ??_memset 0021                              _LEDblinkRate 1B82  
               __size_of_GetDataBarGraphA 000A                 __size_of_GetDataBarGraphB 000A  
           ?_TMR2_DefaultInterruptHandler 0001                 __end_of_LEDBsetBrightness 1D54  
            I2C1_MasterWriteTRBBuild@ptrb 001B                          ?_ReadButtonState 0001  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002C                         __size_of___lwtoft 0024  
           __size_of_EUSART1_Transmit_ISR 0032                             __pcstackBANK0 00AB  
                           __pcstackBANK1 017A                                oledPrint@s 00C0  
                           ??_LEDsetValue 00C7                  __size_of_TMR2_Initialize 0022  
                           _i2c1_tr_queue 00A4                     LEDwriteDisplay@status 00CA  
                   __size_of_OLED_command 007C                       UART_buff_init@_this 0023  
                           ??_oledPutChar 0027                          LEDsetValue@color 00C5  
                         ?_UART_buff_init 0023                           ?_UART_buff_size 001B  
                        LEDsetValue@value 00C3                   ??_I2C1_FunctionComplete 0001  
            __size_of_EUSART1_Receive_ISR 001E                      __end_of_Setupdisplay 273E  
                                ?_GetTime 001B                             ??_receiveData 00C7  
                              sendData@CS 01B7                               ??_LEDsetBar 00AB  
                     __size_of_oledGotoYX 0064                                 __pnvBANK0 00D2  
                   cobs_encode@search_len 00B0                  __size_of_TMR0_StartTimer 0004  
                             ??_OLED_init 0027                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 209C  
                       __size_of_sendData 019E                                 __pintcode 0008  
                           __pmediumconst 7BD2                                  ?___awdiv 001B  
                                ?___ftmul 0026                                  ?___fttol 00B4  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 04DA  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 00B5  
                    i2UART_buff_get@_this 0007                              _OLED_command 2020  
                        _I2C1_MasterWrite 22E4                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 1CBA                                  ?_memmove 001B  
                          __size_of_Delay 0034                               _cobs_decode 0946  
                             _cobs_encode 0CA2                    sendData@DataTableIndex 00BA  
                               _butnarray 0126                           ??_ComController 002B  
                               _oledClear 2238                      _INTERRUPT_Initialize 2706  
                               _oledPrint 2290                        cobs_encode@src_len 0021  
                      cobs_encode@src_ptr 001F                               _LEDNUM_ENAB 0110  
                  I2C1_MasterRead@trBlock 0170                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 1ADE                                  _LATCbits 000F8B  
                                _LEDState 0088                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 0780                                  _IPR1bits 000F9F  
                                _LEDbegin 1ADE                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 0025                  __size_of_TMR2_StartTimer 0004  
                             ??_ClearTime 001B                       __end_of_oledPutChar 174C  
                         _LEDwriteDisplay 0E3A       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u350_40 15C2                                  i2u350_46 15C4  
                                i2u431_40 1E9C                                  i2u351_40 15DC  
                                i2u351_46 15DE                                  i2u352_40 15F6  
                                i2u352_46 15F8                                  i2u353_40 1610  
                                i2u361_40 07D2                                  _PIR1bits 000F9E  
                                i2u353_46 1612                                  i2u346_40 155A  
                                i2u346_46 155C                                  i2u347_40 1574  
                                i2u371_40 085A                                  i2u363_40 07DE  
                                i2u355_40 07AE                                  _PIR2bits 000FA1  
                                i2u347_46 1576                                  i2u452_40 24D4  
                                i2u348_40 158E                                  i2u348_46 1590  
                                i2u349_40 15A8                                  i2u373_40 0866  
                                i2u365_40 07EA                                  i2u357_40 07BA  
                                i2u349_46 15AA                                  i2u606_40 237E  
                                i2u381_48 0930                                  i2u606_47 2372  
                                i2u375_40 0872                                  i2u367_40 0842  
                                i2u359_40 07C6                                  i2u377_40 087E  
                                i2u369_40 084E                                  i2u671_40 06B8  
                                i2u671_47 06AE                                  i2u673_40 0704  
                                i2u657_40 0514                                  i2u673_47 06F8  
                                i2u657_47 0508                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                       __end_of_receiveData 1310  
                                _SSP1CON1 000FC6                                  _SSP1CON3 000FCB  
                                _TMR0_ISR 244E                                  _TMR2_ISR 2764  
                                _SSP1STAT 000FC7                              _input_buffer 0200  
                        __size_of_ADC_ISR 0004                cobs_decode@dst_buf_end_ptr 00AD  
                              _ADCON0bits 000FC2                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 1DEC  
                           _UART_buff_put 1310                         sendData@COBSArray 017A  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 001B             cobs_encode@dst_code_write_ptr 00B1  
                ??i2_UART_buff_modulo_inc 0005                                ?_oledClear 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                              ?_oledPrint 00C0                        sendData@ComandByte 00B8  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                                  _OledFont 7BD3  
                          ?_TMR2_CallBack 0001                          __size_of_GetTime 0008  
                           ??_updateComms 002C                      __size_of_Receive_get 000E  
                                __Hrparam 0000                                  _Send_put 24EC  
           __size_of_I2C1_BusCollisionISR 0002                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                    I2C1_ISR@i2c_bytes_left 0033  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 00B5  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 012C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                          _GetDataBarGraphA 2752  
                        _GetDataBarGraphB 2748                                  ___ftpack 18E8  
        __end_of_I2C1_MasterWriteTRBBuild 2412                              ??_oledGotoYX 0028  
                              _ANSELAbits 000F38                                  ___lwtoft 25C8  
                              _ANSELCbits 000F3A                            ?_UART_buff_get 0021  
                          ?_UART_buff_put 0021                               CRC8@extract 001F  
                        GetDataDict@Error 001F                                 sendData@i 01BD  
                        __size_of_memmove 00A4                       I2C1_ISR@i2c_address 0040  
                             _LEDsetValue 1A3A                                  __ptext10 24EC  
                                __ptext11 1310                                  __ptext20 18E8  
                                __ptext12 1DEC                                  __ptext21 210E  
                                __ptext13 2574                                  __ptext30 25EC  
                   __size_of_Setupdisplay 000A                                  __ptext22 2290  
                                __ptext14 2384                                  __ptext31 260E  
                                __ptext23 2734                                  __ptext15 1D54  
                                __ptext40 2412                                  __ptext32 2778  
                                __ptext24 2238                                  __ptext16 2486  
                                __ptext41 2670                                  __ptext33 273E  
                                __ptext25 165A                                  __ptext17 25C8  
                                __ptext50 1CBA                                  __ptext42 2548  
                                __ptext34 2652                                  __ptext26 1996  
                                __ptext18 0F84                                  __ptext51 22E4  
                                __ptext43 26AC                                  __ptext35 277C  
                                __ptext27 2178                                  __ptext19 10C8  
                                __ptext60 0780                                  __ptext52 23CE  
                                __ptext44 0E3A                                  __ptext36 209C  
                                __ptext28 1F10                                  __ptext61 2784  
                                __ptext53 1C1E                                  __ptext45 1A3A  
                                __ptext37 2726                                  __ptext29 2020  
                                __ptext70 1E7E                                  __ptext62 244E  
                                __ptext54 275C                                  __ptext46 00D4  
                                __ptext38 2706                                  __ptext71 268E  
                                __ptext63 1544                                  __ptext55 2748  
                                __ptext47 1F9C                                  __ptext39 251A  
                                __ptext72 142A                                  __ptext64 04DA  
                                __ptext56 2752                                  __ptext48 1ADE  
                                __ptext73 259E                                  __ptext65 2338  
                                __ptext57 2772                                  __ptext49 1B82  
                                __ptext74 2780                                  __ptext66 2630  
                                __ptext75 0000                                  __ptext67 2786  
                                __ptext59 2764                                  __ptext68 24BA  
                                __ptext69 26F0                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                         oledPutChar@status 00BF  
                           __size_of_CRC8 004A                 GetDataDict@DataTableIndex 001B  
                        oledGotoYX@Column 0027                   EUSART1_Receive_ISR@data 000C  
                 __end_of_LEDwriteDisplay 0F84                               _oledPutChar 165A  
                           __size_of_main 00EC                         cobs_encode@result 00B5  
                             _receiveData 11F4                            _Transmit_stall 0044  
                                _sendData 0B04                        __end_of_oledGotoYX 21DC  
                    _I2C1_MasterTRBInsert 1C1E                         ?i2_UART_buff_size 0001  
                       sendData@DataTable 00B9                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 0027                              _ProcessArray 0134  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
           handleIndicators@oldIndicators 009B                         ??_TMR2_StartTimer 001B  
                     __end_of_updateComms 2772        __end_of_INTERRUPT_InterruptManager 00D0  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 268E  
                            _Setupdisplay 2734                         receiveData@result 00CF  
                      LEDBsetBrightness@b 0025                                _INTCONbits 000FF2  
               UART_buff_modulo_inc@value 001B                          ??_UART_buff_init 0025  
                        ??_UART_buff_size 001D                    ??_INTERRUPT_Initialize 001B  
                                memset@p1 001B                                  memmove@d 0023  
                                memmove@n 001F                                  memmove@s 0025  
                             ??_oledClear 002B           __size_ofi2_UART_buff_modulo_inc 002A  
                             ??_oledPrint 002B                                  intlevel2 0000  
                     cobs_decode@len_code 00B5                           ??_TMR2_CallBack 0001  
                    ?_EUSART1_Receive_ISR 0001                             ??_GetDataDict 001F  
                 ?_PIN_MANAGER_Initialize 0001                              cobs_decode@i 00B0  
                __end_of_I2C1_MasterWrite 2338            __size_of_I2C1_FunctionComplete 0022  
           __end_of_I2C1_FunctionComplete 2652                     ?_I2C1_MasterTRBInsert 001B  
            __end_of_EUSART1_Transmit_ISR 24EC                          ??_ADC_Initialize 001B  
                       sendData@SendArray 0198                         ??i2_UART_buff_get 0009  
                       ??i2_UART_buff_put 000A                       cobs_decode@src_byte 00AF  
           __size_of_UART_buff_modulo_inc 002A                         _DataTableArrayOne 011C  
                __size_of_I2C1_Initialize 002E                           ??_UART_buff_get 0023  
                       _DataTableArrayTwo 012E                           ??_UART_buff_put 0024  
                         _TMR0_Initialize 2652                              ?_cobs_decode 001B  
                            ?_cobs_encode 001B                  _I2C1_MasterWriteTRBBuild 23CE  
                       __CFG_T3CMX$PORTC0 000000                        cobs_decode@src_len 0021  
                      cobs_decode@src_ptr 001F                  __size_of_ReadButtonState 0116  
                   ??_EUSART1_Receive_ISR 000C            __end_of_PIN_MANAGER_Initialize 210E  
                           oledGotoYX@Row 0029                          ?_LEDwriteDisplay 0001  
                      __size_of_I2C1_Stop 004C                             _displaybuffer 0060  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00D2  
                             _updateComms 276C  
