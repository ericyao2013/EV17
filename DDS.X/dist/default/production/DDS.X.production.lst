

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Nov 11 20:44:24 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113 ;; Function _Receive_peek is unused but had its address taken
   114  0000                     
   115                           	psect	idataCOMRAM
   116  002F62                     __pidataCOMRAM:
   117                           	opt stack 0
   118                           
   119                           ;initializer for _Transmit_stall
   120  002F62  01                 	db	1
   121                           
   122                           	psect	mediumconst
   123  007BD2                     __pmediumconst:
   124                           	opt stack 0
   125  007BD2  00                 	db	0
   126  007BD3                     _OledFont:
   127                           	opt stack 0
   128  007BD3  00                 	db	0
   129  007BD4  00                 	db	0
   130  007BD5  00                 	db	0
   131  007BD6  00                 	db	0
   132  007BD7  00                 	db	0
   133  007BD8  00                 	db	0
   134  007BD9  00                 	db	0
   135  007BDA  00                 	db	0
   136  007BDB  00                 	db	0
   137  007BDC  00                 	db	0
   138  007BDD  5F                 	db	95
   139  007BDE  00                 	db	0
   140  007BDF  00                 	db	0
   141  007BE0  00                 	db	0
   142  007BE1  00                 	db	0
   143  007BE2  00                 	db	0
   144  007BE3  00                 	db	0
   145  007BE4  00                 	db	0
   146  007BE5  07                 	db	7
   147  007BE6  00                 	db	0
   148  007BE7  07                 	db	7
   149  007BE8  00                 	db	0
   150  007BE9  00                 	db	0
   151  007BEA  00                 	db	0
   152  007BEB  00                 	db	0
   153  007BEC  14                 	db	20
   154  007BED  7F                 	db	127
   155  007BEE  14                 	db	20
   156  007BEF  7F                 	db	127
   157  007BF0  14                 	db	20
   158  007BF1  00                 	db	0
   159  007BF2  00                 	db	0
   160  007BF3  00                 	db	0
   161  007BF4  24                 	db	36
   162  007BF5  2A                 	db	42
   163  007BF6  7F                 	db	127
   164  007BF7  2A                 	db	42
   165  007BF8  12                 	db	18
   166  007BF9  00                 	db	0
   167  007BFA  00                 	db	0
   168  007BFB  00                 	db	0
   169  007BFC  23                 	db	35
   170  007BFD  13                 	db	19
   171  007BFE  08                 	db	8
   172  007BFF  64                 	db	100
   173  007C00  62                 	db	98
   174  007C01  00                 	db	0
   175  007C02  00                 	db	0
   176  007C03  00                 	db	0
   177  007C04  36                 	db	54
   178  007C05  49                 	db	73
   179  007C06  55                 	db	85
   180  007C07  22                 	db	34
   181  007C08  50                 	db	80
   182  007C09  00                 	db	0
   183  007C0A  00                 	db	0
   184  007C0B  00                 	db	0
   185  007C0C  00                 	db	0
   186  007C0D  05                 	db	5
   187  007C0E  03                 	db	3
   188  007C0F  00                 	db	0
   189  007C10  00                 	db	0
   190  007C11  00                 	db	0
   191  007C12  00                 	db	0
   192  007C13  00                 	db	0
   193  007C14  1C                 	db	28
   194  007C15  22                 	db	34
   195  007C16  41                 	db	65
   196  007C17  00                 	db	0
   197  007C18  00                 	db	0
   198  007C19  00                 	db	0
   199  007C1A  00                 	db	0
   200  007C1B  00                 	db	0
   201  007C1C  41                 	db	65
   202  007C1D  22                 	db	34
   203  007C1E  1C                 	db	28
   204  007C1F  00                 	db	0
   205  007C20  00                 	db	0
   206  007C21  00                 	db	0
   207  007C22  00                 	db	0
   208  007C23  00                 	db	0
   209  007C24  08                 	db	8
   210  007C25  2A                 	db	42
   211  007C26  1C                 	db	28
   212  007C27  2A                 	db	42
   213  007C28  08                 	db	8
   214  007C29  00                 	db	0
   215  007C2A  00                 	db	0
   216  007C2B  00                 	db	0
   217  007C2C  08                 	db	8
   218  007C2D  08                 	db	8
   219  007C2E  3E                 	db	62
   220  007C2F  08                 	db	8
   221  007C30  08                 	db	8
   222  007C31  00                 	db	0
   223  007C32  00                 	db	0
   224  007C33  00                 	db	0
   225  007C34  A0                 	db	160
   226  007C35  60                 	db	96
   227  007C36  00                 	db	0
   228  007C37  00                 	db	0
   229  007C38  00                 	db	0
   230  007C39  00                 	db	0
   231  007C3A  00                 	db	0
   232  007C3B  00                 	db	0
   233  007C3C  08                 	db	8
   234  007C3D  08                 	db	8
   235  007C3E  08                 	db	8
   236  007C3F  08                 	db	8
   237  007C40  08                 	db	8
   238  007C41  00                 	db	0
   239  007C42  00                 	db	0
   240  007C43  00                 	db	0
   241  007C44  60                 	db	96
   242  007C45  60                 	db	96
   243  007C46  00                 	db	0
   244  007C47  00                 	db	0
   245  007C48  00                 	db	0
   246  007C49  00                 	db	0
   247  007C4A  00                 	db	0
   248  007C4B  00                 	db	0
   249  007C4C  20                 	db	32
   250  007C4D  10                 	db	16
   251  007C4E  08                 	db	8
   252  007C4F  04                 	db	4
   253  007C50  02                 	db	2
   254  007C51  00                 	db	0
   255  007C52  00                 	db	0
   256  007C53  00                 	db	0
   257  007C54  3E                 	db	62
   258  007C55  51                 	db	81
   259  007C56  49                 	db	73
   260  007C57  45                 	db	69
   261  007C58  3E                 	db	62
   262  007C59  00                 	db	0
   263  007C5A  00                 	db	0
   264  007C5B  00                 	db	0
   265  007C5C  00                 	db	0
   266  007C5D  42                 	db	66
   267  007C5E  7F                 	db	127
   268  007C5F  40                 	db	64
   269  007C60  00                 	db	0
   270  007C61  00                 	db	0
   271  007C62  00                 	db	0
   272  007C63  00                 	db	0
   273  007C64  62                 	db	98
   274  007C65  51                 	db	81
   275  007C66  49                 	db	73
   276  007C67  49                 	db	73
   277  007C68  46                 	db	70
   278  007C69  00                 	db	0
   279  007C6A  00                 	db	0
   280  007C6B  00                 	db	0
   281  007C6C  22                 	db	34
   282  007C6D  41                 	db	65
   283  007C6E  49                 	db	73
   284  007C6F  49                 	db	73
   285  007C70  36                 	db	54
   286  007C71  00                 	db	0
   287  007C72  00                 	db	0
   288  007C73  00                 	db	0
   289  007C74  18                 	db	24
   290  007C75  14                 	db	20
   291  007C76  12                 	db	18
   292  007C77  7F                 	db	127
   293  007C78  10                 	db	16
   294  007C79  00                 	db	0
   295  007C7A  00                 	db	0
   296  007C7B  00                 	db	0
   297  007C7C  27                 	db	39
   298  007C7D  45                 	db	69
   299  007C7E  45                 	db	69
   300  007C7F  45                 	db	69
   301  007C80  39                 	db	57
   302  007C81  00                 	db	0
   303  007C82  00                 	db	0
   304  007C83  00                 	db	0
   305  007C84  3C                 	db	60
   306  007C85  4A                 	db	74
   307  007C86  49                 	db	73
   308  007C87  49                 	db	73
   309  007C88  30                 	db	48
   310  007C89  00                 	db	0
   311  007C8A  00                 	db	0
   312  007C8B  00                 	db	0
   313  007C8C  01                 	db	1
   314  007C8D  71                 	db	113
   315  007C8E  09                 	db	9
   316  007C8F  05                 	db	5
   317  007C90  03                 	db	3
   318  007C91  00                 	db	0
   319  007C92  00                 	db	0
   320  007C93  00                 	db	0
   321  007C94  36                 	db	54
   322  007C95  49                 	db	73
   323  007C96  49                 	db	73
   324  007C97  49                 	db	73
   325  007C98  36                 	db	54
   326  007C99  00                 	db	0
   327  007C9A  00                 	db	0
   328  007C9B  00                 	db	0
   329  007C9C  06                 	db	6
   330  007C9D  49                 	db	73
   331  007C9E  49                 	db	73
   332  007C9F  29                 	db	41
   333  007CA0  1E                 	db	30
   334  007CA1  00                 	db	0
   335  007CA2  00                 	db	0
   336  007CA3  00                 	db	0
   337  007CA4  00                 	db	0
   338  007CA5  36                 	db	54
   339  007CA6  36                 	db	54
   340  007CA7  00                 	db	0
   341  007CA8  00                 	db	0
   342  007CA9  00                 	db	0
   343  007CAA  00                 	db	0
   344  007CAB  00                 	db	0
   345  007CAC  00                 	db	0
   346  007CAD  AC                 	db	172
   347  007CAE  6C                 	db	108
   348  007CAF  00                 	db	0
   349  007CB0  00                 	db	0
   350  007CB1  00                 	db	0
   351  007CB2  00                 	db	0
   352  007CB3  00                 	db	0
   353  007CB4  08                 	db	8
   354  007CB5  14                 	db	20
   355  007CB6  22                 	db	34
   356  007CB7  41                 	db	65
   357  007CB8  00                 	db	0
   358  007CB9  00                 	db	0
   359  007CBA  00                 	db	0
   360  007CBB  00                 	db	0
   361  007CBC  14                 	db	20
   362  007CBD  14                 	db	20
   363  007CBE  14                 	db	20
   364  007CBF  14                 	db	20
   365  007CC0  14                 	db	20
   366  007CC1  00                 	db	0
   367  007CC2  00                 	db	0
   368  007CC3  00                 	db	0
   369  007CC4  41                 	db	65
   370  007CC5  22                 	db	34
   371  007CC6  14                 	db	20
   372  007CC7  08                 	db	8
   373  007CC8  00                 	db	0
   374  007CC9  00                 	db	0
   375  007CCA  00                 	db	0
   376  007CCB  00                 	db	0
   377  007CCC  02                 	db	2
   378  007CCD  01                 	db	1
   379  007CCE  51                 	db	81
   380  007CCF  09                 	db	9
   381  007CD0  06                 	db	6
   382  007CD1  00                 	db	0
   383  007CD2  00                 	db	0
   384  007CD3  00                 	db	0
   385  007CD4  32                 	db	50
   386  007CD5  49                 	db	73
   387  007CD6  79                 	db	121
   388  007CD7  41                 	db	65
   389  007CD8  3E                 	db	62
   390  007CD9  00                 	db	0
   391  007CDA  00                 	db	0
   392  007CDB  00                 	db	0
   393  007CDC  7E                 	db	126
   394  007CDD  09                 	db	9
   395  007CDE  09                 	db	9
   396  007CDF  09                 	db	9
   397  007CE0  7E                 	db	126
   398  007CE1  00                 	db	0
   399  007CE2  00                 	db	0
   400  007CE3  00                 	db	0
   401  007CE4  7F                 	db	127
   402  007CE5  49                 	db	73
   403  007CE6  49                 	db	73
   404  007CE7  49                 	db	73
   405  007CE8  36                 	db	54
   406  007CE9  00                 	db	0
   407  007CEA  00                 	db	0
   408  007CEB  00                 	db	0
   409  007CEC  3E                 	db	62
   410  007CED  41                 	db	65
   411  007CEE  41                 	db	65
   412  007CEF  41                 	db	65
   413  007CF0  22                 	db	34
   414  007CF1  00                 	db	0
   415  007CF2  00                 	db	0
   416  007CF3  00                 	db	0
   417  007CF4  7F                 	db	127
   418  007CF5  41                 	db	65
   419  007CF6  41                 	db	65
   420  007CF7  22                 	db	34
   421  007CF8  1C                 	db	28
   422  007CF9  00                 	db	0
   423  007CFA  00                 	db	0
   424  007CFB  00                 	db	0
   425  007CFC  7F                 	db	127
   426  007CFD  49                 	db	73
   427  007CFE  49                 	db	73
   428  007CFF  49                 	db	73
   429  007D00  41                 	db	65
   430  007D01  00                 	db	0
   431  007D02  00                 	db	0
   432  007D03  00                 	db	0
   433  007D04  7F                 	db	127
   434  007D05  09                 	db	9
   435  007D06  09                 	db	9
   436  007D07  09                 	db	9
   437  007D08  01                 	db	1
   438  007D09  00                 	db	0
   439  007D0A  00                 	db	0
   440  007D0B  00                 	db	0
   441  007D0C  3E                 	db	62
   442  007D0D  41                 	db	65
   443  007D0E  41                 	db	65
   444  007D0F  51                 	db	81
   445  007D10  72                 	db	114
   446  007D11  00                 	db	0
   447  007D12  00                 	db	0
   448  007D13  00                 	db	0
   449  007D14  7F                 	db	127
   450  007D15  08                 	db	8
   451  007D16  08                 	db	8
   452  007D17  08                 	db	8
   453  007D18  7F                 	db	127
   454  007D19  00                 	db	0
   455  007D1A  00                 	db	0
   456  007D1B  00                 	db	0
   457  007D1C  41                 	db	65
   458  007D1D  7F                 	db	127
   459  007D1E  41                 	db	65
   460  007D1F  00                 	db	0
   461  007D20  00                 	db	0
   462  007D21  00                 	db	0
   463  007D22  00                 	db	0
   464  007D23  00                 	db	0
   465  007D24  20                 	db	32
   466  007D25  40                 	db	64
   467  007D26  41                 	db	65
   468  007D27  3F                 	db	63
   469  007D28  01                 	db	1
   470  007D29  00                 	db	0
   471  007D2A  00                 	db	0
   472  007D2B  00                 	db	0
   473  007D2C  7F                 	db	127
   474  007D2D  08                 	db	8
   475  007D2E  14                 	db	20
   476  007D2F  22                 	db	34
   477  007D30  41                 	db	65
   478  007D31  00                 	db	0
   479  007D32  00                 	db	0
   480  007D33  00                 	db	0
   481  007D34  7F                 	db	127
   482  007D35  40                 	db	64
   483  007D36  40                 	db	64
   484  007D37  40                 	db	64
   485  007D38  40                 	db	64
   486  007D39  00                 	db	0
   487  007D3A  00                 	db	0
   488  007D3B  00                 	db	0
   489  007D3C  7F                 	db	127
   490  007D3D  02                 	db	2
   491  007D3E  0C                 	db	12
   492  007D3F  02                 	db	2
   493  007D40  7F                 	db	127
   494  007D41  00                 	db	0
   495  007D42  00                 	db	0
   496  007D43  00                 	db	0
   497  007D44  7F                 	db	127
   498  007D45  04                 	db	4
   499  007D46  08                 	db	8
   500  007D47  10                 	db	16
   501  007D48  7F                 	db	127
   502  007D49  00                 	db	0
   503  007D4A  00                 	db	0
   504  007D4B  00                 	db	0
   505  007D4C  3E                 	db	62
   506  007D4D  41                 	db	65
   507  007D4E  41                 	db	65
   508  007D4F  41                 	db	65
   509  007D50  3E                 	db	62
   510  007D51  00                 	db	0
   511  007D52  00                 	db	0
   512  007D53  00                 	db	0
   513  007D54  7F                 	db	127
   514  007D55  09                 	db	9
   515  007D56  09                 	db	9
   516  007D57  09                 	db	9
   517  007D58  06                 	db	6
   518  007D59  00                 	db	0
   519  007D5A  00                 	db	0
   520  007D5B  00                 	db	0
   521  007D5C  3E                 	db	62
   522  007D5D  41                 	db	65
   523  007D5E  51                 	db	81
   524  007D5F  21                 	db	33
   525  007D60  5E                 	db	94
   526  007D61  00                 	db	0
   527  007D62  00                 	db	0
   528  007D63  00                 	db	0
   529  007D64  7F                 	db	127
   530  007D65  09                 	db	9
   531  007D66  19                 	db	25
   532  007D67  29                 	db	41
   533  007D68  46                 	db	70
   534  007D69  00                 	db	0
   535  007D6A  00                 	db	0
   536  007D6B  00                 	db	0
   537  007D6C  26                 	db	38
   538  007D6D  49                 	db	73
   539  007D6E  49                 	db	73
   540  007D6F  49                 	db	73
   541  007D70  32                 	db	50
   542  007D71  00                 	db	0
   543  007D72  00                 	db	0
   544  007D73  00                 	db	0
   545  007D74  01                 	db	1
   546  007D75  01                 	db	1
   547  007D76  7F                 	db	127
   548  007D77  01                 	db	1
   549  007D78  01                 	db	1
   550  007D79  00                 	db	0
   551  007D7A  00                 	db	0
   552  007D7B  00                 	db	0
   553  007D7C  3F                 	db	63
   554  007D7D  40                 	db	64
   555  007D7E  40                 	db	64
   556  007D7F  40                 	db	64
   557  007D80  3F                 	db	63
   558  007D81  00                 	db	0
   559  007D82  00                 	db	0
   560  007D83  00                 	db	0
   561  007D84  1F                 	db	31
   562  007D85  20                 	db	32
   563  007D86  40                 	db	64
   564  007D87  20                 	db	32
   565  007D88  1F                 	db	31
   566  007D89  00                 	db	0
   567  007D8A  00                 	db	0
   568  007D8B  00                 	db	0
   569  007D8C  3F                 	db	63
   570  007D8D  40                 	db	64
   571  007D8E  38                 	db	56
   572  007D8F  40                 	db	64
   573  007D90  3F                 	db	63
   574  007D91  00                 	db	0
   575  007D92  00                 	db	0
   576  007D93  00                 	db	0
   577  007D94  63                 	db	99
   578  007D95  14                 	db	20
   579  007D96  08                 	db	8
   580  007D97  14                 	db	20
   581  007D98  63                 	db	99
   582  007D99  00                 	db	0
   583  007D9A  00                 	db	0
   584  007D9B  00                 	db	0
   585  007D9C  03                 	db	3
   586  007D9D  04                 	db	4
   587  007D9E  78                 	db	120
   588  007D9F  04                 	db	4
   589  007DA0  03                 	db	3
   590  007DA1  00                 	db	0
   591  007DA2  00                 	db	0
   592  007DA3  00                 	db	0
   593  007DA4  61                 	db	97
   594  007DA5  51                 	db	81
   595  007DA6  49                 	db	73
   596  007DA7  45                 	db	69
   597  007DA8  43                 	db	67
   598  007DA9  00                 	db	0
   599  007DAA  00                 	db	0
   600  007DAB  00                 	db	0
   601  007DAC  7F                 	db	127
   602  007DAD  41                 	db	65
   603  007DAE  41                 	db	65
   604  007DAF  00                 	db	0
   605  007DB0  00                 	db	0
   606  007DB1  00                 	db	0
   607  007DB2  00                 	db	0
   608  007DB3  00                 	db	0
   609  007DB4  02                 	db	2
   610  007DB5  04                 	db	4
   611  007DB6  08                 	db	8
   612  007DB7  10                 	db	16
   613  007DB8  20                 	db	32
   614  007DB9  00                 	db	0
   615  007DBA  00                 	db	0
   616  007DBB  00                 	db	0
   617  007DBC  41                 	db	65
   618  007DBD  41                 	db	65
   619  007DBE  7F                 	db	127
   620  007DBF  00                 	db	0
   621  007DC0  00                 	db	0
   622  007DC1  00                 	db	0
   623  007DC2  00                 	db	0
   624  007DC3  00                 	db	0
   625  007DC4  04                 	db	4
   626  007DC5  02                 	db	2
   627  007DC6  01                 	db	1
   628  007DC7  02                 	db	2
   629  007DC8  04                 	db	4
   630  007DC9  00                 	db	0
   631  007DCA  00                 	db	0
   632  007DCB  00                 	db	0
   633  007DCC  80                 	db	128
   634  007DCD  80                 	db	128
   635  007DCE  80                 	db	128
   636  007DCF  80                 	db	128
   637  007DD0  80                 	db	128
   638  007DD1  00                 	db	0
   639  007DD2  00                 	db	0
   640  007DD3  00                 	db	0
   641  007DD4  01                 	db	1
   642  007DD5  02                 	db	2
   643  007DD6  04                 	db	4
   644  007DD7  00                 	db	0
   645  007DD8  00                 	db	0
   646  007DD9  00                 	db	0
   647  007DDA  00                 	db	0
   648  007DDB  00                 	db	0
   649  007DDC  20                 	db	32
   650  007DDD  54                 	db	84
   651  007DDE  54                 	db	84
   652  007DDF  54                 	db	84
   653  007DE0  78                 	db	120
   654  007DE1  00                 	db	0
   655  007DE2  00                 	db	0
   656  007DE3  00                 	db	0
   657  007DE4  7F                 	db	127
   658  007DE5  48                 	db	72
   659  007DE6  44                 	db	68
   660  007DE7  44                 	db	68
   661  007DE8  38                 	db	56
   662  007DE9  00                 	db	0
   663  007DEA  00                 	db	0
   664  007DEB  00                 	db	0
   665  007DEC  38                 	db	56
   666  007DED  44                 	db	68
   667  007DEE  44                 	db	68
   668  007DEF  28                 	db	40
   669  007DF0  00                 	db	0
   670  007DF1  00                 	db	0
   671  007DF2  00                 	db	0
   672  007DF3  00                 	db	0
   673  007DF4  38                 	db	56
   674  007DF5  44                 	db	68
   675  007DF6  44                 	db	68
   676  007DF7  48                 	db	72
   677  007DF8  7F                 	db	127
   678  007DF9  00                 	db	0
   679  007DFA  00                 	db	0
   680  007DFB  00                 	db	0
   681  007DFC  38                 	db	56
   682  007DFD  54                 	db	84
   683  007DFE  54                 	db	84
   684  007DFF  54                 	db	84
   685  007E00  18                 	db	24
   686  007E01  00                 	db	0
   687  007E02  00                 	db	0
   688  007E03  00                 	db	0
   689  007E04  08                 	db	8
   690  007E05  7E                 	db	126
   691  007E06  09                 	db	9
   692  007E07  02                 	db	2
   693  007E08  00                 	db	0
   694  007E09  00                 	db	0
   695  007E0A  00                 	db	0
   696  007E0B  00                 	db	0
   697  007E0C  18                 	db	24
   698  007E0D  A4                 	db	164
   699  007E0E  A4                 	db	164
   700  007E0F  A4                 	db	164
   701  007E10  7C                 	db	124
   702  007E11  00                 	db	0
   703  007E12  00                 	db	0
   704  007E13  00                 	db	0
   705  007E14  7F                 	db	127
   706  007E15  08                 	db	8
   707  007E16  04                 	db	4
   708  007E17  04                 	db	4
   709  007E18  78                 	db	120
   710  007E19  00                 	db	0
   711  007E1A  00                 	db	0
   712  007E1B  00                 	db	0
   713  007E1C  00                 	db	0
   714  007E1D  7D                 	db	125
   715  007E1E  00                 	db	0
   716  007E1F  00                 	db	0
   717  007E20  00                 	db	0
   718  007E21  00                 	db	0
   719  007E22  00                 	db	0
   720  007E23  00                 	db	0
   721  007E24  80                 	db	128
   722  007E25  84                 	db	132
   723  007E26  7D                 	db	125
   724  007E27  00                 	db	0
   725  007E28  00                 	db	0
   726  007E29  00                 	db	0
   727  007E2A  00                 	db	0
   728  007E2B  00                 	db	0
   729  007E2C  7F                 	db	127
   730  007E2D  10                 	db	16
   731  007E2E  28                 	db	40
   732  007E2F  44                 	db	68
   733  007E30  00                 	db	0
   734  007E31  00                 	db	0
   735  007E32  00                 	db	0
   736  007E33  00                 	db	0
   737  007E34  41                 	db	65
   738  007E35  7F                 	db	127
   739  007E36  40                 	db	64
   740  007E37  00                 	db	0
   741  007E38  00                 	db	0
   742  007E39  00                 	db	0
   743  007E3A  00                 	db	0
   744  007E3B  00                 	db	0
   745  007E3C  7C                 	db	124
   746  007E3D  04                 	db	4
   747  007E3E  18                 	db	24
   748  007E3F  04                 	db	4
   749  007E40  78                 	db	120
   750  007E41  00                 	db	0
   751  007E42  00                 	db	0
   752  007E43  00                 	db	0
   753  007E44  7C                 	db	124
   754  007E45  08                 	db	8
   755  007E46  04                 	db	4
   756  007E47  7C                 	db	124
   757  007E48  00                 	db	0
   758  007E49  00                 	db	0
   759  007E4A  00                 	db	0
   760  007E4B  00                 	db	0
   761  007E4C  38                 	db	56
   762  007E4D  44                 	db	68
   763  007E4E  44                 	db	68
   764  007E4F  38                 	db	56
   765  007E50  00                 	db	0
   766  007E51  00                 	db	0
   767  007E52  00                 	db	0
   768  007E53  00                 	db	0
   769  007E54  FC                 	db	252
   770  007E55  24                 	db	36
   771  007E56  24                 	db	36
   772  007E57  18                 	db	24
   773  007E58  00                 	db	0
   774  007E59  00                 	db	0
   775  007E5A  00                 	db	0
   776  007E5B  00                 	db	0
   777  007E5C  18                 	db	24
   778  007E5D  24                 	db	36
   779  007E5E  24                 	db	36
   780  007E5F  FC                 	db	252
   781  007E60  00                 	db	0
   782  007E61  00                 	db	0
   783  007E62  00                 	db	0
   784  007E63  00                 	db	0
   785  007E64  00                 	db	0
   786  007E65  7C                 	db	124
   787  007E66  08                 	db	8
   788  007E67  04                 	db	4
   789  007E68  00                 	db	0
   790  007E69  00                 	db	0
   791  007E6A  00                 	db	0
   792  007E6B  00                 	db	0
   793  007E6C  48                 	db	72
   794  007E6D  54                 	db	84
   795  007E6E  54                 	db	84
   796  007E6F  24                 	db	36
   797  007E70  00                 	db	0
   798  007E71  00                 	db	0
   799  007E72  00                 	db	0
   800  007E73  00                 	db	0
   801  007E74  04                 	db	4
   802  007E75  7F                 	db	127
   803  007E76  44                 	db	68
   804  007E77  00                 	db	0
   805  007E78  00                 	db	0
   806  007E79  00                 	db	0
   807  007E7A  00                 	db	0
   808  007E7B  00                 	db	0
   809  007E7C  3C                 	db	60
   810  007E7D  40                 	db	64
   811  007E7E  40                 	db	64
   812  007E7F  7C                 	db	124
   813  007E80  00                 	db	0
   814  007E81  00                 	db	0
   815  007E82  00                 	db	0
   816  007E83  00                 	db	0
   817  007E84  1C                 	db	28
   818  007E85  20                 	db	32
   819  007E86  40                 	db	64
   820  007E87  20                 	db	32
   821  007E88  1C                 	db	28
   822  007E89  00                 	db	0
   823  007E8A  00                 	db	0
   824  007E8B  00                 	db	0
   825  007E8C  3C                 	db	60
   826  007E8D  40                 	db	64
   827  007E8E  30                 	db	48
   828  007E8F  40                 	db	64
   829  007E90  3C                 	db	60
   830  007E91  00                 	db	0
   831  007E92  00                 	db	0
   832  007E93  00                 	db	0
   833  007E94  44                 	db	68
   834  007E95  28                 	db	40
   835  007E96  10                 	db	16
   836  007E97  28                 	db	40
   837  007E98  44                 	db	68
   838  007E99  00                 	db	0
   839  007E9A  00                 	db	0
   840  007E9B  00                 	db	0
   841  007E9C  1C                 	db	28
   842  007E9D  A0                 	db	160
   843  007E9E  A0                 	db	160
   844  007E9F  7C                 	db	124
   845  007EA0  00                 	db	0
   846  007EA1  00                 	db	0
   847  007EA2  00                 	db	0
   848  007EA3  00                 	db	0
   849  007EA4  44                 	db	68
   850  007EA5  64                 	db	100
   851  007EA6  54                 	db	84
   852  007EA7  4C                 	db	76
   853  007EA8  44                 	db	68
   854  007EA9  00                 	db	0
   855  007EAA  00                 	db	0
   856  007EAB  00                 	db	0
   857  007EAC  08                 	db	8
   858  007EAD  36                 	db	54
   859  007EAE  41                 	db	65
   860  007EAF  00                 	db	0
   861  007EB0  00                 	db	0
   862  007EB1  00                 	db	0
   863  007EB2  00                 	db	0
   864  007EB3  00                 	db	0
   865  007EB4  00                 	db	0
   866  007EB5  7F                 	db	127
   867  007EB6  00                 	db	0
   868  007EB7  00                 	db	0
   869  007EB8  00                 	db	0
   870  007EB9  00                 	db	0
   871  007EBA  00                 	db	0
   872  007EBB  00                 	db	0
   873  007EBC  41                 	db	65
   874  007EBD  36                 	db	54
   875  007EBE  08                 	db	8
   876  007EBF  00                 	db	0
   877  007EC0  00                 	db	0
   878  007EC1  00                 	db	0
   879  007EC2  00                 	db	0
   880  007EC3  00                 	db	0
   881  007EC4  02                 	db	2
   882  007EC5  01                 	db	1
   883  007EC6  01                 	db	1
   884  007EC7  02                 	db	2
   885  007EC8  01                 	db	1
   886  007EC9  00                 	db	0
   887  007ECA  00                 	db	0
   888  007ECB  00                 	db	0
   889  007ECC  02                 	db	2
   890  007ECD  05                 	db	5
   891  007ECE  05                 	db	5
   892  007ECF  02                 	db	2
   893  007ED0  00                 	db	0
   894  007ED1  00                 	db	0
   895  007ED2  00                 	db	0
   896  007ED3                     __end_of_OledFont:
   897                           	opt stack 0
   898  007ED3                     _picture:
   899                           	opt stack 0
   900  007ED3  00                 	db	0
   901  007ED4  00                 	db	0
   902  007ED5  00                 	db	0
   903  007ED6  00                 	db	0
   904  007ED7  00                 	db	0
   905  007ED8  00                 	db	0
   906  007ED9  00                 	db	0
   907  007EDA  00                 	db	0
   908  007EDB  00                 	db	0
   909  007EDC  00                 	db	0
   910  007EDD  00                 	db	0
   911  007EDE  00                 	db	0
   912  007EDF  00                 	db	0
   913  007EE0  00                 	db	0
   914  007EE1  00                 	db	0
   915  007EE2  00                 	db	0
   916  007EE3  3F                 	db	63
   917  007EE4  80                 	db	128
   918  007EE5  00                 	db	0
   919  007EE6  C0                 	db	192
   920  007EE7  00                 	db	0
   921  007EE8  7F                 	db	127
   922  007EE9  E0                 	db	224
   923  007EEA  00                 	db	0
   924  007EEB  30                 	db	48
   925  007EEC  00                 	db	0
   926  007EED  1F                 	db	31
   927  007EEE  FF                 	db	255
   928  007EEF  F8                 	db	248
   929  007EF0  03                 	db	3
   930  007EF1  FF                 	db	255
   931  007EF2  F8                 	db	248
   932  007EF3  24                 	db	36
   933  007EF4  80                 	db	128
   934  007EF5  00                 	db	0
   935  007EF6  A0                 	db	160
   936  007EF7  00                 	db	0
   937  007EF8  7F                 	db	127
   938  007EF9  E0                 	db	224
   939  007EFA  00                 	db	0
   940  007EFB  78                 	db	120
   941  007EFC  00                 	db	0
   942  007EFD  1F                 	db	31
   943  007EFE  FF                 	db	255
   944  007EFF  F8                 	db	248
   945  007F00  02                 	db	2
   946  007F01  00                 	db	0
   947  007F02  08                 	db	8
   948  007F03  15                 	db	21
   949  007F04  00                 	db	0
   950  007F05  02                 	db	2
   951  007F06  90                 	db	144
   952  007F07  00                 	db	0
   953  007F08  66                 	db	102
   954  007F09  60                 	db	96
   955  007F0A  60                 	db	96
   956  007F0B  FC                 	db	252
   957  007F0C  00                 	db	0
   958  007F0D  17                 	db	23
   959  007F0E  A3                 	db	163
   960  007F0F  18                 	db	24
   961  007F10  0E                 	db	14
   962  007F11  EE                 	db	238
   963  007F12  E8                 	db	232
   964  007F13  0E                 	db	14
   965  007F14  01                 	db	1
   966  007F15  01                 	db	1
   967  007F16  A0                 	db	160
   968  007F17  00                 	db	0
   969  007F18  66                 	db	102
   970  007F19  60                 	db	96
   971  007F1A  61                 	db	97
   972  007F1B  FE                 	db	254
   973  007F1C  00                 	db	0
   974  007F1D  13                 	db	19
   975  007F1E  2D                 	db	45
   976  007F1F  E8                 	db	232
   977  007F20  08                 	db	8
   978  007F21  EE                 	db	238
   979  007F22  E8                 	db	232
   980  007F23  04                 	db	4
   981  007F24  05                 	db	5
   982  007F25  00                 	db	0
   983  007F26  C0                 	db	192
   984  007F27  00                 	db	0
   985  007F28  66                 	db	102
   986  007F29  60                 	db	96
   987  007F2A  60                 	db	96
   988  007F2B  30                 	db	48
   989  007F2C  00                 	db	0
   990  007F2D  14                 	db	20
   991  007F2E  AD                 	db	173
   992  007F2F  E8                 	db	232
   993  007F30  08                 	db	8
   994  007F31  EE                 	db	238
   995  007F32  E8                 	db	232
   996  007F33  04                 	db	4
   997  007F34  15                 	db	21
   998  007F35  01                 	db	1
   999  007F36  A0                 	db	160
  1000  007F37  00                 	db	0
  1001  007F38  66                 	db	102
  1002  007F39  60                 	db	96
  1003  007F3A  60                 	db	96
  1004  007F3B  30                 	db	48
  1005  007F3C  00                 	db	0
  1006  007F3D  17                 	db	23
  1007  007F3E  AD                 	db	173
  1008  007F3F  98                 	db	152
  1009  007F40  08                 	db	8
  1010  007F41  EE                 	db	238
  1011  007F42  E8                 	db	232
  1012  007F43  04                 	db	4
  1013  007F44  55                 	db	85
  1014  007F45  02                 	db	2
  1015  007F46  90                 	db	144
  1016  007F47  00                 	db	0
  1017  007F48  66                 	db	102
  1018  007F49  60                 	db	96
  1019  007F4A  60                 	db	96
  1020  007F4B  30                 	db	48
  1021  007F4C  00                 	db	0
  1022  007F4D  17                 	db	23
  1023  007F4E  A3                 	db	163
  1024  007F4F  E8                 	db	232
  1025  007F50  08                 	db	8
  1026  007F51  EE                 	db	238
  1027  007F52  E8                 	db	232
  1028  007F53  05                 	db	5
  1029  007F54  55                 	db	85
  1030  007F55  00                 	db	0
  1031  007F56  A0                 	db	160
  1032  007F57  00                 	db	0
  1033  007F58  7F                 	db	127
  1034  007F59  E0                 	db	224
  1035  007F5A  60                 	db	96
  1036  007F5B  30                 	db	48
  1037  007F5C  00                 	db	0
  1038  007F5D  17                 	db	23
  1039  007F5E  AF                 	db	175
  1040  007F5F  E8                 	db	232
  1041  007F60  08                 	db	8
  1042  007F61  EE                 	db	238
  1043  007F62  E8                 	db	232
  1044  007F63  05                 	db	5
  1045  007F64  55                 	db	85
  1046  007F65  00                 	db	0
  1047  007F66  C0                 	db	192
  1048  007F67  00                 	db	0
  1049  007F68  7F                 	db	127
  1050  007F69  E0                 	db	224
  1051  007F6A  60                 	db	96
  1052  007F6B  30                 	db	48
  1053  007F6C  00                 	db	0
  1054  007F6D  17                 	db	23
  1055  007F6E  AF                 	db	175
  1056  007F6F  18                 	db	24
  1057  007F70  0E                 	db	14
  1058  007F71  EE                 	db	238
  1059  007F72  E8                 	db	232
  1060  007F73  00                 	db	0
  1061  007F74  00                 	db	0
  1062  007F75  00                 	db	0
  1063  007F76  00                 	db	0
  1064  007F77  00                 	db	0
  1065  007F78  00                 	db	0
  1066  007F79  03                 	db	3
  1067  007F7A  FC                 	db	252
  1068  007F7B  30                 	db	48
  1069  007F7C  00                 	db	0
  1070  007F7D  1F                 	db	31
  1071  007F7E  FF                 	db	255
  1072  007F7F  F8                 	db	248
  1073  007F80  02                 	db	2
  1074  007F81  00                 	db	0
  1075  007F82  08                 	db	8
  1076  007F83  00                 	db	0
  1077  007F84  00                 	db	0
  1078  007F85  00                 	db	0
  1079  007F86  00                 	db	0
  1080  007F87  00                 	db	0
  1081  007F88  00                 	db	0
  1082  007F89  01                 	db	1
  1083  007F8A  F8                 	db	248
  1084  007F8B  30                 	db	48
  1085  007F8C  00                 	db	0
  1086  007F8D  1F                 	db	31
  1087  007F8E  FF                 	db	255
  1088  007F8F  F8                 	db	248
  1089  007F90  03                 	db	3
  1090  007F91  FF                 	db	255
  1091  007F92  F8                 	db	248
  1092  007F93  00                 	db	0
  1093  007F94  00                 	db	0
  1094  007F95  00                 	db	0
  1095  007F96  00                 	db	0
  1096  007F97  00                 	db	0
  1097  007F98  00                 	db	0
  1098  007F99  00                 	db	0
  1099  007F9A  F0                 	db	240
  1100  007F9B  00                 	db	0
  1101  007F9C  00                 	db	0
  1102  007F9D  00                 	db	0
  1103  007F9E  00                 	db	0
  1104  007F9F  00                 	db	0
  1105  007FA0  00                 	db	0
  1106  007FA1  00                 	db	0
  1107  007FA2  00                 	db	0
  1108  007FA3  00                 	db	0
  1109  007FA4  00                 	db	0
  1110  007FA5  00                 	db	0
  1111  007FA6  00                 	db	0
  1112  007FA7  00                 	db	0
  1113  007FA8  00                 	db	0
  1114  007FA9  00                 	db	0
  1115  007FAA  60                 	db	96
  1116  007FAB  00                 	db	0
  1117  007FAC  00                 	db	0
  1118  007FAD  00                 	db	0
  1119  007FAE  00                 	db	0
  1120  007FAF  00                 	db	0
  1121  007FB0  00                 	db	0
  1122  007FB1  00                 	db	0
  1123  007FB2  00                 	db	0
  1124  007FB3  00                 	db	0
  1125  007FB4  00                 	db	0
  1126  007FB5  00                 	db	0
  1127  007FB6  00                 	db	0
  1128  007FB7  00                 	db	0
  1129  007FB8  00                 	db	0
  1130  007FB9  00                 	db	0
  1131  007FBA  00                 	db	0
  1132  007FBB  00                 	db	0
  1133  007FBC  00                 	db	0
  1134  007FBD  00                 	db	0
  1135  007FBE  00                 	db	0
  1136  007FBF  00                 	db	0
  1137  007FC0  00                 	db	0
  1138  007FC1  00                 	db	0
  1139  007FC2  00                 	db	0
  1140  007FC3  00                 	db	0
  1141  007FC4  00                 	db	0
  1142  007FC5  00                 	db	0
  1143  007FC6  00                 	db	0
  1144  007FC7  00                 	db	0
  1145  007FC8  00                 	db	0
  1146  007FC9  00                 	db	0
  1147  007FCA  00                 	db	0
  1148  007FCB  00                 	db	0
  1149  007FCC  00                 	db	0
  1150  007FCD  00                 	db	0
  1151  007FCE  00                 	db	0
  1152  007FCF  00                 	db	0
  1153  007FD0  00                 	db	0
  1154  007FD1  00                 	db	0
  1155  007FD2  00                 	db	0
  1156  007FD3  39                 	db	57
  1157  007FD4  80                 	db	128
  1158  007FD5  00                 	db	0
  1159  007FD6  00                 	db	0
  1160  007FD7  00                 	db	0
  1161  007FD8  00                 	db	0
  1162  007FD9  00                 	db	0
  1163  007FDA  00                 	db	0
  1164  007FDB  00                 	db	0
  1165  007FDC  00                 	db	0
  1166  007FDD  00                 	db	0
  1167  007FDE  00                 	db	0
  1168  007FDF  00                 	db	0
  1169  007FE0  00                 	db	0
  1170  007FE1  00                 	db	0
  1171  007FE2  00                 	db	0
  1172  007FE3                     __end_of_picture:
  1173                           	opt stack 0
  1174  007FE3                     STR_1:
  1175  007FE3  55                 	db	85	;'U'
  1176  007FE4  6E                 	db	110	;'n'
  1177  007FE5  69                 	db	105	;'i'
  1178  007FE6  76                 	db	118	;'v'
  1179  007FE7  65                 	db	101	;'e'
  1180  007FE8  72                 	db	114	;'r'
  1181  007FE9  73                 	db	115	;'s'
  1182  007FEA  69                 	db	105	;'i'
  1183  007FEB  74                 	db	116	;'t'
  1184  007FEC  79                 	db	121	;'y'
  1185  007FED  00                 	db	0
  1186  007FEE                     STR_4:
  1187  007FEE  5A                 	db	90	;'Z'
  1188  007FEF  49                 	db	73	;'I'
  1189  007FF0  50                 	db	80	;'P'
  1190  007FF1  53                 	db	83	;'S'
  1191  007FF2  2D                 	db	45
  1192  007FF3  45                 	db	69	;'E'
  1193  007FF4  56                 	db	86	;'V'
  1194  007FF5  00                 	db	0
  1195  007FF6                     STR_3:
  1196  007FF6  41                 	db	65	;'A'
  1197  007FF7  6B                 	db	107	;'k'
  1198  007FF8  72                 	db	114	;'r'
  1199  007FF9  6F                 	db	111	;'o'
  1200  007FFA  6E                 	db	110	;'n'
  1201  007FFB  00                 	db	0
  1202  007FFC                     STR_2:
  1203  007FFC  4F                 	db	79	;'O'
  1204  007FFD  46                 	db	70	;'F'
  1205  007FFE  00                 	db	0
  1206                           
  1207                           ; #config settings
  1208  007FFF  00                 	db	0	; dummy byte at the end
  1209  0000                     
  1210                           	psect	nvCOMRAM
  1211  000042                     __pnvCOMRAM:
  1212                           	opt stack 0
  1213  000042                     _timer0ReloadVal16bit:
  1214                           	opt stack 0
  1215  000042                     	ds	2
  1216                           
  1217                           	psect	nvBANK0
  1218  0000FE                     __pnvBANK0:
  1219                           	opt stack 0
  1220  0000FE                     _TMR2_InterruptHandler:
  1221                           	opt stack 0
  1222  0000FE                     	ds	2
  1223  0000                     _ANSELA	set	3896
  1224  0000                     _ANSELAbits	set	3896
  1225  0000                     _ANSELB	set	3897
  1226  0000                     _ANSELC	set	3898
  1227  0000                     _ANSELCbits	set	3898
  1228  0000                     _ANSELD	set	3899
  1229  0000                     _ANSELE	set	3900
  1230  0000                     _ADCON0	set	4034
  1231  0000                     _ADCON0bits	set	4034
  1232  0000                     _ADCON1	set	4033
  1233  0000                     _ADCON2	set	4032
  1234  0000                     _ADRESH	set	4036
  1235  0000                     _ADRESL	set	4035
  1236  0000                     _BAUD1CON	set	4024
  1237  0000                     _INTCON2bits	set	4081
  1238  0000                     _INTCONbits	set	4082
  1239  0000                     _IPR1bits	set	3999
  1240  0000                     _IPR2bits	set	4002
  1241  0000                     _LATA	set	3977
  1242  0000                     _LATB	set	3978
  1243  0000                     _LATC	set	3979
  1244  0000                     _LATCbits	set	3979
  1245  0000                     _LATD	set	3980
  1246  0000                     _LATE	set	3981
  1247  0000                     _OSCCON	set	4051
  1248  0000                     _OSCCON2	set	4050
  1249  0000                     _OSCTUNE	set	3995
  1250  0000                     _PIE1bits	set	3997
  1251  0000                     _PIE2bits	set	4000
  1252  0000                     _PIR1bits	set	3998
  1253  0000                     _PIR2bits	set	4001
  1254  0000                     _PORTAbits	set	3968
  1255  0000                     _PORTBbits	set	3969
  1256  0000                     _PORTDbits	set	3971
  1257  0000                     _PR2	set	4027
  1258  0000                     _RC1STA	set	4011
  1259  0000                     _RC1STAbits	set	4011
  1260  0000                     _RCONbits	set	4048
  1261  0000                     _RCREG1	set	4014
  1262  0000                     _SPBRG1	set	4015
  1263  0000                     _SPBRGH1	set	4016
  1264  0000                     _SSP1ADD	set	4040
  1265  0000                     _SSP1BUF	set	4041
  1266  0000                     _SSP1CON1	set	4038
  1267  0000                     _SSP1CON1bits	set	4038
  1268  0000                     _SSP1CON2bits	set	4037
  1269  0000                     _SSP1CON3	set	4043
  1270  0000                     _SSP1STAT	set	4039
  1271  0000                     _T0CON	set	4053
  1272  0000                     _T0CONbits	set	4053
  1273  0000                     _T2CON	set	4026
  1274  0000                     _T2CONbits	set	4026
  1275  0000                     _TMR0H	set	4055
  1276  0000                     _TMR0L	set	4054
  1277  0000                     _TMR2	set	4028
  1278  0000                     _TRISA	set	3986
  1279  0000                     _TRISAbits	set	3986
  1280  0000                     _TRISB	set	3987
  1281  0000                     _TRISC	set	3988
  1282  0000                     _TRISCbits	set	3988
  1283  0000                     _TRISD	set	3989
  1284  0000                     _TRISE	set	3990
  1285  0000                     _TX1STA	set	4012
  1286  0000                     _TXREG1	set	4013
  1287  0000                     _WPUB	set	3937
  1288  0000                     _LATA3	set	31819
  1289  0000                     _LATA6	set	31822
  1290  0000                     _LATA7	set	31823
  1291  0000                     _LATC1	set	31833
  1292  0000                     _LATE0	set	31848
  1293  0000                     _LATE1	set	31849
  1294  0000                     _LATE2	set	31850
  1295  0000                     _TRISA6	set	31894
  1296  0000                     _TRISC1	set	31905
  1297                           
  1298                           	psect	cinit
  1299  002554                     __pcinit:
  1300                           	opt stack 0
  1301  002554                     start_initialization:
  1302                           	opt stack 0
  1303  002554                     __initialization:
  1304                           	opt stack 0
  1305                           
  1306                           ; Clear objects allocated to BANK5 (200 bytes)
  1307  002554  EE05  F000         	lfsr	0,__pbssBANK5
  1308  002558  0EC8               	movlw	200
  1309  00255A                     clear_0:
  1310  00255A  6AEE               	clrf	postinc0,c
  1311  00255C  06E8               	decf	wreg,f,c
  1312  00255E  E1FD               	bnz	clear_0
  1313                           
  1314                           ; Clear objects allocated to BANK4 (206 bytes)
  1315  002560  EE04  F000         	lfsr	0,__pbssBANK4
  1316  002564  0ECE               	movlw	206
  1317  002566                     clear_1:
  1318  002566  6AEE               	clrf	postinc0,c
  1319  002568  06E8               	decf	wreg,f,c
  1320  00256A  E1FD               	bnz	clear_1
  1321                           
  1322                           ; Clear objects allocated to BANK3 (206 bytes)
  1323  00256C  EE03  F000         	lfsr	0,__pbssBANK3
  1324  002570  0ECE               	movlw	206
  1325  002572                     clear_2:
  1326  002572  6AEE               	clrf	postinc0,c
  1327  002574  06E8               	decf	wreg,f,c
  1328  002576  E1FD               	bnz	clear_2
  1329                           
  1330                           ; Clear objects allocated to BANK2 (206 bytes)
  1331  002578  EE02  F000         	lfsr	0,__pbssBANK2
  1332  00257C  0ECE               	movlw	206
  1333  00257E                     clear_3:
  1334  00257E  6AEE               	clrf	postinc0,c
  1335  002580  06E8               	decf	wreg,f,c
  1336  002582  E1FD               	bnz	clear_3
  1337                           
  1338                           ; Clear objects allocated to BANK1 (57 bytes)
  1339  002584  EE01  F000         	lfsr	0,__pbssBANK1
  1340  002588  0E39               	movlw	57
  1341  00258A                     clear_4:
  1342  00258A  6AEE               	clrf	postinc0,c
  1343  00258C  06E8               	decf	wreg,f,c
  1344  00258E  E1FD               	bnz	clear_4
  1345                           
  1346                           ; Clear objects allocated to BANK0 (146 bytes)
  1347  002590  EE00  F060         	lfsr	0,__pbssBANK0
  1348  002594  0E92               	movlw	146
  1349  002596                     clear_5:
  1350  002596  6AEE               	clrf	postinc0,c
  1351  002598  06E8               	decf	wreg,f,c
  1352  00259A  E1FD               	bnz	clear_5
  1353                           
  1354                           ; Clear objects allocated to COMRAM (23 bytes)
  1355  00259C  EE00  F02B         	lfsr	0,__pbssCOMRAM
  1356  0025A0  0E17               	movlw	23
  1357  0025A2                     clear_6:
  1358  0025A2  6AEE               	clrf	postinc0,c
  1359  0025A4  06E8               	decf	wreg,f,c
  1360  0025A6  E1FD               	bnz	clear_6
  1361                           
  1362                           ; Initialize objects allocated to COMRAM (1 bytes)
  1363                           ; load TBLPTR registers with __pidataCOMRAM
  1364  0025A8  0E62               	movlw	low __pidataCOMRAM
  1365  0025AA  6EF6               	movwf	tblptrl,c
  1366  0025AC  0E2F               	movlw	high __pidataCOMRAM
  1367  0025AE  6EF7               	movwf	tblptrh,c
  1368  0025B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1369  0025B2  6EF8               	movwf	tblptru,c
  1370  0025B4  0009               	tblrd		*+	;fetch initializer
  1371  0025B6  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1372  0025BA                     end_of_initialization:
  1373                           	opt stack 0
  1374  0025BA                     __end_of__initialization:
  1375                           	opt stack 0
  1376  0025BA  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1377  0025BC  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1378  0025BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1379  0025C0  6EF8               	movwf	tblptru,c
  1380  0025C2  0100               	movlb	0
  1381  0025C4  EFA0  F00C         	goto	_main	;jump to C main() function
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           postinc0	equ	0xFEE
  1387                           wreg	equ	0xFE8
  1388                           
  1389                           	psect	bssCOMRAM
  1390  00002B                     __pbssCOMRAM:
  1391                           	opt stack 0
  1392  00002B                     _group:
  1393                           	opt stack 0
  1394  00002B                     	ds	2
  1395  00002D                     _p_i2c1_trb_current:
  1396                           	opt stack 0
  1397  00002D                     	ds	2
  1398  00002F                     _serial_available:
  1399                           	opt stack 0
  1400  00002F                     	ds	2
  1401  000031                     _serial_read:
  1402                           	opt stack 0
  1403  000031                     	ds	2
  1404  000033                     _serial_write:
  1405                           	opt stack 0
  1406  000033                     	ds	2
  1407  000035                     I2C1_ISR@i2c_10bit_address_restart:
  1408                           	opt stack 0
  1409  000035                     	ds	1
  1410  000036                     _AKNAKsend:
  1411                           	opt stack 0
  1412  000036                     	ds	1
  1413  000037                     _calc_CS:
  1414                           	opt stack 0
  1415  000037                     	ds	1
  1416  000038                     _i2c1_state:
  1417                           	opt stack 0
  1418  000038                     	ds	1
  1419  000039                     _maxDataAddress:
  1420                           	opt stack 0
  1421  000039                     	ds	1
  1422  00003A                     _moduleAddress:
  1423                           	opt stack 0
  1424  00003A                     	ds	1
  1425  00003B                     _returnAddress:
  1426                           	opt stack 0
  1427  00003B                     	ds	1
  1428  00003C                     _rx_address:
  1429                           	opt stack 0
  1430  00003C                     	ds	1
  1431  00003D                     _rx_array_inx:
  1432                           	opt stack 0
  1433  00003D                     	ds	1
  1434  00003E                     _rx_len:
  1435                           	opt stack 0
  1436  00003E                     	ds	1
  1437  00003F                     _time:
  1438                           	opt stack 0
  1439  00003F                     	ds	1
  1440  000040                     I2C1_ISR@i2c_address:
  1441                           	opt stack 0
  1442  000040                     	ds	2
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           
  1450                           	psect	dataCOMRAM
  1451  000044                     __pdataCOMRAM:
  1452                           	opt stack 0
  1453  000044                     _Transmit_stall:
  1454                           	opt stack 0
  1455  000044                     	ds	1
  1456                           tblptru	equ	0xFF8
  1457                           tblptrh	equ	0xFF7
  1458                           tblptrl	equ	0xFF6
  1459                           tablat	equ	0xFF5
  1460                           postinc0	equ	0xFEE
  1461                           wreg	equ	0xFE8
  1462                           
  1463                           	psect	bssBANK0
  1464  000060                     __pbssBANK0:
  1465                           	opt stack 0
  1466  000060                     _displaybuffer:
  1467                           	opt stack 0
  1468  000060                     	ds	40
  1469  000088                     _LED_array:
  1470                           	opt stack 0
  1471  000088                     	ds	16
  1472  000098                     _LEDNUM_ENAB:
  1473                           	opt stack 0
  1474  000098                     	ds	12
  1475  0000A4                     _LEDState:
  1476                           	opt stack 0
  1477  0000A4                     	ds	12
  1478  0000B0                     _butnarray:
  1479                           	opt stack 0
  1480  0000B0                     	ds	8
  1481  0000B8                     _i2c1_object:
  1482                           	opt stack 0
  1483  0000B8                     	ds	7
  1484  0000BF                     I2C1_ISR@i2c_bytes_left:
  1485                           	opt stack 0
  1486  0000BF                     	ds	2
  1487  0000C1                     I2C1_ISR@pi2c_buf_ptr:
  1488                           	opt stack 0
  1489  0000C1                     	ds	2
  1490  0000C3                     _DataBarGraphA:
  1491                           	opt stack 0
  1492  0000C3                     	ds	2
  1493  0000C5                     _DataBarGraphB:
  1494                           	opt stack 0
  1495  0000C5                     	ds	2
  1496  0000C7                     _addressErrorCounter:
  1497                           	opt stack 0
  1498  0000C7                     	ds	2
  1499  0000C9                     _alignErrorCounter:
  1500                           	opt stack 0
  1501  0000C9                     	ds	2
  1502  0000CB                     _crcErrorCounter:
  1503                           	opt stack 0
  1504  0000CB                     	ds	2
  1505  0000CD                     _dataAdressErrorCounter:
  1506                           	opt stack 0
  1507  0000CD                     	ds	2
  1508  0000CF                     _i:
  1509                           	opt stack 0
  1510  0000CF                     	ds	2
  1511  0000D1                     _i2c1_trb_count:
  1512                           	opt stack 0
  1513  0000D1                     	ds	2
  1514  0000D3                     _k:
  1515                           	opt stack 0
  1516  0000D3                     	ds	2
  1517  0000D5                     _p_i2c1_current:
  1518                           	opt stack 0
  1519  0000D5                     	ds	2
  1520  0000D7                     _receiveArrayAddress:
  1521                           	opt stack 0
  1522  0000D7                     	ds	2
  1523  0000D9                     _sendStructAddress:
  1524                           	opt stack 0
  1525  0000D9                     	ds	2
  1526  0000DB                     _serial_peek:
  1527                           	opt stack 0
  1528  0000DB                     	ds	2
  1529  0000DD                     _timeOut:
  1530                           	opt stack 0
  1531  0000DD                     	ds	2
  1532  0000DF                     handleIndicators@oldIndicators:
  1533                           	opt stack 0
  1534  0000DF                     	ds	2
  1535  0000E1                     I2C1_MasterRead@trBlock:
  1536                           	opt stack 0
  1537  0000E1                     	ds	5
  1538  0000E6                     I2C1_MasterWrite@trBlock:
  1539                           	opt stack 0
  1540  0000E6                     	ds	5
  1541  0000EB                     _i2c1_tr_queue:
  1542                           	opt stack 0
  1543  0000EB                     	ds	5
  1544  0000F0                     _Buff:
  1545                           	opt stack 0
  1546  0000F0                     	ds	2
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           
  1554                           	psect	bssBANK1
  1555  000100                     __pbssBANK1:
  1556                           	opt stack 0
  1557  000100                     _receiveArray:
  1558                           	opt stack 0
  1559  000100                     	ds	40
  1560  000128                     _crc_buffer:
  1561                           	opt stack 0
  1562  000128                     	ds	17
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           
  1570                           	psect	bssBANK2
  1571  000200                     __pbssBANK2:
  1572                           	opt stack 0
  1573  000200                     _ring_buffer:
  1574                           	opt stack 0
  1575  000200                     	ds	206
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           postinc0	equ	0xFEE
  1581                           wreg	equ	0xFE8
  1582                           
  1583                           	psect	bssBANK3
  1584  000300                     __pbssBANK3:
  1585                           	opt stack 0
  1586  000300                     _input_buffer:
  1587                           	opt stack 0
  1588  000300                     	ds	206
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           
  1596                           	psect	bssBANK4
  1597  000400                     __pbssBANK4:
  1598                           	opt stack 0
  1599  000400                     _output_buffer:
  1600                           	opt stack 0
  1601  000400                     	ds	206
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           
  1609                           	psect	bssBANK5
  1610  000500                     __pbssBANK5:
  1611                           	opt stack 0
  1612  000500                     _rx_buffer:
  1613                           	opt stack 0
  1614  000500                     	ds	200
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           
  1622                           	psect	cstackBANK1
  1623  000139                     __pcstackBANK1:
  1624                           	opt stack 0
  1625  000139                     ??_LEDsetBar:
  1626  000139                     ?___fttol:
  1627                           	opt stack 0
  1628  000139                     LEDBsetBrightness@writeBuffer:
  1629                           	opt stack 0
  1630  000139                     LEDblinkRate@writeBuffer:
  1631                           	opt stack 0
  1632  000139                     begin@ptr:
  1633                           	opt stack 0
  1634  000139                     ___fttol@f1:
  1635                           	opt stack 0
  1636  000139                     oledPutChar@bytes:
  1637                           	opt stack 0
  1638  000139                     LEDwriteDisplay@writeBuffer:
  1639                           	opt stack 0
  1640                           
  1641                           ; 20 bytes @ 0x0
  1642  000139                     	ds	2
  1643  00013B                     begin@maxSize:
  1644                           	opt stack 0
  1645  00013B                     LEDBsetBrightness@timeOut:
  1646                           	opt stack 0
  1647  00013B                     LEDblinkRate@timeOut:
  1648                           	opt stack 0
  1649                           
  1650                           ; 2 bytes @ 0x2
  1651  00013B                     	ds	1
  1652  00013C                     begin@givenAddress:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x3
  1656  00013C                     	ds	1
  1657  00013D                     ??___fttol:
  1658  00013D                     LEDBsetBrightness@status:
  1659                           	opt stack 0
  1660  00013D                     LEDblinkRate@status:
  1661                           	opt stack 0
  1662  00013D                     begin@error:
  1663                           	opt stack 0
  1664                           
  1665                           ; 1 bytes @ 0x4
  1666  00013D                     	ds	1
  1667  00013E                     begin@stufftosend:
  1668                           	opt stack 0
  1669  00013E                     LEDbegin@writeBuffer:
  1670                           	opt stack 0
  1671                           
  1672                           ; 3 bytes @ 0x5
  1673  00013E                     	ds	2
  1674  000140                     begin@stufftoreceive:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x7
  1678  000140                     	ds	1
  1679  000141                     LEDbegin@timeOut:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x8
  1683  000141                     	ds	1
  1684  000142                     ___fttol@sign1:
  1685                           	opt stack 0
  1686  000142                     begin@stuffavailable:
  1687                           	opt stack 0
  1688  000142                     oledPutChar@base:
  1689                           	opt stack 0
  1690                           
  1691                           ; 2 bytes @ 0x9
  1692  000142                     	ds	1
  1693  000143                     LEDbegin@i2c_addr:
  1694                           	opt stack 0
  1695  000143                     ___fttol@lval:
  1696                           	opt stack 0
  1697                           
  1698                           ; 4 bytes @ 0xA
  1699  000143                     	ds	1
  1700  000144                     LEDbegin@status:
  1701                           	opt stack 0
  1702  000144                     oledPutChar@ch:
  1703                           	opt stack 0
  1704  000144                     begin@stuffpeek:
  1705                           	opt stack 0
  1706                           
  1707                           ; 2 bytes @ 0xB
  1708  000144                     	ds	1
  1709  000145                     oledPutChar@status:
  1710                           	opt stack 0
  1711                           
  1712                           ; 1 bytes @ 0xC
  1713  000145                     	ds	2
  1714  000147                     ___fttol@exp1:
  1715                           	opt stack 0
  1716                           
  1717                           ; 1 bytes @ 0xE
  1718  000147                     	ds	2
  1719  000149                     LEDsetValue@value:
  1720                           	opt stack 0
  1721                           
  1722                           ; 2 bytes @ 0x10
  1723  000149                     	ds	2
  1724  00014B                     LEDsetValue@color:
  1725                           	opt stack 0
  1726                           
  1727                           ; 2 bytes @ 0x12
  1728  00014B                     	ds	2
  1729  00014D                     ??_LEDsetValue:
  1730  00014D                     LEDwriteDisplay@i2c_addr:
  1731                           	opt stack 0
  1732                           
  1733                           ; 1 bytes @ 0x14
  1734  00014D                     	ds	1
  1735  00014E                     LEDsetValue@k:
  1736                           	opt stack 0
  1737  00014E                     LEDwriteDisplay@timeOut:
  1738                           	opt stack 0
  1739                           
  1740                           ; 2 bytes @ 0x15
  1741  00014E                     	ds	2
  1742  000150                     LEDwriteDisplay@status:
  1743                           	opt stack 0
  1744                           
  1745                           ; 1 bytes @ 0x17
  1746  000150                     	ds	1
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           
  1754                           	psect	cstackBANK0
  1755  0000F2                     __pcstackBANK0:
  1756                           	opt stack 0
  1757  0000F2                     ??_receiveData:
  1758  0000F2                     ?___ftmul:
  1759                           	opt stack 0
  1760  0000F2                     sendData@whereToSend:
  1761                           	opt stack 0
  1762  0000F2                     I2C1_MasterWrite@pdata:
  1763                           	opt stack 0
  1764  0000F2                     handleIndicators@i:
  1765                           	opt stack 0
  1766  0000F2                     ToSend@what:
  1767                           	opt stack 0
  1768  0000F2                     ___ftmul@f1:
  1769                           	opt stack 0
  1770                           
  1771                           ; 3 bytes @ 0x0
  1772  0000F2                     	ds	1
  1773  0000F3                     sendData@CS:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0x1
  1777  0000F3                     	ds	1
  1778  0000F4                     I2C1_MasterWrite@length:
  1779                           	opt stack 0
  1780  0000F4                     sendData@i:
  1781                           	opt stack 0
  1782                           
  1783                           ; 2 bytes @ 0x2
  1784  0000F4                     	ds	1
  1785  0000F5                     ___ftmul@f2:
  1786                           	opt stack 0
  1787                           
  1788                           ; 3 bytes @ 0x3
  1789  0000F5                     	ds	1
  1790  0000F6                     I2C1_MasterWrite@address:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x4
  1794  0000F6                     	ds	2
  1795  0000F8                     ___ftmul@exp:
  1796                           	opt stack 0
  1797  0000F8                     I2C1_MasterWrite@pflag:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x6
  1801  0000F8                     	ds	1
  1802  0000F9                     ___ftmul@f3_as_product:
  1803                           	opt stack 0
  1804                           
  1805                           ; 3 bytes @ 0x7
  1806  0000F9                     	ds	1
  1807  0000FA                     oledClear@row:
  1808                           	opt stack 0
  1809  0000FA                     oledPrint@s:
  1810                           	opt stack 0
  1811                           
  1812                           ; 2 bytes @ 0x8
  1813  0000FA                     	ds	2
  1814  0000FC                     ___ftmul@cntr:
  1815                           	opt stack 0
  1816  0000FC                     oledClear@col:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0xA
  1820  0000FC                     	ds	1
  1821  0000FD                     ___ftmul@sign:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0xB
  1825  0000FD                     	ds	1
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           
  1833                           	psect	cstackCOMRAM
  1834  000001                     __pcstackCOMRAM:
  1835                           	opt stack 0
  1836  000001                     ??_I2C1_Stop:
  1837  000001                     ??_TMR2_CallBack:
  1838  000001                     ?i2_UART_buff_size:
  1839                           	opt stack 0
  1840  000001                     ?i2_UART_buff_modulo_inc:
  1841                           	opt stack 0
  1842  000001                     ReadButtonState@btnnum:
  1843                           	opt stack 0
  1844  000001                     i2UART_buff_size@_this:
  1845                           	opt stack 0
  1846  000001                     i2UART_buff_modulo_inc@value:
  1847                           	opt stack 0
  1848                           
  1849                           ; 2 bytes @ 0x0
  1850  000001                     	ds	2
  1851  000003                     ??_ReadButtonState:
  1852  000003                     I2C1_Stop@completion_code:
  1853                           	opt stack 0
  1854  000003                     TMR2_CallBack@i:
  1855                           	opt stack 0
  1856  000003                     i2UART_buff_modulo_inc@modulus:
  1857                           	opt stack 0
  1858                           
  1859                           ; 2 bytes @ 0x2
  1860  000003                     	ds	1
  1861  000004                     ??_I2C1_ISR:
  1862                           
  1863                           ; 1 bytes @ 0x3
  1864  000004                     	ds	1
  1865  000005                     TMR0_ISR@x:
  1866                           	opt stack 0
  1867  000005                     i2UART_buff_modulo_inc@my_value:
  1868                           	opt stack 0
  1869                           
  1870                           ; 2 bytes @ 0x4
  1871  000005                     	ds	2
  1872  000007                     i2UART_buff_put@_this:
  1873                           	opt stack 0
  1874  000007                     i2UART_buff_get@_this:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x6
  1878  000007                     	ds	2
  1879  000009                     ??i2_UART_buff_get:
  1880  000009                     i2UART_buff_put@c:
  1881                           	opt stack 0
  1882                           
  1883                           ; 1 bytes @ 0x8
  1884  000009                     	ds	1
  1885  00000A                     ??i2_UART_buff_put:
  1886                           
  1887                           ; 1 bytes @ 0x9
  1888  00000A                     	ds	1
  1889  00000B                     i2UART_buff_get@c:
  1890                           	opt stack 0
  1891                           
  1892                           ; 1 bytes @ 0xA
  1893  00000B                     	ds	1
  1894  00000C                     EUSART1_Receive_ISR@data:
  1895                           	opt stack 0
  1896                           
  1897                           ; 1 bytes @ 0xB
  1898  00000C                     	ds	1
  1899  00000D                     ??_INTERRUPT_InterruptManager:
  1900                           
  1901                           ; 1 bytes @ 0xC
  1902  00000D                     	ds	14
  1903  00001B                     ?_GetDataBarGraphA:
  1904                           	opt stack 0
  1905  00001B                     ?_GetDataBarGraphB:
  1906                           	opt stack 0
  1907  00001B                     ?_ReceiveArrayGet:
  1908                           	opt stack 0
  1909  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1910                           	opt stack 0
  1911  00001B                     ?_UART_buff_modulo_inc:
  1912                           	opt stack 0
  1913  00001B                     ?_GetTime:
  1914                           	opt stack 0
  1915  00001B                     ?_UART_buff_size:
  1916                           	opt stack 0
  1917  00001B                     ?___awdiv:
  1918                           	opt stack 0
  1919  00001B                     ?___ftpack:
  1920                           	opt stack 0
  1921  00001B                     I2C1_MasterTRBInsert@count:
  1922                           	opt stack 0
  1923  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1924                           	opt stack 0
  1925  00001B                     setLED@led:
  1926                           	opt stack 0
  1927  00001B                     Off_Led@led:
  1928                           	opt stack 0
  1929  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1930                           	opt stack 0
  1931  00001B                     GetButtonState@btnnum:
  1932                           	opt stack 0
  1933  00001B                     ReceiveArrayGet@location:
  1934                           	opt stack 0
  1935  00001B                     wipeRxBuffer@i:
  1936                           	opt stack 0
  1937  00001B                     CRC8@data:
  1938                           	opt stack 0
  1939  00001B                     FastTransfer_buffer_modulo_inc@value:
  1940                           	opt stack 0
  1941  00001B                     crcBufS_put@_this:
  1942                           	opt stack 0
  1943  00001B                     UART_buff_size@_this:
  1944                           	opt stack 0
  1945  00001B                     UART_buff_modulo_inc@value:
  1946                           	opt stack 0
  1947  00001B                     Delay@wait:
  1948                           	opt stack 0
  1949  00001B                     ___awdiv@dividend:
  1950                           	opt stack 0
  1951  00001B                     memmove@d1:
  1952                           	opt stack 0
  1953  00001B                     memset@p1:
  1954                           	opt stack 0
  1955  00001B                     ___ftpack@arg:
  1956                           	opt stack 0
  1957                           
  1958                           ; 3 bytes @ 0x1A
  1959  00001B                     	ds	2
  1960  00001D                     ??_Delay:
  1961  00001D                     ??_setLED:
  1962  00001D                     ??_Off_Led:
  1963  00001D                     ??_GetButtonState:
  1964  00001D                     ?_Receive_available:
  1965                           	opt stack 0
  1966  00001D                     CRC8@len:
  1967                           	opt stack 0
  1968  00001D                     crcBufS_put@address:
  1969                           	opt stack 0
  1970  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1971                           	opt stack 0
  1972  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1973                           	opt stack 0
  1974  00001D                     DataBarGraphs@BGA:
  1975                           	opt stack 0
  1976  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1977                           	opt stack 0
  1978  00001D                     UART_buff_modulo_inc@modulus:
  1979                           	opt stack 0
  1980  00001D                     ___awdiv@divisor:
  1981                           	opt stack 0
  1982  00001D                     memmove@s1:
  1983                           	opt stack 0
  1984  00001D                     memset@c:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x1C
  1988  00001D                     	ds	1
  1989  00001E                     CRC8@sum:
  1990                           	opt stack 0
  1991  00001E                     crcBufS_put@oldCRC:
  1992                           	opt stack 0
  1993  00001E                     ___ftpack@exp:
  1994                           	opt stack 0
  1995  00001E                     Delay@x:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x1D
  1999  00001E                     	ds	1
  2000  00001F                     CRC8@extract:
  2001                           	opt stack 0
  2002  00001F                     crcBufS_put@status:
  2003                           	opt stack 0
  2004  00001F                     ___awdiv@counter:
  2005                           	opt stack 0
  2006  00001F                     ___ftpack@sign:
  2007                           	opt stack 0
  2008  00001F                     I2C1_MasterTRBInsert@pflag:
  2009                           	opt stack 0
  2010  00001F                     I2C1_MasterWriteTRBBuild@length:
  2011                           	opt stack 0
  2012  00001F                     SetLEDOut@lednum:
  2013                           	opt stack 0
  2014  00001F                     DataBarGraphs@BGB:
  2015                           	opt stack 0
  2016  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  2017                           	opt stack 0
  2018  00001F                     UART_buff_modulo_inc@my_value:
  2019                           	opt stack 0
  2020  00001F                     memmove@n:
  2021                           	opt stack 0
  2022  00001F                     memset@n:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x1E
  2026  00001F                     	ds	1
  2027  000020                     ??_crcBufS_put:
  2028  000020                     ??___ftpack:
  2029  000020                     CRC8@tempI:
  2030                           	opt stack 0
  2031  000020                     ___awdiv@sign:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x1F
  2035  000020                     	ds	1
  2036  000021                     ??_memmove:
  2037  000021                     ?_buttonsCollector:
  2038                           	opt stack 0
  2039  000021                     CRC8@crc:
  2040                           	opt stack 0
  2041  000021                     I2C1_MasterWriteTRBBuild@address:
  2042                           	opt stack 0
  2043  000021                     SetLEDOut@state:
  2044                           	opt stack 0
  2045  000021                     FastTransfer_buffer_put@_this:
  2046                           	opt stack 0
  2047  000021                     UART_buff_put@_this:
  2048                           	opt stack 0
  2049  000021                     UART_buff_get@_this:
  2050                           	opt stack 0
  2051  000021                     ___awdiv@quotient:
  2052                           	opt stack 0
  2053  000021                     memset@p:
  2054                           	opt stack 0
  2055                           
  2056                           ; 2 bytes @ 0x20
  2057  000021                     	ds	2
  2058  000023                     ??_I2C1_MasterWriteTRBBuild:
  2059  000023                     ??_buttonsCollector:
  2060  000023                     ??_SetLEDOut:
  2061  000023                     ??_UART_buff_get:
  2062  000023                     ?___lwtoft:
  2063                           	opt stack 0
  2064  000023                     FastTransfer_buffer_put@towhere:
  2065                           	opt stack 0
  2066  000023                     UART_buff_put@c:
  2067                           	opt stack 0
  2068  000023                     LEDsetBar@bar:
  2069                           	opt stack 0
  2070  000023                     FastTransfer_buffer_flush@_this:
  2071                           	opt stack 0
  2072  000023                     UART_buff_init@_this:
  2073                           	opt stack 0
  2074  000023                     ___lwtoft@c:
  2075                           	opt stack 0
  2076  000023                     memmove@d:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x22
  2080  000023                     	ds	1
  2081  000024                     ??_UART_buff_put:
  2082  000024                     FastTransfer_buffer_put@towhat:
  2083                           	opt stack 0
  2084                           
  2085                           ; 2 bytes @ 0x23
  2086  000024                     	ds	1
  2087  000025                     UART_buff_get@c:
  2088                           	opt stack 0
  2089  000025                     OLED_command@com:
  2090                           	opt stack 0
  2091  000025                     LEDBsetBrightness@b:
  2092                           	opt stack 0
  2093  000025                     LEDblinkRate@b:
  2094                           	opt stack 0
  2095  000025                     LEDsetBar@color:
  2096                           	opt stack 0
  2097  000025                     handleIndicators@receivedIndicators:
  2098                           	opt stack 0
  2099  000025                     FastTransfer_buffer_flush@clearBuffer:
  2100                           	opt stack 0
  2101  000025                     memmove@s:
  2102                           	opt stack 0
  2103                           
  2104                           ; 2 bytes @ 0x24
  2105  000025                     	ds	1
  2106  000026                     ??_FastTransfer_buffer_put:
  2107  000026                     ??___ftmul:
  2108  000026                     Send_put@_data:
  2109                           	opt stack 0
  2110  000026                     OLED_command@status:
  2111                           	opt stack 0
  2112  000026                     buttonsCollector@sendVal:
  2113                           	opt stack 0
  2114  000026                     receiveData@u:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x25
  2118  000026                     	ds	1
  2119  000027                     ??_handleIndicators:
  2120  000027                     ??_sendData:
  2121  000027                     ??_oledPutChar:
  2122  000027                     LEDBsetBrightness@i2c_addr:
  2123                           	opt stack 0
  2124  000027                     LEDblinkRate@i2c_addr:
  2125                           	opt stack 0
  2126  000027                     oledGotoYX@Column:
  2127                           	opt stack 0
  2128  000027                     LEDsetBar@c:
  2129                           	opt stack 0
  2130                           
  2131                           ; 2 bytes @ 0x26
  2132  000027                     	ds	1
  2133  000028                     ??_oledGotoYX:
  2134  000028                     buttonsCollector@i:
  2135                           	opt stack 0
  2136  000028                     receiveData@r:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x27
  2140  000028                     	ds	1
  2141  000029                     oledGotoYX@Row:
  2142                           	opt stack 0
  2143  000029                     LEDsetBar@a:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x28
  2147  000029                     	ds	1
  2148  00002A                     ToSend@where:
  2149                           	opt stack 0
  2150                           
  2151                           ; 1 bytes @ 0x29
  2152  00002A                     	ds	1
  2153  00002B                     tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           
  2160                           ; 1 bytes @ 0x2A
  2161 ;;
  2162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2163 ;;
  2164 ;; *************** function _main *****************
  2165 ;; Defined at:
  2166 ;;		line 37 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels required when called:   10
  2186 ;; This function calls:
  2187 ;;		_ClearTime
  2188 ;;		_GetDataBarGraphA
  2189 ;;		_GetDataBarGraphB
  2190 ;;		_GetTime
  2191 ;;		_LEDbegin
  2192 ;;		_LEDsetValue
  2193 ;;		_LEDwriteDisplay
  2194 ;;		_SYSTEM_Initialize
  2195 ;;		_Setupdisplay
  2196 ;;		_Splash
  2197 ;;		___ftmul
  2198 ;;		___fttol
  2199 ;;		___lwtoft
  2200 ;;		_updateComms
  2201 ;; This function is called by:
  2202 ;;		Startup code after reset
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text0
  2207  001940                     __ptext0:
  2208                           	opt stack 0
  2209  001940                     _main:
  2210                           	opt stack 21
  2211                           
  2212                           ;main.c: 39: SYSTEM_Initialize();
  2213                           
  2214                           ;incstack = 0
  2215  001940  ECE4  F012         	call	_SYSTEM_Initialize	;wreg free
  2216                           
  2217                           ;main.c: 58: (INTCONbits.GIE = 1);
  2218  001944  8EF2               	bsf	intcon,7,c	;volatile
  2219                           
  2220                           ;main.c: 61: (INTCONbits.PEIE = 1);
  2221  001946  8CF2               	bsf	intcon,6,c	;volatile
  2222                           
  2223                           ;main.c: 69: LEDbegin(0x70);
  2224  001948  0E70               	movlw	112
  2225  00194A  EC21  F010         	call	_LEDbegin
  2226                           
  2227                           ;main.c: 70: LEDbegin(0x71);
  2228  00194E  0E71               	movlw	113
  2229  001950  EC21  F010         	call	_LEDbegin
  2230                           
  2231                           ;main.c: 71: Setupdisplay();
  2232  001954  EC8A  F017         	call	_Setupdisplay	;wreg free
  2233                           
  2234                           ;main.c: 72: Splash();
  2235  001958  EC8F  F013         	call	_Splash	;wreg free
  2236                           
  2237                           ;main.c: 74: do { LATA3 = 1; } while(0);
  2238  00195C  8689               	bsf	3977,3,c	;volatile
  2239  00195E                     l7256:
  2240                           
  2241                           ;main.c: 76: updateComms();
  2242  00195E  ECC4  F013         	call	_updateComms	;wreg free
  2243                           
  2244                           ;main.c: 78: if (GetTime() > 2) {
  2245  001962  EC9E  F017         	call	_GetTime	;wreg free
  2246  001966  BE1C               	btfsc	?_GetTime+1,7,c
  2247  001968  D7FA               	goto	l7256
  2248  00196A  501C               	movf	?_GetTime+1,w,c
  2249  00196C  E104               	bnz	u8070
  2250  00196E  0E03               	movlw	3
  2251  001970  5C1B               	subwf	?_GetTime,w,c
  2252  001972  A0D8               	btfss	status,0,c
  2253  001974  D7F4               	goto	l7256
  2254  001976                     u8070:
  2255                           
  2256                           ;main.c: 79: LEDsetValue(GetDataBarGraphA()*0.24, 1);
  2257  001976  0EC3               	movlw	195
  2258  001978  0100               	movlb	0	; () banked
  2259  00197A  6FF5               	movwf	___ftmul@f2& (0+255),b
  2260  00197C  0E75               	movlw	117
  2261  00197E  0100               	movlb	0	; () banked
  2262  001980  6FF6               	movwf	(___ftmul@f2+1)& (0+255),b
  2263  001982  0E3E               	movlw	62
  2264  001984  0100               	movlb	0	; () banked
  2265  001986  6FF7               	movwf	(___ftmul@f2+2)& (0+255),b
  2266  001988  EC99  F017         	call	_GetDataBarGraphA	;wreg free
  2267  00198C  C01B  F023         	movff	?_GetDataBarGraphA,___lwtoft@c
  2268  001990  C01C  F024         	movff	?_GetDataBarGraphA+1,___lwtoft@c+1
  2269  001994  ECD1  F016         	call	___lwtoft	;wreg free
  2270  001998  C023  F0F2         	movff	?___lwtoft,___ftmul@f1
  2271  00199C  C024  F0F3         	movff	?___lwtoft+1,___ftmul@f1+1
  2272  0019A0  C025  F0F4         	movff	?___lwtoft+2,___ftmul@f1+2
  2273  0019A4  EC69  F008         	call	___ftmul	;wreg free
  2274  0019A8  C0F2  F139         	movff	?___ftmul,___fttol@f1
  2275  0019AC  C0F3  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2276  0019B0  C0F4  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2277  0019B4  EC59  F00A         	call	___fttol	;wreg free
  2278  0019B8  C139  F149         	movff	?___fttol,LEDsetValue@value
  2279  0019BC  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2280  0019C0  0E00               	movlw	0
  2281  0019C2  0101               	movlb	1	; () banked
  2282  0019C4  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2283  0019C6  0E01               	movlw	1
  2284  0019C8  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2285  0019CA  ECCF  F00F         	call	_LEDsetValue	;wreg free
  2286                           
  2287                           ;main.c: 80: LEDwriteDisplay(0x70);
  2288  0019CE  0E70               	movlw	112
  2289  0019D0  EC12  F009         	call	_LEDwriteDisplay
  2290                           
  2291                           ;main.c: 81: LEDsetValue(GetDataBarGraphB()*0.24, 1);
  2292  0019D4  0EC3               	movlw	195
  2293  0019D6  0100               	movlb	0	; () banked
  2294  0019D8  6FF5               	movwf	___ftmul@f2& (0+255),b
  2295  0019DA  0E75               	movlw	117
  2296  0019DC  0100               	movlb	0	; () banked
  2297  0019DE  6FF6               	movwf	(___ftmul@f2+1)& (0+255),b
  2298  0019E0  0E3E               	movlw	62
  2299  0019E2  0100               	movlb	0	; () banked
  2300  0019E4  6FF7               	movwf	(___ftmul@f2+2)& (0+255),b
  2301  0019E6  EC94  F017         	call	_GetDataBarGraphB	;wreg free
  2302  0019EA  C01B  F023         	movff	?_GetDataBarGraphB,___lwtoft@c
  2303  0019EE  C01C  F024         	movff	?_GetDataBarGraphB+1,___lwtoft@c+1
  2304  0019F2  ECD1  F016         	call	___lwtoft	;wreg free
  2305  0019F6  C023  F0F2         	movff	?___lwtoft,___ftmul@f1
  2306  0019FA  C024  F0F3         	movff	?___lwtoft+1,___ftmul@f1+1
  2307  0019FE  C025  F0F4         	movff	?___lwtoft+2,___ftmul@f1+2
  2308  001A02  EC69  F008         	call	___ftmul	;wreg free
  2309  001A06  C0F2  F139         	movff	?___ftmul,___fttol@f1
  2310  001A0A  C0F3  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2311  001A0E  C0F4  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2312  001A12  EC59  F00A         	call	___fttol	;wreg free
  2313  001A16  C139  F149         	movff	?___fttol,LEDsetValue@value
  2314  001A1A  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2315  001A1E  0E00               	movlw	0
  2316  001A20  0101               	movlb	1	; () banked
  2317  001A22  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2318  001A24  0E01               	movlw	1
  2319  001A26  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2320  001A28  ECCF  F00F         	call	_LEDsetValue	;wreg free
  2321                           
  2322                           ;main.c: 82: LEDwriteDisplay(0x71);
  2323  001A2C  0E71               	movlw	113
  2324  001A2E  EC12  F009         	call	_LEDwriteDisplay
  2325                           
  2326                           ;main.c: 83: do { LATA3 = ~LATA3; } while(0);
  2327  001A32  B689               	btfsc	3977,3,c	;volatile
  2328  001A34  D002               	goto	u8080
  2329  001A36  8689               	bsf	3977,3,c	;volatile
  2330  001A38  D001               	goto	l7264
  2331  001A3A                     u8080:
  2332  001A3A  9689               	bcf	3977,3,c	;volatile
  2333  001A3C                     l7264:
  2334                           
  2335                           ;main.c: 84: ClearTime();
  2336  001A3C  ECA6  F017         	call	_ClearTime	;wreg free
  2337  001A40  D78E               	goto	l7256
  2338  001A42                     __end_of_main:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           intcon	equ	0xFF2
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _updateComms *****************
  2350 ;; Defined at:
  2351 ;;		line 12 in file "Communications.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2365 ;;      Params:         0       0       0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0
  2368 ;;      Totals:         0       0       0       0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    9
  2372 ;; This function calls:
  2373 ;;		_DataBarGraphs
  2374 ;;		_ReceiveArrayGet
  2375 ;;		_handleIndicators
  2376 ;;		_receiveData
  2377 ;;		_respondECU
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text1
  2384  002788                     __ptext1:
  2385                           	opt stack 0
  2386  002788                     _updateComms:
  2387                           	opt stack 21
  2388                           
  2389                           ;Communications.c: 14: if (receiveData()) {
  2390                           
  2391                           ;incstack = 0
  2392  002788  EC6D  F002         	call	_receiveData	;wreg free
  2393  00278C  0900               	iorlw	0
  2394  00278E  B4D8               	btfsc	status,2,c
  2395  002790  0012               	return	
  2396                           
  2397                           ;Communications.c: 16: if (ReceiveArrayGet(0) == 1) {
  2398  002792  0E00               	movlw	0
  2399  002794  6E1C               	movwf	ReceiveArrayGet@location+1,c
  2400  002796  0E00               	movlw	0
  2401  002798  6E1B               	movwf	ReceiveArrayGet@location,c
  2402  00279A  EC2F  F017         	call	_ReceiveArrayGet	;wreg free
  2403  00279E  041B               	decf	?_ReceiveArrayGet,w,c
  2404  0027A0  101C               	iorwf	?_ReceiveArrayGet+1,w,c
  2405  0027A2  A4D8               	btfss	status,2,c
  2406  0027A4  0012               	return	
  2407                           
  2408                           ;Communications.c: 17: respondECU();
  2409  0027A6  EC30  F015         	call	_respondECU	;wreg free
  2410                           
  2411                           ;Communications.c: 18: handleIndicators(ReceiveArrayGet(2));
  2412  0027AA  0E00               	movlw	0
  2413  0027AC  6E1C               	movwf	ReceiveArrayGet@location+1,c
  2414  0027AE  0E02               	movlw	2
  2415  0027B0  6E1B               	movwf	ReceiveArrayGet@location,c
  2416  0027B2  EC2F  F017         	call	_ReceiveArrayGet	;wreg free
  2417  0027B6  C01B  F025         	movff	?_ReceiveArrayGet,handleIndicators@receivedIndicators
  2418  0027BA  C01C  F026         	movff	?_ReceiveArrayGet+1,handleIndicators@receivedIndicators+1
  2419  0027BE  ECE6  F011         	call	_handleIndicators	;wreg free
  2420                           
  2421                           ;Communications.c: 19: DataBarGraphs(ReceiveArrayGet(3), ReceiveArrayGet(4));
  2422  0027C2  0E00               	movlw	0
  2423  0027C4  6E1C               	movwf	ReceiveArrayGet@location+1,c
  2424  0027C6  0E03               	movlw	3
  2425  0027C8  6E1B               	movwf	ReceiveArrayGet@location,c
  2426  0027CA  EC2F  F017         	call	_ReceiveArrayGet	;wreg free
  2427  0027CE  C01B  F01D         	movff	?_ReceiveArrayGet,DataBarGraphs@BGA
  2428  0027D2  C01C  F01E         	movff	?_ReceiveArrayGet+1,DataBarGraphs@BGA+1
  2429  0027D6  0E00               	movlw	0
  2430  0027D8  6E1C               	movwf	ReceiveArrayGet@location+1,c
  2431  0027DA  0E04               	movlw	4
  2432  0027DC  6E1B               	movwf	ReceiveArrayGet@location,c
  2433  0027DE  EC2F  F017         	call	_ReceiveArrayGet	;wreg free
  2434  0027E2  C01B  F01F         	movff	?_ReceiveArrayGet,DataBarGraphs@BGB
  2435  0027E6  C01C  F020         	movff	?_ReceiveArrayGet+1,DataBarGraphs@BGB+1
  2436  0027EA  EC6A  F017         	call	_DataBarGraphs	;wreg free
  2437  0027EE  0012               	return	
  2438  0027F0                     __end_of_updateComms:
  2439                           	opt stack 0
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           intcon	equ	0xFF2
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _respondECU *****************
  2450 ;; Defined at:
  2451 ;;		line 26 in file "Communications.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2465 ;;      Params:         0       0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    8
  2472 ;; This function calls:
  2473 ;;		_Delay
  2474 ;;		_ToSend
  2475 ;;		_buttonsCollector
  2476 ;;		_sendData
  2477 ;; This function is called by:
  2478 ;;		_updateComms
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text2
  2483  002A60                     __ptext2:
  2484                           	opt stack 0
  2485  002A60                     _respondECU:
  2486                           	opt stack 21
  2487                           
  2488                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  2489                           
  2490                           ;incstack = 0
  2491  002A60  8A8B               	bsf	3979,5,c	;volatile
  2492                           
  2493                           ;Communications.c: 28: ToSend(0, 3);
  2494  002A62  0E00               	movlw	0
  2495  002A64  0100               	movlb	0	; () banked
  2496  002A66  6FF3               	movwf	(ToSend@what+1)& (0+255),b
  2497  002A68  0E03               	movlw	3
  2498  002A6A  6FF2               	movwf	ToSend@what& (0+255),b
  2499  002A6C  0E00               	movlw	0
  2500  002A6E  EC21  F017         	call	_ToSend
  2501                           
  2502                           ;Communications.c: 29: ToSend(8, buttonsCollector());
  2503  002A72  EC57  F013         	call	_buttonsCollector	;wreg free
  2504  002A76  C021  F0F2         	movff	?_buttonsCollector,ToSend@what
  2505  002A7A  C022  F0F3         	movff	?_buttonsCollector+1,ToSend@what+1
  2506  002A7E  0E08               	movlw	8
  2507  002A80  EC21  F017         	call	_ToSend
  2508                           
  2509                           ;Communications.c: 30: Delay(2);
  2510  002A84  0E00               	movlw	0
  2511  002A86  6E1C               	movwf	Delay@wait+1,c
  2512  002A88  0E02               	movlw	2
  2513  002A8A  6E1B               	movwf	Delay@wait,c
  2514  002A8C  EC0A  F016         	call	_Delay	;wreg free
  2515                           
  2516                           ;Communications.c: 31: sendData(1);
  2517  002A90  0E01               	movlw	1
  2518  002A92  ECB7  F009         	call	_sendData
  2519                           
  2520                           ;Communications.c: 32: Delay(3);
  2521  002A96  0E00               	movlw	0
  2522  002A98  6E1C               	movwf	Delay@wait+1,c
  2523  002A9A  0E03               	movlw	3
  2524  002A9C  6E1B               	movwf	Delay@wait,c
  2525  002A9E  EC0A  F016         	call	_Delay	;wreg free
  2526                           
  2527                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  2528  002AA2  9A8B               	bcf	3979,5,c	;volatile
  2529  002AA4  0012               	return		;funcret
  2530  002AA6                     __end_of_respondECU:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           intcon	equ	0xFF2
  2537                           postinc0	equ	0xFEE
  2538                           wreg	equ	0xFE8
  2539                           status	equ	0xFD8
  2540                           
  2541 ;; *************** function _sendData *****************
  2542 ;; Defined at:
  2543 ;;		line 125 in file "FastTransfer.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  whereToSend     1    wreg     unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  2548 ;;  i               2    2[BANK0 ] int 
  2549 ;;  CS              1    1[BANK0 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         0       0       0       0       0       0       0
  2560 ;;      Locals:         0       4       0       0       0       0       0
  2561 ;;      Temps:          1       0       0       0       0       0       0
  2562 ;;      Totals:         1       4       0       0       0       0       0
  2563 ;;Total ram usage:        5 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    7
  2566 ;; This function calls:
  2567 ;;		Absolute function
  2568 ;;		_CRC8
  2569 ;;		_FastTransfer_buffer_flush
  2570 ;;		_Send_put
  2571 ;;		_crcBufS_put
  2572 ;; This function is called by:
  2573 ;;		_respondECU
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text3
  2578  00136E                     __ptext3:
  2579                           	opt stack 0
  2580  00136E                     _sendData:
  2581                           	opt stack 21
  2582                           
  2583                           ;incstack = 0
  2584                           ;sendData@whereToSend stored from wreg
  2585  00136E  0100               	movlb	0	; () banked
  2586  001370  6FF2               	movwf	sendData@whereToSend& (0+255),b
  2587                           
  2588                           ;FastTransfer.c: 128: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2589  001372  C0D9  F01B         	movff	_sendStructAddress,CRC8@data
  2590  001376  C0DA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2591  00137A  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2592  00137E  EC0B  F015         	call	_CRC8	;wreg free
  2593  001382  0100               	movlb	0	; () banked
  2594  001384  6FF3               	movwf	sendData@CS& (0+255),b
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;FastTransfer.c: 130: serial_write(0x06);
  2598  001386  D801               	call	u6448
  2599  001388  D00B               	goto	l6372
  2600  00138A                     u6448:
  2601  00138A  0005               	push	
  2602  00138C  6EFA               	movwf	pclath,c
  2603  00138E  5033               	movf	_serial_write,w,c
  2604  001390  6EFD               	movwf	tosl,c
  2605  001392  5034               	movf	_serial_write+1,w,c
  2606  001394  6EFE               	movwf	tosh,c
  2607  001396  50F8               	movf	tblptru,w,c
  2608  001398  6EFF               	movwf	tosu,c
  2609  00139A  50FA               	movf	pclath,w,c
  2610  00139C  0E06               	movlw	6
  2611  00139E  0012               	return		;indir
  2612  0013A0                     l6372:
  2613                           
  2614                           ;FastTransfer.c: 131: serial_write(0x85);
  2615  0013A0  D801               	call	u6458
  2616  0013A2  D00B               	goto	l6374
  2617  0013A4                     u6458:
  2618  0013A4  0005               	push	
  2619  0013A6  6EFA               	movwf	pclath,c
  2620  0013A8  5033               	movf	_serial_write,w,c
  2621  0013AA  6EFD               	movwf	tosl,c
  2622  0013AC  5034               	movf	_serial_write+1,w,c
  2623  0013AE  6EFE               	movwf	tosh,c
  2624  0013B0  50F8               	movf	tblptru,w,c
  2625  0013B2  6EFF               	movwf	tosu,c
  2626  0013B4  50FA               	movf	pclath,w,c
  2627  0013B6  0E85               	movlw	133
  2628  0013B8  0012               	return		;indir
  2629  0013BA                     l6374:
  2630                           
  2631                           ;FastTransfer.c: 132: serial_write(whereToSend);
  2632  0013BA  D801               	call	u6468
  2633  0013BC  D00C               	goto	l6376
  2634  0013BE                     u6468:
  2635  0013BE  0005               	push	
  2636  0013C0  6EFA               	movwf	pclath,c
  2637  0013C2  5033               	movf	_serial_write,w,c
  2638  0013C4  6EFD               	movwf	tosl,c
  2639  0013C6  5034               	movf	_serial_write+1,w,c
  2640  0013C8  6EFE               	movwf	tosh,c
  2641  0013CA  50F8               	movf	tblptru,w,c
  2642  0013CC  6EFF               	movwf	tosu,c
  2643  0013CE  50FA               	movf	pclath,w,c
  2644  0013D0  0100               	movlb	0	; () banked
  2645  0013D2  51F2               	movf	sendData@whereToSend& (0+255),w,b
  2646  0013D4  0012               	return		;indir
  2647  0013D6                     l6376:
  2648                           
  2649                           ;FastTransfer.c: 133: serial_write(moduleAddress);
  2650  0013D6  D801               	call	u6478
  2651  0013D8  D00B               	goto	l6378
  2652  0013DA                     u6478:
  2653  0013DA  0005               	push	
  2654  0013DC  6EFA               	movwf	pclath,c
  2655  0013DE  5033               	movf	_serial_write,w,c
  2656  0013E0  6EFD               	movwf	tosl,c
  2657  0013E2  5034               	movf	_serial_write+1,w,c
  2658  0013E4  6EFE               	movwf	tosh,c
  2659  0013E6  50F8               	movf	tblptru,w,c
  2660  0013E8  6EFF               	movwf	tosu,c
  2661  0013EA  50FA               	movf	pclath,w,c
  2662  0013EC  503A               	movf	_moduleAddress,w,c
  2663  0013EE  0012               	return		;indir
  2664  0013F0                     l6378:
  2665                           
  2666                           ;FastTransfer.c: 134: serial_write(ring_buffer.count);
  2667  0013F0  D801               	call	u6488
  2668  0013F2  D00C               	goto	l6380
  2669  0013F4                     u6488:
  2670  0013F4  0005               	push	
  2671  0013F6  6EFA               	movwf	pclath,c
  2672  0013F8  5033               	movf	_serial_write,w,c
  2673  0013FA  6EFD               	movwf	tosl,c
  2674  0013FC  5034               	movf	_serial_write+1,w,c
  2675  0013FE  6EFE               	movwf	tosh,c
  2676  001400  50F8               	movf	tblptru,w,c
  2677  001402  6EFF               	movwf	tosu,c
  2678  001404  50FA               	movf	pclath,w,c
  2679  001406  0102               	movlb	2	; () banked
  2680  001408  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2681  00140A  0012               	return		;indir
  2682  00140C                     l6380:
  2683                           
  2684                           ;FastTransfer.c: 138: int i;
  2685                           ;FastTransfer.c: 139: for (i = 0; i < ring_buffer.count; i++) {
  2686  00140C  0E00               	movlw	0
  2687  00140E  0100               	movlb	0	; () banked
  2688  001410  6FF5               	movwf	(sendData@i+1)& (0+255),b
  2689  001412  0E00               	movlw	0
  2690  001414  6FF4               	movwf	sendData@i& (0+255),b
  2691  001416  D01A               	goto	l6386
  2692  001418                     l6382:
  2693                           
  2694                           ;FastTransfer.c: 140: serial_write(*(sendStructAddress + i));
  2695  001418  D801               	call	u6498
  2696  00141A  D015               	goto	l6384
  2697  00141C                     u6498:
  2698  00141C  0005               	push	
  2699  00141E  6EFA               	movwf	pclath,c
  2700  001420  5033               	movf	_serial_write,w,c
  2701  001422  6EFD               	movwf	tosl,c
  2702  001424  5034               	movf	_serial_write+1,w,c
  2703  001426  6EFE               	movwf	tosh,c
  2704  001428  50F8               	movf	tblptru,w,c
  2705  00142A  6EFF               	movwf	tosu,c
  2706  00142C  50FA               	movf	pclath,w,c
  2707  00142E  0100               	movlb	0	; () banked
  2708  001430  51F4               	movf	sendData@i& (0+255),w,b
  2709  001432  0100               	movlb	0	; () banked
  2710  001434  25D9               	addwf	_sendStructAddress& (0+255),w,b
  2711  001436  6ED9               	movwf	fsr2l,c
  2712  001438  0100               	movlb	0	; () banked
  2713  00143A  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2714  00143C  0100               	movlb	0	; () banked
  2715  00143E  21DA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2716  001440  6EDA               	movwf	fsr2h,c
  2717  001442  50DF               	movf	indf2,w,c
  2718  001444  0012               	return		;indir
  2719  001446                     l6384:
  2720  001446  0100               	movlb	0	; () banked
  2721  001448  4BF4               	infsnz	sendData@i& (0+255),f,b
  2722  00144A  2BF5               	incf	(sendData@i+1)& (0+255),f,b
  2723  00144C                     l6386:
  2724                           
  2725                           ; BSR set to: 0
  2726  00144C  0102               	movlb	2	; () banked
  2727  00144E  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2728  001450  0100               	movlb	0	; () banked
  2729  001452  5DF4               	subwf	sendData@i& (0+255),w,b
  2730  001454  0100               	movlb	0	; () banked
  2731  001456  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2732  001458  0A80               	xorlw	128
  2733  00145A  6E27               	movwf	??_sendData& (0+255),c
  2734  00145C  0102               	movlb	2	; () banked
  2735  00145E  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2736  001460  0A80               	xorlw	128
  2737  001462  5827               	subwfb	??_sendData& (0+255),w,c
  2738  001464  A0D8               	btfss	status,0,c
  2739  001466  D7D8               	goto	l6382
  2740                           
  2741                           ; BSR set to: 2
  2742                           ;FastTransfer.c: 141: }
  2743                           ;FastTransfer.c: 144: serial_write(CS);
  2744                           
  2745                           ; BSR set to: 2
  2746  001468  D801               	call	u6518
  2747  00146A  D00C               	goto	l6390
  2748  00146C                     u6518:
  2749  00146C  0005               	push	
  2750  00146E  6EFA               	movwf	pclath,c
  2751  001470  5033               	movf	_serial_write,w,c
  2752  001472  6EFD               	movwf	tosl,c
  2753  001474  5034               	movf	_serial_write+1,w,c
  2754  001476  6EFE               	movwf	tosh,c
  2755  001478  50F8               	movf	tblptru,w,c
  2756  00147A  6EFF               	movwf	tosu,c
  2757  00147C  50FA               	movf	pclath,w,c
  2758  00147E  0100               	movlb	0	; () banked
  2759  001480  51F3               	movf	sendData@CS& (0+255),w,b
  2760  001482  0012               	return		;indir
  2761  001484                     l6390:
  2762                           
  2763                           ;FastTransfer.c: 147: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2764  001484  0E28               	movlw	low _crc_buffer
  2765  001486  6E1B               	movwf	crcBufS_put@_this,c
  2766  001488  0E01               	movlw	high _crc_buffer
  2767  00148A  6E1C               	movwf	crcBufS_put@_this+1,c
  2768  00148C  C0F2  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2769  001490  C0F3  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2770  001494  0E00               	movlw	0
  2771  001496  6E1F               	movwf	crcBufS_put@status,c
  2772  001498  EC9A  F00D         	call	_crcBufS_put
  2773                           
  2774                           ;FastTransfer.c: 150: FastTransfer_buffer_flush(&ring_buffer, 1);
  2775  00149C  0E00               	movlw	low _ring_buffer
  2776  00149E  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2777  0014A0  0E02               	movlw	high _ring_buffer
  2778  0014A2  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2779  0014A4  0E00               	movlw	0
  2780  0014A6  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2781  0014A8  0E01               	movlw	1
  2782  0014AA  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2783  0014AC  EC2A  F014         	call	_FastTransfer_buffer_flush	;wreg free
  2784  0014B0  0012               	return		;funcret
  2785  0014B2                     __end_of_sendData:
  2786                           	opt stack 0
  2787                           tosu	equ	0xFFF
  2788                           tosh	equ	0xFFE
  2789                           tosl	equ	0xFFD
  2790                           pclath	equ	0xFFA
  2791                           tblptru	equ	0xFF8
  2792                           tblptrh	equ	0xFF7
  2793                           tblptrl	equ	0xFF6
  2794                           tablat	equ	0xFF5
  2795                           intcon	equ	0xFF2
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           indf2	equ	0xFDF
  2799                           fsr2h	equ	0xFDA
  2800                           fsr2l	equ	0xFD9
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _crcBufS_put *****************
  2804 ;; Defined at:
  2805 ;;		line 398 in file "FastTransfer.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2808 ;;		 -> crc_buffer(17), 
  2809 ;;  address         1   28[COMRAM] unsigned char 
  2810 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2811 ;;  status          1   30[COMRAM] unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2823 ;;      Params:         5       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0
  2825 ;;      Temps:          2       0       0       0       0       0       0
  2826 ;;      Totals:         7       0       0       0       0       0       0
  2827 ;;Total ram usage:        7 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    4
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_sendData
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text4
  2838  001B34                     __ptext4:
  2839                           	opt stack 0
  2840  001B34                     _crcBufS_put:
  2841                           	opt stack 23
  2842                           
  2843                           ;FastTransfer.c: 399: _this->buf[_this->head] = address;
  2844                           
  2845                           ;incstack = 0
  2846  001B34  EE20 F00F          	lfsr	2,15
  2847  001B38  501B               	movf	crcBufS_put@_this,w,c
  2848  001B3A  26D9               	addwf	fsr2l,f,c
  2849  001B3C  501C               	movf	crcBufS_put@_this+1,w,c
  2850  001B3E  22DA               	addwfc	fsr2h,f,c
  2851  001B40  CFDE F020          	movff	postinc2,??_crcBufS_put
  2852  001B44  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2853  001B48  5020               	movf	??_crcBufS_put,w,c
  2854  001B4A  241B               	addwf	crcBufS_put@_this,w,c
  2855  001B4C  6ED9               	movwf	fsr2l,c
  2856  001B4E  5021               	movf	??_crcBufS_put+1,w,c
  2857  001B50  201C               	addwfc	crcBufS_put@_this+1,w,c
  2858  001B52  6EDA               	movwf	fsr2h,c
  2859  001B54  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2860                           
  2861                           ;FastTransfer.c: 400: _this->head++;
  2862  001B58  EE20 F00F          	lfsr	2,15
  2863  001B5C  501B               	movf	crcBufS_put@_this,w,c
  2864  001B5E  26D9               	addwf	fsr2l,f,c
  2865  001B60  501C               	movf	crcBufS_put@_this+1,w,c
  2866  001B62  22DA               	addwfc	fsr2h,f,c
  2867  001B64  2ADE               	incf	postinc2,f,c
  2868  001B66  0E00               	movlw	0
  2869  001B68  22DD               	addwfc	postdec2,f,c
  2870                           
  2871                           ;FastTransfer.c: 401: _this->buf[_this->head] = oldCRC;
  2872  001B6A  EE20 F00F          	lfsr	2,15
  2873  001B6E  501B               	movf	crcBufS_put@_this,w,c
  2874  001B70  26D9               	addwf	fsr2l,f,c
  2875  001B72  501C               	movf	crcBufS_put@_this+1,w,c
  2876  001B74  22DA               	addwfc	fsr2h,f,c
  2877  001B76  CFDE F020          	movff	postinc2,??_crcBufS_put
  2878  001B7A  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2879  001B7E  5020               	movf	??_crcBufS_put,w,c
  2880  001B80  241B               	addwf	crcBufS_put@_this,w,c
  2881  001B82  6ED9               	movwf	fsr2l,c
  2882  001B84  5021               	movf	??_crcBufS_put+1,w,c
  2883  001B86  201C               	addwfc	crcBufS_put@_this+1,w,c
  2884  001B88  6EDA               	movwf	fsr2h,c
  2885  001B8A  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2886                           
  2887                           ;FastTransfer.c: 402: _this->head++;
  2888  001B8E  EE20 F00F          	lfsr	2,15
  2889  001B92  501B               	movf	crcBufS_put@_this,w,c
  2890  001B94  26D9               	addwf	fsr2l,f,c
  2891  001B96  501C               	movf	crcBufS_put@_this+1,w,c
  2892  001B98  22DA               	addwfc	fsr2h,f,c
  2893  001B9A  2ADE               	incf	postinc2,f,c
  2894  001B9C  0E00               	movlw	0
  2895  001B9E  22DD               	addwfc	postdec2,f,c
  2896                           
  2897                           ;FastTransfer.c: 403: _this->buf[_this->head] = status;
  2898  001BA0  EE20 F00F          	lfsr	2,15
  2899  001BA4  501B               	movf	crcBufS_put@_this,w,c
  2900  001BA6  26D9               	addwf	fsr2l,f,c
  2901  001BA8  501C               	movf	crcBufS_put@_this+1,w,c
  2902  001BAA  22DA               	addwfc	fsr2h,f,c
  2903  001BAC  CFDE F020          	movff	postinc2,??_crcBufS_put
  2904  001BB0  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2905  001BB4  5020               	movf	??_crcBufS_put,w,c
  2906  001BB6  241B               	addwf	crcBufS_put@_this,w,c
  2907  001BB8  6ED9               	movwf	fsr2l,c
  2908  001BBA  5021               	movf	??_crcBufS_put+1,w,c
  2909  001BBC  201C               	addwfc	crcBufS_put@_this+1,w,c
  2910  001BBE  6EDA               	movwf	fsr2h,c
  2911  001BC0  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2912                           
  2913                           ;FastTransfer.c: 404: _this->head++;
  2914  001BC4  EE20 F00F          	lfsr	2,15
  2915  001BC8  501B               	movf	crcBufS_put@_this,w,c
  2916  001BCA  26D9               	addwf	fsr2l,f,c
  2917  001BCC  501C               	movf	crcBufS_put@_this+1,w,c
  2918  001BCE  22DA               	addwfc	fsr2h,f,c
  2919  001BD0  2ADE               	incf	postinc2,f,c
  2920  001BD2  0E00               	movlw	0
  2921  001BD4  22DD               	addwfc	postdec2,f,c
  2922                           
  2923                           ;FastTransfer.c: 405: if (_this->head >= (5 * 3)) {
  2924  001BD6  EE20 F00F          	lfsr	2,15
  2925  001BDA  501B               	movf	crcBufS_put@_this,w,c
  2926  001BDC  26D9               	addwf	fsr2l,f,c
  2927  001BDE  501C               	movf	crcBufS_put@_this+1,w,c
  2928  001BE0  22DA               	addwfc	fsr2h,f,c
  2929  001BE2  0E01               	movlw	1
  2930  001BE4  BEDB               	btfsc	plusw2,7,c
  2931  001BE6  0012               	return	
  2932  001BE8  0E01               	movlw	1
  2933  001BEA  50DB               	movf	plusw2,w,c
  2934  001BEC  E104               	bnz	u6130
  2935  001BEE  0E0F               	movlw	15
  2936  001BF0  5CDE               	subwf	postinc2,w,c
  2937  001BF2  A0D8               	btfss	status,0,c
  2938  001BF4  0012               	return	
  2939  001BF6                     u6130:
  2940                           
  2941                           ;FastTransfer.c: 406: _this->head = 0;
  2942  001BF6  EE20 F00F          	lfsr	2,15
  2943  001BFA  501B               	movf	crcBufS_put@_this,w,c
  2944  001BFC  26D9               	addwf	fsr2l,f,c
  2945  001BFE  501C               	movf	crcBufS_put@_this+1,w,c
  2946  001C00  22DA               	addwfc	fsr2h,f,c
  2947  001C02  0E00               	movlw	0
  2948  001C04  6EDE               	movwf	postinc2,c
  2949  001C06  0E00               	movlw	0
  2950  001C08  6EDD               	movwf	postdec2,c
  2951  001C0A  0012               	return	
  2952  001C0C                     __end_of_crcBufS_put:
  2953                           	opt stack 0
  2954                           tosu	equ	0xFFF
  2955                           tosh	equ	0xFFE
  2956                           tosl	equ	0xFFD
  2957                           pclath	equ	0xFFA
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           intcon	equ	0xFF2
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           indf2	equ	0xFDF
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           plusw2	equ	0xFDB
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _Send_put *****************
  2974 ;; Defined at:
  2975 ;;		line 130 in file "UART.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  _data           1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  _data           1   37[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         0       0       0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    6
  2996 ;; This function calls:
  2997 ;;		_UART_buff_get
  2998 ;;		_UART_buff_put
  2999 ;; This function is called by:
  3000 ;;		_SYSTEM_Initialize
  3001 ;;		_putch
  3002 ;;		_sendData
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text5
  3007  002C7A                     __ptext5:
  3008                           	opt stack 0
  3009  002C7A                     _Send_put:
  3010                           	opt stack 21
  3011                           
  3012                           ;incstack = 0
  3013                           ;Send_put@_data stored from wreg
  3014  002C7A  6E26               	movwf	Send_put@_data,c
  3015                           
  3016                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  3017  002C7C  0E00               	movlw	low _output_buffer
  3018  002C7E  6E21               	movwf	UART_buff_put@_this,c
  3019  002C80  0E04               	movlw	high _output_buffer
  3020  002C82  6E22               	movwf	UART_buff_put@_this+1,c
  3021  002C84  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  3022  002C88  ECFB  F00A         	call	_UART_buff_put	;wreg free
  3023                           
  3024                           ;UART.c: 132: if (Transmit_stall == 1) {
  3025  002C8C  0444               	decf	_Transmit_stall,w,c
  3026  002C8E  A4D8               	btfss	status,2,c
  3027  002C90  0012               	return	
  3028                           
  3029                           ;UART.c: 133: Transmit_stall = 0;
  3030  002C92  0E00               	movlw	0
  3031  002C94  6E44               	movwf	_Transmit_stall,c
  3032                           
  3033                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  3034  002C96  0E00               	movlw	low _output_buffer
  3035  002C98  6E21               	movwf	UART_buff_get@_this,c
  3036  002C9A  0E04               	movlw	high _output_buffer
  3037  002C9C  6E22               	movwf	UART_buff_get@_this+1,c
  3038  002C9E  EC0E  F011         	call	_UART_buff_get	;wreg free
  3039  002CA2  6EAD               	movwf	4013,c	;volatile
  3040                           
  3041                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  3042  002CA4  889D               	bsf	3997,4,c	;volatile
  3043  002CA6  0012               	return	
  3044  002CA8                     __end_of_Send_put:
  3045                           	opt stack 0
  3046                           tosu	equ	0xFFF
  3047                           tosh	equ	0xFFE
  3048                           tosl	equ	0xFFD
  3049                           pclath	equ	0xFFA
  3050                           tblptru	equ	0xFF8
  3051                           tblptrh	equ	0xFF7
  3052                           tblptrl	equ	0xFF6
  3053                           tablat	equ	0xFF5
  3054                           intcon	equ	0xFF2
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           indf2	equ	0xFDF
  3058                           postinc2	equ	0xFDE
  3059                           postdec2	equ	0xFDD
  3060                           plusw2	equ	0xFDB
  3061                           fsr2h	equ	0xFDA
  3062                           fsr2l	equ	0xFD9
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _UART_buff_put *****************
  3066 ;; Defined at:
  3067 ;;		line 68 in file "UART.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  3070 ;;		 -> output_buffer(206), input_buffer(206), 
  3071 ;;  c               1   34[COMRAM] const unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3083 ;;      Params:         3       0       0       0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0
  3085 ;;      Temps:          2       0       0       0       0       0       0
  3086 ;;      Totals:         5       0       0       0       0       0       0
  3087 ;;Total ram usage:        5 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		_UART_buff_modulo_inc
  3092 ;; This function is called by:
  3093 ;;		_Send_put
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text6
  3098  0015F6                     __ptext6:
  3099                           	opt stack 0
  3100  0015F6                     _UART_buff_put:
  3101                           	opt stack 21
  3102                           
  3103                           ;UART.c: 69: if (_this->count < 200) {
  3104                           
  3105                           ;incstack = 0
  3106  0015F6  EE20 F0CC          	lfsr	2,204
  3107  0015FA  5021               	movf	UART_buff_put@_this,w,c
  3108  0015FC  26D9               	addwf	fsr2l,f,c
  3109  0015FE  5022               	movf	UART_buff_put@_this+1,w,c
  3110  001600  22DA               	addwfc	fsr2h,f,c
  3111  001602  0E01               	movlw	1
  3112  001604  BEDB               	btfsc	plusw2,7,c
  3113  001606  D007               	goto	l6050
  3114  001608  0E01               	movlw	1
  3115  00160A  50DB               	movf	plusw2,w,c
  3116  00160C  E13A               	bnz	l6056
  3117  00160E  0EC8               	movlw	200
  3118  001610  5CDE               	subwf	postinc2,w,c
  3119  001612  B0D8               	btfsc	status,0,c
  3120  001614  D036               	goto	l6056
  3121  001616                     l6050:
  3122                           
  3123                           ;UART.c: 70: _this->buf[_this->head] = c;
  3124  001616  EE20 F0C8          	lfsr	2,200
  3125  00161A  5021               	movf	UART_buff_put@_this,w,c
  3126  00161C  26D9               	addwf	fsr2l,f,c
  3127  00161E  5022               	movf	UART_buff_put@_this+1,w,c
  3128  001620  22DA               	addwfc	fsr2h,f,c
  3129  001622  CFDE F024          	movff	postinc2,??_UART_buff_put
  3130  001626  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3131  00162A  5024               	movf	??_UART_buff_put,w,c
  3132  00162C  2421               	addwf	UART_buff_put@_this,w,c
  3133  00162E  6ED9               	movwf	fsr2l,c
  3134  001630  5025               	movf	??_UART_buff_put+1,w,c
  3135  001632  2022               	addwfc	UART_buff_put@_this+1,w,c
  3136  001634  6EDA               	movwf	fsr2h,c
  3137  001636  C023  FFDF         	movff	UART_buff_put@c,indf2
  3138                           
  3139                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3140  00163A  EE20 F0C8          	lfsr	2,200
  3141  00163E  5021               	movf	UART_buff_put@_this,w,c
  3142  001640  26D9               	addwf	fsr2l,f,c
  3143  001642  5022               	movf	UART_buff_put@_this+1,w,c
  3144  001644  22DA               	addwfc	fsr2h,f,c
  3145  001646  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3146  00164A  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3147  00164E  0E00               	movlw	0
  3148  001650  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3149  001652  0EC8               	movlw	200
  3150  001654  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3151  001656  EC7F  F016         	call	_UART_buff_modulo_inc	;wreg free
  3152  00165A  EE20 F0C8          	lfsr	2,200
  3153  00165E  5021               	movf	UART_buff_put@_this,w,c
  3154  001660  26D9               	addwf	fsr2l,f,c
  3155  001662  5022               	movf	UART_buff_put@_this+1,w,c
  3156  001664  22DA               	addwfc	fsr2h,f,c
  3157  001666  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3158  00166A  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3159                           
  3160                           ;UART.c: 72: ++_this->count;
  3161  00166E  EE20 F0CC          	lfsr	2,204
  3162  001672  5021               	movf	UART_buff_put@_this,w,c
  3163  001674  26D9               	addwf	fsr2l,f,c
  3164  001676  5022               	movf	UART_buff_put@_this+1,w,c
  3165  001678  22DA               	addwfc	fsr2h,f,c
  3166  00167A  2ADE               	incf	postinc2,f,c
  3167  00167C  0E00               	movlw	0
  3168  00167E  22DD               	addwfc	postdec2,f,c
  3169                           
  3170                           ;UART.c: 73: } else {
  3171  001680  0012               	return	
  3172  001682                     l6056:
  3173                           
  3174                           ;UART.c: 74: _this->buf[_this->head] = c;
  3175  001682  EE20 F0C8          	lfsr	2,200
  3176  001686  5021               	movf	UART_buff_put@_this,w,c
  3177  001688  26D9               	addwf	fsr2l,f,c
  3178  00168A  5022               	movf	UART_buff_put@_this+1,w,c
  3179  00168C  22DA               	addwfc	fsr2h,f,c
  3180  00168E  CFDE F024          	movff	postinc2,??_UART_buff_put
  3181  001692  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  3182  001696  5024               	movf	??_UART_buff_put,w,c
  3183  001698  2421               	addwf	UART_buff_put@_this,w,c
  3184  00169A  6ED9               	movwf	fsr2l,c
  3185  00169C  5025               	movf	??_UART_buff_put+1,w,c
  3186  00169E  2022               	addwfc	UART_buff_put@_this+1,w,c
  3187  0016A0  6EDA               	movwf	fsr2h,c
  3188  0016A2  C023  FFDF         	movff	UART_buff_put@c,indf2
  3189                           
  3190                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3191  0016A6  EE20 F0C8          	lfsr	2,200
  3192  0016AA  5021               	movf	UART_buff_put@_this,w,c
  3193  0016AC  26D9               	addwf	fsr2l,f,c
  3194  0016AE  5022               	movf	UART_buff_put@_this+1,w,c
  3195  0016B0  22DA               	addwfc	fsr2h,f,c
  3196  0016B2  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3197  0016B6  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3198  0016BA  0E00               	movlw	0
  3199  0016BC  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3200  0016BE  0EC8               	movlw	200
  3201  0016C0  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3202  0016C2  EC7F  F016         	call	_UART_buff_modulo_inc	;wreg free
  3203  0016C6  EE20 F0C8          	lfsr	2,200
  3204  0016CA  5021               	movf	UART_buff_put@_this,w,c
  3205  0016CC  26D9               	addwf	fsr2l,f,c
  3206  0016CE  5022               	movf	UART_buff_put@_this+1,w,c
  3207  0016D0  22DA               	addwfc	fsr2h,f,c
  3208  0016D2  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3209  0016D6  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3210                           
  3211                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3212  0016DA  EE20 F0CA          	lfsr	2,202
  3213  0016DE  5021               	movf	UART_buff_put@_this,w,c
  3214  0016E0  26D9               	addwf	fsr2l,f,c
  3215  0016E2  5022               	movf	UART_buff_put@_this+1,w,c
  3216  0016E4  22DA               	addwfc	fsr2h,f,c
  3217  0016E6  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  3218  0016EA  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  3219  0016EE  0E00               	movlw	0
  3220  0016F0  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  3221  0016F2  0EC8               	movlw	200
  3222  0016F4  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  3223  0016F6  EC7F  F016         	call	_UART_buff_modulo_inc	;wreg free
  3224  0016FA  EE20 F0CA          	lfsr	2,202
  3225  0016FE  5021               	movf	UART_buff_put@_this,w,c
  3226  001700  26D9               	addwf	fsr2l,f,c
  3227  001702  5022               	movf	UART_buff_put@_this+1,w,c
  3228  001704  22DA               	addwfc	fsr2h,f,c
  3229  001706  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3230  00170A  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3231  00170E  0012               	return	
  3232  001710                     __end_of_UART_buff_put:
  3233                           	opt stack 0
  3234                           tosu	equ	0xFFF
  3235                           tosh	equ	0xFFE
  3236                           tosl	equ	0xFFD
  3237                           pclath	equ	0xFFA
  3238                           tblptru	equ	0xFF8
  3239                           tblptrh	equ	0xFF7
  3240                           tblptrl	equ	0xFF6
  3241                           tablat	equ	0xFF5
  3242                           intcon	equ	0xFF2
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           indf2	equ	0xFDF
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           plusw2	equ	0xFDB
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _FastTransfer_buffer_flush *****************
  3254 ;; Defined at:
  3255 ;;		line 338 in file "FastTransfer.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  3258 ;;		 -> ring_buffer(206), 
  3259 ;;  clearBuffer     2   36[COMRAM] const int 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3271 ;;      Params:         4       0       0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0
  3274 ;;      Totals:         4       0       0       0       0       0       0
  3275 ;;Total ram usage:        4 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    5
  3278 ;; This function calls:
  3279 ;;		_memset
  3280 ;; This function is called by:
  3281 ;;		_sendData
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text7
  3286  002854                     __ptext7:
  3287                           	opt stack 0
  3288  002854                     _FastTransfer_buffer_flush:
  3289                           	opt stack 22
  3290                           
  3291                           ;FastTransfer.c: 339: _this->count = 0;
  3292                           
  3293                           ;incstack = 0
  3294  002854  EE20 F0CC          	lfsr	2,204
  3295  002858  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3296  00285A  26D9               	addwf	fsr2l,f,c
  3297  00285C  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3298  00285E  22DA               	addwfc	fsr2h,f,c
  3299  002860  0E00               	movlw	0
  3300  002862  6EDE               	movwf	postinc2,c
  3301  002864  0E00               	movlw	0
  3302  002866  6EDD               	movwf	postdec2,c
  3303                           
  3304                           ;FastTransfer.c: 340: _this->head = 0;
  3305  002868  EE20 F0C8          	lfsr	2,200
  3306  00286C  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3307  00286E  26D9               	addwf	fsr2l,f,c
  3308  002870  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3309  002872  22DA               	addwfc	fsr2h,f,c
  3310  002874  0E00               	movlw	0
  3311  002876  6EDE               	movwf	postinc2,c
  3312  002878  0E00               	movlw	0
  3313  00287A  6EDD               	movwf	postdec2,c
  3314                           
  3315                           ;FastTransfer.c: 341: _this->tail = 0;
  3316  00287C  EE20 F0CA          	lfsr	2,202
  3317  002880  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3318  002882  26D9               	addwf	fsr2l,f,c
  3319  002884  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3320  002886  22DA               	addwfc	fsr2h,f,c
  3321  002888  0E00               	movlw	0
  3322  00288A  6EDE               	movwf	postinc2,c
  3323  00288C  0E00               	movlw	0
  3324  00288E  6EDD               	movwf	postdec2,c
  3325                           
  3326                           ;FastTransfer.c: 342: if (clearBuffer) {
  3327  002890  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  3328  002892  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  3329  002894  B4D8               	btfsc	status,2,c
  3330  002896  0012               	return	
  3331                           
  3332                           ;FastTransfer.c: 343: memset(_this->buf, 0, sizeof (_this->buf));
  3333  002898  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  3334  00289C  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  3335  0028A0  0E00               	movlw	0
  3336  0028A2  6E1E               	movwf	memset@c+1,c
  3337  0028A4  0E00               	movlw	0
  3338  0028A6  6E1D               	movwf	memset@c,c
  3339  0028A8  0E00               	movlw	0
  3340  0028AA  6E20               	movwf	memset@n+1,c
  3341  0028AC  0EC8               	movlw	200
  3342  0028AE  6E1F               	movwf	memset@n,c
  3343  0028B0  EC54  F016         	call	_memset	;wreg free
  3344  0028B4  0012               	return	
  3345  0028B6                     __end_of_FastTransfer_buffer_flush:
  3346                           	opt stack 0
  3347                           tosu	equ	0xFFF
  3348                           tosh	equ	0xFFE
  3349                           tosl	equ	0xFFD
  3350                           pclath	equ	0xFFA
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf2	equ	0xFDF
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           plusw2	equ	0xFDB
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _buttonsCollector *****************
  3367 ;; Defined at:
  3368 ;;		line 61 in file "Communications.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  i               2   39[COMRAM] int 
  3373 ;;  sendVal         2   37[COMRAM] unsigned int 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  2   32[COMRAM] unsigned int 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3383 ;;      Params:         2       0       0       0       0       0       0
  3384 ;;      Locals:         4       0       0       0       0       0       0
  3385 ;;      Temps:          3       0       0       0       0       0       0
  3386 ;;      Totals:         9       0       0       0       0       0       0
  3387 ;;Total ram usage:        9 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    5
  3390 ;; This function calls:
  3391 ;;		_GetButtonState
  3392 ;; This function is called by:
  3393 ;;		_respondECU
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398  0026AE                     __ptext8:
  3399                           	opt stack 0
  3400  0026AE                     _buttonsCollector:
  3401                           	opt stack 23
  3402                           
  3403                           ;Communications.c: 62: unsigned int sendVal = 0;
  3404                           
  3405                           ;incstack = 0
  3406  0026AE  0E00               	movlw	0
  3407  0026B0  6E27               	movwf	buttonsCollector@sendVal+1,c
  3408  0026B2  0E00               	movlw	0
  3409  0026B4  6E26               	movwf	buttonsCollector@sendVal,c
  3410                           
  3411                           ;Communications.c: 63: int i = 0;
  3412  0026B6  0E00               	movlw	0
  3413  0026B8  6E29               	movwf	buttonsCollector@i+1,c
  3414  0026BA  0E00               	movlw	0
  3415  0026BC  6E28               	movwf	buttonsCollector@i,c
  3416                           
  3417                           ;Communications.c: 64: for (i = 0; i < 8; i++) {
  3418  0026BE  0E00               	movlw	0
  3419  0026C0  6E29               	movwf	buttonsCollector@i+1,c
  3420  0026C2  0E00               	movlw	0
  3421  0026C4  6E28               	movwf	buttonsCollector@i,c
  3422  0026C6  BE29               	btfsc	buttonsCollector@i+1,7,c
  3423  0026C8  D006               	goto	l4432
  3424  0026CA  5029               	movf	buttonsCollector@i+1,w,c
  3425  0026CC  E123               	bnz	l908
  3426  0026CE  0E08               	movlw	8
  3427  0026D0  5C28               	subwf	buttonsCollector@i,w,c
  3428  0026D2  B0D8               	btfsc	status,0,c
  3429  0026D4  D01F               	goto	l908
  3430  0026D6                     l4432:
  3431                           
  3432                           ;Communications.c: 65: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  3433  0026D6  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  3434  0026DA  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  3435  0026DE  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  3436  0026E2  ECA9  F016         	call	_GetButtonState	;wreg free
  3437  0026E6  0B01               	andlw	1
  3438  0026E8  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  3439  0026EA  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  3440  0026EC  2A23               	incf	??_buttonsCollector,f,c
  3441  0026EE  D003               	goto	u3484
  3442  0026F0                     u3485:
  3443  0026F0  90D8               	bcf	status,0,c
  3444  0026F2  3624               	rlcf	??_buttonsCollector+1,f,c
  3445  0026F4  3625               	rlcf	??_buttonsCollector+2,f,c
  3446  0026F6                     u3484:
  3447  0026F6  2E23               	decfsz	??_buttonsCollector,f,c
  3448  0026F8  D7FB               	goto	u3485
  3449  0026FA  5026               	movf	buttonsCollector@sendVal,w,c
  3450  0026FC  1024               	iorwf	??_buttonsCollector+1,w,c
  3451  0026FE  6E26               	movwf	buttonsCollector@sendVal,c
  3452  002700  5027               	movf	buttonsCollector@sendVal+1,w,c
  3453  002702  1025               	iorwf	??_buttonsCollector+2,w,c
  3454  002704  6E27               	movwf	buttonsCollector@sendVal+1,c
  3455  002706  4A28               	infsnz	buttonsCollector@i,f,c
  3456  002708  2A29               	incf	buttonsCollector@i+1,f,c
  3457  00270A  BE29               	btfsc	buttonsCollector@i+1,7,c
  3458  00270C  D7E4               	goto	l4432
  3459  00270E  5029               	movf	buttonsCollector@i+1,w,c
  3460  002710  E101               	bnz	u3490
  3461  002712  D7DD               	goto	L1
  3462  002714                     u3490:
  3463  002714                     l908:
  3464                           
  3465                           ;Communications.c: 66: }
  3466                           ;Communications.c: 67: return sendVal;
  3467  002714  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  3468  002718  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  3469  00271C  0012               	return		;funcret
  3470  00271E                     __end_of_buttonsCollector:
  3471                           	opt stack 0
  3472                           tosu	equ	0xFFF
  3473                           tosh	equ	0xFFE
  3474                           tosl	equ	0xFFD
  3475                           pclath	equ	0xFFA
  3476                           tblptru	equ	0xFF8
  3477                           tblptrh	equ	0xFF7
  3478                           tblptrl	equ	0xFF6
  3479                           tablat	equ	0xFF5
  3480                           intcon	equ	0xFF2
  3481                           postinc0	equ	0xFEE
  3482                           wreg	equ	0xFE8
  3483                           indf2	equ	0xFDF
  3484                           postinc2	equ	0xFDE
  3485                           postdec2	equ	0xFDD
  3486                           plusw2	equ	0xFDB
  3487                           fsr2h	equ	0xFDA
  3488                           fsr2l	equ	0xFD9
  3489                           status	equ	0xFD8
  3490                           
  3491 ;; *************** function _GetButtonState *****************
  3492 ;; Defined at:
  3493 ;;		line 184 in file "IO.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  btnnum          2   26[COMRAM] int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      unsigned char 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3507 ;;      Params:         2       0       0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0
  3509 ;;      Temps:          4       0       0       0       0       0       0
  3510 ;;      Totals:         6       0       0       0       0       0       0
  3511 ;;Total ram usage:        6 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    4
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_buttonsCollector
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text9
  3522  002D52                     __ptext9:
  3523                           	opt stack 0
  3524  002D52                     _GetButtonState:
  3525                           	opt stack 23
  3526                           
  3527                           ;IO.c: 185: return butnarray[btnnum - 1];
  3528                           
  3529                           ;incstack = 0
  3530  002D52  0EFF               	movlw	255
  3531  002D54  6E1D               	movwf	??_GetButtonState& (0+255),c
  3532  002D56  0EFF               	movlw	255
  3533  002D58  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  3534  002D5A  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3535  002D5E  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3536  002D62  501D               	movf	??_GetButtonState,w,c
  3537  002D64  261F               	addwf	??_GetButtonState+2,f,c
  3538  002D66  501E               	movf	??_GetButtonState+1,w,c
  3539  002D68  2220               	addwfc	??_GetButtonState+3,f,c
  3540  002D6A  0EB0               	movlw	low _butnarray
  3541  002D6C  241F               	addwf	??_GetButtonState+2,w,c
  3542  002D6E  6ED9               	movwf	fsr2l,c
  3543  002D70  0E00               	movlw	high _butnarray
  3544  002D72  2020               	addwfc	??_GetButtonState+3,w,c
  3545  002D74  6EDA               	movwf	fsr2h,c
  3546  002D76  50DF               	movf	indf2,w,c
  3547  002D78  0012               	return	
  3548  002D7A                     __end_of_GetButtonState:
  3549                           	opt stack 0
  3550                           tosu	equ	0xFFF
  3551                           tosh	equ	0xFFE
  3552                           tosl	equ	0xFFD
  3553                           pclath	equ	0xFFA
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           intcon	equ	0xFF2
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           indf2	equ	0xFDF
  3562                           postinc2	equ	0xFDE
  3563                           postdec2	equ	0xFDD
  3564                           plusw2	equ	0xFDB
  3565                           fsr2h	equ	0xFDA
  3566                           fsr2l	equ	0xFD9
  3567                           status	equ	0xFD8
  3568                           
  3569 ;; *************** function _ToSend *****************
  3570 ;; Defined at:
  3571 ;;		line 293 in file "FastTransfer.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  where           1    wreg     unsigned char 
  3574 ;;  what            2    0[BANK0 ] unsigned int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  where           1   41[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3586 ;;      Params:         0       2       0       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0
  3589 ;;      Totals:         1       2       0       0       0       0       0
  3590 ;;Total ram usage:        3 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    6
  3593 ;; This function calls:
  3594 ;;		_FastTransfer_buffer_put
  3595 ;; This function is called by:
  3596 ;;		_respondECU
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text10
  3601  002E42                     __ptext10:
  3602                           	opt stack 0
  3603  002E42                     _ToSend:
  3604                           	opt stack 22
  3605                           
  3606                           ;incstack = 0
  3607                           ;ToSend@where stored from wreg
  3608  002E42  6E2A               	movwf	ToSend@where,c
  3609                           
  3610                           ;FastTransfer.c: 294: FastTransfer_buffer_put(&ring_buffer, where, what);
  3611  002E44  0E00               	movlw	low _ring_buffer
  3612  002E46  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3613  002E48  0E02               	movlw	high _ring_buffer
  3614  002E4A  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3615  002E4C  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3616  002E50  C0F2  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3617  002E54  C0F3  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3618  002E58  ECB5  F007         	call	_FastTransfer_buffer_put	;wreg free
  3619  002E5C  0012               	return		;funcret
  3620  002E5E                     __end_of_ToSend:
  3621                           	opt stack 0
  3622                           tosu	equ	0xFFF
  3623                           tosh	equ	0xFFE
  3624                           tosl	equ	0xFFD
  3625                           pclath	equ	0xFFA
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           intcon	equ	0xFF2
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           plusw2	equ	0xFDB
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _FastTransfer_buffer_put *****************
  3642 ;; Defined at:
  3643 ;;		line 300 in file "FastTransfer.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3646 ;;		 -> ring_buffer(206), 
  3647 ;;  towhere         1   34[COMRAM] unsigned char 
  3648 ;;  towhat          2   35[COMRAM] unsigned int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3660 ;;      Params:         5       0       0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0
  3662 ;;      Temps:          2       0       0       0       0       0       0
  3663 ;;      Totals:         7       0       0       0       0       0       0
  3664 ;;Total ram usage:        7 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    5
  3667 ;; This function calls:
  3668 ;;		_FastTransfer_buffer_modulo_inc
  3669 ;; This function is called by:
  3670 ;;		_ToSend
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text11
  3675  000F6A                     __ptext11:
  3676                           	opt stack 0
  3677  000F6A                     _FastTransfer_buffer_put:
  3678                           	opt stack 22
  3679                           
  3680                           ;FastTransfer.c: 302: group.integer = towhat;
  3681                           
  3682                           ;incstack = 0
  3683  000F6A  C024  F02B         	movff	FastTransfer_buffer_put@towhat,_group
  3684  000F6E  C025  F02C         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3685                           
  3686                           ;FastTransfer.c: 304: if (_this->count < (200 - 3)) {
  3687  000F72  EE20 F0CC          	lfsr	2,204
  3688  000F76  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3689  000F78  26D9               	addwf	fsr2l,f,c
  3690  000F7A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3691  000F7C  22DA               	addwfc	fsr2h,f,c
  3692  000F7E  0E01               	movlw	1
  3693  000F80  BEDB               	btfsc	plusw2,7,c
  3694  000F82  D007               	goto	l4198
  3695  000F84  0E01               	movlw	1
  3696  000F86  50DB               	movf	plusw2,w,c
  3697  000F88  E103               	bnz	u3171
  3698  000F8A  0EC5               	movlw	197
  3699  000F8C  5CDE               	subwf	postinc2,w,c
  3700  000F8E  B0D8               	btfsc	status,0,c
  3701  000F90                     u3171:
  3702  000F90  0012               	return	
  3703  000F92                     l4198:
  3704                           
  3705                           ;FastTransfer.c: 305: _this->buf[_this->head] = towhere;
  3706  000F92  EE20 F0C8          	lfsr	2,200
  3707  000F96  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3708  000F98  26D9               	addwf	fsr2l,f,c
  3709  000F9A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3710  000F9C  22DA               	addwfc	fsr2h,f,c
  3711  000F9E  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3712  000FA2  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3713  000FA6  5026               	movf	??_FastTransfer_buffer_put,w,c
  3714  000FA8  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3715  000FAA  6ED9               	movwf	fsr2l,c
  3716  000FAC  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3717  000FAE  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3718  000FB0  6EDA               	movwf	fsr2h,c
  3719  000FB2  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3720                           
  3721                           ;FastTransfer.c: 306: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3722  000FB6  EE20 F0C8          	lfsr	2,200
  3723  000FBA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3724  000FBC  26D9               	addwf	fsr2l,f,c
  3725  000FBE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3726  000FC0  22DA               	addwfc	fsr2h,f,c
  3727  000FC2  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3728  000FC6  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3729  000FCA  0E00               	movlw	0
  3730  000FCC  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3731  000FCE  0EC8               	movlw	200
  3732  000FD0  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3733  000FD2  EC6A  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3734  000FD6  EE20 F0C8          	lfsr	2,200
  3735  000FDA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3736  000FDC  26D9               	addwf	fsr2l,f,c
  3737  000FDE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3738  000FE0  22DA               	addwfc	fsr2h,f,c
  3739  000FE2  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3740  000FE6  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3741                           
  3742                           ;FastTransfer.c: 307: ++_this->count;
  3743  000FEA  EE20 F0CC          	lfsr	2,204
  3744  000FEE  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3745  000FF0  26D9               	addwf	fsr2l,f,c
  3746  000FF2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3747  000FF4  22DA               	addwfc	fsr2h,f,c
  3748  000FF6  2ADE               	incf	postinc2,f,c
  3749  000FF8  0E00               	movlw	0
  3750  000FFA  22DD               	addwfc	postdec2,f,c
  3751                           
  3752                           ;FastTransfer.c: 308: _this->buf[_this->head] = group.parts[0];
  3753  000FFC  EE20 F0C8          	lfsr	2,200
  3754  001000  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3755  001002  26D9               	addwf	fsr2l,f,c
  3756  001004  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3757  001006  22DA               	addwfc	fsr2h,f,c
  3758  001008  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3759  00100C  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3760  001010  5026               	movf	??_FastTransfer_buffer_put,w,c
  3761  001012  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3762  001014  6ED9               	movwf	fsr2l,c
  3763  001016  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3764  001018  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3765  00101A  6EDA               	movwf	fsr2h,c
  3766  00101C  C02B  FFDF         	movff	_group,indf2
  3767                           
  3768                           ;FastTransfer.c: 309: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3769  001020  EE20 F0C8          	lfsr	2,200
  3770  001024  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3771  001026  26D9               	addwf	fsr2l,f,c
  3772  001028  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3773  00102A  22DA               	addwfc	fsr2h,f,c
  3774  00102C  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3775  001030  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3776  001034  0E00               	movlw	0
  3777  001036  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3778  001038  0EC8               	movlw	200
  3779  00103A  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3780  00103C  EC6A  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3781  001040  EE20 F0C8          	lfsr	2,200
  3782  001044  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3783  001046  26D9               	addwf	fsr2l,f,c
  3784  001048  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3785  00104A  22DA               	addwfc	fsr2h,f,c
  3786  00104C  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3787  001050  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3788                           
  3789                           ;FastTransfer.c: 310: ++_this->count;
  3790  001054  EE20 F0CC          	lfsr	2,204
  3791  001058  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3792  00105A  26D9               	addwf	fsr2l,f,c
  3793  00105C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3794  00105E  22DA               	addwfc	fsr2h,f,c
  3795  001060  2ADE               	incf	postinc2,f,c
  3796  001062  0E00               	movlw	0
  3797  001064  22DD               	addwfc	postdec2,f,c
  3798                           
  3799                           ;FastTransfer.c: 311: _this->buf[_this->head] = group.parts[1];
  3800  001066  EE20 F0C8          	lfsr	2,200
  3801  00106A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3802  00106C  26D9               	addwf	fsr2l,f,c
  3803  00106E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3804  001070  22DA               	addwfc	fsr2h,f,c
  3805  001072  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3806  001076  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3807  00107A  5026               	movf	??_FastTransfer_buffer_put,w,c
  3808  00107C  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3809  00107E  6ED9               	movwf	fsr2l,c
  3810  001080  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3811  001082  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3812  001084  6EDA               	movwf	fsr2h,c
  3813  001086  C02C  FFDF         	movff	_group+1,indf2
  3814                           
  3815                           ;FastTransfer.c: 312: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3816  00108A  EE20 F0C8          	lfsr	2,200
  3817  00108E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3818  001090  26D9               	addwf	fsr2l,f,c
  3819  001092  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3820  001094  22DA               	addwfc	fsr2h,f,c
  3821  001096  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3822  00109A  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3823  00109E  0E00               	movlw	0
  3824  0010A0  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3825  0010A2  0EC8               	movlw	200
  3826  0010A4  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3827  0010A6  EC6A  F016         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3828  0010AA  EE20 F0C8          	lfsr	2,200
  3829  0010AE  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3830  0010B0  26D9               	addwf	fsr2l,f,c
  3831  0010B2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3832  0010B4  22DA               	addwfc	fsr2h,f,c
  3833  0010B6  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3834  0010BA  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3835                           
  3836                           ;FastTransfer.c: 313: ++_this->count;
  3837  0010BE  EE20 F0CC          	lfsr	2,204
  3838  0010C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3839  0010C4  26D9               	addwf	fsr2l,f,c
  3840  0010C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3841  0010C8  22DA               	addwfc	fsr2h,f,c
  3842  0010CA  2ADE               	incf	postinc2,f,c
  3843  0010CC  0E00               	movlw	0
  3844  0010CE  22DD               	addwfc	postdec2,f,c
  3845  0010D0  0012               	return	
  3846  0010D2                     __end_of_FastTransfer_buffer_put:
  3847                           	opt stack 0
  3848                           tosu	equ	0xFFF
  3849                           tosh	equ	0xFFE
  3850                           tosl	equ	0xFFD
  3851                           pclath	equ	0xFFA
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           intcon	equ	0xFF2
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           plusw2	equ	0xFDB
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3868 ;; Defined at:
  3869 ;;		line 350 in file "FastTransfer.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  value           2   26[COMRAM] const unsigned int 
  3872 ;;  modulus         2   28[COMRAM] const unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  my_value        2   30[COMRAM] unsigned int 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2   26[COMRAM] unsigned int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3884 ;;      Params:         4       0       0       0       0       0       0
  3885 ;;      Locals:         2       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0
  3887 ;;      Totals:         6       0       0       0       0       0       0
  3888 ;;Total ram usage:        6 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    4
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_FastTransfer_buffer_put
  3895 ;;		_FastTransfer_buffer_get
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text12
  3900  002CD4                     __ptext12:
  3901                           	opt stack 0
  3902  002CD4                     _FastTransfer_buffer_modulo_inc:
  3903                           	opt stack 22
  3904                           
  3905                           ;FastTransfer.c: 351: unsigned int my_value = value + 1;
  3906                           
  3907                           ;incstack = 0
  3908  002CD4  0E01               	movlw	1
  3909  002CD6  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3910  002CD8  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3911  002CDA  0E00               	movlw	0
  3912  002CDC  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3913  002CDE  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3914                           
  3915                           ;FastTransfer.c: 352: if (my_value >= modulus) {
  3916  002CE0  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3917  002CE2  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3918  002CE4  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3919  002CE6  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3920  002CE8  A0D8               	btfss	status,0,c
  3921  002CEA  D004               	goto	l4062
  3922                           
  3923                           ;FastTransfer.c: 353: my_value = 0;
  3924  002CEC  0E00               	movlw	0
  3925  002CEE  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3926  002CF0  0E00               	movlw	0
  3927  002CF2  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3928  002CF4                     l4062:
  3929                           
  3930                           ;FastTransfer.c: 354: }
  3931                           ;FastTransfer.c: 355: return (my_value);
  3932  002CF4  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3933  002CF8  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3934  002CFC  0012               	return	
  3935  002CFE                     __end_of_FastTransfer_buffer_modulo_inc:
  3936                           	opt stack 0
  3937                           tosu	equ	0xFFF
  3938                           tosh	equ	0xFFE
  3939                           tosl	equ	0xFFD
  3940                           pclath	equ	0xFFA
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           intcon	equ	0xFF2
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           plusw2	equ	0xFDB
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function _Delay *****************
  3957 ;; Defined at:
  3958 ;;		line 6 in file "Function.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  wait            2   26[COMRAM] int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  x               2   29[COMRAM] int 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3972 ;;      Params:         2       0       0       0       0       0       0
  3973 ;;      Locals:         2       0       0       0       0       0       0
  3974 ;;      Temps:          1       0       0       0       0       0       0
  3975 ;;      Totals:         5       0       0       0       0       0       0
  3976 ;;Total ram usage:        5 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    4
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_respondECU
  3983 ;;		_TestBarGraph
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text13
  3988  002C14                     __ptext13:
  3989                           	opt stack 0
  3990  002C14                     _Delay:
  3991                           	opt stack 24
  3992                           
  3993                           ;Function.c: 7: int x;
  3994                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  3995                           
  3996                           ;incstack = 0
  3997  002C14  0E00               	movlw	0
  3998  002C16  6E1F               	movwf	Delay@x+1,c
  3999  002C18  0E00               	movlw	0
  4000  002C1A  6E1E               	movwf	Delay@x,c
  4001  002C1C  D00A               	goto	l1302
  4002  002C1E                     l4440:
  4003                           
  4004                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  4005  002C1E  0E06               	movlw	6
  4006  002C20  6E1D               	movwf	??_Delay& (0+255),c
  4007  002C22  0E30               	movlw	48
  4008  002C24                     u8377:
  4009  002C24  2EE8               	decfsz	wreg,f,c
  4010  002C26  D7FE               	goto	u8377
  4011  002C28  2E1D               	decfsz	??_Delay& (0+255),f,c
  4012  002C2A  D7FC               	goto	u8377
  4013  002C2C  D000               	nop2	
  4014  002C2E  4A1E               	infsnz	Delay@x,f,c
  4015  002C30  2A1F               	incf	Delay@x+1,f,c
  4016  002C32                     l1302:
  4017  002C32  501B               	movf	Delay@wait,w,c
  4018  002C34  5C1E               	subwf	Delay@x,w,c
  4019  002C36  501F               	movf	Delay@x+1,w,c
  4020  002C38  0A80               	xorlw	128
  4021  002C3A  6E1D               	movwf	??_Delay& (0+255),c
  4022  002C3C  501C               	movf	Delay@wait+1,w,c
  4023  002C3E  0A80               	xorlw	128
  4024  002C40  581D               	subwfb	??_Delay& (0+255),w,c
  4025  002C42  B0D8               	btfsc	status,0,c
  4026  002C44  0012               	return	
  4027  002C46  D7EB               	goto	l4440
  4028  002C48                     __end_of_Delay:
  4029                           	opt stack 0
  4030                           tosu	equ	0xFFF
  4031                           tosh	equ	0xFFE
  4032                           tosl	equ	0xFFD
  4033                           pclath	equ	0xFFA
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           intcon	equ	0xFF2
  4039                           postinc0	equ	0xFEE
  4040                           wreg	equ	0xFE8
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           plusw2	equ	0xFDB
  4045                           fsr2h	equ	0xFDA
  4046                           fsr2l	equ	0xFD9
  4047                           status	equ	0xFD8
  4048                           
  4049 ;; *************** function _receiveData *****************
  4050 ;; Defined at:
  4051 ;;		line 154 in file "FastTransfer.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  u               2   37[COMRAM] int 
  4056 ;;  r               2   39[COMRAM] int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      unsigned char 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4066 ;;      Params:         0       0       0       0       0       0       0
  4067 ;;      Locals:         4       0       0       0       0       0       0
  4068 ;;      Temps:          0       6       0       0       0       0       0
  4069 ;;      Totals:         4       6       0       0       0       0       0
  4070 ;;Total ram usage:       10 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    7
  4073 ;; This function calls:
  4074 ;;		Absolute function
  4075 ;;		_CRC8
  4076 ;;		_Receive_available
  4077 ;;		_Receive_get
  4078 ;;		_wipeRxBuffer
  4079 ;; This function is called by:
  4080 ;;		_updateComms
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text14
  4085  0004DA                     __ptext14:
  4086                           	opt stack 0
  4087  0004DA                     _receiveData:
  4088                           	opt stack 22
  4089                           
  4090                           ;FastTransfer.c: 157: if (rx_len == 0) {
  4091                           
  4092                           ;incstack = 0
  4093  0004DA  503E               	movf	_rx_len,w,c
  4094  0004DC  A4D8               	btfss	status,2,c
  4095  0004DE  D0A8               	goto	l6656
  4096                           
  4097                           ;FastTransfer.c: 159: if (serial_available() > 4) {
  4098  0004E0  D801               	call	u6968
  4099  0004E2  D00A               	goto	u6969
  4100  0004E4                     u6968:
  4101  0004E4  0005               	push	
  4102  0004E6  6EFA               	movwf	pclath,c
  4103  0004E8  502F               	movf	_serial_available,w,c
  4104  0004EA  6EFD               	movwf	tosl,c
  4105  0004EC  5030               	movf	_serial_available+1,w,c
  4106  0004EE  6EFE               	movwf	tosh,c
  4107  0004F0  50F8               	movf	tblptru,w,c
  4108  0004F2  6EFF               	movwf	tosu,c
  4109  0004F4  50FA               	movf	pclath,w,c
  4110  0004F6  0012               	return		;indir
  4111  0004F8                     u6969:
  4112  0004F8  BE1E               	btfsc	?_Receive_available+1,7,c
  4113  0004FA  D09A               	goto	l6656
  4114  0004FC  501E               	movf	?_Receive_available+1,w,c
  4115  0004FE  E11E               	bnz	l6632
  4116  000500  0E05               	movlw	5
  4117  000502  5C1D               	subwf	?_Receive_available,w,c
  4118  000504  B0D8               	btfsc	status,0,c
  4119  000506  D01A               	goto	l6632
  4120  000508  D093               	goto	l6656
  4121  00050A                     l6624:
  4122                           
  4123                           ;FastTransfer.c: 166: alignErrorCounter++;
  4124  00050A  0100               	movlb	0	; () banked
  4125  00050C  4BC9               	infsnz	_alignErrorCounter& (0+255),f,b
  4126  00050E  2BCA               	incf	(_alignErrorCounter+1)& (0+255),f,b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;FastTransfer.c: 167: if (serial_available() < 5)
  4130  000510  D801               	call	u6988
  4131  000512  D00A               	goto	u6989
  4132  000514                     u6988:
  4133  000514  0005               	push	
  4134  000516  6EFA               	movwf	pclath,c
  4135  000518  502F               	movf	_serial_available,w,c
  4136  00051A  6EFD               	movwf	tosl,c
  4137  00051C  5030               	movf	_serial_available+1,w,c
  4138  00051E  6EFE               	movwf	tosh,c
  4139  000520  50F8               	movf	tblptru,w,c
  4140  000522  6EFF               	movwf	tosu,c
  4141  000524  50FA               	movf	pclath,w,c
  4142  000526  0012               	return		;indir
  4143  000528                     u6989:
  4144  000528  BE1E               	btfsc	?_Receive_available+1,7,c
  4145  00052A  D006               	goto	l6628
  4146  00052C  501E               	movf	?_Receive_available+1,w,c
  4147  00052E  E106               	bnz	l6632
  4148  000530  0E05               	movlw	5
  4149  000532  5C1D               	subwf	?_Receive_available,w,c
  4150  000534  B0D8               	btfsc	status,0,c
  4151  000536  D002               	goto	l6632
  4152  000538                     l6628:
  4153                           
  4154                           ;FastTransfer.c: 168: return 0;
  4155  000538  0E00               	movlw	0
  4156  00053A  0012               	return	
  4157  00053C                     l6632:
  4158  00053C  D801               	call	u7008
  4159  00053E  D00A               	goto	u7009
  4160  000540                     u7008:
  4161  000540  0005               	push	
  4162  000542  6EFA               	movwf	pclath,c
  4163  000544  5031               	movf	_serial_read,w,c
  4164  000546  6EFD               	movwf	tosl,c
  4165  000548  5032               	movf	_serial_read+1,w,c
  4166  00054A  6EFE               	movwf	tosh,c
  4167  00054C  50F8               	movf	tblptru,w,c
  4168  00054E  6EFF               	movwf	tosu,c
  4169  000550  50FA               	movf	pclath,w,c
  4170  000552  0012               	return		;indir
  4171  000554                     u7009:
  4172  000554  0A06               	xorlw	6
  4173  000556  A4D8               	btfss	status,2,c
  4174  000558  D7D8               	goto	l6624
  4175                           
  4176                           ;FastTransfer.c: 169: }
  4177                           ;FastTransfer.c: 170: if (serial_read() == 0x85) {
  4178  00055A  D801               	call	u7028
  4179  00055C  D00A               	goto	u7029
  4180  00055E                     u7028:
  4181  00055E  0005               	push	
  4182  000560  6EFA               	movwf	pclath,c
  4183  000562  5031               	movf	_serial_read,w,c
  4184  000564  6EFD               	movwf	tosl,c
  4185  000566  5032               	movf	_serial_read+1,w,c
  4186  000568  6EFE               	movwf	tosh,c
  4187  00056A  50F8               	movf	tblptru,w,c
  4188  00056C  6EFF               	movwf	tosu,c
  4189  00056E  50FA               	movf	pclath,w,c
  4190  000570  0012               	return		;indir
  4191  000572                     u7029:
  4192  000572  0A85               	xorlw	133
  4193  000574  A4D8               	btfss	status,2,c
  4194  000576  D05C               	goto	l6656
  4195                           
  4196                           ;FastTransfer.c: 172: rx_address = serial_read();
  4197  000578  D801               	call	u7048
  4198  00057A  D00A               	goto	u7049
  4199  00057C                     u7048:
  4200  00057C  0005               	push	
  4201  00057E  6EFA               	movwf	pclath,c
  4202  000580  5031               	movf	_serial_read,w,c
  4203  000582  6EFD               	movwf	tosl,c
  4204  000584  5032               	movf	_serial_read+1,w,c
  4205  000586  6EFE               	movwf	tosh,c
  4206  000588  50F8               	movf	tblptru,w,c
  4207  00058A  6EFF               	movwf	tosu,c
  4208  00058C  50FA               	movf	pclath,w,c
  4209  00058E  0012               	return		;indir
  4210  000590                     u7049:
  4211  000590  6E3C               	movwf	_rx_address,c
  4212                           
  4213                           ;FastTransfer.c: 173: returnAddress = serial_read();
  4214  000592  D801               	call	u7058
  4215  000594  D00A               	goto	u7059
  4216  000596                     u7058:
  4217  000596  0005               	push	
  4218  000598  6EFA               	movwf	pclath,c
  4219  00059A  5031               	movf	_serial_read,w,c
  4220  00059C  6EFD               	movwf	tosl,c
  4221  00059E  5032               	movf	_serial_read+1,w,c
  4222  0005A0  6EFE               	movwf	tosh,c
  4223  0005A2  50F8               	movf	tblptru,w,c
  4224  0005A4  6EFF               	movwf	tosu,c
  4225  0005A6  50FA               	movf	pclath,w,c
  4226  0005A8  0012               	return		;indir
  4227  0005AA                     u7059:
  4228  0005AA  6E3B               	movwf	_returnAddress,c
  4229                           
  4230                           ;FastTransfer.c: 174: rx_len = serial_read();
  4231  0005AC  D801               	call	u7068
  4232  0005AE  D00A               	goto	u7069
  4233  0005B0                     u7068:
  4234  0005B0  0005               	push	
  4235  0005B2  6EFA               	movwf	pclath,c
  4236  0005B4  5031               	movf	_serial_read,w,c
  4237  0005B6  6EFD               	movwf	tosl,c
  4238  0005B8  5032               	movf	_serial_read+1,w,c
  4239  0005BA  6EFE               	movwf	tosh,c
  4240  0005BC  50F8               	movf	tblptru,w,c
  4241  0005BE  6EFF               	movwf	tosu,c
  4242  0005C0  50FA               	movf	pclath,w,c
  4243  0005C2  0012               	return		;indir
  4244  0005C4                     u7069:
  4245  0005C4  6E3E               	movwf	_rx_len,c
  4246                           
  4247                           ;FastTransfer.c: 177: if (rx_address != moduleAddress) {
  4248  0005C6  503A               	movf	_moduleAddress,w,c
  4249  0005C8  183C               	xorwf	_rx_address,w,c
  4250  0005CA  B4D8               	btfsc	status,2,c
  4251  0005CC  D031               	goto	l6656
  4252                           
  4253                           ;FastTransfer.c: 178: addressErrorCounter++;
  4254  0005CE  0100               	movlb	0	; () banked
  4255  0005D0  4BC7               	infsnz	_addressErrorCounter& (0+255),f,b
  4256  0005D2  2BC8               	incf	(_addressErrorCounter+1)& (0+255),f,b
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;FastTransfer.c: 181: int u;
  4260                           ;FastTransfer.c: 182: for (u = 0; u <= (rx_len + 1); u++) {
  4261  0005D4  0E00               	movlw	0
  4262  0005D6  6E27               	movwf	receiveData@u+1,c
  4263  0005D8  0E00               	movlw	0
  4264  0005DA  6E26               	movwf	receiveData@u,c
  4265  0005DC  D00E               	goto	l6648
  4266  0005DE                     l6644:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;FastTransfer.c: 183: serial_read();
  4270  0005DE  D801               	call	u7088
  4271  0005E0  D00A               	goto	l6646
  4272  0005E2                     u7088:
  4273  0005E2  0005               	push	
  4274  0005E4  6EFA               	movwf	pclath,c
  4275  0005E6  5031               	movf	_serial_read,w,c
  4276  0005E8  6EFD               	movwf	tosl,c
  4277  0005EA  5032               	movf	_serial_read+1,w,c
  4278  0005EC  6EFE               	movwf	tosh,c
  4279  0005EE  50F8               	movf	tblptru,w,c
  4280  0005F0  6EFF               	movwf	tosu,c
  4281  0005F2  50FA               	movf	pclath,w,c
  4282  0005F4  0012               	return		;indir
  4283  0005F6                     l6646:
  4284  0005F6  4A26               	infsnz	receiveData@u,f,c
  4285  0005F8  2A27               	incf	receiveData@u+1,f,c
  4286  0005FA                     l6648:
  4287  0005FA  503E               	movf	_rx_len,w,c
  4288  0005FC  0100               	movlb	0	; () banked
  4289  0005FE  6FF2               	movwf	??_receiveData& (0+255),b
  4290  000600  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4291  000602  0E01               	movlw	1
  4292  000604  0100               	movlb	0	; () banked
  4293  000606  27F2               	addwf	??_receiveData& (0+255),f,b
  4294  000608  0E00               	movlw	0
  4295  00060A  23F3               	addwfc	(??_receiveData+1)& (0+255),f,b
  4296  00060C  5026               	movf	receiveData@u,w,c
  4297  00060E  0100               	movlb	0	; () banked
  4298  000610  5DF2               	subwf	??_receiveData& (0+255),w,b
  4299  000612  0100               	movlb	0	; () banked
  4300  000614  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4301  000616  0A80               	xorlw	128
  4302  000618  0100               	movlb	0	; () banked
  4303  00061A  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4304  00061C  5027               	movf	receiveData@u+1,w,c
  4305  00061E  0A80               	xorlw	128
  4306  000620  0100               	movlb	0	; () banked
  4307  000622  59F4               	subwfb	(??_receiveData+2)& (0+255),w,b
  4308  000624  B0D8               	btfsc	status,0,c
  4309  000626  D7DB               	goto	l6644
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;FastTransfer.c: 184: }
  4313                           ;FastTransfer.c: 185: rx_len = 0;
  4314                           
  4315                           ; BSR set to: 0
  4316  000628  0E00               	movlw	0
  4317  00062A  6E3E               	movwf	_rx_len,c
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;FastTransfer.c: 186: return 0;
  4321  00062C  0E00               	movlw	0
  4322                           
  4323                           ; BSR set to: 0
  4324  00062E  0012               	return	
  4325  000630                     l6656:
  4326                           
  4327                           ;FastTransfer.c: 187: }
  4328                           ;FastTransfer.c: 189: }
  4329                           ;FastTransfer.c: 190: }
  4330                           ;FastTransfer.c: 191: }
  4331                           ;FastTransfer.c: 194: if (rx_len != 0) {
  4332  000630  503E               	movf	_rx_len,w,c
  4333  000632  A4D8               	btfss	status,2,c
  4334  000634  D01A               	goto	l6664
  4335  000636  D0EF               	goto	l6710
  4336  000638                     l6660:
  4337                           
  4338                           ;FastTransfer.c: 210: rx_buffer[rx_array_inx++] = serial_read();
  4339  000638  D801               	call	u7118
  4340  00063A  D00A               	goto	u7119
  4341  00063C                     u7118:
  4342  00063C  0005               	push	
  4343  00063E  6EFA               	movwf	pclath,c
  4344  000640  5031               	movf	_serial_read,w,c
  4345  000642  6EFD               	movwf	tosl,c
  4346  000644  5032               	movf	_serial_read+1,w,c
  4347  000646  6EFE               	movwf	tosh,c
  4348  000648  50F8               	movf	tblptru,w,c
  4349  00064A  6EFF               	movwf	tosu,c
  4350  00064C  50FA               	movf	pclath,w,c
  4351  00064E  0012               	return		;indir
  4352  000650                     u7119:
  4353  000650  0100               	movlb	0	; () banked
  4354  000652  6FF2               	movwf	??_receiveData& (0+255),b
  4355  000654  503D               	movf	_rx_array_inx,w,c
  4356  000656  0D01               	mullw	1
  4357  000658  0E00               	movlw	low _rx_buffer
  4358  00065A  24F3               	addwf	prodl,w,c
  4359  00065C  6ED9               	movwf	fsr2l,c
  4360  00065E  0E05               	movlw	high _rx_buffer
  4361  000660  20F4               	addwfc	prodh,w,c
  4362  000662  6EDA               	movwf	fsr2h,c
  4363  000664  C0F2  FFDF         	movff	??_receiveData,indf2
  4364                           
  4365                           ; BSR set to: 0
  4366  000668  2A3D               	incf	_rx_array_inx,f,c
  4367  00066A                     l6664:
  4368  00066A  D801               	call	u7128
  4369  00066C  D00A               	goto	u7129
  4370  00066E                     u7128:
  4371  00066E  0005               	push	
  4372  000670  6EFA               	movwf	pclath,c
  4373  000672  502F               	movf	_serial_available,w,c
  4374  000674  6EFD               	movwf	tosl,c
  4375  000676  5030               	movf	_serial_available+1,w,c
  4376  000678  6EFE               	movwf	tosh,c
  4377  00067A  50F8               	movf	tblptru,w,c
  4378  00067C  6EFF               	movwf	tosu,c
  4379  00067E  50FA               	movf	pclath,w,c
  4380  000680  0012               	return		;indir
  4381  000682                     u7129:
  4382  000682  501D               	movf	?_Receive_available,w,c
  4383  000684  101E               	iorwf	?_Receive_available+1,w,c
  4384  000686  B4D8               	btfsc	status,2,c
  4385  000688  D004               	goto	l6668
  4386  00068A  503D               	movf	_rx_array_inx,w,c
  4387  00068C  5C3E               	subwf	_rx_len,w,c
  4388  00068E  B0D8               	btfsc	status,0,c
  4389  000690  D7D3               	goto	l6660
  4390  000692                     l6668:
  4391                           
  4392                           ;FastTransfer.c: 211: }
  4393                           ;FastTransfer.c: 213: if (rx_len == (rx_array_inx - 1)) {
  4394  000692  503E               	movf	_rx_len,w,c
  4395  000694  0100               	movlb	0	; () banked
  4396  000696  6FF2               	movwf	??_receiveData& (0+255),b
  4397  000698  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4398  00069A  0EFF               	movlw	255
  4399  00069C  0100               	movlb	0	; () banked
  4400  00069E  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4401  0006A0  0EFF               	movlw	255
  4402  0006A2  0100               	movlb	0	; () banked
  4403  0006A4  6FF5               	movwf	(??_receiveData+3)& (0+255),b
  4404  0006A6  503D               	movf	_rx_array_inx,w,c
  4405  0006A8  0100               	movlb	0	; () banked
  4406  0006AA  6FF6               	movwf	(??_receiveData+4)& (0+255),b
  4407  0006AC  6BF7               	clrf	(??_receiveData+5)& (0+255),b
  4408  0006AE  0100               	movlb	0	; () banked
  4409  0006B0  51F4               	movf	(??_receiveData+2)& (0+255),w,b
  4410  0006B2  0100               	movlb	0	; () banked
  4411  0006B4  27F6               	addwf	(??_receiveData+4)& (0+255),f,b
  4412  0006B6  0100               	movlb	0	; () banked
  4413  0006B8  51F5               	movf	(??_receiveData+3)& (0+255),w,b
  4414  0006BA  0100               	movlb	0	; () banked
  4415  0006BC  23F7               	addwfc	(??_receiveData+5)& (0+255),f,b
  4416  0006BE  0100               	movlb	0	; () banked
  4417  0006C0  51F2               	movf	??_receiveData& (0+255),w,b
  4418  0006C2  0100               	movlb	0	; () banked
  4419  0006C4  19F6               	xorwf	(??_receiveData+4)& (0+255),w,b
  4420  0006C6  E105               	bnz	u7151
  4421  0006C8  0100               	movlb	0	; () banked
  4422  0006CA  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4423  0006CC  0100               	movlb	0	; () banked
  4424  0006CE  19F7               	xorwf	(??_receiveData+5)& (0+255),w,b
  4425  0006D0  A4D8               	btfss	status,2,c
  4426  0006D2                     u7151:
  4427  0006D2  D0A1               	goto	l6710
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;FastTransfer.c: 216: calc_CS = CRC8(rx_buffer, rx_len);
  4431  0006D4  0E00               	movlw	low _rx_buffer
  4432  0006D6  6E1B               	movwf	CRC8@data,c
  4433  0006D8  0E05               	movlw	high _rx_buffer
  4434  0006DA  6E1C               	movwf	CRC8@data+1,c
  4435  0006DC  C03E  F01D         	movff	_rx_len,CRC8@len
  4436  0006E0  EC0B  F015         	call	_CRC8	;wreg free
  4437  0006E4  6E37               	movwf	_calc_CS,c
  4438                           
  4439                           ;FastTransfer.c: 220: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  4440  0006E6  0EFF               	movlw	255
  4441  0006E8  0100               	movlb	0	; () banked
  4442  0006EA  6FF2               	movwf	??_receiveData& (0+255),b
  4443  0006EC  0EFF               	movlw	255
  4444  0006EE  0100               	movlb	0	; () banked
  4445  0006F0  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4446  0006F2  503D               	movf	_rx_array_inx,w,c
  4447  0006F4  0100               	movlb	0	; () banked
  4448  0006F6  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4449  0006F8  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4450  0006FA  0100               	movlb	0	; () banked
  4451  0006FC  51F2               	movf	??_receiveData& (0+255),w,b
  4452  0006FE  0100               	movlb	0	; () banked
  4453  000700  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4454  000702  0100               	movlb	0	; () banked
  4455  000704  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4456  000706  0100               	movlb	0	; () banked
  4457  000708  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4458  00070A  0E00               	movlw	low _rx_buffer
  4459  00070C  0100               	movlb	0	; () banked
  4460  00070E  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4461  000710  6ED9               	movwf	fsr2l,c
  4462  000712  0E05               	movlw	high _rx_buffer
  4463  000714  0100               	movlb	0	; () banked
  4464  000716  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4465  000718  6EDA               	movwf	fsr2h,c
  4466  00071A  5037               	movf	_calc_CS,w,c
  4467  00071C  18DE               	xorwf	postinc2,w,c
  4468  00071E  A4D8               	btfss	status,2,c
  4469  000720  D06F               	goto	l6698
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;FastTransfer.c: 223: int r;
  4473                           ;FastTransfer.c: 224: for (r = 0; r < rx_len; r = r + 3) {
  4474  000722  0E00               	movlw	0
  4475  000724  6E29               	movwf	receiveData@r+1,c
  4476  000726  0E00               	movlw	0
  4477  000728  6E28               	movwf	receiveData@r,c
  4478  00072A  D050               	goto	l6686
  4479  00072C                     l6676:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;FastTransfer.c: 225: if (rx_buffer[r] < maxDataAddress) {
  4483  00072C  0E00               	movlw	low _rx_buffer
  4484  00072E  2428               	addwf	receiveData@r,w,c
  4485  000730  6ED9               	movwf	fsr2l,c
  4486  000732  0E05               	movlw	high _rx_buffer
  4487  000734  2029               	addwfc	receiveData@r+1,w,c
  4488  000736  6EDA               	movwf	fsr2h,c
  4489  000738  5039               	movf	_maxDataAddress,w,c
  4490  00073A  5CDE               	subwf	postinc2,w,c
  4491  00073C  B0D8               	btfsc	status,0,c
  4492  00073E  D03D               	goto	l6682
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;FastTransfer.c: 226: group.parts[0] = rx_buffer[r + 1];
  4496  000740  0E01               	movlw	1
  4497  000742  2428               	addwf	receiveData@r,w,c
  4498  000744  0100               	movlb	0	; () banked
  4499  000746  6FF2               	movwf	??_receiveData& (0+255),b
  4500  000748  0E00               	movlw	0
  4501  00074A  2029               	addwfc	receiveData@r+1,w,c
  4502  00074C  0100               	movlb	0	; () banked
  4503  00074E  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4504  000750  0E00               	movlw	low _rx_buffer
  4505  000752  0100               	movlb	0	; () banked
  4506  000754  25F2               	addwf	??_receiveData& (0+255),w,b
  4507  000756  6ED9               	movwf	fsr2l,c
  4508  000758  0E05               	movlw	high _rx_buffer
  4509  00075A  0100               	movlb	0	; () banked
  4510  00075C  21F3               	addwfc	(??_receiveData+1)& (0+255),w,b
  4511  00075E  6EDA               	movwf	fsr2h,c
  4512  000760  50DF               	movf	indf2,w,c
  4513  000762  6E2B               	movwf	_group,c
  4514                           
  4515                           ;FastTransfer.c: 227: group.parts[1] = rx_buffer[r + 2];
  4516  000764  0E02               	movlw	2
  4517  000766  2428               	addwf	receiveData@r,w,c
  4518  000768  0100               	movlb	0	; () banked
  4519  00076A  6FF2               	movwf	??_receiveData& (0+255),b
  4520  00076C  0E00               	movlw	0
  4521  00076E  2029               	addwfc	receiveData@r+1,w,c
  4522  000770  0100               	movlb	0	; () banked
  4523  000772  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4524  000774  0E00               	movlw	low _rx_buffer
  4525  000776  0100               	movlb	0	; () banked
  4526  000778  25F2               	addwf	??_receiveData& (0+255),w,b
  4527  00077A  6ED9               	movwf	fsr2l,c
  4528  00077C  0E05               	movlw	high _rx_buffer
  4529  00077E  0100               	movlb	0	; () banked
  4530  000780  21F3               	addwfc	(??_receiveData+1)& (0+255),w,b
  4531  000782  6EDA               	movwf	fsr2h,c
  4532  000784  50DF               	movf	indf2,w,c
  4533  000786  6E2C               	movwf	_group+1,c
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;FastTransfer.c: 228: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4537  000788  0E00               	movlw	low _rx_buffer
  4538  00078A  2428               	addwf	receiveData@r,w,c
  4539  00078C  6ED9               	movwf	fsr2l,c
  4540  00078E  0E05               	movlw	high _rx_buffer
  4541  000790  2029               	addwfc	receiveData@r+1,w,c
  4542  000792  6EDA               	movwf	fsr2h,c
  4543  000794  50DF               	movf	indf2,w,c
  4544  000796  0100               	movlb	0	; () banked
  4545  000798  6FF2               	movwf	??_receiveData& (0+255),b
  4546  00079A  0100               	movlb	0	; () banked
  4547  00079C  51F2               	movf	??_receiveData& (0+255),w,b
  4548  00079E  0D02               	mullw	2
  4549  0007A0  50F3               	movf	prodl,w,c
  4550  0007A2  0100               	movlb	0	; () banked
  4551  0007A4  25D7               	addwf	_receiveArrayAddress& (0+255),w,b
  4552  0007A6  6ED9               	movwf	fsr2l,c
  4553  0007A8  50F4               	movf	prodh,w,c
  4554  0007AA  0100               	movlb	0	; () banked
  4555  0007AC  21D8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4556  0007AE  6EDA               	movwf	fsr2h,c
  4557  0007B0  C02B  FFDE         	movff	_group,postinc2
  4558  0007B4  C02C  FFDD         	movff	_group+1,postdec2
  4559                           
  4560                           ;FastTransfer.c: 229: } else {
  4561  0007B8  D003               	goto	l6684
  4562  0007BA                     l6682:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;FastTransfer.c: 230: dataAdressErrorCounter++;
  4566  0007BA  0100               	movlb	0	; () banked
  4567  0007BC  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4568  0007BE  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4569  0007C0                     l6684:
  4570                           
  4571                           ; BSR set to: 0
  4572  0007C0  0E03               	movlw	3
  4573  0007C2  2428               	addwf	receiveData@r,w,c
  4574  0007C4  6E28               	movwf	receiveData@r,c
  4575  0007C6  0E00               	movlw	0
  4576  0007C8  2029               	addwfc	receiveData@r+1,w,c
  4577  0007CA  6E29               	movwf	receiveData@r+1,c
  4578  0007CC                     l6686:
  4579                           
  4580                           ; BSR set to: 0
  4581  0007CC  503E               	movf	_rx_len,w,c
  4582  0007CE  0100               	movlb	0	; () banked
  4583  0007D0  6FF2               	movwf	??_receiveData& (0+255),b
  4584  0007D2  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4585  0007D4  0100               	movlb	0	; () banked
  4586  0007D6  51F2               	movf	??_receiveData& (0+255),w,b
  4587  0007D8  5C28               	subwf	receiveData@r,w,c
  4588  0007DA  5029               	movf	receiveData@r+1,w,c
  4589  0007DC  0A80               	xorlw	128
  4590  0007DE  0100               	movlb	0	; () banked
  4591  0007E0  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4592  0007E2  0100               	movlb	0	; () banked
  4593  0007E4  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4594  0007E6  0A80               	xorlw	128
  4595  0007E8  0100               	movlb	0	; () banked
  4596  0007EA  59F4               	subwfb	(??_receiveData+2)& (0+255),w,b
  4597  0007EC  A0D8               	btfss	status,0,c
  4598  0007EE  D79E               	goto	l6676
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;FastTransfer.c: 231: }
  4602                           ;FastTransfer.c: 232: }
  4603                           ;FastTransfer.c: 253: rx_len = 0;
  4604                           
  4605                           ; BSR set to: 0
  4606  0007F0  0E00               	movlw	0
  4607  0007F2  6E3E               	movwf	_rx_len,c
  4608                           
  4609                           ;FastTransfer.c: 254: rx_array_inx = 0;
  4610  0007F4  0E00               	movlw	0
  4611  0007F6  6E3D               	movwf	_rx_array_inx,c
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;FastTransfer.c: 255: wipeRxBuffer();
  4615  0007F8  ECD2  F015         	call	_wipeRxBuffer	;wreg free
  4616                           
  4617                           ;FastTransfer.c: 256: return 1;
  4618  0007FC  0E01               	movlw	1
  4619  0007FE  0012               	return	
  4620  000800                     l6698:
  4621                           
  4622                           ;FastTransfer.c: 258: crcErrorCounter++;
  4623  000800  0100               	movlb	0	; () banked
  4624  000802  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4625  000804  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;FastTransfer.c: 278: rx_len = 0;
  4629  000806  0E00               	movlw	0
  4630  000808  6E3E               	movwf	_rx_len,c
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;FastTransfer.c: 279: rx_array_inx = 0;
  4634  00080A  0E00               	movlw	0
  4635  00080C  6E3D               	movwf	_rx_array_inx,c
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;FastTransfer.c: 280: wipeRxBuffer();
  4639  00080E  ECD2  F015         	call	_wipeRxBuffer	;wreg free
  4640                           
  4641                           ;FastTransfer.c: 281: return 0;
  4642  000812  0E00               	movlw	0
  4643  000814  0012               	return	
  4644  000816                     l6710:
  4645                           
  4646                           ;FastTransfer.c: 282: }
  4647                           ;FastTransfer.c: 283: }
  4648                           ;FastTransfer.c: 284: }
  4649                           ;FastTransfer.c: 287: return 0;
  4650  000816  0E00               	movlw	0
  4651  000818  0012               	return	
  4652  00081A                     __end_of_receiveData:
  4653                           	opt stack 0
  4654                           tosu	equ	0xFFF
  4655                           tosh	equ	0xFFE
  4656                           tosl	equ	0xFFD
  4657                           pclath	equ	0xFFA
  4658                           tblptru	equ	0xFF8
  4659                           tblptrh	equ	0xFF7
  4660                           tblptrl	equ	0xFF6
  4661                           tablat	equ	0xFF5
  4662                           prodh	equ	0xFF4
  4663                           prodl	equ	0xFF3
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           plusw2	equ	0xFDB
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _wipeRxBuffer *****************
  4676 ;; Defined at:
  4677 ;;		line 77 in file "FastTransfer.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  i               2   26[COMRAM] int 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4691 ;;      Params:         0       0       0       0       0       0       0
  4692 ;;      Locals:         2       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0
  4694 ;;      Totals:         2       0       0       0       0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    4
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_receiveData
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text15
  4706  002BA4                     __ptext15:
  4707                           	opt stack 0
  4708  002BA4                     _wipeRxBuffer:
  4709                           	opt stack 24
  4710                           
  4711                           ;FastTransfer.c: 79: int i=0;
  4712                           
  4713                           ;incstack = 0
  4714  002BA4  0E00               	movlw	0
  4715  002BA6  6E1C               	movwf	wipeRxBuffer@i+1,c
  4716  002BA8  0E00               	movlw	0
  4717  002BAA  6E1B               	movwf	wipeRxBuffer@i,c
  4718                           
  4719                           ;FastTransfer.c: 80: for(i=0;i<200;i++)
  4720  002BAC  0E00               	movlw	0
  4721  002BAE  6E1C               	movwf	wipeRxBuffer@i+1,c
  4722  002BB0  0E00               	movlw	0
  4723  002BB2  6E1B               	movwf	wipeRxBuffer@i,c
  4724  002BB4                     l4472:
  4725  002BB4  BE1C               	btfsc	wipeRxBuffer@i+1,7,c
  4726  002BB6  D006               	goto	l4476
  4727  002BB8  501C               	movf	wipeRxBuffer@i+1,w,c
  4728  002BBA  E10F               	bnz	l975
  4729  002BBC  0EC8               	movlw	200
  4730  002BBE  5C1B               	subwf	wipeRxBuffer@i,w,c
  4731  002BC0  B0D8               	btfsc	status,0,c
  4732  002BC2  0012               	return	
  4733  002BC4                     l4476:
  4734                           
  4735                           ;FastTransfer.c: 81: {
  4736                           ;FastTransfer.c: 82: rx_buffer[i]=0;
  4737  002BC4  0E00               	movlw	low _rx_buffer
  4738  002BC6  241B               	addwf	wipeRxBuffer@i,w,c
  4739  002BC8  6ED9               	movwf	fsr2l,c
  4740  002BCA  0E05               	movlw	high _rx_buffer
  4741  002BCC  201C               	addwfc	wipeRxBuffer@i+1,w,c
  4742  002BCE  6EDA               	movwf	fsr2h,c
  4743  002BD0  0E00               	movlw	0
  4744  002BD2  6EDF               	movwf	indf2,c
  4745  002BD4  4A1B               	infsnz	wipeRxBuffer@i,f,c
  4746  002BD6  2A1C               	incf	wipeRxBuffer@i+1,f,c
  4747  002BD8  D7ED               	goto	l4472
  4748  002BDA                     l975:
  4749  002BDA  0012               	return		;funcret
  4750  002BDC                     __end_of_wipeRxBuffer:
  4751                           	opt stack 0
  4752                           tosu	equ	0xFFF
  4753                           tosh	equ	0xFFE
  4754                           tosl	equ	0xFFD
  4755                           pclath	equ	0xFFA
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           postinc0	equ	0xFEE
  4764                           wreg	equ	0xFE8
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           plusw2	equ	0xFDB
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function _Receive_get *****************
  4774 ;; Defined at:
  4775 ;;		line 126 in file "UART.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      unsigned char 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4789 ;;      Params:         0       0       0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0
  4792 ;;      Totals:         0       0       0       0       0       0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    6
  4796 ;; This function calls:
  4797 ;;		_UART_buff_get
  4798 ;; This function is called by:
  4799 ;;		_SYSTEM_Initialize
  4800 ;;		_getch
  4801 ;;		_receiveData
  4802 ;;		_CRCcheck
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text16
  4807  002EF8                     __ptext16:
  4808                           	opt stack 0
  4809  002EF8                     _Receive_get:
  4810                           	opt stack 22
  4811                           
  4812                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  4813                           
  4814                           ;incstack = 0
  4815  002EF8  0E00               	movlw	low _input_buffer
  4816  002EFA  6E21               	movwf	UART_buff_get@_this,c
  4817  002EFC  0E03               	movlw	high _input_buffer
  4818  002EFE  6E22               	movwf	UART_buff_get@_this+1,c
  4819  002F00  EC0E  F011         	call	_UART_buff_get	;wreg free
  4820  002F04  0012               	return	
  4821  002F06                     __end_of_Receive_get:
  4822                           	opt stack 0
  4823                           tosu	equ	0xFFF
  4824                           tosh	equ	0xFFE
  4825                           tosl	equ	0xFFD
  4826                           pclath	equ	0xFFA
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           postinc0	equ	0xFEE
  4835                           wreg	equ	0xFE8
  4836                           indf2	equ	0xFDF
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           plusw2	equ	0xFDB
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function _UART_buff_get *****************
  4845 ;; Defined at:
  4846 ;;		line 81 in file "UART.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4849 ;;		 -> output_buffer(206), input_buffer(206), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  c               1   36[COMRAM] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      unsigned char 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4861 ;;      Params:         2       0       0       0       0       0       0
  4862 ;;      Locals:         1       0       0       0       0       0       0
  4863 ;;      Temps:          2       0       0       0       0       0       0
  4864 ;;      Totals:         5       0       0       0       0       0       0
  4865 ;;Total ram usage:        5 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    5
  4868 ;; This function calls:
  4869 ;;		_UART_buff_modulo_inc
  4870 ;; This function is called by:
  4871 ;;		_Receive_get
  4872 ;;		_Send_put
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text17
  4877  00221C                     __ptext17:
  4878                           	opt stack 0
  4879  00221C                     _UART_buff_get:
  4880                           	opt stack 21
  4881                           
  4882                           ;UART.c: 82: unsigned char c;
  4883                           ;UART.c: 83: if (_this->count > 0) {
  4884                           
  4885                           ;incstack = 0
  4886  00221C  EE20 F0CC          	lfsr	2,204
  4887  002220  5021               	movf	UART_buff_get@_this,w,c
  4888  002222  26D9               	addwf	fsr2l,f,c
  4889  002224  5022               	movf	UART_buff_get@_this+1,w,c
  4890  002226  22DA               	addwfc	fsr2h,f,c
  4891  002228  0E01               	movlw	1
  4892  00222A  BEDB               	btfsc	plusw2,7,c
  4893  00222C  D03C               	goto	l6070
  4894  00222E  0E01               	movlw	1
  4895  002230  50DB               	movf	plusw2,w,c
  4896  002232  E103               	bnz	u6090
  4897  002234  04DE               	decf	postinc2,w,c
  4898  002236  A0D8               	btfss	status,0,c
  4899  002238  D036               	goto	l6070
  4900  00223A                     u6090:
  4901                           
  4902                           ;UART.c: 84: c = _this->buf[_this->tail];
  4903  00223A  EE20 F0CA          	lfsr	2,202
  4904  00223E  5021               	movf	UART_buff_get@_this,w,c
  4905  002240  26D9               	addwf	fsr2l,f,c
  4906  002242  5022               	movf	UART_buff_get@_this+1,w,c
  4907  002244  22DA               	addwfc	fsr2h,f,c
  4908  002246  CFDE F023          	movff	postinc2,??_UART_buff_get
  4909  00224A  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  4910  00224E  5023               	movf	??_UART_buff_get,w,c
  4911  002250  2421               	addwf	UART_buff_get@_this,w,c
  4912  002252  6ED9               	movwf	fsr2l,c
  4913  002254  5024               	movf	??_UART_buff_get+1,w,c
  4914  002256  2022               	addwfc	UART_buff_get@_this+1,w,c
  4915  002258  6EDA               	movwf	fsr2h,c
  4916  00225A  50DF               	movf	indf2,w,c
  4917  00225C  6E25               	movwf	UART_buff_get@c,c
  4918                           
  4919                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4920  00225E  EE20 F0CA          	lfsr	2,202
  4921  002262  5021               	movf	UART_buff_get@_this,w,c
  4922  002264  26D9               	addwf	fsr2l,f,c
  4923  002266  5022               	movf	UART_buff_get@_this+1,w,c
  4924  002268  22DA               	addwfc	fsr2h,f,c
  4925  00226A  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4926  00226E  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4927  002272  0E00               	movlw	0
  4928  002274  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4929  002276  0EC8               	movlw	200
  4930  002278  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4931  00227A  EC7F  F016         	call	_UART_buff_modulo_inc	;wreg free
  4932  00227E  EE20 F0CA          	lfsr	2,202
  4933  002282  5021               	movf	UART_buff_get@_this,w,c
  4934  002284  26D9               	addwf	fsr2l,f,c
  4935  002286  5022               	movf	UART_buff_get@_this+1,w,c
  4936  002288  22DA               	addwfc	fsr2h,f,c
  4937  00228A  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4938  00228E  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4939                           
  4940                           ;UART.c: 86: --_this->count;
  4941  002292  EE20 F0CC          	lfsr	2,204
  4942  002296  5021               	movf	UART_buff_get@_this,w,c
  4943  002298  26D9               	addwf	fsr2l,f,c
  4944  00229A  5022               	movf	UART_buff_get@_this+1,w,c
  4945  00229C  22DA               	addwfc	fsr2h,f,c
  4946  00229E  06DE               	decf	postinc2,f,c
  4947  0022A0  0E00               	movlw	0
  4948  0022A2  5ADD               	subwfb	postdec2,f,c
  4949                           
  4950                           ;UART.c: 87: } else {
  4951  0022A4  D002               	goto	l1137
  4952  0022A6                     l6070:
  4953                           
  4954                           ;UART.c: 88: c = 0;
  4955  0022A6  0E00               	movlw	0
  4956  0022A8  6E25               	movwf	UART_buff_get@c,c
  4957  0022AA                     l1137:
  4958                           
  4959                           ;UART.c: 89: }
  4960                           ;UART.c: 90: return (c);
  4961  0022AA  5025               	movf	UART_buff_get@c,w,c
  4962  0022AC  0012               	return	
  4963  0022AE                     __end_of_UART_buff_get:
  4964                           	opt stack 0
  4965                           tosu	equ	0xFFF
  4966                           tosh	equ	0xFFE
  4967                           tosl	equ	0xFFD
  4968                           pclath	equ	0xFFA
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           postinc0	equ	0xFEE
  4977                           wreg	equ	0xFE8
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           postdec2	equ	0xFDD
  4981                           plusw2	equ	0xFDB
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _UART_buff_modulo_inc *****************
  4987 ;; Defined at:
  4988 ;;		line 106 in file "UART.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  value           2   26[COMRAM] const unsigned int 
  4991 ;;  modulus         2   28[COMRAM] const unsigned int 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  my_value        2   30[COMRAM] unsigned int 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  2   26[COMRAM] unsigned int 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5003 ;;      Params:         4       0       0       0       0       0       0
  5004 ;;      Locals:         2       0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0
  5006 ;;      Totals:         6       0       0       0       0       0       0
  5007 ;;Total ram usage:        6 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    4
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_UART_buff_put
  5014 ;;		_UART_buff_get
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text18
  5019  002CFE                     __ptext18:
  5020                           	opt stack 0
  5021  002CFE                     _UART_buff_modulo_inc:
  5022                           	opt stack 21
  5023                           
  5024                           ;UART.c: 107: unsigned int my_value = value + 1;
  5025                           
  5026                           ;incstack = 0
  5027  002CFE  0E01               	movlw	1
  5028  002D00  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5029  002D02  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5030  002D04  0E00               	movlw	0
  5031  002D06  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5032  002D08  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5033                           
  5034                           ;UART.c: 108: if (my_value >= modulus) {
  5035  002D0A  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5036  002D0C  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5037  002D0E  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5038  002D10  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5039  002D12  A0D8               	btfss	status,0,c
  5040  002D14  D004               	goto	l6030
  5041                           
  5042                           ;UART.c: 109: my_value = 0;
  5043  002D16  0E00               	movlw	0
  5044  002D18  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5045  002D1A  0E00               	movlw	0
  5046  002D1C  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5047  002D1E                     l6030:
  5048                           
  5049                           ;UART.c: 110: }
  5050                           ;UART.c: 111: return (my_value);
  5051  002D1E  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5052  002D22  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5053  002D26  0012               	return	
  5054  002D28                     __end_of_UART_buff_modulo_inc:
  5055                           	opt stack 0
  5056                           tosu	equ	0xFFF
  5057                           tosh	equ	0xFFE
  5058                           tosl	equ	0xFFD
  5059                           pclath	equ	0xFFA
  5060                           tblptru	equ	0xFF8
  5061                           tblptrh	equ	0xFF7
  5062                           tblptrl	equ	0xFF6
  5063                           tablat	equ	0xFF5
  5064                           prodh	equ	0xFF4
  5065                           prodl	equ	0xFF3
  5066                           intcon	equ	0xFF2
  5067                           postinc0	equ	0xFEE
  5068                           wreg	equ	0xFE8
  5069                           indf2	equ	0xFDF
  5070                           postinc2	equ	0xFDE
  5071                           postdec2	equ	0xFDD
  5072                           plusw2	equ	0xFDB
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function _Receive_available *****************
  5078 ;; Defined at:
  5079 ;;		line 122 in file "UART.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  2   28[COMRAM] int 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5093 ;;      Params:         2       0       0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0
  5095 ;;      Temps:          0       0       0       0       0       0       0
  5096 ;;      Totals:         2       0       0       0       0       0       0
  5097 ;;Total ram usage:        2 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    5
  5100 ;; This function calls:
  5101 ;;		_UART_buff_size
  5102 ;; This function is called by:
  5103 ;;		_SYSTEM_Initialize
  5104 ;;		_receiveData
  5105 ;;		_CRCcheck
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text19
  5110  002E92                     __ptext19:
  5111                           	opt stack 0
  5112  002E92                     _Receive_available:
  5113                           	opt stack 23
  5114                           
  5115                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5116                           
  5117                           ;incstack = 0
  5118  002E92  0E00               	movlw	low _input_buffer
  5119  002E94  6E1B               	movwf	UART_buff_size@_this,c
  5120  002E96  0E03               	movlw	high _input_buffer
  5121  002E98  6E1C               	movwf	UART_buff_size@_this+1,c
  5122  002E9A  EC54  F017         	call	_UART_buff_size	;wreg free
  5123  002E9E  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5124  002EA2  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5125  002EA6  0012               	return	
  5126  002EA8                     __end_of_Receive_available:
  5127                           	opt stack 0
  5128                           tosu	equ	0xFFF
  5129                           tosh	equ	0xFFE
  5130                           tosl	equ	0xFFD
  5131                           pclath	equ	0xFFA
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           intcon	equ	0xFF2
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           indf2	equ	0xFDF
  5142                           postinc2	equ	0xFDE
  5143                           postdec2	equ	0xFDD
  5144                           plusw2	equ	0xFDB
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function _UART_buff_size *****************
  5150 ;; Defined at:
  5151 ;;		line 102 in file "UART.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5154 ;;		 -> output_buffer(206), input_buffer(206), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2   26[COMRAM] int 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5166 ;;      Params:         2       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0
  5169 ;;      Totals:         2       0       0       0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    4
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_Receive_available
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text20
  5181  002EA8                     __ptext20:
  5182                           	opt stack 0
  5183  002EA8                     _UART_buff_size:
  5184                           	opt stack 23
  5185                           
  5186                           ;UART.c: 103: return (_this->count);
  5187                           
  5188                           ;incstack = 0
  5189  002EA8  EE20 F0CC          	lfsr	2,204
  5190  002EAC  501B               	movf	UART_buff_size@_this,w,c
  5191  002EAE  26D9               	addwf	fsr2l,f,c
  5192  002EB0  501C               	movf	UART_buff_size@_this+1,w,c
  5193  002EB2  22DA               	addwfc	fsr2h,f,c
  5194  002EB4  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5195  002EB8  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5196  002EBC  0012               	return	
  5197  002EBE                     __end_of_UART_buff_size:
  5198                           	opt stack 0
  5199                           tosu	equ	0xFFF
  5200                           tosh	equ	0xFFE
  5201                           tosl	equ	0xFFD
  5202                           pclath	equ	0xFFA
  5203                           tblptru	equ	0xFF8
  5204                           tblptrh	equ	0xFF7
  5205                           tblptrl	equ	0xFF6
  5206                           tablat	equ	0xFF5
  5207                           prodh	equ	0xFF4
  5208                           prodl	equ	0xFF3
  5209                           intcon	equ	0xFF2
  5210                           postinc0	equ	0xFEE
  5211                           wreg	equ	0xFE8
  5212                           indf2	equ	0xFDF
  5213                           postinc2	equ	0xFDE
  5214                           postdec2	equ	0xFDD
  5215                           plusw2	equ	0xFDB
  5216                           fsr2h	equ	0xFDA
  5217                           fsr2l	equ	0xFD9
  5218                           status	equ	0xFD8
  5219                           
  5220 ;; *************** function _CRC8 *****************
  5221 ;; Defined at:
  5222 ;;		line 106 in file "FastTransfer.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5225 ;;		 -> CRCcheck@arrayHolder(3), ring_buffer(206), rx_buffer(200), NULL(0), 
  5226 ;;  len             1   28[COMRAM] unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  sum             1   29[COMRAM] unsigned char 
  5229 ;;  tempI           1   31[COMRAM] unsigned char 
  5230 ;;  extract         1   30[COMRAM] unsigned char 
  5231 ;;  crc             1   32[COMRAM] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      unsigned char 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         3       0       0       0       0       0       0
  5242 ;;      Locals:         4       0       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0
  5244 ;;      Totals:         7       0       0       0       0       0       0
  5245 ;;Total ram usage:        7 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    4
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_sendData
  5252 ;;		_receiveData
  5253 ;;		_CRCcheck
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text21
  5258  002A16                     __ptext21:
  5259                           	opt stack 0
  5260  002A16                     _CRC8:
  5261                           	opt stack 23
  5262                           
  5263                           ;FastTransfer.c: 107: unsigned char crc = 0x00;
  5264                           
  5265                           ;incstack = 0
  5266  002A16  0E00               	movlw	0
  5267  002A18  6E21               	movwf	CRC8@crc,c
  5268                           
  5269                           ;FastTransfer.c: 108: while (len--) {
  5270  002A1A  D01C               	goto	l6148
  5271  002A1C                     l6132:
  5272                           
  5273                           ;FastTransfer.c: 109: unsigned char extract = *data++;
  5274  002A1C  C01B  FFD9         	movff	CRC8@data,fsr2l
  5275  002A20  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5276  002A24  50DF               	movf	indf2,w,c
  5277  002A26  6E1F               	movwf	CRC8@extract,c
  5278  002A28  4A1B               	infsnz	CRC8@data,f,c
  5279  002A2A  2A1C               	incf	CRC8@data+1,f,c
  5280                           
  5281                           ;FastTransfer.c: 110: unsigned char tempI;
  5282                           ;FastTransfer.c: 111: for (tempI = 8; tempI; tempI--) {
  5283  002A2C  0E08               	movlw	8
  5284  002A2E  6E20               	movwf	CRC8@tempI,c
  5285  002A30  D00E               	goto	l6146
  5286  002A32                     l6138:
  5287                           
  5288                           ;FastTransfer.c: 112: unsigned char sum = (crc ^ extract) & 0x01;
  5289  002A32  5021               	movf	CRC8@crc,w,c
  5290  002A34  181F               	xorwf	CRC8@extract,w,c
  5291  002A36  0B01               	andlw	1
  5292  002A38  6E1E               	movwf	CRC8@sum,c
  5293                           
  5294                           ;FastTransfer.c: 113: crc >>= 1;
  5295  002A3A  90D8               	bcf	status,0,c
  5296  002A3C  3221               	rrcf	CRC8@crc,f,c
  5297                           
  5298                           ;FastTransfer.c: 114: if (sum) {
  5299  002A3E  501E               	movf	CRC8@sum,w,c
  5300  002A40  B4D8               	btfsc	status,2,c
  5301  002A42  D002               	goto	l985
  5302                           
  5303                           ;FastTransfer.c: 115: crc ^= 0x8C;
  5304  002A44  0E8C               	movlw	140
  5305  002A46  1A21               	xorwf	CRC8@crc,f,c
  5306  002A48                     l985:
  5307                           
  5308                           ;FastTransfer.c: 116: }
  5309                           ;FastTransfer.c: 117: extract >>= 1;
  5310  002A48  90D8               	bcf	status,0,c
  5311  002A4A  321F               	rrcf	CRC8@extract,f,c
  5312  002A4C  0620               	decf	CRC8@tempI,f,c
  5313  002A4E                     l6146:
  5314  002A4E  5020               	movf	CRC8@tempI,w,c
  5315  002A50  A4D8               	btfss	status,2,c
  5316  002A52  D7EF               	goto	l6138
  5317  002A54                     l6148:
  5318  002A54  061D               	decf	CRC8@len,f,c
  5319  002A56  281D               	incf	CRC8@len,w,c
  5320  002A58  A4D8               	btfss	status,2,c
  5321  002A5A  D7E0               	goto	l6132
  5322                           
  5323                           ;FastTransfer.c: 118: }
  5324                           ;FastTransfer.c: 119: }
  5325                           ;FastTransfer.c: 120: return crc;
  5326  002A5C  5021               	movf	CRC8@crc,w,c
  5327  002A5E  0012               	return	
  5328  002A60                     __end_of_CRC8:
  5329                           	opt stack 0
  5330                           tosu	equ	0xFFF
  5331                           tosh	equ	0xFFE
  5332                           tosl	equ	0xFFD
  5333                           pclath	equ	0xFFA
  5334                           tblptru	equ	0xFF8
  5335                           tblptrh	equ	0xFF7
  5336                           tblptrl	equ	0xFF6
  5337                           tablat	equ	0xFF5
  5338                           prodh	equ	0xFF4
  5339                           prodl	equ	0xFF3
  5340                           intcon	equ	0xFF2
  5341                           postinc0	equ	0xFEE
  5342                           wreg	equ	0xFE8
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           plusw2	equ	0xFDB
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _handleIndicators *****************
  5352 ;; Defined at:
  5353 ;;		line 36 in file "Communications.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  receivedIndi    2   36[COMRAM] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  i               2    0[BANK0 ] int 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5367 ;;      Params:         2       0       0       0       0       0       0
  5368 ;;      Locals:         0       2       0       0       0       0       0
  5369 ;;      Temps:          3       0       0       0       0       0       0
  5370 ;;      Totals:         5       2       0       0       0       0       0
  5371 ;;Total ram usage:        7 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    6
  5374 ;; This function calls:
  5375 ;;		_SetLEDOut
  5376 ;; This function is called by:
  5377 ;;		_updateComms
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text22
  5382  0023CC                     __ptext22:
  5383                           	opt stack 0
  5384  0023CC                     _handleIndicators:
  5385                           	opt stack 23
  5386                           
  5387                           ;Communications.c: 37: static int oldIndicators = 0;
  5388                           ;Communications.c: 38: if (receivedIndicators != oldIndicators) {
  5389                           
  5390                           ;incstack = 0
  5391  0023CC  0100               	movlb	0	; () banked
  5392  0023CE  51DF               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5393  0023D0  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  5394  0023D2  E105               	bnz	u7190
  5395  0023D4  0100               	movlb	0	; () banked
  5396  0023D6  51E0               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5397  0023D8  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5398  0023DA  B4D8               	btfsc	status,2,c
  5399  0023DC  0012               	return	
  5400  0023DE                     u7190:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;Communications.c: 39: int i = 0;
  5404  0023DE  0E00               	movlw	0
  5405  0023E0  0100               	movlb	0	; () banked
  5406  0023E2  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  5407  0023E4  0E00               	movlw	0
  5408  0023E6  6FF2               	movwf	handleIndicators@i& (0+255),b
  5409                           
  5410                           ;Communications.c: 40: for (i = 0; i < 6; i++) {
  5411  0023E8  0E00               	movlw	0
  5412  0023EA  0100               	movlb	0	; () banked
  5413  0023EC  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  5414  0023EE  0E00               	movlw	0
  5415  0023F0  6FF2               	movwf	handleIndicators@i& (0+255),b
  5416                           
  5417                           ; BSR set to: 0
  5418  0023F2  0100               	movlb	0	; () banked
  5419  0023F4  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  5420  0023F6  D008               	goto	l6734
  5421  0023F8  0100               	movlb	0	; () banked
  5422  0023FA  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  5423  0023FC  E126               	bnz	l894
  5424  0023FE  0E06               	movlw	6
  5425  002400  0100               	movlb	0	; () banked
  5426  002402  5DF2               	subwf	handleIndicators@i& (0+255),w,b
  5427  002404  B0D8               	btfsc	status,0,c
  5428  002406  D021               	goto	l894
  5429  002408                     l6734:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;Communications.c: 41: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5433  002408  C0F2  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  5434  00240C  C0F3  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5435  002410  C0F2  F027         	movff	handleIndicators@i,??_handleIndicators
  5436  002414  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5437  002418  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5438  00241C  2A27               	incf	??_handleIndicators,f,c
  5439  00241E  D003               	goto	u7214
  5440  002420                     u7215:
  5441  002420  3429               	rlcf	??_handleIndicators+2,w,c
  5442  002422  3229               	rrcf	??_handleIndicators+2,f,c
  5443  002424  3228               	rrcf	??_handleIndicators+1,f,c
  5444  002426                     u7214:
  5445  002426  2E27               	decfsz	??_handleIndicators,f,c
  5446  002428  D7FB               	goto	u7215
  5447  00242A  0E01               	movlw	1
  5448  00242C  1428               	andwf	??_handleIndicators+1,w,c
  5449  00242E  6E21               	movwf	SetLEDOut@state,c
  5450  002430  6A22               	clrf	SetLEDOut@state+1,c
  5451  002432  EC7D  F005         	call	_SetLEDOut	;wreg free
  5452  002436  0100               	movlb	0	; () banked
  5453  002438  4BF2               	infsnz	handleIndicators@i& (0+255),f,b
  5454  00243A  2BF3               	incf	(handleIndicators@i+1)& (0+255),f,b
  5455                           
  5456                           ; BSR set to: 0
  5457  00243C  0100               	movlb	0	; () banked
  5458  00243E  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  5459  002440  D7E3               	goto	l6734
  5460  002442  0100               	movlb	0	; () banked
  5461  002444  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  5462  002446  E101               	bnz	u7220
  5463  002448  D7DA               	goto	L2
  5464  00244A                     u7220:
  5465  00244A                     l894:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;Communications.c: 42: }
  5469                           ;Communications.c: 43: oldIndicators = receivedIndicators;
  5470  00244A  C025  F0DF         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5471  00244E  C026  F0E0         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5472  002452  0012               	return	
  5473  002454                     __end_of_handleIndicators:
  5474                           	opt stack 0
  5475                           tosu	equ	0xFFF
  5476                           tosh	equ	0xFFE
  5477                           tosl	equ	0xFFD
  5478                           pclath	equ	0xFFA
  5479                           tblptru	equ	0xFF8
  5480                           tblptrh	equ	0xFF7
  5481                           tblptrl	equ	0xFF6
  5482                           tablat	equ	0xFF5
  5483                           prodh	equ	0xFF4
  5484                           prodl	equ	0xFF3
  5485                           intcon	equ	0xFF2
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf2	equ	0xFDF
  5489                           postinc2	equ	0xFDE
  5490                           postdec2	equ	0xFDD
  5491                           plusw2	equ	0xFDB
  5492                           fsr2h	equ	0xFDA
  5493                           fsr2l	equ	0xFD9
  5494                           status	equ	0xFD8
  5495                           
  5496 ;; *************** function _SetLEDOut *****************
  5497 ;; Defined at:
  5498 ;;		line 25 in file "IO.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  lednum          2   30[COMRAM] int 
  5501 ;;  state           2   32[COMRAM] int 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5513 ;;      Params:         4       0       0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0
  5515 ;;      Temps:          2       0       0       0       0       0       0
  5516 ;;      Totals:         6       0       0       0       0       0       0
  5517 ;;Total ram usage:        6 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    5
  5520 ;; This function calls:
  5521 ;;		_Off_Led
  5522 ;;		_setLED
  5523 ;; This function is called by:
  5524 ;;		_handleIndicators
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text23
  5529  000AFA                     __ptext23:
  5530                           	opt stack 0
  5531  000AFA                     _SetLEDOut:
  5532                           	opt stack 23
  5533                           
  5534                           ;IO.c: 26: switch (lednum) {
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;incstack = 0
  5538  000AFA  D138               	goto	l6360
  5539  000AFC                     l6226:
  5540                           
  5541                           ;IO.c: 28: if (state == 1) {
  5542  000AFC  0421               	decf	SetLEDOut@state,w,c
  5543  000AFE  1022               	iorwf	SetLEDOut@state+1,w,c
  5544  000B00  A4D8               	btfss	status,2,c
  5545  000B02  D00D               	goto	l6234
  5546                           
  5547                           ;IO.c: 29: Off_Led(0);
  5548  000B04  0E00               	movlw	0
  5549  000B06  6E1C               	movwf	Off_Led@led+1,c
  5550  000B08  0E00               	movlw	0
  5551  000B0A  6E1B               	movwf	Off_Led@led,c
  5552  000B0C  EC06  F00E         	call	_Off_Led	;wreg free
  5553                           
  5554                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  5555  000B10  828B               	bsf	3979,1,c	;volatile
  5556                           
  5557                           ;IO.c: 31: LED_array[0] = 1;
  5558  000B12  0E00               	movlw	0
  5559  000B14  0100               	movlb	0	; () banked
  5560  000B16  6F89               	movwf	(_LED_array+1)& (0+255),b
  5561  000B18  0E01               	movlw	1
  5562  000B1A  6F88               	movwf	_LED_array& (0+255),b
  5563                           
  5564                           ;IO.c: 32: } else if (state == 0) {
  5565  000B1C  0012               	return	
  5566  000B1E                     l6234:
  5567  000B1E  5021               	movf	SetLEDOut@state,w,c
  5568  000B20  1022               	iorwf	SetLEDOut@state+1,w,c
  5569  000B22  A4D8               	btfss	status,2,c
  5570  000B24  D00D               	goto	l6242
  5571                           
  5572                           ;IO.c: 33: Off_Led(0);
  5573  000B26  0E00               	movlw	0
  5574  000B28  6E1C               	movwf	Off_Led@led+1,c
  5575  000B2A  0E00               	movlw	0
  5576  000B2C  6E1B               	movwf	Off_Led@led,c
  5577  000B2E  EC06  F00E         	call	_Off_Led	;wreg free
  5578                           
  5579                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  5580  000B32  928B               	bcf	3979,1,c	;volatile
  5581                           
  5582                           ;IO.c: 35: LED_array[0] = 0;
  5583  000B34  0E00               	movlw	0
  5584  000B36  0100               	movlb	0	; () banked
  5585  000B38  6F89               	movwf	(_LED_array+1)& (0+255),b
  5586  000B3A  0E00               	movlw	0
  5587  000B3C  6F88               	movwf	_LED_array& (0+255),b
  5588                           
  5589                           ;IO.c: 36: }
  5590  000B3E  0012               	return	
  5591  000B40                     l6242:
  5592                           
  5593                           ;IO.c: 37: else if (state == 2) {
  5594  000B40  0E02               	movlw	2
  5595  000B42  1821               	xorwf	SetLEDOut@state,w,c
  5596  000B44  1022               	iorwf	SetLEDOut@state+1,w,c
  5597  000B46  A4D8               	btfss	status,2,c
  5598  000B48  0012               	return	
  5599                           
  5600                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  5601  000B4A  928B               	bcf	3979,1,c	;volatile
  5602                           
  5603                           ;IO.c: 40: setLED(0);
  5604  000B4C  0E00               	movlw	0
  5605  000B4E  6E1C               	movwf	setLED@led+1,c
  5606  000B50  0E00               	movlw	0
  5607  000B52  6E1B               	movwf	setLED@led,c
  5608  000B54  EC6B  F00E         	call	_setLED	;wreg free
  5609                           
  5610                           ;IO.c: 41: LED_array[0] = 2;
  5611  000B58  0E00               	movlw	0
  5612  000B5A  0100               	movlb	0	; () banked
  5613  000B5C  6F89               	movwf	(_LED_array+1)& (0+255),b
  5614  000B5E  0E02               	movlw	2
  5615  000B60  6F88               	movwf	_LED_array& (0+255),b
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;IO.c: 43: }
  5619                           ;IO.c: 44: break;
  5620                           
  5621                           ; BSR set to: 0
  5622                           
  5623                           ; BSR set to: 0
  5624  000B62  0012               	return	
  5625  000B64                     l6248:
  5626                           
  5627                           ;IO.c: 47: if (state == 1) {
  5628  000B64  0421               	decf	SetLEDOut@state,w,c
  5629  000B66  1022               	iorwf	SetLEDOut@state+1,w,c
  5630  000B68  A4D8               	btfss	status,2,c
  5631  000B6A  D00D               	goto	l6256
  5632                           
  5633                           ;IO.c: 48: Off_Led(1);
  5634  000B6C  0E00               	movlw	0
  5635  000B6E  6E1C               	movwf	Off_Led@led+1,c
  5636  000B70  0E01               	movlw	1
  5637  000B72  6E1B               	movwf	Off_Led@led,c
  5638  000B74  EC06  F00E         	call	_Off_Led	;wreg free
  5639                           
  5640                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  5641  000B78  8C89               	bsf	3977,6,c	;volatile
  5642                           
  5643                           ;IO.c: 50: LED_array[1] = 1;
  5644  000B7A  0E00               	movlw	0
  5645  000B7C  0100               	movlb	0	; () banked
  5646  000B7E  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5647  000B80  0E01               	movlw	1
  5648  000B82  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5649                           
  5650                           ;IO.c: 51: } else if (state == 0) {
  5651  000B84  0012               	return	
  5652  000B86                     l6256:
  5653  000B86  5021               	movf	SetLEDOut@state,w,c
  5654  000B88  1022               	iorwf	SetLEDOut@state+1,w,c
  5655  000B8A  A4D8               	btfss	status,2,c
  5656  000B8C  D00D               	goto	l6264
  5657                           
  5658                           ;IO.c: 52: Off_Led(1);
  5659  000B8E  0E00               	movlw	0
  5660  000B90  6E1C               	movwf	Off_Led@led+1,c
  5661  000B92  0E01               	movlw	1
  5662  000B94  6E1B               	movwf	Off_Led@led,c
  5663  000B96  EC06  F00E         	call	_Off_Led	;wreg free
  5664                           
  5665                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  5666  000B9A  9C89               	bcf	3977,6,c	;volatile
  5667                           
  5668                           ;IO.c: 54: LED_array[1] = 0;
  5669  000B9C  0E00               	movlw	0
  5670  000B9E  0100               	movlb	0	; () banked
  5671  000BA0  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5672  000BA2  0E00               	movlw	0
  5673  000BA4  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5674                           
  5675                           ;IO.c: 55: } else if (state == 2) {
  5676  000BA6  0012               	return	
  5677  000BA8                     l6264:
  5678  000BA8  0E02               	movlw	2
  5679  000BAA  1821               	xorwf	SetLEDOut@state,w,c
  5680  000BAC  1022               	iorwf	SetLEDOut@state+1,w,c
  5681  000BAE  A4D8               	btfss	status,2,c
  5682  000BB0  0012               	return	
  5683                           
  5684                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  5685  000BB2  9C89               	bcf	3977,6,c	;volatile
  5686                           
  5687                           ;IO.c: 58: setLED(1);
  5688  000BB4  0E00               	movlw	0
  5689  000BB6  6E1C               	movwf	setLED@led+1,c
  5690  000BB8  0E01               	movlw	1
  5691  000BBA  6E1B               	movwf	setLED@led,c
  5692  000BBC  EC6B  F00E         	call	_setLED	;wreg free
  5693                           
  5694                           ;IO.c: 59: LED_array[1] = 2;
  5695  000BC0  0E00               	movlw	0
  5696  000BC2  0100               	movlb	0	; () banked
  5697  000BC4  6F8B               	movwf	(_LED_array+3)& (0+255),b
  5698  000BC6  0E02               	movlw	2
  5699  000BC8  6F8A               	movwf	(_LED_array+2)& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;IO.c: 61: }
  5703                           ;IO.c: 62: break;
  5704                           
  5705                           ; BSR set to: 0
  5706                           
  5707                           ; BSR set to: 0
  5708  000BCA  0012               	return	
  5709  000BCC                     l6270:
  5710                           
  5711                           ;IO.c: 64: if (state == 1) {
  5712  000BCC  0421               	decf	SetLEDOut@state,w,c
  5713  000BCE  1022               	iorwf	SetLEDOut@state+1,w,c
  5714  000BD0  A4D8               	btfss	status,2,c
  5715  000BD2  D00D               	goto	l6278
  5716                           
  5717                           ;IO.c: 65: Off_Led(2);
  5718  000BD4  0E00               	movlw	0
  5719  000BD6  6E1C               	movwf	Off_Led@led+1,c
  5720  000BD8  0E02               	movlw	2
  5721  000BDA  6E1B               	movwf	Off_Led@led,c
  5722  000BDC  EC06  F00E         	call	_Off_Led	;wreg free
  5723                           
  5724                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  5725  000BE0  8E89               	bsf	3977,7,c	;volatile
  5726                           
  5727                           ;IO.c: 67: LED_array[2] = 1;
  5728  000BE2  0E00               	movlw	0
  5729  000BE4  0100               	movlb	0	; () banked
  5730  000BE6  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5731  000BE8  0E01               	movlw	1
  5732  000BEA  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5733                           
  5734                           ;IO.c: 68: } else if (state == 0) {
  5735  000BEC  0012               	return	
  5736  000BEE                     l6278:
  5737  000BEE  5021               	movf	SetLEDOut@state,w,c
  5738  000BF0  1022               	iorwf	SetLEDOut@state+1,w,c
  5739  000BF2  A4D8               	btfss	status,2,c
  5740  000BF4  D00D               	goto	l6286
  5741                           
  5742                           ;IO.c: 69: Off_Led(2);
  5743  000BF6  0E00               	movlw	0
  5744  000BF8  6E1C               	movwf	Off_Led@led+1,c
  5745  000BFA  0E02               	movlw	2
  5746  000BFC  6E1B               	movwf	Off_Led@led,c
  5747  000BFE  EC06  F00E         	call	_Off_Led	;wreg free
  5748                           
  5749                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  5750  000C02  9E89               	bcf	3977,7,c	;volatile
  5751                           
  5752                           ;IO.c: 71: LED_array[2] = 0;
  5753  000C04  0E00               	movlw	0
  5754  000C06  0100               	movlb	0	; () banked
  5755  000C08  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5756  000C0A  0E00               	movlw	0
  5757  000C0C  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5758                           
  5759                           ;IO.c: 72: } else if (state == 2) {
  5760  000C0E  0012               	return	
  5761  000C10                     l6286:
  5762  000C10  0E02               	movlw	2
  5763  000C12  1821               	xorwf	SetLEDOut@state,w,c
  5764  000C14  1022               	iorwf	SetLEDOut@state+1,w,c
  5765  000C16  A4D8               	btfss	status,2,c
  5766  000C18  0012               	return	
  5767                           
  5768                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  5769  000C1A  9E89               	bcf	3977,7,c	;volatile
  5770                           
  5771                           ;IO.c: 75: setLED(2);
  5772  000C1C  0E00               	movlw	0
  5773  000C1E  6E1C               	movwf	setLED@led+1,c
  5774  000C20  0E02               	movlw	2
  5775  000C22  6E1B               	movwf	setLED@led,c
  5776  000C24  EC6B  F00E         	call	_setLED	;wreg free
  5777                           
  5778                           ;IO.c: 77: LED_array[2] = 2;
  5779  000C28  0E00               	movlw	0
  5780  000C2A  0100               	movlb	0	; () banked
  5781  000C2C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  5782  000C2E  0E02               	movlw	2
  5783  000C30  6F8C               	movwf	(_LED_array+4)& (0+255),b
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;IO.c: 79: }
  5787                           ;IO.c: 82: break;
  5788                           
  5789                           ; BSR set to: 0
  5790                           
  5791                           ; BSR set to: 0
  5792  000C32  0012               	return	
  5793  000C34                     l6292:
  5794                           
  5795                           ;IO.c: 85: if (state == 1) {
  5796  000C34  0421               	decf	SetLEDOut@state,w,c
  5797  000C36  1022               	iorwf	SetLEDOut@state+1,w,c
  5798  000C38  A4D8               	btfss	status,2,c
  5799  000C3A  D00D               	goto	l6300
  5800                           
  5801                           ;IO.c: 86: Off_Led(3);
  5802  000C3C  0E00               	movlw	0
  5803  000C3E  6E1C               	movwf	Off_Led@led+1,c
  5804  000C40  0E03               	movlw	3
  5805  000C42  6E1B               	movwf	Off_Led@led,c
  5806  000C44  EC06  F00E         	call	_Off_Led	;wreg free
  5807                           
  5808                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  5809  000C48  848D               	bsf	3981,2,c	;volatile
  5810                           
  5811                           ;IO.c: 88: LED_array[3] = 1;
  5812  000C4A  0E00               	movlw	0
  5813  000C4C  0100               	movlb	0	; () banked
  5814  000C4E  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5815  000C50  0E01               	movlw	1
  5816  000C52  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5817                           
  5818                           ;IO.c: 89: } else if (state == 0) {
  5819  000C54  0012               	return	
  5820  000C56                     l6300:
  5821  000C56  5021               	movf	SetLEDOut@state,w,c
  5822  000C58  1022               	iorwf	SetLEDOut@state+1,w,c
  5823  000C5A  A4D8               	btfss	status,2,c
  5824  000C5C  D00D               	goto	l6308
  5825                           
  5826                           ;IO.c: 90: Off_Led(3);
  5827  000C5E  0E00               	movlw	0
  5828  000C60  6E1C               	movwf	Off_Led@led+1,c
  5829  000C62  0E03               	movlw	3
  5830  000C64  6E1B               	movwf	Off_Led@led,c
  5831  000C66  EC06  F00E         	call	_Off_Led	;wreg free
  5832                           
  5833                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  5834  000C6A  948D               	bcf	3981,2,c	;volatile
  5835                           
  5836                           ;IO.c: 92: LED_array[3] = 0;
  5837  000C6C  0E00               	movlw	0
  5838  000C6E  0100               	movlb	0	; () banked
  5839  000C70  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5840  000C72  0E00               	movlw	0
  5841  000C74  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5842                           
  5843                           ;IO.c: 93: }
  5844  000C76  0012               	return	
  5845  000C78                     l6308:
  5846                           
  5847                           ;IO.c: 94: else if (state == 2) {
  5848  000C78  0E02               	movlw	2
  5849  000C7A  1821               	xorwf	SetLEDOut@state,w,c
  5850  000C7C  1022               	iorwf	SetLEDOut@state+1,w,c
  5851  000C7E  A4D8               	btfss	status,2,c
  5852  000C80  0012               	return	
  5853                           
  5854                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  5855  000C82  948D               	bcf	3981,2,c	;volatile
  5856                           
  5857                           ;IO.c: 96: setLED(3);
  5858  000C84  0E00               	movlw	0
  5859  000C86  6E1C               	movwf	setLED@led+1,c
  5860  000C88  0E03               	movlw	3
  5861  000C8A  6E1B               	movwf	setLED@led,c
  5862  000C8C  EC6B  F00E         	call	_setLED	;wreg free
  5863                           
  5864                           ;IO.c: 97: LED_array[3] = 2;
  5865  000C90  0E00               	movlw	0
  5866  000C92  0100               	movlb	0	; () banked
  5867  000C94  6F8F               	movwf	(_LED_array+7)& (0+255),b
  5868  000C96  0E02               	movlw	2
  5869  000C98  6F8E               	movwf	(_LED_array+6)& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;IO.c: 99: }
  5873                           ;IO.c: 101: break;
  5874                           
  5875                           ; BSR set to: 0
  5876                           
  5877                           ; BSR set to: 0
  5878  000C9A  0012               	return	
  5879  000C9C                     l6314:
  5880                           
  5881                           ;IO.c: 103: if (state == 1) {
  5882  000C9C  0421               	decf	SetLEDOut@state,w,c
  5883  000C9E  1022               	iorwf	SetLEDOut@state+1,w,c
  5884  000CA0  A4D8               	btfss	status,2,c
  5885  000CA2  D00D               	goto	l6322
  5886                           
  5887                           ;IO.c: 104: Off_Led(4);
  5888  000CA4  0E00               	movlw	0
  5889  000CA6  6E1C               	movwf	Off_Led@led+1,c
  5890  000CA8  0E04               	movlw	4
  5891  000CAA  6E1B               	movwf	Off_Led@led,c
  5892  000CAC  EC06  F00E         	call	_Off_Led	;wreg free
  5893                           
  5894                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  5895  000CB0  828D               	bsf	3981,1,c	;volatile
  5896                           
  5897                           ;IO.c: 106: LED_array[4] = 1;
  5898  000CB2  0E00               	movlw	0
  5899  000CB4  0100               	movlb	0	; () banked
  5900  000CB6  6F91               	movwf	(_LED_array+9)& (0+255),b
  5901  000CB8  0E01               	movlw	1
  5902  000CBA  6F90               	movwf	(_LED_array+8)& (0+255),b
  5903                           
  5904                           ;IO.c: 107: } else if (state == 0) {
  5905  000CBC  0012               	return	
  5906  000CBE                     l6322:
  5907  000CBE  5021               	movf	SetLEDOut@state,w,c
  5908  000CC0  1022               	iorwf	SetLEDOut@state+1,w,c
  5909  000CC2  A4D8               	btfss	status,2,c
  5910  000CC4  D00D               	goto	l6330
  5911                           
  5912                           ;IO.c: 108: Off_Led(4);
  5913  000CC6  0E00               	movlw	0
  5914  000CC8  6E1C               	movwf	Off_Led@led+1,c
  5915  000CCA  0E04               	movlw	4
  5916  000CCC  6E1B               	movwf	Off_Led@led,c
  5917  000CCE  EC06  F00E         	call	_Off_Led	;wreg free
  5918                           
  5919                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  5920  000CD2  928D               	bcf	3981,1,c	;volatile
  5921                           
  5922                           ;IO.c: 110: LED_array[4] = 0;
  5923  000CD4  0E00               	movlw	0
  5924  000CD6  0100               	movlb	0	; () banked
  5925  000CD8  6F91               	movwf	(_LED_array+9)& (0+255),b
  5926  000CDA  0E00               	movlw	0
  5927  000CDC  6F90               	movwf	(_LED_array+8)& (0+255),b
  5928                           
  5929                           ;IO.c: 111: }
  5930  000CDE  0012               	return	
  5931  000CE0                     l6330:
  5932                           
  5933                           ;IO.c: 112: else if (state == 2) {
  5934  000CE0  0E02               	movlw	2
  5935  000CE2  1821               	xorwf	SetLEDOut@state,w,c
  5936  000CE4  1022               	iorwf	SetLEDOut@state+1,w,c
  5937  000CE6  A4D8               	btfss	status,2,c
  5938  000CE8  0012               	return	
  5939                           
  5940                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  5941  000CEA  928D               	bcf	3981,1,c	;volatile
  5942                           
  5943                           ;IO.c: 114: setLED(4);
  5944  000CEC  0E00               	movlw	0
  5945  000CEE  6E1C               	movwf	setLED@led+1,c
  5946  000CF0  0E04               	movlw	4
  5947  000CF2  6E1B               	movwf	setLED@led,c
  5948  000CF4  EC6B  F00E         	call	_setLED	;wreg free
  5949                           
  5950                           ;IO.c: 115: LED_array[4] = 2;
  5951  000CF8  0E00               	movlw	0
  5952  000CFA  0100               	movlb	0	; () banked
  5953  000CFC  6F91               	movwf	(_LED_array+9)& (0+255),b
  5954  000CFE  0E02               	movlw	2
  5955  000D00  6F90               	movwf	(_LED_array+8)& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;IO.c: 116: }
  5959                           ;IO.c: 118: break;
  5960                           
  5961                           ; BSR set to: 0
  5962                           
  5963                           ; BSR set to: 0
  5964  000D02  0012               	return	
  5965  000D04                     l6336:
  5966                           
  5967                           ;IO.c: 120: if (state == 1) {
  5968  000D04  0421               	decf	SetLEDOut@state,w,c
  5969  000D06  1022               	iorwf	SetLEDOut@state+1,w,c
  5970  000D08  A4D8               	btfss	status,2,c
  5971  000D0A  D00D               	goto	l6344
  5972                           
  5973                           ;IO.c: 121: Off_Led(5);
  5974  000D0C  0E00               	movlw	0
  5975  000D0E  6E1C               	movwf	Off_Led@led+1,c
  5976  000D10  0E05               	movlw	5
  5977  000D12  6E1B               	movwf	Off_Led@led,c
  5978  000D14  EC06  F00E         	call	_Off_Led	;wreg free
  5979                           
  5980                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  5981  000D18  808D               	bsf	3981,0,c	;volatile
  5982                           
  5983                           ;IO.c: 123: LED_array[5] = 1;
  5984  000D1A  0E00               	movlw	0
  5985  000D1C  0100               	movlb	0	; () banked
  5986  000D1E  6F93               	movwf	(_LED_array+11)& (0+255),b
  5987  000D20  0E01               	movlw	1
  5988  000D22  6F92               	movwf	(_LED_array+10)& (0+255),b
  5989                           
  5990                           ;IO.c: 124: } else if (state == 0) {
  5991  000D24  0012               	return	
  5992  000D26                     l6344:
  5993  000D26  5021               	movf	SetLEDOut@state,w,c
  5994  000D28  1022               	iorwf	SetLEDOut@state+1,w,c
  5995  000D2A  A4D8               	btfss	status,2,c
  5996  000D2C  D00D               	goto	l6352
  5997                           
  5998                           ;IO.c: 125: Off_Led(5);
  5999  000D2E  0E00               	movlw	0
  6000  000D30  6E1C               	movwf	Off_Led@led+1,c
  6001  000D32  0E05               	movlw	5
  6002  000D34  6E1B               	movwf	Off_Led@led,c
  6003  000D36  EC06  F00E         	call	_Off_Led	;wreg free
  6004                           
  6005                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6006  000D3A  908D               	bcf	3981,0,c	;volatile
  6007                           
  6008                           ;IO.c: 127: LED_array[5] = 0;
  6009  000D3C  0E00               	movlw	0
  6010  000D3E  0100               	movlb	0	; () banked
  6011  000D40  6F93               	movwf	(_LED_array+11)& (0+255),b
  6012  000D42  0E00               	movlw	0
  6013  000D44  6F92               	movwf	(_LED_array+10)& (0+255),b
  6014                           
  6015                           ;IO.c: 128: }
  6016  000D46  0012               	return	
  6017  000D48                     l6352:
  6018                           
  6019                           ;IO.c: 129: else if (state == 2) {
  6020  000D48  0E02               	movlw	2
  6021  000D4A  1821               	xorwf	SetLEDOut@state,w,c
  6022  000D4C  1022               	iorwf	SetLEDOut@state+1,w,c
  6023  000D4E  A4D8               	btfss	status,2,c
  6024  000D50  0012               	return	
  6025                           
  6026                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6027  000D52  908D               	bcf	3981,0,c	;volatile
  6028                           
  6029                           ;IO.c: 131: setLED(5);
  6030  000D54  0E00               	movlw	0
  6031  000D56  6E1C               	movwf	setLED@led+1,c
  6032  000D58  0E05               	movlw	5
  6033  000D5A  6E1B               	movwf	setLED@led,c
  6034  000D5C  EC6B  F00E         	call	_setLED	;wreg free
  6035                           
  6036                           ;IO.c: 132: LED_array[5] = 2;
  6037  000D60  0E00               	movlw	0
  6038  000D62  0100               	movlb	0	; () banked
  6039  000D64  6F93               	movwf	(_LED_array+11)& (0+255),b
  6040  000D66  0E02               	movlw	2
  6041  000D68  6F92               	movwf	(_LED_array+10)& (0+255),b
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;IO.c: 138: }
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;IO.c: 134: }
  6048                           ;IO.c: 137: break;
  6049                           
  6050                           ; BSR set to: 0
  6051                           
  6052                           ; BSR set to: 0
  6053  000D6A  0012               	return	
  6054  000D6C                     l6360:
  6055  000D6C  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  6056  000D70  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  6057                           
  6058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6059                           ; Switch size 1, requested type "space"
  6060                           ; Number of cases is 1, Range of values is 0 to 0
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            4     3 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  000D74  5024               	movf	??_SetLEDOut+1,w,c
  6066  000D76  0A00               	xorlw	0	; case 0
  6067  000D78  A4D8               	btfss	status,2,c
  6068  000D7A  0012               	return	
  6069                           
  6070                           ; Switch size 1, requested type "space"
  6071                           ; Number of cases is 6, Range of values is 0 to 5
  6072                           ; switch strategies available:
  6073                           ; Name         Instructions Cycles
  6074                           ; simple_byte           19    10 (average)
  6075                           ;	Chosen strategy is simple_byte
  6076  000D7C  5023               	movf	??_SetLEDOut,w,c
  6077  000D7E  0A00               	xorlw	0	; case 0
  6078  000D80  B4D8               	btfsc	status,2,c
  6079  000D82  D6BC               	goto	l6226
  6080  000D84  0A01               	xorlw	1	; case 1
  6081  000D86  B4D8               	btfsc	status,2,c
  6082  000D88  D6ED               	goto	l6248
  6083  000D8A  0A03               	xorlw	3	; case 2
  6084  000D8C  B4D8               	btfsc	status,2,c
  6085  000D8E  D71E               	goto	l6270
  6086  000D90  0A01               	xorlw	1	; case 3
  6087  000D92  B4D8               	btfsc	status,2,c
  6088  000D94  D74F               	goto	l6292
  6089  000D96  0A07               	xorlw	7	; case 4
  6090  000D98  B4D8               	btfsc	status,2,c
  6091  000D9A  D780               	goto	l6314
  6092  000D9C  0A01               	xorlw	1	; case 5
  6093  000D9E  A4D8               	btfss	status,2,c
  6094  000DA0  0012               	return	
  6095  000DA2  D7B0               	goto	l6336
  6096  000DA4                     __end_of_SetLEDOut:
  6097                           	opt stack 0
  6098                           tosu	equ	0xFFF
  6099                           tosh	equ	0xFFE
  6100                           tosl	equ	0xFFD
  6101                           pclath	equ	0xFFA
  6102                           tblptru	equ	0xFF8
  6103                           tblptrh	equ	0xFF7
  6104                           tblptrl	equ	0xFF6
  6105                           tablat	equ	0xFF5
  6106                           prodh	equ	0xFF4
  6107                           prodl	equ	0xFF3
  6108                           intcon	equ	0xFF2
  6109                           postinc0	equ	0xFEE
  6110                           wreg	equ	0xFE8
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           plusw2	equ	0xFDB
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _setLED *****************
  6120 ;; Defined at:
  6121 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  led             2   26[COMRAM] int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6135 ;;      Params:         2       0       0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0
  6137 ;;      Temps:          2       0       0       0       0       0       0
  6138 ;;      Totals:         4       0       0       0       0       0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_SetLEDOut
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text24
  6150  001CD6                     __ptext24:
  6151                           	opt stack 0
  6152  001CD6                     _setLED:
  6153                           	opt stack 23
  6154                           
  6155                           ;tmr2.c: 203: switch (led){
  6156                           
  6157                           ;incstack = 0
  6158  001CD6  D042               	goto	l6090
  6159  001CD8                     l6076:
  6160                           
  6161                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  6162  001CD8  0E00               	movlw	0
  6163  001CDA  0100               	movlb	0	; () banked
  6164  001CDC  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6165  001CDE  0E01               	movlw	1
  6166  001CE0  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6167                           
  6168                           ;tmr2.c: 206: LEDState[0]=0;
  6169  001CE2  0E00               	movlw	0
  6170  001CE4  0100               	movlb	0	; () banked
  6171  001CE6  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6172  001CE8  0E00               	movlw	0
  6173  001CEA  6FA4               	movwf	_LEDState& (0+255),b
  6174                           
  6175                           ;tmr2.c: 207: break;
  6176  001CEC  0012               	return	
  6177  001CEE                     l6078:
  6178                           
  6179                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  6180  001CEE  0E00               	movlw	0
  6181  001CF0  0100               	movlb	0	; () banked
  6182  001CF2  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6183  001CF4  0E01               	movlw	1
  6184  001CF6  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6185                           
  6186                           ;tmr2.c: 210: LEDState[1]=0;
  6187  001CF8  0E00               	movlw	0
  6188  001CFA  0100               	movlb	0	; () banked
  6189  001CFC  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6190  001CFE  0E00               	movlw	0
  6191  001D00  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6192                           
  6193                           ;tmr2.c: 211: break;
  6194  001D02  0012               	return	
  6195  001D04                     l6080:
  6196                           
  6197                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  6198  001D04  0E00               	movlw	0
  6199  001D06  0100               	movlb	0	; () banked
  6200  001D08  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6201  001D0A  0E01               	movlw	1
  6202  001D0C  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6203                           
  6204                           ;tmr2.c: 214: LEDState[2]=0;
  6205  001D0E  0E00               	movlw	0
  6206  001D10  0100               	movlb	0	; () banked
  6207  001D12  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6208  001D14  0E00               	movlw	0
  6209  001D16  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6210                           
  6211                           ;tmr2.c: 215: break;
  6212  001D18  0012               	return	
  6213  001D1A                     l6082:
  6214                           
  6215                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  6216  001D1A  0E00               	movlw	0
  6217  001D1C  0100               	movlb	0	; () banked
  6218  001D1E  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6219  001D20  0E01               	movlw	1
  6220  001D22  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6221                           
  6222                           ;tmr2.c: 218: LEDState[3]=0;
  6223  001D24  0E00               	movlw	0
  6224  001D26  0100               	movlb	0	; () banked
  6225  001D28  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6226  001D2A  0E00               	movlw	0
  6227  001D2C  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6228                           
  6229                           ;tmr2.c: 219: break;
  6230  001D2E  0012               	return	
  6231  001D30                     l6084:
  6232                           
  6233                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  6234  001D30  0E00               	movlw	0
  6235  001D32  0100               	movlb	0	; () banked
  6236  001D34  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6237  001D36  0E01               	movlw	1
  6238  001D38  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6239                           
  6240                           ;tmr2.c: 222: LEDState[4]=0;
  6241  001D3A  0E00               	movlw	0
  6242  001D3C  0100               	movlb	0	; () banked
  6243  001D3E  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6244  001D40  0E00               	movlw	0
  6245  001D42  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6246                           
  6247                           ;tmr2.c: 223: break;
  6248  001D44  0012               	return	
  6249  001D46                     l6086:
  6250                           
  6251                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  6252  001D46  0E00               	movlw	0
  6253  001D48  0100               	movlb	0	; () banked
  6254  001D4A  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6255  001D4C  0E01               	movlw	1
  6256  001D4E  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6257                           
  6258                           ;tmr2.c: 226: LEDState[5]=0;
  6259  001D50  0E00               	movlw	0
  6260  001D52  0100               	movlb	0	; () banked
  6261  001D54  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6262  001D56  0E00               	movlw	0
  6263  001D58  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;tmr2.c: 228: }
  6267                           
  6268                           ;tmr2.c: 227: break;
  6269  001D5A  0012               	return	
  6270  001D5C                     l6090:
  6271  001D5C  C01B  F01D         	movff	setLED@led,??_setLED
  6272  001D60  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  6273                           
  6274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6275                           ; Switch size 1, requested type "space"
  6276                           ; Number of cases is 1, Range of values is 0 to 0
  6277                           ; switch strategies available:
  6278                           ; Name         Instructions Cycles
  6279                           ; simple_byte            4     3 (average)
  6280                           ;	Chosen strategy is simple_byte
  6281  001D64  501E               	movf	??_setLED+1,w,c
  6282  001D66  0A00               	xorlw	0	; case 0
  6283  001D68  A4D8               	btfss	status,2,c
  6284  001D6A  0012               	return	
  6285                           
  6286                           ; Switch size 1, requested type "space"
  6287                           ; Number of cases is 6, Range of values is 0 to 5
  6288                           ; switch strategies available:
  6289                           ; Name         Instructions Cycles
  6290                           ; simple_byte           19    10 (average)
  6291                           ;	Chosen strategy is simple_byte
  6292  001D6C  501D               	movf	??_setLED,w,c
  6293  001D6E  0A00               	xorlw	0	; case 0
  6294  001D70  B4D8               	btfsc	status,2,c
  6295  001D72  D7B2               	goto	l6076
  6296  001D74  0A01               	xorlw	1	; case 1
  6297  001D76  B4D8               	btfsc	status,2,c
  6298  001D78  D7BA               	goto	l6078
  6299  001D7A  0A03               	xorlw	3	; case 2
  6300  001D7C  B4D8               	btfsc	status,2,c
  6301  001D7E  D7C2               	goto	l6080
  6302  001D80  0A01               	xorlw	1	; case 3
  6303  001D82  B4D8               	btfsc	status,2,c
  6304  001D84  D7CA               	goto	l6082
  6305  001D86  0A07               	xorlw	7	; case 4
  6306  001D88  B4D8               	btfsc	status,2,c
  6307  001D8A  D7D2               	goto	l6084
  6308  001D8C  0A01               	xorlw	1	; case 5
  6309  001D8E  A4D8               	btfss	status,2,c
  6310  001D90  0012               	return	
  6311  001D92  D7D9               	goto	l6086
  6312  001D94                     __end_of_setLED:
  6313                           	opt stack 0
  6314                           tosu	equ	0xFFF
  6315                           tosh	equ	0xFFE
  6316                           tosl	equ	0xFFD
  6317                           pclath	equ	0xFFA
  6318                           tblptru	equ	0xFF8
  6319                           tblptrh	equ	0xFF7
  6320                           tblptrl	equ	0xFF6
  6321                           tablat	equ	0xFF5
  6322                           prodh	equ	0xFF4
  6323                           prodl	equ	0xFF3
  6324                           intcon	equ	0xFF2
  6325                           postinc0	equ	0xFEE
  6326                           wreg	equ	0xFE8
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _Off_Led *****************
  6336 ;; Defined at:
  6337 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  led             2   26[COMRAM] int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         2       0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0
  6353 ;;      Temps:          2       0       0       0       0       0       0
  6354 ;;      Totals:         4       0       0       0       0       0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    4
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_SetLEDOut
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text25
  6366  001C0C                     __ptext25:
  6367                           	opt stack 0
  6368  001C0C                     _Off_Led:
  6369                           	opt stack 23
  6370                           
  6371                           ;tmr2.c: 231: switch (led){
  6372                           
  6373                           ;incstack = 0
  6374  001C0C  D048               	goto	l6124
  6375  001C0E                     l6098:
  6376                           
  6377                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  6378  001C0E  0E00               	movlw	0
  6379  001C10  0100               	movlb	0	; () banked
  6380  001C12  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6381  001C14  0E00               	movlw	0
  6382  001C16  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6383                           
  6384                           ;tmr2.c: 234: LEDState[0]=0;
  6385  001C18  0E00               	movlw	0
  6386  001C1A  0100               	movlb	0	; () banked
  6387  001C1C  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6388  001C1E  0E00               	movlw	0
  6389  001C20  6FA4               	movwf	_LEDState& (0+255),b
  6390                           
  6391                           ; BSR set to: 0
  6392                           
  6393                           ; BSR set to: 0
  6394                           
  6395                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  6396  001C22  928B               	bcf	3979,1,c	;volatile
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;tmr2.c: 236: break;
  6400  001C24  0012               	return	
  6401  001C26                     l6102:
  6402                           
  6403                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  6404  001C26  0E00               	movlw	0
  6405  001C28  0100               	movlb	0	; () banked
  6406  001C2A  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6407  001C2C  0E00               	movlw	0
  6408  001C2E  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6409                           
  6410                           ;tmr2.c: 239: LEDState[1]=0;
  6411  001C30  0E00               	movlw	0
  6412  001C32  0100               	movlb	0	; () banked
  6413  001C34  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6414  001C36  0E00               	movlw	0
  6415  001C38  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6416                           
  6417                           ; BSR set to: 0
  6418                           
  6419                           ; BSR set to: 0
  6420                           
  6421                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  6422  001C3A  9C89               	bcf	3977,6,c	;volatile
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;tmr2.c: 241: break;
  6426  001C3C  0012               	return	
  6427  001C3E                     l6106:
  6428                           
  6429                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  6430  001C3E  0E00               	movlw	0
  6431  001C40  0100               	movlb	0	; () banked
  6432  001C42  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6433  001C44  0E00               	movlw	0
  6434  001C46  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6435                           
  6436                           ;tmr2.c: 244: LEDState[2]=0;
  6437  001C48  0E00               	movlw	0
  6438  001C4A  0100               	movlb	0	; () banked
  6439  001C4C  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6440  001C4E  0E00               	movlw	0
  6441  001C50  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6442                           
  6443                           ; BSR set to: 0
  6444                           
  6445                           ; BSR set to: 0
  6446                           
  6447                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  6448  001C52  9E89               	bcf	3977,7,c	;volatile
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;tmr2.c: 246: break;
  6452  001C54  0012               	return	
  6453  001C56                     l6110:
  6454                           
  6455                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  6456  001C56  0E00               	movlw	0
  6457  001C58  0100               	movlb	0	; () banked
  6458  001C5A  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6459  001C5C  0E00               	movlw	0
  6460  001C5E  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6461                           
  6462                           ;tmr2.c: 249: LEDState[3]=0;
  6463  001C60  0E00               	movlw	0
  6464  001C62  0100               	movlb	0	; () banked
  6465  001C64  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6466  001C66  0E00               	movlw	0
  6467  001C68  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6468                           
  6469                           ; BSR set to: 0
  6470                           
  6471                           ; BSR set to: 0
  6472                           
  6473                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  6474  001C6A  948D               	bcf	3981,2,c	;volatile
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;tmr2.c: 251: break;
  6478  001C6C  0012               	return	
  6479  001C6E                     l6114:
  6480                           
  6481                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  6482  001C6E  0E00               	movlw	0
  6483  001C70  0100               	movlb	0	; () banked
  6484  001C72  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6485  001C74  0E00               	movlw	0
  6486  001C76  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6487                           
  6488                           ;tmr2.c: 254: LEDState[4]=0;
  6489  001C78  0E00               	movlw	0
  6490  001C7A  0100               	movlb	0	; () banked
  6491  001C7C  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6492  001C7E  0E00               	movlw	0
  6493  001C80  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6494                           
  6495                           ; BSR set to: 0
  6496                           
  6497                           ; BSR set to: 0
  6498                           
  6499                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  6500  001C82  928D               	bcf	3981,1,c	;volatile
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;tmr2.c: 256: break;
  6504  001C84  0012               	return	
  6505  001C86                     l6118:
  6506                           
  6507                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  6508  001C86  0E00               	movlw	0
  6509  001C88  0100               	movlb	0	; () banked
  6510  001C8A  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6511  001C8C  0E00               	movlw	0
  6512  001C8E  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6513                           
  6514                           ;tmr2.c: 259: LEDState[5]=0;
  6515  001C90  0E00               	movlw	0
  6516  001C92  0100               	movlb	0	; () banked
  6517  001C94  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6518  001C96  0E00               	movlw	0
  6519  001C98  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6520                           
  6521                           ; BSR set to: 0
  6522                           
  6523                           ; BSR set to: 0
  6524                           
  6525                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  6526  001C9A  908D               	bcf	3981,0,c	;volatile
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;tmr2.c: 262: }
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;tmr2.c: 261: break;
  6533  001C9C  0012               	return	
  6534  001C9E                     l6124:
  6535  001C9E  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  6536  001CA2  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  6537                           
  6538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6539                           ; Switch size 1, requested type "space"
  6540                           ; Number of cases is 1, Range of values is 0 to 0
  6541                           ; switch strategies available:
  6542                           ; Name         Instructions Cycles
  6543                           ; simple_byte            4     3 (average)
  6544                           ;	Chosen strategy is simple_byte
  6545  001CA6  501E               	movf	??_Off_Led+1,w,c
  6546  001CA8  0A00               	xorlw	0	; case 0
  6547  001CAA  A4D8               	btfss	status,2,c
  6548  001CAC  0012               	return	
  6549                           
  6550                           ; Switch size 1, requested type "space"
  6551                           ; Number of cases is 6, Range of values is 0 to 5
  6552                           ; switch strategies available:
  6553                           ; Name         Instructions Cycles
  6554                           ; simple_byte           19    10 (average)
  6555                           ;	Chosen strategy is simple_byte
  6556  001CAE  501D               	movf	??_Off_Led,w,c
  6557  001CB0  0A00               	xorlw	0	; case 0
  6558  001CB2  B4D8               	btfsc	status,2,c
  6559  001CB4  D7AC               	goto	l6098
  6560  001CB6  0A01               	xorlw	1	; case 1
  6561  001CB8  B4D8               	btfsc	status,2,c
  6562  001CBA  D7B5               	goto	l6102
  6563  001CBC  0A03               	xorlw	3	; case 2
  6564  001CBE  B4D8               	btfsc	status,2,c
  6565  001CC0  D7BE               	goto	l6106
  6566  001CC2  0A01               	xorlw	1	; case 3
  6567  001CC4  B4D8               	btfsc	status,2,c
  6568  001CC6  D7C7               	goto	l6110
  6569  001CC8  0A07               	xorlw	7	; case 4
  6570  001CCA  B4D8               	btfsc	status,2,c
  6571  001CCC  D7D0               	goto	l6114
  6572  001CCE  0A01               	xorlw	1	; case 5
  6573  001CD0  A4D8               	btfss	status,2,c
  6574  001CD2  0012               	return	
  6575  001CD4  D7D8               	goto	l6118
  6576  001CD6                     __end_of_Off_Led:
  6577                           	opt stack 0
  6578                           tosu	equ	0xFFF
  6579                           tosh	equ	0xFFE
  6580                           tosl	equ	0xFFD
  6581                           pclath	equ	0xFFA
  6582                           tblptru	equ	0xFF8
  6583                           tblptrh	equ	0xFF7
  6584                           tblptrl	equ	0xFF6
  6585                           tablat	equ	0xFF5
  6586                           prodh	equ	0xFF4
  6587                           prodl	equ	0xFF3
  6588                           intcon	equ	0xFF2
  6589                           postinc0	equ	0xFEE
  6590                           wreg	equ	0xFE8
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           plusw2	equ	0xFDB
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _ReceiveArrayGet *****************
  6600 ;; Defined at:
  6601 ;;		line 73 in file "FastTransfer.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  location        2   26[COMRAM] int 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2   26[COMRAM] unsigned int 
  6608 ;; Registers used:
  6609 ;;		fsr2l, fsr2h, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6615 ;;      Params:         2       0       0       0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0
  6618 ;;      Totals:         2       0       0       0       0       0       0
  6619 ;;Total ram usage:        2 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    4
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_updateComms
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text26
  6630  002E5E                     __ptext26:
  6631                           	opt stack 0
  6632  002E5E                     _ReceiveArrayGet:
  6633                           	opt stack 25
  6634                           
  6635                           ;FastTransfer.c: 74: return receiveArray[location];
  6636                           
  6637                           ;incstack = 0
  6638  002E5E  90D8               	bcf	status,0,c
  6639  002E60  341B               	rlcf	ReceiveArrayGet@location,w,c
  6640  002E62  6ED9               	movwf	fsr2l,c
  6641  002E64  341C               	rlcf	ReceiveArrayGet@location+1,w,c
  6642  002E66  6EDA               	movwf	fsr2h,c
  6643  002E68  0E00               	movlw	low _receiveArray
  6644  002E6A  26D9               	addwf	fsr2l,f,c
  6645  002E6C  0E01               	movlw	high _receiveArray
  6646  002E6E  22DA               	addwfc	fsr2h,f,c
  6647  002E70  CFDE F01B          	movff	postinc2,?_ReceiveArrayGet
  6648  002E74  CFDD F01C          	movff	postdec2,?_ReceiveArrayGet+1
  6649  002E78  0012               	return	
  6650  002E7A                     __end_of_ReceiveArrayGet:
  6651                           	opt stack 0
  6652                           tosu	equ	0xFFF
  6653                           tosh	equ	0xFFE
  6654                           tosl	equ	0xFFD
  6655                           pclath	equ	0xFFA
  6656                           tblptru	equ	0xFF8
  6657                           tblptrh	equ	0xFF7
  6658                           tblptrl	equ	0xFF6
  6659                           tablat	equ	0xFF5
  6660                           prodh	equ	0xFF4
  6661                           prodl	equ	0xFF3
  6662                           intcon	equ	0xFF2
  6663                           postinc0	equ	0xFEE
  6664                           wreg	equ	0xFE8
  6665                           indf2	equ	0xFDF
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           plusw2	equ	0xFDB
  6669                           fsr2h	equ	0xFDA
  6670                           fsr2l	equ	0xFD9
  6671                           status	equ	0xFD8
  6672                           
  6673 ;; *************** function _DataBarGraphs *****************
  6674 ;; Defined at:
  6675 ;;		line 48 in file "Communications.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  BGA             2   28[COMRAM] unsigned int 
  6678 ;;  BGB             2   30[COMRAM] unsigned int 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		None
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6690 ;;      Params:         4       0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0
  6693 ;;      Totals:         4       0       0       0       0       0       0
  6694 ;;Total ram usage:        4 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    4
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_updateComms
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text27
  6705  002ED4                     __ptext27:
  6706                           	opt stack 0
  6707  002ED4                     _DataBarGraphs:
  6708                           	opt stack 25
  6709                           
  6710                           ;Communications.c: 49: DataBarGraphA = BGA;
  6711                           
  6712                           ;incstack = 0
  6713  002ED4  C01D  F0C3         	movff	DataBarGraphs@BGA,_DataBarGraphA
  6714  002ED8  C01E  F0C4         	movff	DataBarGraphs@BGA+1,_DataBarGraphA+1
  6715                           
  6716                           ;Communications.c: 50: DataBarGraphB = BGB;
  6717  002EDC  C01F  F0C5         	movff	DataBarGraphs@BGB,_DataBarGraphB
  6718  002EE0  C020  F0C6         	movff	DataBarGraphs@BGB+1,_DataBarGraphB+1
  6719  002EE4  0012               	return		;funcret
  6720  002EE6                     __end_of_DataBarGraphs:
  6721                           	opt stack 0
  6722                           tosu	equ	0xFFF
  6723                           tosh	equ	0xFFE
  6724                           tosl	equ	0xFFD
  6725                           pclath	equ	0xFFA
  6726                           tblptru	equ	0xFF8
  6727                           tblptrh	equ	0xFF7
  6728                           tblptrl	equ	0xFF6
  6729                           tablat	equ	0xFF5
  6730                           prodh	equ	0xFF4
  6731                           prodl	equ	0xFF3
  6732                           intcon	equ	0xFF2
  6733                           postinc0	equ	0xFEE
  6734                           wreg	equ	0xFE8
  6735                           indf2	equ	0xFDF
  6736                           postinc2	equ	0xFDE
  6737                           postdec2	equ	0xFDD
  6738                           plusw2	equ	0xFDB
  6739                           fsr2h	equ	0xFDA
  6740                           fsr2l	equ	0xFD9
  6741                           status	equ	0xFD8
  6742                           
  6743 ;; *************** function ___lwtoft *****************
  6744 ;; Defined at:
  6745 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  c               2   34[COMRAM] unsigned int 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  3   34[COMRAM] float 
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6759 ;;      Params:         3       0       0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0
  6762 ;;      Totals:         3       0       0       0       0       0       0
  6763 ;;Total ram usage:        3 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    5
  6766 ;; This function calls:
  6767 ;;		___ftpack
  6768 ;; This function is called by:
  6769 ;;		_main
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text28
  6774  002DA2                     __ptext28:
  6775                           	opt stack 0
  6776  002DA2                     ___lwtoft:
  6777                           	opt stack 25
  6778                           
  6779                           ;incstack = 0
  6780  002DA2  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  6781  002DA6  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  6782  002DAA  6A1D               	clrf	___ftpack@arg+2,c
  6783  002DAC  0E8E               	movlw	142
  6784  002DAE  6E1E               	movwf	___ftpack@exp,c
  6785  002DB0  0E00               	movlw	0
  6786  002DB2  6E1F               	movwf	___ftpack@sign,c
  6787  002DB4  EC26  F00F         	call	___ftpack	;wreg free
  6788  002DB8  C01B  F023         	movff	?___ftpack,?___lwtoft
  6789  002DBC  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  6790  002DC0  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  6791  002DC4  0012               	return	
  6792  002DC6                     __end_of___lwtoft:
  6793                           	opt stack 0
  6794                           tosu	equ	0xFFF
  6795                           tosh	equ	0xFFE
  6796                           tosl	equ	0xFFD
  6797                           pclath	equ	0xFFA
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           intcon	equ	0xFF2
  6805                           postinc0	equ	0xFEE
  6806                           wreg	equ	0xFE8
  6807                           indf2	equ	0xFDF
  6808                           postinc2	equ	0xFDE
  6809                           postdec2	equ	0xFDD
  6810                           plusw2	equ	0xFDB
  6811                           fsr2h	equ	0xFDA
  6812                           fsr2l	equ	0xFD9
  6813                           status	equ	0xFD8
  6814                           
  6815 ;; *************** function ___fttol *****************
  6816 ;; Defined at:
  6817 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  f1              3    0[BANK1 ] float 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  lval            4   10[BANK1 ] unsigned long 
  6822 ;;  exp1            1   14[BANK1 ] unsigned char 
  6823 ;;  sign1           1    9[BANK1 ] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  4    0[BANK1 ] long 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6833 ;;      Params:         0       0       4       0       0       0       0
  6834 ;;      Locals:         0       0       6       0       0       0       0
  6835 ;;      Temps:          0       0       5       0       0       0       0
  6836 ;;      Totals:         0       0      15       0       0       0       0
  6837 ;;Total ram usage:       15 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    4
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text29
  6848  0014B2                     __ptext29:
  6849                           	opt stack 0
  6850  0014B2                     ___fttol:
  6851                           	opt stack 26
  6852                           
  6853                           ;incstack = 0
  6854  0014B2  C13B  F13D         	movff	___fttol@f1+2,??___fttol
  6855  0014B6  0101               	movlb	1	; () banked
  6856  0014B8  6B3E               	clrf	(??___fttol+1)& (0+255),b
  6857  0014BA  6B3F               	clrf	(??___fttol+2)& (0+255),b
  6858  0014BC  0101               	movlb	1	; () banked
  6859  0014BE  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6860  0014C0  0101               	movlb	1	; () banked
  6861  0014C2  373D               	rlcf	??___fttol& (0+255),f,b
  6862  0014C4  E301               	bnc	u7841
  6863  0014C6  813E               	bsf	(??___fttol+1)& (0+255),0,b
  6864  0014C8                     u7841:
  6865  0014C8  0101               	movlb	1	; () banked
  6866  0014CA  513D               	movf	??___fttol& (0+255),w,b
  6867  0014CC  0101               	movlb	1	; () banked
  6868  0014CE  6F47               	movwf	___fttol@exp1& (0+255),b
  6869  0014D0  0101               	movlb	1	; () banked
  6870  0014D2  5147               	movf	___fttol@exp1& (0+255),w,b
  6871  0014D4  A4D8               	btfss	status,2,c
  6872  0014D6  D00A               	goto	l7166
  6873                           
  6874                           ; BSR set to: 1
  6875  0014D8  0E00               	movlw	0
  6876  0014DA  0101               	movlb	1	; () banked
  6877  0014DC  6F39               	movwf	?___fttol& (0+255),b
  6878  0014DE  0E00               	movlw	0
  6879  0014E0  6F3A               	movwf	(?___fttol+1)& (0+255),b
  6880  0014E2  0E00               	movlw	0
  6881  0014E4  6F3B               	movwf	(?___fttol+2)& (0+255),b
  6882  0014E6  0E00               	movlw	0
  6883  0014E8  6F3C               	movwf	(?___fttol+3)& (0+255),b
  6884                           
  6885                           ; BSR set to: 1
  6886  0014EA  0012               	return	
  6887  0014EC                     l7166:
  6888                           
  6889                           ; BSR set to: 1
  6890  0014EC  0E17               	movlw	23
  6891  0014EE  0101               	movlb	1	; () banked
  6892  0014F0  6F3D               	movwf	??___fttol& (0+255),b
  6893  0014F2  C139  F13E         	movff	___fttol@f1,??___fttol+1
  6894  0014F6  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
  6895  0014FA  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
  6896  0014FE  0101               	movlb	1	; () banked
  6897  001500  293D               	incf	??___fttol& (0+255),w,b
  6898  001502  0101               	movlb	1	; () banked
  6899  001504  6F41               	movwf	(??___fttol+4)& (0+255),b
  6900  001506  D005               	goto	u7860
  6901  001508                     u7865:
  6902  001508  0101               	movlb	1	; () banked
  6903  00150A  90D8               	bcf	status,0,c
  6904  00150C  3340               	rrcf	(??___fttol+3)& (0+255),f,b
  6905  00150E  333F               	rrcf	(??___fttol+2)& (0+255),f,b
  6906  001510  333E               	rrcf	(??___fttol+1)& (0+255),f,b
  6907  001512                     u7860:
  6908  001512  0101               	movlb	1	; () banked
  6909  001514  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
  6910  001516  D7F8               	goto	u7865
  6911  001518  0101               	movlb	1	; () banked
  6912  00151A  513E               	movf	(??___fttol+1)& (0+255),w,b
  6913  00151C  0101               	movlb	1	; () banked
  6914  00151E  6F42               	movwf	___fttol@sign1& (0+255),b
  6915                           
  6916                           ; BSR set to: 1
  6917  001520  0101               	movlb	1	; () banked
  6918  001522  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
  6919                           
  6920                           ; BSR set to: 1
  6921  001524  0EFF               	movlw	255
  6922  001526  0101               	movlb	1	; () banked
  6923  001528  1739               	andwf	___fttol@f1& (0+255),f,b
  6924  00152A  0EFF               	movlw	255
  6925  00152C  0101               	movlb	1	; () banked
  6926  00152E  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
  6927  001530  0E00               	movlw	0
  6928  001532  0101               	movlb	1	; () banked
  6929  001534  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
  6930                           
  6931                           ; BSR set to: 1
  6932  001536  0101               	movlb	1	; () banked
  6933  001538  5139               	movf	___fttol@f1& (0+255),w,b
  6934  00153A  0101               	movlb	1	; () banked
  6935  00153C  6F43               	movwf	___fttol@lval& (0+255),b
  6936  00153E  0101               	movlb	1	; () banked
  6937  001540  513A               	movf	(___fttol@f1+1)& (0+255),w,b
  6938  001542  0101               	movlb	1	; () banked
  6939  001544  6F44               	movwf	(___fttol@lval+1)& (0+255),b
  6940  001546  0101               	movlb	1	; () banked
  6941  001548  513B               	movf	(___fttol@f1+2)& (0+255),w,b
  6942  00154A  0101               	movlb	1	; () banked
  6943  00154C  6F45               	movwf	(___fttol@lval+2)& (0+255),b
  6944  00154E  0101               	movlb	1	; () banked
  6945  001550  6B46               	clrf	(___fttol@lval+3)& (0+255),b
  6946                           
  6947                           ; BSR set to: 1
  6948  001552  0E8E               	movlw	142
  6949  001554  0101               	movlb	1	; () banked
  6950  001556  5F47               	subwf	___fttol@exp1& (0+255),f,b
  6951                           
  6952                           ; BSR set to: 1
  6953  001558  0101               	movlb	1	; () banked
  6954  00155A  AF47               	btfss	___fttol@exp1& (0+255),7,b
  6955  00155C  D01A               	goto	l7188
  6956                           
  6957                           ; BSR set to: 1
  6958  00155E  0101               	movlb	1	; () banked
  6959  001560  5147               	movf	___fttol@exp1& (0+255),w,b
  6960  001562  0A80               	xorlw	128
  6961  001564  0F8F               	addlw	143
  6962  001566  B0D8               	btfsc	status,0,c
  6963  001568  D00A               	goto	l7184
  6964                           
  6965                           ; BSR set to: 1
  6966  00156A  0E00               	movlw	0
  6967  00156C  0101               	movlb	1	; () banked
  6968  00156E  6F39               	movwf	?___fttol& (0+255),b
  6969  001570  0E00               	movlw	0
  6970  001572  6F3A               	movwf	(?___fttol+1)& (0+255),b
  6971  001574  0E00               	movlw	0
  6972  001576  6F3B               	movwf	(?___fttol+2)& (0+255),b
  6973  001578  0E00               	movlw	0
  6974  00157A  6F3C               	movwf	(?___fttol+3)& (0+255),b
  6975                           
  6976                           ; BSR set to: 1
  6977  00157C  0012               	return	
  6978  00157E                     l7184:
  6979                           
  6980                           ; BSR set to: 1
  6981  00157E  0101               	movlb	1	; () banked
  6982  001580  90D8               	bcf	status,0,c
  6983  001582  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6984  001584  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6985  001586  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6986  001588  3343               	rrcf	___fttol@lval& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 1
  6989  00158A  0101               	movlb	1	; () banked
  6990  00158C  3F47               	incfsz	___fttol@exp1& (0+255),f,b
  6991  00158E  D7F7               	goto	l7184
  6992                           
  6993                           ; BSR set to: 1
  6994  001590  D01B               	goto	l7198
  6995  001592                     l7188:
  6996                           
  6997                           ; BSR set to: 1
  6998  001592  0E17               	movlw	23
  6999  001594  0101               	movlb	1	; () banked
  7000  001596  6547               	cpfsgt	___fttol@exp1& (0+255),b
  7001  001598  D012               	goto	l7196
  7002                           
  7003                           ; BSR set to: 1
  7004  00159A  0E00               	movlw	0
  7005  00159C  0101               	movlb	1	; () banked
  7006  00159E  6F39               	movwf	?___fttol& (0+255),b
  7007  0015A0  0E00               	movlw	0
  7008  0015A2  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7009  0015A4  0E00               	movlw	0
  7010  0015A6  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7011  0015A8  0E00               	movlw	0
  7012  0015AA  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7013                           
  7014                           ; BSR set to: 1
  7015  0015AC  0012               	return	
  7016  0015AE                     l7194:
  7017                           
  7018                           ; BSR set to: 1
  7019  0015AE  0101               	movlb	1	; () banked
  7020  0015B0  90D8               	bcf	status,0,c
  7021  0015B2  3743               	rlcf	___fttol@lval& (0+255),f,b
  7022  0015B4  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7023  0015B6  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7024  0015B8  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7025  0015BA  0101               	movlb	1	; () banked
  7026  0015BC  0747               	decf	___fttol@exp1& (0+255),f,b
  7027  0015BE                     l7196:
  7028                           
  7029                           ; BSR set to: 1
  7030  0015BE  0101               	movlb	1	; () banked
  7031  0015C0  5147               	movf	___fttol@exp1& (0+255),w,b
  7032  0015C2  0101               	movlb	1	; () banked
  7033  0015C4  A4D8               	btfss	status,2,c
  7034  0015C6  D7F3               	goto	l7194
  7035  0015C8                     l7198:
  7036                           
  7037                           ; BSR set to: 1
  7038  0015C8  0101               	movlb	1	; () banked
  7039  0015CA  5142               	movf	___fttol@sign1& (0+255),w,b
  7040  0015CC  0101               	movlb	1	; () banked
  7041  0015CE  B4D8               	btfsc	status,2,c
  7042  0015D0  D009               	goto	l7202
  7043                           
  7044                           ; BSR set to: 1
  7045  0015D2  0101               	movlb	1	; () banked
  7046  0015D4  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
  7047  0015D6  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
  7048  0015D8  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
  7049  0015DA  6D43               	negf	___fttol@lval& (0+255),b
  7050  0015DC  0E00               	movlw	0
  7051  0015DE  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7052  0015E0  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7053  0015E2  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7054  0015E4                     l7202:
  7055                           
  7056                           ; BSR set to: 1
  7057  0015E4  C143  F139         	movff	___fttol@lval,?___fttol
  7058  0015E8  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
  7059  0015EC  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
  7060  0015F0  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
  7061  0015F4  0012               	return	
  7062  0015F6                     __end_of___fttol:
  7063                           	opt stack 0
  7064                           tosu	equ	0xFFF
  7065                           tosh	equ	0xFFE
  7066                           tosl	equ	0xFFD
  7067                           pclath	equ	0xFFA
  7068                           tblptru	equ	0xFF8
  7069                           tblptrh	equ	0xFF7
  7070                           tblptrl	equ	0xFF6
  7071                           tablat	equ	0xFF5
  7072                           prodh	equ	0xFF4
  7073                           prodl	equ	0xFF3
  7074                           intcon	equ	0xFF2
  7075                           postinc0	equ	0xFEE
  7076                           wreg	equ	0xFE8
  7077                           indf2	equ	0xFDF
  7078                           postinc2	equ	0xFDE
  7079                           postdec2	equ	0xFDD
  7080                           plusw2	equ	0xFDB
  7081                           fsr2h	equ	0xFDA
  7082                           fsr2l	equ	0xFD9
  7083                           status	equ	0xFD8
  7084                           
  7085 ;; *************** function ___ftmul *****************
  7086 ;; Defined at:
  7087 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  f1              3    0[BANK0 ] float 
  7090 ;;  f2              3    3[BANK0 ] float 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  7093 ;;  sign            1   11[BANK0 ] unsigned char 
  7094 ;;  cntr            1   10[BANK0 ] unsigned char 
  7095 ;;  exp             1    6[BANK0 ] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  3    0[BANK0 ] float 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7105 ;;      Params:         0       6       0       0       0       0       0
  7106 ;;      Locals:         0       6       0       0       0       0       0
  7107 ;;      Temps:          3       0       0       0       0       0       0
  7108 ;;      Totals:         3      12       0       0       0       0       0
  7109 ;;Total ram usage:       15 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    5
  7112 ;; This function calls:
  7113 ;;		___ftpack
  7114 ;; This function is called by:
  7115 ;;		_main
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text30
  7120  0010D2                     __ptext30:
  7121                           	opt stack 0
  7122  0010D2                     ___ftmul:
  7123                           	opt stack 25
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;incstack = 0
  7127  0010D2  C0F4  F026         	movff	___ftmul@f1+2,??___ftmul
  7128  0010D6  6A27               	clrf	(??___ftmul+1)& (0+255),c
  7129  0010D8  6A28               	clrf	(??___ftmul+2)& (0+255),c
  7130  0010DA  0100               	movlb	0	; () banked
  7131  0010DC  35F3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7132  0010DE  3626               	rlcf	??___ftmul& (0+255),f,c
  7133  0010E0  E301               	bnc	u7781
  7134  0010E2  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  7135  0010E4                     u7781:
  7136  0010E4  5026               	movf	??___ftmul,w,c
  7137  0010E6  0100               	movlb	0	; () banked
  7138  0010E8  6FF8               	movwf	___ftmul@exp& (0+255),b
  7139  0010EA  0100               	movlb	0	; () banked
  7140  0010EC  51F8               	movf	___ftmul@exp& (0+255),w,b
  7141  0010EE  A4D8               	btfss	status,2,c
  7142  0010F0  D00A               	goto	l7118
  7143                           
  7144                           ; BSR set to: 0
  7145  0010F2  0E00               	movlw	0
  7146  0010F4  0100               	movlb	0	; () banked
  7147  0010F6  6FF2               	movwf	?___ftmul& (0+255),b
  7148  0010F8  0E00               	movlw	0
  7149  0010FA  0100               	movlb	0	; () banked
  7150  0010FC  6FF3               	movwf	(?___ftmul+1)& (0+255),b
  7151  0010FE  0E00               	movlw	0
  7152  001100  0100               	movlb	0	; () banked
  7153  001102  6FF4               	movwf	(?___ftmul+2)& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156  001104  0012               	return	
  7157  001106                     l7118:
  7158                           
  7159                           ; BSR set to: 0
  7160  001106  C0F7  F026         	movff	___ftmul@f2+2,??___ftmul
  7161  00110A  6A27               	clrf	(??___ftmul+1)& (0+255),c
  7162  00110C  6A28               	clrf	(??___ftmul+2)& (0+255),c
  7163  00110E  0100               	movlb	0	; () banked
  7164  001110  35F6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7165  001112  3626               	rlcf	??___ftmul& (0+255),f,c
  7166  001114  E301               	bnc	u7801
  7167  001116  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  7168  001118                     u7801:
  7169  001118  5026               	movf	??___ftmul,w,c
  7170  00111A  0100               	movlb	0	; () banked
  7171  00111C  6FFD               	movwf	___ftmul@sign& (0+255),b
  7172  00111E  0100               	movlb	0	; () banked
  7173  001120  51FD               	movf	___ftmul@sign& (0+255),w,b
  7174  001122  A4D8               	btfss	status,2,c
  7175  001124  D00A               	goto	l7124
  7176                           
  7177                           ; BSR set to: 0
  7178  001126  0E00               	movlw	0
  7179  001128  0100               	movlb	0	; () banked
  7180  00112A  6FF2               	movwf	?___ftmul& (0+255),b
  7181  00112C  0E00               	movlw	0
  7182  00112E  0100               	movlb	0	; () banked
  7183  001130  6FF3               	movwf	(?___ftmul+1)& (0+255),b
  7184  001132  0E00               	movlw	0
  7185  001134  0100               	movlb	0	; () banked
  7186  001136  6FF4               	movwf	(?___ftmul+2)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189  001138  0012               	return	
  7190  00113A                     l7124:
  7191                           
  7192                           ; BSR set to: 0
  7193  00113A  0100               	movlb	0	; () banked
  7194  00113C  51FD               	movf	___ftmul@sign& (0+255),w,b
  7195  00113E  0F7B               	addlw	123
  7196  001140  0100               	movlb	0	; () banked
  7197  001142  27F8               	addwf	___ftmul@exp& (0+255),f,b
  7198                           
  7199                           ; BSR set to: 0
  7200  001144  C0F4  F0FD         	movff	___ftmul@f1+2,___ftmul@sign
  7201  001148  0100               	movlb	0	; () banked
  7202  00114A  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7203  00114C  0100               	movlb	0	; () banked
  7204  00114E  1BFD               	xorwf	___ftmul@sign& (0+255),f,b
  7205  001150  0E80               	movlw	128
  7206  001152  0100               	movlb	0	; () banked
  7207  001154  17FD               	andwf	___ftmul@sign& (0+255),f,b
  7208                           
  7209                           ; BSR set to: 0
  7210  001156  0100               	movlb	0	; () banked
  7211  001158  8FF3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7212                           
  7213                           ; BSR set to: 0
  7214  00115A  0100               	movlb	0	; () banked
  7215  00115C  8FF6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7216                           
  7217                           ; BSR set to: 0
  7218  00115E  0EFF               	movlw	255
  7219  001160  0100               	movlb	0	; () banked
  7220  001162  17F5               	andwf	___ftmul@f2& (0+255),f,b
  7221  001164  0EFF               	movlw	255
  7222  001166  0100               	movlb	0	; () banked
  7223  001168  17F6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7224  00116A  0E00               	movlw	0
  7225  00116C  0100               	movlb	0	; () banked
  7226  00116E  17F7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7227                           
  7228                           ; BSR set to: 0
  7229  001170  0E00               	movlw	0
  7230  001172  0100               	movlb	0	; () banked
  7231  001174  6FF9               	movwf	___ftmul@f3_as_product& (0+255),b
  7232  001176  0E00               	movlw	0
  7233  001178  0100               	movlb	0	; () banked
  7234  00117A  6FFA               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7235  00117C  0E00               	movlw	0
  7236  00117E  0100               	movlb	0	; () banked
  7237  001180  6FFB               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7238                           
  7239                           ; BSR set to: 0
  7240  001182  0E07               	movlw	7
  7241  001184  0100               	movlb	0	; () banked
  7242  001186  6FFC               	movwf	___ftmul@cntr& (0+255),b
  7243  001188                     l7138:
  7244                           
  7245                           ; BSR set to: 0
  7246  001188  0100               	movlb	0	; () banked
  7247  00118A  A1F2               	btfss	___ftmul@f1& (0+255),0,b
  7248  00118C  D00C               	goto	l7142
  7249                           
  7250                           ; BSR set to: 0
  7251  00118E  0100               	movlb	0	; () banked
  7252  001190  51F5               	movf	___ftmul@f2& (0+255),w,b
  7253  001192  0100               	movlb	0	; () banked
  7254  001194  27F9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7255  001196  0100               	movlb	0	; () banked
  7256  001198  51F6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7257  00119A  0100               	movlb	0	; () banked
  7258  00119C  23FA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7259  00119E  0100               	movlb	0	; () banked
  7260  0011A0  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7261  0011A2  0100               	movlb	0	; () banked
  7262  0011A4  23FB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7263  0011A6                     l7142:
  7264                           
  7265                           ; BSR set to: 0
  7266  0011A6  0100               	movlb	0	; () banked
  7267  0011A8  90D8               	bcf	status,0,c
  7268  0011AA  33F4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7269  0011AC  33F3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7270  0011AE  33F2               	rrcf	___ftmul@f1& (0+255),f,b
  7271  0011B0  0100               	movlb	0	; () banked
  7272  0011B2  90D8               	bcf	status,0,c
  7273  0011B4  37F5               	rlcf	___ftmul@f2& (0+255),f,b
  7274  0011B6  37F6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7275  0011B8  37F7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7276                           
  7277                           ; BSR set to: 0
  7278  0011BA  0100               	movlb	0	; () banked
  7279  0011BC  2FFC               	decfsz	___ftmul@cntr& (0+255),f,b
  7280  0011BE  D7E4               	goto	l7138
  7281                           
  7282                           ; BSR set to: 0
  7283                           
  7284                           ; BSR set to: 0
  7285  0011C0  0E09               	movlw	9
  7286  0011C2  0100               	movlb	0	; () banked
  7287  0011C4  6FFC               	movwf	___ftmul@cntr& (0+255),b
  7288  0011C6                     l7148:
  7289                           
  7290                           ; BSR set to: 0
  7291  0011C6  0100               	movlb	0	; () banked
  7292  0011C8  A1F2               	btfss	___ftmul@f1& (0+255),0,b
  7293  0011CA  D00C               	goto	l7152
  7294                           
  7295                           ; BSR set to: 0
  7296  0011CC  0100               	movlb	0	; () banked
  7297  0011CE  51F5               	movf	___ftmul@f2& (0+255),w,b
  7298  0011D0  0100               	movlb	0	; () banked
  7299  0011D2  27F9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7300  0011D4  0100               	movlb	0	; () banked
  7301  0011D6  51F6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7302  0011D8  0100               	movlb	0	; () banked
  7303  0011DA  23FA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7304  0011DC  0100               	movlb	0	; () banked
  7305  0011DE  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7306  0011E0  0100               	movlb	0	; () banked
  7307  0011E2  23FB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7308  0011E4                     l7152:
  7309                           
  7310                           ; BSR set to: 0
  7311  0011E4  0100               	movlb	0	; () banked
  7312  0011E6  90D8               	bcf	status,0,c
  7313  0011E8  33F4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7314  0011EA  33F3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7315  0011EC  33F2               	rrcf	___ftmul@f1& (0+255),f,b
  7316  0011EE  0100               	movlb	0	; () banked
  7317  0011F0  90D8               	bcf	status,0,c
  7318  0011F2  33FB               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7319  0011F4  33FA               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7320  0011F6  33F9               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7321                           
  7322                           ; BSR set to: 0
  7323  0011F8  0100               	movlb	0	; () banked
  7324  0011FA  2FFC               	decfsz	___ftmul@cntr& (0+255),f,b
  7325  0011FC  D7E4               	goto	l7148
  7326                           
  7327                           ; BSR set to: 0
  7328                           
  7329                           ; BSR set to: 0
  7330  0011FE  C0F9  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7331  001202  C0FA  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7332  001206  C0FB  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7333  00120A  C0F8  F01E         	movff	___ftmul@exp,___ftpack@exp
  7334  00120E  C0FD  F01F         	movff	___ftmul@sign,___ftpack@sign
  7335  001212  EC26  F00F         	call	___ftpack	;wreg free
  7336  001216  C01B  F0F2         	movff	?___ftpack,?___ftmul
  7337  00121A  C01C  F0F3         	movff	?___ftpack+1,?___ftmul+1
  7338  00121E  C01D  F0F4         	movff	?___ftpack+2,?___ftmul+2
  7339  001222  0012               	return	
  7340  001224                     __end_of___ftmul:
  7341                           	opt stack 0
  7342                           tosu	equ	0xFFF
  7343                           tosh	equ	0xFFE
  7344                           tosl	equ	0xFFD
  7345                           pclath	equ	0xFFA
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           intcon	equ	0xFF2
  7353                           postinc0	equ	0xFEE
  7354                           wreg	equ	0xFE8
  7355                           indf2	equ	0xFDF
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           plusw2	equ	0xFDB
  7359                           fsr2h	equ	0xFDA
  7360                           fsr2l	equ	0xFD9
  7361                           status	equ	0xFD8
  7362                           
  7363 ;; *************** function ___ftpack *****************
  7364 ;; Defined at:
  7365 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  arg             3   26[COMRAM] unsigned um
  7368 ;;  exp             1   29[COMRAM] unsigned char 
  7369 ;;  sign            1   30[COMRAM] unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  3   26[COMRAM] float 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7381 ;;      Params:         5       0       0       0       0       0       0
  7382 ;;      Locals:         0       0       0       0       0       0       0
  7383 ;;      Temps:          3       0       0       0       0       0       0
  7384 ;;      Totals:         8       0       0       0       0       0       0
  7385 ;;Total ram usage:        8 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    4
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		___ftmul
  7392 ;;		___lwtoft
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text31
  7397  001E4C                     __ptext31:
  7398                           	opt stack 0
  7399  001E4C                     ___ftpack:
  7400                           	opt stack 25
  7401                           
  7402                           ;incstack = 0
  7403  001E4C  501E               	movf	___ftpack@exp,w,c
  7404  001E4E  B4D8               	btfsc	status,2,c
  7405  001E50  D005               	goto	l6778
  7406  001E52  501B               	movf	___ftpack@arg,w,c
  7407  001E54  101C               	iorwf	___ftpack@arg+1,w,c
  7408  001E56  101D               	iorwf	___ftpack@arg+2,w,c
  7409  001E58  A4D8               	btfss	status,2,c
  7410  001E5A  D00C               	goto	l6784
  7411  001E5C                     l6778:
  7412  001E5C  0E00               	movlw	0
  7413  001E5E  6E1B               	movwf	?___ftpack,c
  7414  001E60  0E00               	movlw	0
  7415  001E62  6E1C               	movwf	?___ftpack+1,c
  7416  001E64  0E00               	movlw	0
  7417  001E66  6E1D               	movwf	?___ftpack+2,c
  7418  001E68  0012               	return	
  7419  001E6A                     l6782:
  7420  001E6A  2A1E               	incf	___ftpack@exp,f,c
  7421  001E6C  90D8               	bcf	status,0,c
  7422  001E6E  321D               	rrcf	___ftpack@arg+2,f,c
  7423  001E70  321C               	rrcf	___ftpack@arg+1,f,c
  7424  001E72  321B               	rrcf	___ftpack@arg,f,c
  7425  001E74                     l6784:
  7426  001E74  0E00               	movlw	0
  7427  001E76  141B               	andwf	___ftpack@arg,w,c
  7428  001E78  6E20               	movwf	??___ftpack& (0+255),c
  7429  001E7A  0E00               	movlw	0
  7430  001E7C  141C               	andwf	___ftpack@arg+1,w,c
  7431  001E7E  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7432  001E80  0EFE               	movlw	254
  7433  001E82  141D               	andwf	___ftpack@arg+2,w,c
  7434  001E84  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7435  001E86  5020               	movf	??___ftpack,w,c
  7436  001E88  1021               	iorwf	??___ftpack+1,w,c
  7437  001E8A  1022               	iorwf	??___ftpack+2,w,c
  7438  001E8C  B4D8               	btfsc	status,2,c
  7439  001E8E  D00C               	goto	l6790
  7440  001E90  D7EC               	goto	l6782
  7441  001E92                     l6786:
  7442  001E92  2A1E               	incf	___ftpack@exp,f,c
  7443  001E94  0E01               	movlw	1
  7444  001E96  261B               	addwf	___ftpack@arg,f,c
  7445  001E98  0E00               	movlw	0
  7446  001E9A  221C               	addwfc	___ftpack@arg+1,f,c
  7447  001E9C  0E00               	movlw	0
  7448  001E9E  221D               	addwfc	___ftpack@arg+2,f,c
  7449  001EA0  90D8               	bcf	status,0,c
  7450  001EA2  321D               	rrcf	___ftpack@arg+2,f,c
  7451  001EA4  321C               	rrcf	___ftpack@arg+1,f,c
  7452  001EA6  321B               	rrcf	___ftpack@arg,f,c
  7453  001EA8                     l6790:
  7454  001EA8  0E00               	movlw	0
  7455  001EAA  141B               	andwf	___ftpack@arg,w,c
  7456  001EAC  6E20               	movwf	??___ftpack& (0+255),c
  7457  001EAE  0E00               	movlw	0
  7458  001EB0  141C               	andwf	___ftpack@arg+1,w,c
  7459  001EB2  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7460  001EB4  0EFF               	movlw	255
  7461  001EB6  141D               	andwf	___ftpack@arg+2,w,c
  7462  001EB8  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7463  001EBA  5020               	movf	??___ftpack,w,c
  7464  001EBC  1021               	iorwf	??___ftpack+1,w,c
  7465  001EBE  1022               	iorwf	??___ftpack+2,w,c
  7466  001EC0  B4D8               	btfsc	status,2,c
  7467  001EC2  D006               	goto	l6794
  7468  001EC4  D7E6               	goto	l6786
  7469  001EC6                     l6792:
  7470  001EC6  061E               	decf	___ftpack@exp,f,c
  7471  001EC8  90D8               	bcf	status,0,c
  7472  001ECA  361B               	rlcf	___ftpack@arg,f,c
  7473  001ECC  361C               	rlcf	___ftpack@arg+1,f,c
  7474  001ECE  361D               	rlcf	___ftpack@arg+2,f,c
  7475  001ED0                     l6794:
  7476  001ED0  BE1C               	btfsc	___ftpack@arg+1,7,c
  7477  001ED2  D003               	goto	l1537
  7478  001ED4  0E02               	movlw	2
  7479  001ED6  601E               	cpfslt	___ftpack@exp,c
  7480  001ED8  D7F6               	goto	l6792
  7481  001EDA                     l1537:
  7482  001EDA  A01E               	btfss	___ftpack@exp,0,c
  7483  001EDC  9E1C               	bcf	___ftpack@arg+1,7,c
  7484  001EDE  90D8               	bcf	status,0,c
  7485  001EE0  321E               	rrcf	___ftpack@exp,f,c
  7486  001EE2  501E               	movf	___ftpack@exp,w,c
  7487  001EE4  121D               	iorwf	___ftpack@arg+2,f,c
  7488  001EE6  501F               	movf	___ftpack@sign,w,c
  7489  001EE8  A4D8               	btfss	status,2,c
  7490  001EEA  8E1D               	bsf	___ftpack@arg+2,7,c
  7491  001EEC  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  7492  001EF0  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  7493  001EF4  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  7494  001EF8  0012               	return	
  7495  001EFA                     __end_of___ftpack:
  7496                           	opt stack 0
  7497                           tosu	equ	0xFFF
  7498                           tosh	equ	0xFFE
  7499                           tosl	equ	0xFFD
  7500                           pclath	equ	0xFFA
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           intcon	equ	0xFF2
  7508                           postinc0	equ	0xFEE
  7509                           wreg	equ	0xFE8
  7510                           indf2	equ	0xFDF
  7511                           postinc2	equ	0xFDE
  7512                           postdec2	equ	0xFDD
  7513                           plusw2	equ	0xFDB
  7514                           fsr2h	equ	0xFDA
  7515                           fsr2l	equ	0xFD9
  7516                           status	equ	0xFD8
  7517                           
  7518 ;; *************** function _Splash *****************
  7519 ;; Defined at:
  7520 ;;		line 35 in file "Display.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7534 ;;      Params:         0       0       0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0       0
  7537 ;;      Totals:         0       0       0       0       0       0       0
  7538 ;;Total ram usage:        0 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    8
  7541 ;; This function calls:
  7542 ;;		_oledGotoYX
  7543 ;;		_oledPrint
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text32
  7550  00271E                     __ptext32:
  7551                           	opt stack 0
  7552  00271E                     _Splash:
  7553                           	opt stack 22
  7554                           
  7555                           ;Display.c: 36: oledGotoYX(2,3);
  7556                           
  7557                           ;incstack = 0
  7558  00271E  0E03               	movlw	3
  7559  002720  6E27               	movwf	oledGotoYX@Column,c
  7560  002722  0E02               	movlw	2
  7561  002724  ECF8  F013         	call	_oledGotoYX
  7562                           
  7563                           ;Display.c: 37: oledPrint("University");
  7564  002728  0EE3               	movlw	low STR_1
  7565  00272A  0100               	movlb	0	; () banked
  7566  00272C  6FFA               	movwf	oledPrint@s& (0+255),b
  7567  00272E  0E7F               	movlw	high STR_1
  7568  002730  0100               	movlb	0	; () banked
  7569  002732  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7570  002734  ECE1  F014         	call	_oledPrint	;wreg free
  7571                           
  7572                           ;Display.c: 38: oledGotoYX(3,3);
  7573  002738  0E03               	movlw	3
  7574  00273A  6E27               	movwf	oledGotoYX@Column,c
  7575  00273C  0E03               	movlw	3
  7576  00273E  ECF8  F013         	call	_oledGotoYX
  7577                           
  7578                           ;Display.c: 39: oledPrint("OF");
  7579  002742  0EFC               	movlw	low STR_2
  7580  002744  0100               	movlb	0	; () banked
  7581  002746  6FFA               	movwf	oledPrint@s& (0+255),b
  7582  002748  0E7F               	movlw	high STR_2
  7583  00274A  0100               	movlb	0	; () banked
  7584  00274C  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7585  00274E  ECE1  F014         	call	_oledPrint	;wreg free
  7586                           
  7587                           ;Display.c: 40: oledGotoYX(4,3);
  7588  002752  0E03               	movlw	3
  7589  002754  6E27               	movwf	oledGotoYX@Column,c
  7590  002756  0E04               	movlw	4
  7591  002758  ECF8  F013         	call	_oledGotoYX
  7592                           
  7593                           ;Display.c: 41: oledPrint("Akron");
  7594  00275C  0EF6               	movlw	low STR_3
  7595  00275E  0100               	movlb	0	; () banked
  7596  002760  6FFA               	movwf	oledPrint@s& (0+255),b
  7597  002762  0E7F               	movlw	high STR_3
  7598  002764  0100               	movlb	0	; () banked
  7599  002766  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7600  002768  ECE1  F014         	call	_oledPrint	;wreg free
  7601                           
  7602                           ;Display.c: 42: oledGotoYX(5,3);
  7603  00276C  0E03               	movlw	3
  7604  00276E  6E27               	movwf	oledGotoYX@Column,c
  7605  002770  0E05               	movlw	5
  7606  002772  ECF8  F013         	call	_oledGotoYX
  7607                           
  7608                           ;Display.c: 43: oledPrint("ZIPS-EV");
  7609  002776  0EEE               	movlw	low STR_4
  7610  002778  0100               	movlb	0	; () banked
  7611  00277A  6FFA               	movwf	oledPrint@s& (0+255),b
  7612  00277C  0E7F               	movlw	high STR_4
  7613  00277E  0100               	movlb	0	; () banked
  7614  002780  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7615  002782  ECE1  F014         	call	_oledPrint	;wreg free
  7616  002786  0012               	return		;funcret
  7617  002788                     __end_of_Splash:
  7618                           	opt stack 0
  7619                           tosu	equ	0xFFF
  7620                           tosh	equ	0xFFE
  7621                           tosl	equ	0xFFD
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           postinc0	equ	0xFEE
  7631                           wreg	equ	0xFE8
  7632                           indf2	equ	0xFDF
  7633                           postinc2	equ	0xFDE
  7634                           postdec2	equ	0xFDD
  7635                           plusw2	equ	0xFDB
  7636                           fsr2h	equ	0xFDA
  7637                           fsr2l	equ	0xFD9
  7638                           status	equ	0xFD8
  7639                           
  7640 ;; *************** function _oledPrint *****************
  7641 ;; Defined at:
  7642 ;;		line 222 in file "OLED_Display.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7645 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  7646 ;;		 -> SetData@s(20), 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7658 ;;      Params:         0       2       0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0       0
  7661 ;;      Totals:         0       2       0       0       0       0       0
  7662 ;;Total ram usage:        2 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    7
  7665 ;; This function calls:
  7666 ;;		_oledPutChar
  7667 ;; This function is called by:
  7668 ;;		_Splash
  7669 ;;		_SetData
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text33
  7674  0029C2                     __ptext33:
  7675                           	opt stack 0
  7676  0029C2                     _oledPrint:
  7677                           	opt stack 22
  7678                           
  7679                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  7680                           
  7681                           ;incstack = 0
  7682  0029C2  D015               	goto	l6772
  7683  0029C4                     l6768:
  7684  0029C4  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  7685  0029C8  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  7686  0029CC  6AF8               	clrf	tblptru,c
  7687  0029CE  0E05               	movlw	(high __ramtop+-1)
  7688  0029D0  64F7               	cpfsgt	tblptrh,c
  7689  0029D2  D003               	bra	u7277
  7690  0029D4  0008               	tblrd		*
  7691  0029D6  50F5               	movf	tablat,w,c
  7692  0029D8  D005               	bra	u7270
  7693  0029DA                     u7277:
  7694  0029DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7695  0029DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7696  0029E2  50EF               	movf	indf0,w,c
  7697  0029E4                     u7270:
  7698  0029E4  EC21  F00D         	call	_oledPutChar
  7699  0029E8  0100               	movlb	0	; () banked
  7700  0029EA  4BFA               	infsnz	oledPrint@s& (0+255),f,b
  7701  0029EC  2BFB               	incf	(oledPrint@s+1)& (0+255),f,b
  7702  0029EE                     l6772:
  7703  0029EE  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  7704  0029F2  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  7705  0029F6  6AF8               	clrf	tblptru,c
  7706  0029F8  0E05               	movlw	(high __ramtop+-1)
  7707  0029FA  64F7               	cpfsgt	tblptrh,c
  7708  0029FC  D003               	bra	u7287
  7709  0029FE  0008               	tblrd		*
  7710  002A00  50F5               	movf	tablat,w,c
  7711  002A02  D005               	bra	u7280
  7712  002A04                     u7287:
  7713  002A04  CFF6 FFE9          	movff	tblptrl,fsr0l
  7714  002A08  CFF7 FFEA          	movff	tblptrh,fsr0h
  7715  002A0C  50EF               	movf	indf0,w,c
  7716  002A0E                     u7280:
  7717  002A0E  0900               	iorlw	0
  7718  002A10  B4D8               	btfsc	status,2,c
  7719  002A12  0012               	return	
  7720  002A14  D7D7               	goto	l6768
  7721  002A16                     __end_of_oledPrint:
  7722                           	opt stack 0
  7723                           tosu	equ	0xFFF
  7724                           tosh	equ	0xFFE
  7725                           tosl	equ	0xFFD
  7726                           pclath	equ	0xFFA
  7727                           tblptru	equ	0xFF8
  7728                           tblptrh	equ	0xFF7
  7729                           tblptrl	equ	0xFF6
  7730                           tablat	equ	0xFF5
  7731                           prodh	equ	0xFF4
  7732                           prodl	equ	0xFF3
  7733                           intcon	equ	0xFF2
  7734                           indf0	equ	0xFEF
  7735                           postinc0	equ	0xFEE
  7736                           fsr0h	equ	0xFEA
  7737                           fsr0l	equ	0xFE9
  7738                           wreg	equ	0xFE8
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           postdec2	equ	0xFDD
  7742                           plusw2	equ	0xFDB
  7743                           fsr2h	equ	0xFDA
  7744                           fsr2l	equ	0xFD9
  7745                           status	equ	0xFD8
  7746                           
  7747 ;; *************** function _Setupdisplay *****************
  7748 ;; Defined at:
  7749 ;;		line 30 in file "Display.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7763 ;;      Params:         0       0       0       0       0       0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0
  7766 ;;      Totals:         0       0       0       0       0       0       0
  7767 ;;Total ram usage:        0 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    9
  7770 ;; This function calls:
  7771 ;;		_OLED_init
  7772 ;;		_oledClear
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text34
  7779  002F14                     __ptext34:
  7780                           	opt stack 0
  7781  002F14                     _Setupdisplay:
  7782                           	opt stack 21
  7783                           
  7784                           ;Display.c: 31: OLED_init();
  7785                           
  7786                           ;incstack = 0
  7787  002F14  ECA0  F011         	call	_OLED_init	;wreg free
  7788                           
  7789                           ;Display.c: 32: oledClear();
  7790  002F18  EC8A  F014         	call	_oledClear	;wreg free
  7791  002F1C  0012               	return		;funcret
  7792  002F1E                     __end_of_Setupdisplay:
  7793                           	opt stack 0
  7794                           tosu	equ	0xFFF
  7795                           tosh	equ	0xFFE
  7796                           tosl	equ	0xFFD
  7797                           pclath	equ	0xFFA
  7798                           tblptru	equ	0xFF8
  7799                           tblptrh	equ	0xFF7
  7800                           tblptrl	equ	0xFF6
  7801                           tablat	equ	0xFF5
  7802                           prodh	equ	0xFF4
  7803                           prodl	equ	0xFF3
  7804                           intcon	equ	0xFF2
  7805                           indf0	equ	0xFEF
  7806                           postinc0	equ	0xFEE
  7807                           fsr0h	equ	0xFEA
  7808                           fsr0l	equ	0xFE9
  7809                           wreg	equ	0xFE8
  7810                           indf2	equ	0xFDF
  7811                           postinc2	equ	0xFDE
  7812                           postdec2	equ	0xFDD
  7813                           plusw2	equ	0xFDB
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _oledClear *****************
  7819 ;; Defined at:
  7820 ;;		line 212 in file "OLED_Display.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  col             2   10[BANK0 ] unsigned int 
  7825 ;;  row             2    8[BANK0 ] unsigned int 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7835 ;;      Params:         0       0       0       0       0       0       0
  7836 ;;      Locals:         0       4       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0
  7838 ;;      Totals:         0       4       0       0       0       0       0
  7839 ;;Total ram usage:        4 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    8
  7842 ;; This function calls:
  7843 ;;		_oledGotoYX
  7844 ;;		_oledPutChar
  7845 ;; This function is called by:
  7846 ;;		_Setupdisplay
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text35
  7851  002914                     __ptext35:
  7852                           	opt stack 0
  7853  002914                     _oledClear:
  7854                           	opt stack 21
  7855                           
  7856                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  7857                           
  7858                           ;incstack = 0
  7859  002914  0E00               	movlw	0
  7860  002916  0100               	movlb	0	; () banked
  7861  002918  6FFB               	movwf	(oledClear@row+1)& (0+255),b
  7862  00291A  0E00               	movlw	0
  7863  00291C  6FFA               	movwf	oledClear@row& (0+255),b
  7864  00291E                     l6744:
  7865                           
  7866                           ; BSR set to: 0
  7867  00291E  0100               	movlb	0	; () banked
  7868  002920  51FB               	movf	(oledClear@row+1)& (0+255),w,b
  7869  002922  E123               	bnz	l1234
  7870  002924  0E08               	movlw	8
  7871  002926  0100               	movlb	0	; () banked
  7872  002928  5DFA               	subwf	oledClear@row& (0+255),w,b
  7873  00292A  B0D8               	btfsc	status,0,c
  7874  00292C  0012               	return	
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  7878                           
  7879                           ; BSR set to: 0
  7880                           
  7881                           ; BSR set to: 0
  7882  00292E  0E00               	movlw	0
  7883  002930  0100               	movlb	0	; () banked
  7884  002932  6FFD               	movwf	(oledClear@col+1)& (0+255),b
  7885  002934  0E00               	movlw	0
  7886  002936  6FFC               	movwf	oledClear@col& (0+255),b
  7887  002938                     l6750:
  7888                           
  7889                           ; BSR set to: 0
  7890  002938  0100               	movlb	0	; () banked
  7891  00293A  51FD               	movf	(oledClear@col+1)& (0+255),w,b
  7892  00293C  E112               	bnz	l6762
  7893  00293E  0E10               	movlw	16
  7894  002940  0100               	movlb	0	; () banked
  7895  002942  5DFC               	subwf	oledClear@col& (0+255),w,b
  7896  002944  B0D8               	btfsc	status,0,c
  7897  002946  D00D               	goto	l6762
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  7901                           
  7902                           ; BSR set to: 0
  7903                           
  7904                           ; BSR set to: 0
  7905  002948  C0FC  F027         	movff	oledClear@col,oledGotoYX@Column
  7906  00294C  0100               	movlb	0	; () banked
  7907  00294E  51FA               	movf	oledClear@row& (0+255),w,b
  7908  002950  ECF8  F013         	call	_oledGotoYX
  7909                           
  7910                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  7911  002954  0E20               	movlw	32
  7912  002956  EC21  F00D         	call	_oledPutChar
  7913  00295A  0100               	movlb	0	; () banked
  7914  00295C  4BFC               	infsnz	oledClear@col& (0+255),f,b
  7915  00295E  2BFD               	incf	(oledClear@col+1)& (0+255),f,b
  7916  002960  D7EB               	goto	l6750
  7917  002962                     l6762:
  7918                           
  7919                           ; BSR set to: 0
  7920  002962  0100               	movlb	0	; () banked
  7921  002964  4BFA               	infsnz	oledClear@row& (0+255),f,b
  7922  002966  2BFB               	incf	(oledClear@row+1)& (0+255),f,b
  7923  002968  D7DA               	goto	l6744
  7924  00296A                     l1234:
  7925                           
  7926                           ; BSR set to: 0
  7927  00296A  0012               	return		;funcret
  7928  00296C                     __end_of_oledClear:
  7929                           	opt stack 0
  7930                           tosu	equ	0xFFF
  7931                           tosh	equ	0xFFE
  7932                           tosl	equ	0xFFD
  7933                           pclath	equ	0xFFA
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           prodh	equ	0xFF4
  7939                           prodl	equ	0xFF3
  7940                           intcon	equ	0xFF2
  7941                           indf0	equ	0xFEF
  7942                           postinc0	equ	0xFEE
  7943                           fsr0h	equ	0xFEA
  7944                           fsr0l	equ	0xFE9
  7945                           wreg	equ	0xFE8
  7946                           indf2	equ	0xFDF
  7947                           postinc2	equ	0xFDE
  7948                           postdec2	equ	0xFDD
  7949                           plusw2	equ	0xFDB
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954 ;; *************** function _oledPutChar *****************
  7955 ;; Defined at:
  7956 ;;		line 178 in file "OLED_Display.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  ch              1    wreg     unsigned char 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  ch              1   11[BANK1 ] unsigned char 
  7961 ;;  bytes           9    0[BANK1 ] unsigned char [9]
  7962 ;;  base            2    9[BANK1 ] PTR const unsigned char 
  7963 ;;		 -> OledFont(768), 
  7964 ;;  status          1   12[BANK1 ] enum E8858
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7974 ;;      Params:         0       0       0       0       0       0       0
  7975 ;;      Locals:         0       0      13       0       0       0       0
  7976 ;;      Temps:          4       0       0       0       0       0       0
  7977 ;;      Totals:         4       0      13       0       0       0       0
  7978 ;;Total ram usage:       17 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    6
  7981 ;; This function calls:
  7982 ;;		_I2C1_MasterWrite
  7983 ;;		_memmove
  7984 ;; This function is called by:
  7985 ;;		_oledClear
  7986 ;;		_oledPrint
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text36
  7991  001A42                     __ptext36:
  7992                           	opt stack 0
  7993  001A42                     _oledPutChar:
  7994                           	opt stack 22
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;incstack = 0
  7998                           ;oledPutChar@ch stored from wreg
  7999  001A42  0101               	movlb	1	; () banked
  8000  001A44  6F44               	movwf	oledPutChar@ch& (0+255),b
  8001                           
  8002                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  8003  001A46  0E1F               	movlw	31
  8004  001A48  0101               	movlb	1	; () banked
  8005  001A4A  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8006  001A4C  D004               	goto	l6414
  8007                           
  8008                           ; BSR set to: 1
  8009  001A4E  0E7F               	movlw	127
  8010  001A50  0101               	movlb	1	; () banked
  8011  001A52  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8012  001A54  D003               	goto	l6416
  8013  001A56                     l6414:
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;OLED_Display.c: 180: ch = ' ';
  8017  001A56  0E20               	movlw	32
  8018  001A58  0101               	movlb	1	; () banked
  8019  001A5A  6F44               	movwf	oledPutChar@ch& (0+255),b
  8020  001A5C                     l6416:
  8021                           
  8022                           ; BSR set to: 1
  8023                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  8024  001A5C  0E00               	movlw	0
  8025  001A5E  6E27               	movwf	??_oledPutChar& (0+255),c
  8026  001A60  0EFF               	movlw	255
  8027  001A62  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  8028  001A64  0101               	movlb	1	; () banked
  8029  001A66  5144               	movf	oledPutChar@ch& (0+255),w,b
  8030  001A68  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  8031  001A6A  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  8032  001A6C  90D8               	bcf	status,0,c
  8033  001A6E  3629               	rlcf	??_oledPutChar+2,f,c
  8034  001A70  362A               	rlcf	??_oledPutChar+3,f,c
  8035  001A72  90D8               	bcf	status,0,c
  8036  001A74  3629               	rlcf	??_oledPutChar+2,f,c
  8037  001A76  362A               	rlcf	??_oledPutChar+3,f,c
  8038  001A78  90D8               	bcf	status,0,c
  8039  001A7A  3629               	rlcf	??_oledPutChar+2,f,c
  8040  001A7C  362A               	rlcf	??_oledPutChar+3,f,c
  8041  001A7E  5027               	movf	??_oledPutChar,w,c
  8042  001A80  2629               	addwf	??_oledPutChar+2,f,c
  8043  001A82  5028               	movf	??_oledPutChar+1,w,c
  8044  001A84  222A               	addwfc	??_oledPutChar+3,f,c
  8045  001A86  0ED3               	movlw	low _OledFont
  8046  001A88  2429               	addwf	??_oledPutChar+2,w,c
  8047  001A8A  0101               	movlb	1	; () banked
  8048  001A8C  6F42               	movwf	oledPutChar@base& (0+255),b
  8049  001A8E  0E7B               	movlw	high _OledFont
  8050  001A90  202A               	addwfc	??_oledPutChar+3,w,c
  8051  001A92  0101               	movlb	1	; () banked
  8052  001A94  6F43               	movwf	(oledPutChar@base+1)& (0+255),b
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;OLED_Display.c: 184: uint8_t bytes[9];
  8056                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  8057  001A96  0E40               	movlw	64
  8058  001A98  0101               	movlb	1	; () banked
  8059  001A9A  6F39               	movwf	oledPutChar@bytes& (0+255),b
  8060                           
  8061                           ; BSR set to: 1
  8062                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  8063  001A9C  0E3A               	movlw	low (oledPutChar@bytes+1)
  8064  001A9E  6E1B               	movwf	memmove@d1,c
  8065  001AA0  0E01               	movlw	high (oledPutChar@bytes+1)
  8066  001AA2  6E1C               	movwf	memmove@d1+1,c
  8067  001AA4  C142  F01D         	movff	oledPutChar@base,memmove@s1
  8068  001AA8  C143  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  8069  001AAC  0E00               	movlw	0
  8070  001AAE  6E20               	movwf	memmove@n+1,c
  8071  001AB0  0E08               	movlw	8
  8072  001AB2  6E1F               	movwf	memmove@n,c
  8073  001AB4  EC7D  F00F         	call	_memmove	;wreg free
  8074                           
  8075                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8076  001AB8  0E02               	movlw	2
  8077  001ABA  0101               	movlb	1	; () banked
  8078  001ABC  6F45               	movwf	oledPutChar@status& (0+255),b
  8079                           
  8080                           ; BSR set to: 1
  8081                           ;OLED_Display.c: 190: timeOut = 0;
  8082  001ABE  0E00               	movlw	0
  8083  001AC0  0100               	movlb	0	; () banked
  8084  001AC2  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8085  001AC4  0E00               	movlw	0
  8086  001AC6  6FDD               	movwf	_timeOut& (0+255),b
  8087                           
  8088                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  8089  001AC8  D030               	goto	l6446
  8090  001ACA                     l6426:
  8091                           
  8092                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  8093                           ;OLED_Display.c: 194: 9,
  8094                           ;OLED_Display.c: 195: 0x3C,
  8095                           ;OLED_Display.c: 196: &status);
  8096  001ACA  0E39               	movlw	low oledPutChar@bytes
  8097  001ACC  0100               	movlb	0	; () banked
  8098  001ACE  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8099  001AD0  0E01               	movlw	high oledPutChar@bytes
  8100  001AD2  0100               	movlb	0	; () banked
  8101  001AD4  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8102  001AD6  0E00               	movlw	0
  8103  001AD8  0100               	movlb	0	; () banked
  8104  001ADA  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8105  001ADC  0E09               	movlw	9
  8106  001ADE  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8107  001AE0  0E00               	movlw	0
  8108  001AE2  0100               	movlb	0	; () banked
  8109  001AE4  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8110  001AE6  0E3C               	movlw	60
  8111  001AE8  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8112  001AEA  0E45               	movlw	low oledPutChar@status
  8113  001AEC  0100               	movlb	0	; () banked
  8114  001AEE  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8115  001AF0  0E01               	movlw	high oledPutChar@status
  8116  001AF2  0100               	movlb	0	; () banked
  8117  001AF4  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8118  001AF6  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
  8119  001AFA                     l6428:
  8120  001AFA  0E02               	movlw	2
  8121  001AFC  0101               	movlb	1	; () banked
  8122  001AFE  1945               	xorwf	oledPutChar@status& (0+255),w,b
  8123  001B00  B4D8               	btfsc	status,2,c
  8124  001B02  D7FB               	goto	l6428
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  8128                           
  8129                           ; BSR set to: 1
  8130  001B04  0101               	movlb	1	; () banked
  8131  001B06  5145               	movf	oledPutChar@status& (0+255),w,b
  8132  001B08  0101               	movlb	1	; () banked
  8133  001B0A  B4D8               	btfsc	status,2,c
  8134  001B0C  0012               	return	
  8135                           
  8136                           ; BSR set to: 1
  8137                           ;OLED_Display.c: 203: if (timeOut == 2)
  8138                           
  8139                           ; BSR set to: 1
  8140                           
  8141                           ; BSR set to: 1
  8142                           ;OLED_Display.c: 202: break;
  8143  001B0E  0E02               	movlw	2
  8144  001B10  0100               	movlb	0	; () banked
  8145  001B12  19DD               	xorwf	_timeOut& (0+255),w,b
  8146  001B14  0100               	movlb	0	; () banked
  8147  001B16  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8148  001B18  B4D8               	btfsc	status,2,c
  8149  001B1A  0012               	return	
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  8153                           
  8154                           ; BSR set to: 0
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;OLED_Display.c: 204: break;
  8158  001B1C  0101               	movlb	1	; () banked
  8159  001B1E  0545               	decf	oledPutChar@status& (0+255),w,b
  8160  001B20  B4D8               	btfsc	status,2,c
  8161  001B22  0012               	return	
  8162                           
  8163                           ; BSR set to: 1
  8164                           ;OLED_Display.c: 207: else
  8165                           ;OLED_Display.c: 208: timeOut++;
  8166                           
  8167                           ; BSR set to: 1
  8168                           
  8169                           ; BSR set to: 1
  8170                           
  8171                           ; BSR set to: 1
  8172                           ;OLED_Display.c: 206: break;
  8173  001B24  0100               	movlb	0	; () banked
  8174  001B26  4BDD               	infsnz	_timeOut& (0+255),f,b
  8175  001B28  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8176  001B2A                     l6446:
  8177  001B2A  0101               	movlb	1	; () banked
  8178  001B2C  0545               	decf	oledPutChar@status& (0+255),w,b
  8179  001B2E  B4D8               	btfsc	status,2,c
  8180  001B30  0012               	return	
  8181  001B32  D7CB               	goto	l6426
  8182  001B34                     __end_of_oledPutChar:
  8183                           	opt stack 0
  8184                           tosu	equ	0xFFF
  8185                           tosh	equ	0xFFE
  8186                           tosl	equ	0xFFD
  8187                           pclath	equ	0xFFA
  8188                           tblptru	equ	0xFF8
  8189                           tblptrh	equ	0xFF7
  8190                           tblptrl	equ	0xFF6
  8191                           tablat	equ	0xFF5
  8192                           prodh	equ	0xFF4
  8193                           prodl	equ	0xFF3
  8194                           intcon	equ	0xFF2
  8195                           indf0	equ	0xFEF
  8196                           postinc0	equ	0xFEE
  8197                           fsr0h	equ	0xFEA
  8198                           fsr0l	equ	0xFE9
  8199                           wreg	equ	0xFE8
  8200                           indf2	equ	0xFDF
  8201                           postinc2	equ	0xFDE
  8202                           postdec2	equ	0xFDD
  8203                           plusw2	equ	0xFDB
  8204                           fsr2h	equ	0xFDA
  8205                           fsr2l	equ	0xFD9
  8206                           status	equ	0xFD8
  8207                           
  8208 ;; *************** function _memmove *****************
  8209 ;; Defined at:
  8210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memmove.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  d1              2   26[COMRAM] PTR void 
  8213 ;;		 -> oledPutChar@bytes(9), 
  8214 ;;  s1              2   28[COMRAM] PTR const void 
  8215 ;;		 -> OledFont(768), 
  8216 ;;  n               2   30[COMRAM] unsigned int 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8219 ;;		 -> OledFont(768), 
  8220 ;;  d               2   34[COMRAM] PTR unsigned char 
  8221 ;;		 -> oledPutChar@bytes(9), 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  2   26[COMRAM] PTR void 
  8224 ;; Registers used:
  8225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8231 ;;      Params:         6       0       0       0       0       0       0
  8232 ;;      Locals:         4       0       0       0       0       0       0
  8233 ;;      Temps:          2       0       0       0       0       0       0
  8234 ;;      Totals:        12       0       0       0       0       0       0
  8235 ;;Total ram usage:       12 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    4
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_oledPutChar
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text37
  8246  001EFA                     __ptext37:
  8247                           	opt stack 0
  8248  001EFA                     _memmove:
  8249                           	opt stack 23
  8250                           
  8251                           ;incstack = 0
  8252  001EFA  C01D  F025         	movff	memmove@s1,memmove@s
  8253  001EFE  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  8254  001F02  C01B  F023         	movff	memmove@d1,memmove@d
  8255  001F06  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  8256  001F0A  5023               	movf	memmove@d,w,c
  8257  001F0C  5C25               	subwf	memmove@s,w,c
  8258  001F0E  5024               	movf	memmove@d+1,w,c
  8259  001F10  5826               	subwfb	memmove@s+1,w,c
  8260  001F12  B0D8               	btfsc	status,0,c
  8261  001F14  D02D               	goto	l6214
  8262  001F16  501F               	movf	memmove@n,w,c
  8263  001F18  2425               	addwf	memmove@s,w,c
  8264  001F1A  6E21               	movwf	??_memmove& (0+255),c
  8265  001F1C  5020               	movf	memmove@n+1,w,c
  8266  001F1E  2026               	addwfc	memmove@s+1,w,c
  8267  001F20  6E22               	movwf	(??_memmove+1)& (0+255),c
  8268  001F22  5021               	movf	??_memmove,w,c
  8269  001F24  5C23               	subwf	memmove@d,w,c
  8270  001F26  5022               	movf	??_memmove+1,w,c
  8271  001F28  5824               	subwfb	memmove@d+1,w,c
  8272  001F2A  B0D8               	btfsc	status,0,c
  8273  001F2C  D021               	goto	l6214
  8274  001F2E  501F               	movf	memmove@n,w,c
  8275  001F30  2625               	addwf	memmove@s,f,c
  8276  001F32  5020               	movf	memmove@n+1,w,c
  8277  001F34  2226               	addwfc	memmove@s+1,f,c
  8278  001F36  501F               	movf	memmove@n,w,c
  8279  001F38  2623               	addwf	memmove@d,f,c
  8280  001F3A  5020               	movf	memmove@n+1,w,c
  8281  001F3C  2224               	addwfc	memmove@d+1,f,c
  8282  001F3E                     l6210:
  8283  001F3E  0625               	decf	memmove@s,f,c
  8284  001F40  A0D8               	btfss	status,0,c
  8285  001F42  0626               	decf	memmove@s+1,f,c
  8286  001F44  C025  FFF6         	movff	memmove@s,tblptrl
  8287  001F48  C026  FFF7         	movff	memmove@s+1,tblptrh
  8288  001F4C                     	if	0	;tblptru may be non-zero
  8289  001F4C                     	endif
  8290  001F4C                     	if	0	;tblptru may be non-zero
  8291  001F4C                     	endif
  8292  001F4C  0623               	decf	memmove@d,f,c
  8293  001F4E  A0D8               	btfss	status,0,c
  8294  001F50  0624               	decf	memmove@d+1,f,c
  8295  001F52  C023  FFD9         	movff	memmove@d,fsr2l
  8296  001F56  C024  FFDA         	movff	memmove@d+1,fsr2h
  8297  001F5A  0008               	tblrd		*
  8298  001F5C  CFF5 FFDF          	movff	tablat,indf2
  8299  001F60  061F               	decf	memmove@n,f,c
  8300  001F62  A0D8               	btfss	status,0,c
  8301  001F64  0620               	decf	memmove@n+1,f,c
  8302  001F66  501F               	movf	memmove@n,w,c
  8303  001F68  1020               	iorwf	memmove@n+1,w,c
  8304  001F6A  B4D8               	btfsc	status,2,c
  8305  001F6C  0012               	return	
  8306  001F6E  D7E7               	goto	l6210
  8307  001F70                     l6214:
  8308  001F70  501F               	movf	memmove@n,w,c
  8309  001F72  1020               	iorwf	memmove@n+1,w,c
  8310  001F74  B4D8               	btfsc	status,2,c
  8311  001F76  0012               	return	
  8312  001F78  C025  FFF6         	movff	memmove@s,tblptrl
  8313  001F7C  C026  FFF7         	movff	memmove@s+1,tblptrh
  8314  001F80                     	if	0	;tblptru may be non-zero
  8315  001F80                     	endif
  8316  001F80                     	if	0	;tblptru may be non-zero
  8317  001F80                     	endif
  8318  001F80  C023  FFD9         	movff	memmove@d,fsr2l
  8319  001F84  C024  FFDA         	movff	memmove@d+1,fsr2h
  8320  001F88  0008               	tblrd		*
  8321  001F8A  CFF5 FFDF          	movff	tablat,indf2
  8322  001F8E  4A25               	infsnz	memmove@s,f,c
  8323  001F90  2A26               	incf	memmove@s+1,f,c
  8324  001F92  4A23               	infsnz	memmove@d,f,c
  8325  001F94  2A24               	incf	memmove@d+1,f,c
  8326  001F96  061F               	decf	memmove@n,f,c
  8327  001F98  A0D8               	btfss	status,0,c
  8328  001F9A  0620               	decf	memmove@n+1,f,c
  8329  001F9C  D7E9               	goto	l6214
  8330  001F9E                     __end_of_memmove:
  8331                           	opt stack 0
  8332                           tosu	equ	0xFFF
  8333                           tosh	equ	0xFFE
  8334                           tosl	equ	0xFFD
  8335                           pclath	equ	0xFFA
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           indf0	equ	0xFEF
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           plusw2	equ	0xFDB
  8352                           fsr2h	equ	0xFDA
  8353                           fsr2l	equ	0xFD9
  8354                           status	equ	0xFD8
  8355                           
  8356 ;; *************** function _oledGotoYX *****************
  8357 ;; Defined at:
  8358 ;;		line 39 in file "OLED_Display.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  Row             1    wreg     unsigned char 
  8361 ;;  Column          1   38[COMRAM] unsigned char 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  Row             1   40[COMRAM] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8373 ;;      Params:         1       0       0       0       0       0       0
  8374 ;;      Locals:         1       0       0       0       0       0       0
  8375 ;;      Temps:          1       0       0       0       0       0       0
  8376 ;;      Totals:         3       0       0       0       0       0       0
  8377 ;;Total ram usage:        3 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    7
  8380 ;; This function calls:
  8381 ;;		_OLED_command
  8382 ;; This function is called by:
  8383 ;;		_oledClear
  8384 ;;		_Splash
  8385 ;;		_SetData
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text38
  8390  0027F0                     __ptext38:
  8391                           	opt stack 0
  8392  0027F0                     _oledGotoYX:
  8393                           	opt stack 22
  8394                           
  8395                           ;incstack = 0
  8396                           ;oledGotoYX@Row stored from wreg
  8397  0027F0  6E29               	movwf	oledGotoYX@Row,c
  8398                           
  8399                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  8400  0027F2  5029               	movf	oledGotoYX@Row,w,c
  8401  0027F4  0FB0               	addlw	176
  8402  0027F6  EC6C  F012         	call	_OLED_command
  8403                           
  8404                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  8405  0027FA  5029               	movf	oledGotoYX@Row,w,c
  8406  0027FC  0FB0               	addlw	176
  8407  0027FE  EC6C  F012         	call	_OLED_command
  8408                           
  8409                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  8410  002802  5027               	movf	oledGotoYX@Column,w,c
  8411  002804  0D08               	mullw	8
  8412  002806  50F3               	movf	prodl,w,c
  8413  002808  0B0F               	andlw	15
  8414  00280A  EC6C  F012         	call	_OLED_command
  8415                           
  8416                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  8417  00280E  5027               	movf	oledGotoYX@Column,w,c
  8418  002810  0D08               	mullw	8
  8419  002812  50F3               	movf	prodl,w,c
  8420  002814  0B0F               	andlw	15
  8421  002816  EC6C  F012         	call	_OLED_command
  8422                           
  8423                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8424  00281A  5027               	movf	oledGotoYX@Column,w,c
  8425  00281C  0D08               	mullw	8
  8426  00281E  0E04               	movlw	4
  8427  002820  6E28               	movwf	??_oledGotoYX& (0+255),c
  8428  002822                     u6525:
  8429  002822  34F4               	rlcf	prodh,w,c
  8430  002824  32F4               	rrcf	prodh,f,c
  8431  002826  32F3               	rrcf	prodl,f,c
  8432  002828  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8433  00282A  D7FB               	goto	u6525
  8434  00282C  50F3               	movf	prodl,w,c
  8435  00282E  0B0F               	andlw	15
  8436  002830  0F10               	addlw	16
  8437  002832  EC6C  F012         	call	_OLED_command
  8438                           
  8439                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8440  002836  5027               	movf	oledGotoYX@Column,w,c
  8441  002838  0D08               	mullw	8
  8442  00283A  0E04               	movlw	4
  8443  00283C  6E28               	movwf	??_oledGotoYX& (0+255),c
  8444  00283E                     u6535:
  8445  00283E  34F4               	rlcf	prodh,w,c
  8446  002840  32F4               	rrcf	prodh,f,c
  8447  002842  32F3               	rrcf	prodl,f,c
  8448  002844  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8449  002846  D7FB               	goto	u6535
  8450  002848  50F3               	movf	prodl,w,c
  8451  00284A  0B0F               	andlw	15
  8452  00284C  0F10               	addlw	16
  8453  00284E  EC6C  F012         	call	_OLED_command
  8454  002852  0012               	return		;funcret
  8455  002854                     __end_of_oledGotoYX:
  8456                           	opt stack 0
  8457                           tosu	equ	0xFFF
  8458                           tosh	equ	0xFFE
  8459                           tosl	equ	0xFFD
  8460                           pclath	equ	0xFFA
  8461                           tblptru	equ	0xFF8
  8462                           tblptrh	equ	0xFF7
  8463                           tblptrl	equ	0xFF6
  8464                           tablat	equ	0xFF5
  8465                           prodh	equ	0xFF4
  8466                           prodl	equ	0xFF3
  8467                           intcon	equ	0xFF2
  8468                           indf0	equ	0xFEF
  8469                           postinc0	equ	0xFEE
  8470                           fsr0h	equ	0xFEA
  8471                           fsr0l	equ	0xFE9
  8472                           wreg	equ	0xFE8
  8473                           indf2	equ	0xFDF
  8474                           postinc2	equ	0xFDE
  8475                           postdec2	equ	0xFDD
  8476                           plusw2	equ	0xFDB
  8477                           fsr2h	equ	0xFDA
  8478                           fsr2l	equ	0xFD9
  8479                           status	equ	0xFD8
  8480                           
  8481 ;; *************** function _OLED_init *****************
  8482 ;; Defined at:
  8483 ;;		line 146 in file "OLED_Display.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8497 ;;      Params:         0       0       0       0       0       0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0
  8500 ;;      Totals:         0       0       0       0       0       0       0
  8501 ;;Total ram usage:        0 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    7
  8504 ;; This function calls:
  8505 ;;		_OLED_command
  8506 ;; This function is called by:
  8507 ;;		_Setupdisplay
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text39
  8512  002340                     __ptext39:
  8513                           	opt stack 0
  8514  002340                     _OLED_init:
  8515                           	opt stack 22
  8516                           
  8517                           ;OLED_Display.c: 148: OLED_command (0xae);
  8518                           
  8519                           ;incstack = 0
  8520  002340  0EAE               	movlw	174
  8521  002342  EC6C  F012         	call	_OLED_command
  8522                           
  8523                           ;OLED_Display.c: 149: OLED_command (0xa8);
  8524  002346  0EA8               	movlw	168
  8525  002348  EC6C  F012         	call	_OLED_command
  8526                           
  8527                           ;OLED_Display.c: 150: OLED_command (0x3f);
  8528  00234C  0E3F               	movlw	63
  8529  00234E  EC6C  F012         	call	_OLED_command
  8530                           
  8531                           ;OLED_Display.c: 151: OLED_command (0xd3);
  8532  002352  0ED3               	movlw	211
  8533  002354  EC6C  F012         	call	_OLED_command
  8534                           
  8535                           ;OLED_Display.c: 152: OLED_command (0x00);
  8536  002358  0E00               	movlw	0
  8537  00235A  EC6C  F012         	call	_OLED_command
  8538                           
  8539                           ;OLED_Display.c: 153: OLED_command (0x40);
  8540  00235E  0E40               	movlw	64
  8541  002360  EC6C  F012         	call	_OLED_command
  8542                           
  8543                           ;OLED_Display.c: 155: OLED_command (0xa0);
  8544  002364  0EA0               	movlw	160
  8545  002366  EC6C  F012         	call	_OLED_command
  8546                           
  8547                           ;OLED_Display.c: 156: OLED_command (0xa1);
  8548  00236A  0EA1               	movlw	161
  8549  00236C  EC6C  F012         	call	_OLED_command
  8550                           
  8551                           ;OLED_Display.c: 157: OLED_command (0xc0);
  8552  002370  0EC0               	movlw	192
  8553  002372  EC6C  F012         	call	_OLED_command
  8554                           
  8555                           ;OLED_Display.c: 159: OLED_command (0xc8);
  8556  002376  0EC8               	movlw	200
  8557  002378  EC6C  F012         	call	_OLED_command
  8558                           
  8559                           ;OLED_Display.c: 160: OLED_command (0xda);
  8560  00237C  0EDA               	movlw	218
  8561  00237E  EC6C  F012         	call	_OLED_command
  8562                           
  8563                           ;OLED_Display.c: 161: OLED_command (0x12);
  8564  002382  0E12               	movlw	18
  8565  002384  EC6C  F012         	call	_OLED_command
  8566                           
  8567                           ;OLED_Display.c: 162: OLED_command (0x81);
  8568  002388  0E81               	movlw	129
  8569  00238A  EC6C  F012         	call	_OLED_command
  8570                           
  8571                           ;OLED_Display.c: 163: OLED_command (0xfF);
  8572  00238E  0EFF               	movlw	255
  8573  002390  EC6C  F012         	call	_OLED_command
  8574                           
  8575                           ;OLED_Display.c: 164: OLED_command (0xa4);
  8576  002394  0EA4               	movlw	164
  8577  002396  EC6C  F012         	call	_OLED_command
  8578                           
  8579                           ;OLED_Display.c: 165: OLED_command (0xa6);
  8580  00239A  0EA6               	movlw	166
  8581  00239C  EC6C  F012         	call	_OLED_command
  8582                           
  8583                           ;OLED_Display.c: 166: OLED_command (0xd5);
  8584  0023A0  0ED5               	movlw	213
  8585  0023A2  EC6C  F012         	call	_OLED_command
  8586                           
  8587                           ;OLED_Display.c: 167: OLED_command (0x80);
  8588  0023A6  0E80               	movlw	128
  8589  0023A8  EC6C  F012         	call	_OLED_command
  8590                           
  8591                           ;OLED_Display.c: 168: OLED_command (0x8d);
  8592  0023AC  0E8D               	movlw	141
  8593  0023AE  EC6C  F012         	call	_OLED_command
  8594                           
  8595                           ;OLED_Display.c: 169: OLED_command (0x14);
  8596  0023B2  0E14               	movlw	20
  8597  0023B4  EC6C  F012         	call	_OLED_command
  8598                           
  8599                           ;OLED_Display.c: 170: OLED_command (0xAF);
  8600  0023B8  0EAF               	movlw	175
  8601  0023BA  EC6C  F012         	call	_OLED_command
  8602                           
  8603                           ;OLED_Display.c: 171: OLED_command (0x20);
  8604  0023BE  0E20               	movlw	32
  8605  0023C0  EC6C  F012         	call	_OLED_command
  8606                           
  8607                           ;OLED_Display.c: 172: OLED_command (0x00);
  8608  0023C4  0E00               	movlw	0
  8609  0023C6  EC6C  F012         	call	_OLED_command
  8610  0023CA  0012               	return		;funcret
  8611  0023CC                     __end_of_OLED_init:
  8612                           	opt stack 0
  8613                           tosu	equ	0xFFF
  8614                           tosh	equ	0xFFE
  8615                           tosl	equ	0xFFD
  8616                           pclath	equ	0xFFA
  8617                           tblptru	equ	0xFF8
  8618                           tblptrh	equ	0xFF7
  8619                           tblptrl	equ	0xFF6
  8620                           tablat	equ	0xFF5
  8621                           prodh	equ	0xFF4
  8622                           prodl	equ	0xFF3
  8623                           intcon	equ	0xFF2
  8624                           indf0	equ	0xFEF
  8625                           postinc0	equ	0xFEE
  8626                           fsr0h	equ	0xFEA
  8627                           fsr0l	equ	0xFE9
  8628                           wreg	equ	0xFE8
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           plusw2	equ	0xFDB
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function _OLED_command *****************
  8638 ;; Defined at:
  8639 ;;		line 10 in file "OLED_Display.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  com             1    wreg     unsigned char 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  com             1   36[COMRAM] unsigned char 
  8644 ;;  status          1   37[COMRAM] enum E8858
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8654 ;;      Params:         0       0       0       0       0       0       0
  8655 ;;      Locals:         2       0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0
  8657 ;;      Totals:         2       0       0       0       0       0       0
  8658 ;;Total ram usage:        2 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    6
  8661 ;; This function calls:
  8662 ;;		_I2C1_MasterWrite
  8663 ;; This function is called by:
  8664 ;;		_oledGotoYX
  8665 ;;		_OLED_init
  8666 ;;		_Display
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text40
  8671  0024D8                     __ptext40:
  8672                           	opt stack 0
  8673  0024D8                     _OLED_command:
  8674                           	opt stack 22
  8675                           
  8676                           ;incstack = 0
  8677                           ;OLED_command@com stored from wreg
  8678  0024D8  6E25               	movwf	OLED_command@com,c
  8679                           
  8680                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  8681  0024DA  0E80               	movlw	128
  8682  0024DC  0100               	movlb	0	; () banked
  8683  0024DE  6FF0               	movwf	_Buff& (0+255),b
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;OLED_Display.c: 14: Buff[1] = com;
  8687  0024E0  C025  F0F1         	movff	OLED_command@com,_Buff+1
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8691  0024E4  0E02               	movlw	2
  8692  0024E6  6E26               	movwf	OLED_command@status,c
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;OLED_Display.c: 17: timeOut = 0;
  8696  0024E8  0E00               	movlw	0
  8697  0024EA  0100               	movlb	0	; () banked
  8698  0024EC  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8699  0024EE  0E00               	movlw	0
  8700  0024F0  6FDD               	movwf	_timeOut& (0+255),b
  8701                           
  8702                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  8703  0024F2  D02C               	goto	l6202
  8704  0024F4                     l6182:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  8708                           ;OLED_Display.c: 21: 2,
  8709                           ;OLED_Display.c: 22: 0x3C,
  8710                           ;OLED_Display.c: 23: &status);
  8711  0024F4  0EF0               	movlw	low _Buff
  8712  0024F6  0100               	movlb	0	; () banked
  8713  0024F8  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8714  0024FA  0E00               	movlw	high _Buff
  8715  0024FC  0100               	movlb	0	; () banked
  8716  0024FE  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8717  002500  0E00               	movlw	0
  8718  002502  0100               	movlb	0	; () banked
  8719  002504  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8720  002506  0E02               	movlw	2
  8721  002508  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8722  00250A  0E00               	movlw	0
  8723  00250C  0100               	movlb	0	; () banked
  8724  00250E  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8725  002510  0E3C               	movlw	60
  8726  002512  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8727  002514  0E26               	movlw	low OLED_command@status
  8728  002516  0100               	movlb	0	; () banked
  8729  002518  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8730  00251A  0E00               	movlw	high OLED_command@status
  8731  00251C  0100               	movlb	0	; () banked
  8732  00251E  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8733  002520  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
  8734  002524                     l6184:
  8735  002524  0E02               	movlw	2
  8736  002526  1826               	xorwf	OLED_command@status,w,c
  8737  002528  B4D8               	btfsc	status,2,c
  8738  00252A  D7FC               	goto	l6184
  8739                           
  8740                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  8741  00252C  5026               	movf	OLED_command@status,w,c
  8742  00252E  B4D8               	btfsc	status,2,c
  8743  002530  0012               	return	
  8744                           
  8745                           ;OLED_Display.c: 30: if (timeOut == 2)
  8746                           
  8747                           ;OLED_Display.c: 29: break;
  8748  002532  0E02               	movlw	2
  8749  002534  0100               	movlb	0	; () banked
  8750  002536  19DD               	xorwf	_timeOut& (0+255),w,b
  8751  002538  0100               	movlb	0	; () banked
  8752  00253A  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8753  00253C  B4D8               	btfsc	status,2,c
  8754  00253E  0012               	return	
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  8758                           
  8759                           ; BSR set to: 0
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;OLED_Display.c: 31: break;
  8763  002540  0426               	decf	OLED_command@status,w,c
  8764  002542  B4D8               	btfsc	status,2,c
  8765  002544  0012               	return	
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;OLED_Display.c: 34: else
  8769                           ;OLED_Display.c: 35: timeOut++;
  8770                           
  8771                           ; BSR set to: 0
  8772                           
  8773                           ; BSR set to: 0
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;OLED_Display.c: 33: break;
  8777  002546  0100               	movlb	0	; () banked
  8778  002548  4BDD               	infsnz	_timeOut& (0+255),f,b
  8779  00254A  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8780  00254C                     l6202:
  8781                           
  8782                           ; BSR set to: 0
  8783  00254C  0426               	decf	OLED_command@status,w,c
  8784  00254E  B4D8               	btfsc	status,2,c
  8785  002550  0012               	return	
  8786  002552  D7D0               	goto	l6182
  8787  002554                     __end_of_OLED_command:
  8788                           	opt stack 0
  8789                           tosu	equ	0xFFF
  8790                           tosh	equ	0xFFE
  8791                           tosl	equ	0xFFD
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           indf0	equ	0xFEF
  8801                           postinc0	equ	0xFEE
  8802                           fsr0h	equ	0xFEA
  8803                           fsr0l	equ	0xFE9
  8804                           wreg	equ	0xFE8
  8805                           indf2	equ	0xFDF
  8806                           postinc2	equ	0xFDE
  8807                           postdec2	equ	0xFDD
  8808                           plusw2	equ	0xFDB
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function _SYSTEM_Initialize *****************
  8814 ;; Defined at:
  8815 ;;		line 112 in file "mcc_generated_files/mcc.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8829 ;;      Params:         0       0       0       0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    7
  8836 ;; This function calls:
  8837 ;;		_ADC_Initialize
  8838 ;;		_EUSART1_Initialize
  8839 ;;		_I2C1_Initialize
  8840 ;;		_INTERRUPT_Initialize
  8841 ;;		_OSCILLATOR_Initialize
  8842 ;;		_PIN_MANAGER_Initialize
  8843 ;;		_TMR0_Initialize
  8844 ;;		_TMR2_Initialize
  8845 ;;		_begin
  8846 ;; This function is called by:
  8847 ;;		_main
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text41
  8852  0025C8                     __ptext41:
  8853                           	opt stack 0
  8854  0025C8                     _SYSTEM_Initialize:
  8855                           	opt stack 23
  8856                           
  8857                           ;mcc.c: 114: OSCILLATOR_Initialize();
  8858                           
  8859                           ;incstack = 0
  8860  0025C8  EC83  F017         	call	_OSCILLATOR_Initialize	;wreg free
  8861                           
  8862                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  8863  0025CC  EC1E  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  8864                           
  8865                           ;mcc.c: 116: INTERRUPT_Initialize();
  8866  0025D0  EC73  F017         	call	_INTERRUPT_Initialize	;wreg free
  8867                           
  8868                           ;mcc.c: 117: ADC_Initialize();
  8869  0025D4  EC3D  F017         	call	_ADC_Initialize	;wreg free
  8870                           
  8871                           ;mcc.c: 118: TMR0_Initialize();
  8872  0025D8  ECF4  F016         	call	_TMR0_Initialize	;wreg free
  8873                           
  8874                           ;mcc.c: 119: TMR2_Initialize();
  8875  0025DC  ECE3  F016         	call	_TMR2_Initialize	;wreg free
  8876                           
  8877                           ;mcc.c: 120: EUSART1_Initialize();
  8878  0025E0  ECB4  F015         	call	_EUSART1_Initialize	;wreg free
  8879                           
  8880                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  8881  0025E4  0E00               	movlw	low _receiveArray
  8882  0025E6  0101               	movlb	1	; () banked
  8883  0025E8  6F39               	movwf	begin@ptr& (0+255),b
  8884  0025EA  0E01               	movlw	high _receiveArray
  8885  0025EC  0101               	movlb	1	; () banked
  8886  0025EE  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  8887  0025F0  0E28               	movlw	40
  8888  0025F2  0101               	movlb	1	; () banked
  8889  0025F4  6F3B               	movwf	begin@maxSize& (0+255),b
  8890  0025F6  0E03               	movlw	3
  8891  0025F8  0101               	movlb	1	; () banked
  8892  0025FA  6F3C               	movwf	begin@givenAddress& (0+255),b
  8893  0025FC  0E00               	movlw	0
  8894  0025FE  0101               	movlb	1	; () banked
  8895  002600  6F3D               	movwf	begin@error& (0+255),b
  8896  002602  0E7A               	movlw	low _Send_put
  8897  002604  0101               	movlb	1	; () banked
  8898  002606  6F3E               	movwf	begin@stufftosend& (0+255),b
  8899  002608  0E2C               	movlw	high _Send_put
  8900  00260A  0101               	movlb	1	; () banked
  8901  00260C  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  8902  00260E  0EF8               	movlw	low _Receive_get
  8903  002610  0101               	movlb	1	; () banked
  8904  002612  6F40               	movwf	begin@stufftoreceive& (0+255),b
  8905  002614  0E2E               	movlw	high _Receive_get
  8906  002616  0101               	movlb	1	; () banked
  8907  002618  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  8908  00261A  0E92               	movlw	low _Receive_available
  8909  00261C  0101               	movlb	1	; () banked
  8910  00261E  6F42               	movwf	begin@stuffavailable& (0+255),b
  8911  002620  0E2E               	movlw	high _Receive_available
  8912  002622  0101               	movlb	1	; () banked
  8913  002624  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  8914  002626  0E00               	movlw	0
  8915  002628  0101               	movlb	1	; () banked
  8916  00262A  6F44               	movwf	begin@stuffpeek& (0+255),b
  8917  00262C  0E00               	movlw	0
  8918  00262E  0101               	movlb	1	; () banked
  8919  002630  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  8920  002632  EC5B  F014         	call	_begin	;wreg free
  8921                           
  8922                           ;mcc.c: 122: I2C1_Initialize();
  8923  002636  EC96  F015         	call	_I2C1_Initialize	;wreg free
  8924  00263A  0012               	return		;funcret
  8925  00263C                     __end_of_SYSTEM_Initialize:
  8926                           	opt stack 0
  8927                           tosu	equ	0xFFF
  8928                           tosh	equ	0xFFE
  8929                           tosl	equ	0xFFD
  8930                           pclath	equ	0xFFA
  8931                           tblptru	equ	0xFF8
  8932                           tblptrh	equ	0xFF7
  8933                           tblptrl	equ	0xFF6
  8934                           tablat	equ	0xFF5
  8935                           prodh	equ	0xFF4
  8936                           prodl	equ	0xFF3
  8937                           intcon	equ	0xFF2
  8938                           indf0	equ	0xFEF
  8939                           postinc0	equ	0xFEE
  8940                           fsr0h	equ	0xFEA
  8941                           fsr0l	equ	0xFE9
  8942                           wreg	equ	0xFE8
  8943                           indf2	equ	0xFDF
  8944                           postinc2	equ	0xFDE
  8945                           postdec2	equ	0xFDD
  8946                           plusw2	equ	0xFDB
  8947                           fsr2h	equ	0xFDA
  8948                           fsr2l	equ	0xFD9
  8949                           status	equ	0xFD8
  8950                           
  8951 ;; *************** function _begin *****************
  8952 ;; Defined at:
  8953 ;;		line 90 in file "FastTransfer.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  8956 ;;		 -> receiveArray(40), 
  8957 ;;  maxSize         1    2[BANK1 ] unsigned char 
  8958 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  8959 ;;  error           1    4[BANK1 ] unsigned char 
  8960 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  8961 ;;		 -> Send_put(1), 
  8962 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  8963 ;;		 -> Receive_get(1), 
  8964 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  8965 ;;		 -> Receive_available(2), 
  8966 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  8967 ;;		 -> Receive_peek(1), 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8979 ;;      Params:         0       0      13       0       0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0
  8982 ;;      Totals:         0       0      13       0       0       0       0
  8983 ;;Total ram usage:       13 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    5
  8986 ;; This function calls:
  8987 ;;		___awdiv
  8988 ;; This function is called by:
  8989 ;;		_SYSTEM_Initialize
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text42
  8994  0028B6                     __ptext42:
  8995                           	opt stack 0
  8996  0028B6                     _begin:
  8997                           	opt stack 24
  8998                           
  8999                           ;FastTransfer.c: 91: receiveArrayAddress = ptr;
  9000                           
  9001                           ;incstack = 0
  9002  0028B6  C139  F0D7         	movff	begin@ptr,_receiveArrayAddress
  9003  0028BA  C13A  F0D8         	movff	begin@ptr+1,_receiveArrayAddress+1
  9004                           
  9005                           ;FastTransfer.c: 92: moduleAddress = givenAddress;
  9006  0028BE  C13C  F03A         	movff	begin@givenAddress,_moduleAddress
  9007                           
  9008                           ;FastTransfer.c: 93: serial_write = stufftosend;
  9009  0028C2  C13E  F033         	movff	begin@stufftosend,_serial_write
  9010  0028C6  C13F  F034         	movff	begin@stufftosend+1,_serial_write+1
  9011                           
  9012                           ;FastTransfer.c: 94: serial_available = stuffavailable;
  9013  0028CA  C142  F02F         	movff	begin@stuffavailable,_serial_available
  9014  0028CE  C143  F030         	movff	begin@stuffavailable+1,_serial_available+1
  9015                           
  9016                           ;FastTransfer.c: 95: serial_peek = stuffpeek;
  9017  0028D2  C144  F0DB         	movff	begin@stuffpeek,_serial_peek
  9018  0028D6  C145  F0DC         	movff	begin@stuffpeek+1,_serial_peek+1
  9019                           
  9020                           ;FastTransfer.c: 96: serial_read = stufftoreceive;
  9021  0028DA  C140  F031         	movff	begin@stufftoreceive,_serial_read
  9022  0028DE  C141  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  9023                           
  9024                           ;FastTransfer.c: 97: maxDataAddress = maxSize / 2;
  9025  0028E2  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  9026  0028E6  6A1C               	clrf	___awdiv@dividend+1,c
  9027  0028E8  0E00               	movlw	0
  9028  0028EA  6E1E               	movwf	___awdiv@divisor+1,c
  9029  0028EC  0E02               	movlw	2
  9030  0028EE  6E1D               	movwf	___awdiv@divisor,c
  9031  0028F0  EC2A  F012         	call	___awdiv	;wreg free
  9032  0028F4  501B               	movf	?___awdiv,w,c
  9033  0028F6  6E39               	movwf	_maxDataAddress,c
  9034                           
  9035                           ;FastTransfer.c: 98: sendStructAddress = (unsigned char*) & ring_buffer;
  9036  0028F8  0E00               	movlw	low _ring_buffer
  9037  0028FA  0100               	movlb	0	; () banked
  9038  0028FC  6FD9               	movwf	_sendStructAddress& (0+255),b
  9039  0028FE  0E02               	movlw	high _ring_buffer
  9040  002900  0100               	movlb	0	; () banked
  9041  002902  6FDA               	movwf	(_sendStructAddress+1)& (0+255),b
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;FastTransfer.c: 99: AKNAKsend = error;
  9045  002904  C13D  F036         	movff	begin@error,_AKNAKsend
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;FastTransfer.c: 100: alignErrorCounter = 0;
  9049  002908  0E00               	movlw	0
  9050  00290A  0100               	movlb	0	; () banked
  9051  00290C  6FCA               	movwf	(_alignErrorCounter+1)& (0+255),b
  9052  00290E  0E00               	movlw	0
  9053  002910  6FC9               	movwf	_alignErrorCounter& (0+255),b
  9054                           
  9055                           ; BSR set to: 0
  9056  002912  0012               	return		;funcret
  9057  002914                     __end_of_begin:
  9058                           	opt stack 0
  9059                           tosu	equ	0xFFF
  9060                           tosh	equ	0xFFE
  9061                           tosl	equ	0xFFD
  9062                           pclath	equ	0xFFA
  9063                           tblptru	equ	0xFF8
  9064                           tblptrh	equ	0xFF7
  9065                           tblptrl	equ	0xFF6
  9066                           tablat	equ	0xFF5
  9067                           prodh	equ	0xFF4
  9068                           prodl	equ	0xFF3
  9069                           intcon	equ	0xFF2
  9070                           indf0	equ	0xFEF
  9071                           postinc0	equ	0xFEE
  9072                           fsr0h	equ	0xFEA
  9073                           fsr0l	equ	0xFE9
  9074                           wreg	equ	0xFE8
  9075                           indf2	equ	0xFDF
  9076                           postinc2	equ	0xFDE
  9077                           postdec2	equ	0xFDD
  9078                           plusw2	equ	0xFDB
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8
  9082                           
  9083 ;; *************** function _TMR2_Initialize *****************
  9084 ;; Defined at:
  9085 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9099 ;;      Params:         0       0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    5
  9106 ;; This function calls:
  9107 ;;		_TMR2_SetInterruptHandler
  9108 ;;		_TMR2_StartTimer
  9109 ;; This function is called by:
  9110 ;;		_SYSTEM_Initialize
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text43
  9115  002DC6                     __ptext43:
  9116                           	opt stack 0
  9117  002DC6                     _TMR2_Initialize:
  9118                           	opt stack 24
  9119                           
  9120                           ;tmr2.c: 67: T2CON = 0x7E;
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;incstack = 0
  9124  002DC6  0E7E               	movlw	126
  9125  002DC8  6EBA               	movwf	4026,c	;volatile
  9126                           
  9127                           ;tmr2.c: 70: PR2 = 0x30;
  9128  002DCA  0E30               	movlw	48
  9129  002DCC  6EBB               	movwf	4027,c	;volatile
  9130                           
  9131                           ;tmr2.c: 73: TMR2 = 0x00;
  9132  002DCE  0E00               	movlw	0
  9133  002DD0  6EBC               	movwf	4028,c	;volatile
  9134                           
  9135                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  9136  002DD2  929E               	bcf	3998,1,c	;volatile
  9137                           
  9138                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  9139  002DD4  829D               	bsf	3997,1,c	;volatile
  9140                           
  9141                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  9142  002DD6  0E5E               	movlw	low _TMR2_DefaultInterruptHandler
  9143  002DD8  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  9144  002DDA  0E2F               	movlw	high _TMR2_DefaultInterruptHandler
  9145  002DDC  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  9146  002DDE  EC8F  F017         	call	_TMR2_SetInterruptHandler	;wreg free
  9147                           
  9148                           ;tmr2.c: 85: TMR2_StartTimer();
  9149  002DE2  ECA9  F017         	call	_TMR2_StartTimer	;wreg free
  9150  002DE6  0012               	return		;funcret
  9151  002DE8                     __end_of_TMR2_Initialize:
  9152                           	opt stack 0
  9153                           tosu	equ	0xFFF
  9154                           tosh	equ	0xFFE
  9155                           tosl	equ	0xFFD
  9156                           pclath	equ	0xFFA
  9157                           tblptru	equ	0xFF8
  9158                           tblptrh	equ	0xFF7
  9159                           tblptrl	equ	0xFF6
  9160                           tablat	equ	0xFF5
  9161                           prodh	equ	0xFF4
  9162                           prodl	equ	0xFF3
  9163                           intcon	equ	0xFF2
  9164                           indf0	equ	0xFEF
  9165                           postinc0	equ	0xFEE
  9166                           fsr0h	equ	0xFEA
  9167                           fsr0l	equ	0xFE9
  9168                           wreg	equ	0xFE8
  9169                           indf2	equ	0xFDF
  9170                           postinc2	equ	0xFDE
  9171                           postdec2	equ	0xFDD
  9172                           plusw2	equ	0xFDB
  9173                           fsr2h	equ	0xFDA
  9174                           fsr2l	equ	0xFD9
  9175                           status	equ	0xFD8
  9176                           
  9177 ;; *************** function _TMR2_StartTimer *****************
  9178 ;; Defined at:
  9179 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		None
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9193 ;;      Params:         0       0       0       0       0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    4
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_TMR2_Initialize
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text44
  9208  002F52                     __ptext44:
  9209                           	opt stack 0
  9210  002F52                     _TMR2_StartTimer:
  9211                           	opt stack 24
  9212                           
  9213                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  9214                           
  9215                           ;incstack = 0
  9216  002F52  84BA               	bsf	4026,2,c	;volatile
  9217  002F54  0012               	return		;funcret
  9218  002F56                     __end_of_TMR2_StartTimer:
  9219                           	opt stack 0
  9220                           tosu	equ	0xFFF
  9221                           tosh	equ	0xFFE
  9222                           tosl	equ	0xFFD
  9223                           pclath	equ	0xFFA
  9224                           tblptru	equ	0xFF8
  9225                           tblptrh	equ	0xFF7
  9226                           tblptrl	equ	0xFF6
  9227                           tablat	equ	0xFF5
  9228                           prodh	equ	0xFF4
  9229                           prodl	equ	0xFF3
  9230                           intcon	equ	0xFF2
  9231                           indf0	equ	0xFEF
  9232                           postinc0	equ	0xFEE
  9233                           fsr0h	equ	0xFEA
  9234                           fsr0l	equ	0xFE9
  9235                           wreg	equ	0xFE8
  9236                           indf2	equ	0xFDF
  9237                           postinc2	equ	0xFDE
  9238                           postdec2	equ	0xFDD
  9239                           plusw2	equ	0xFDB
  9240                           fsr2h	equ	0xFDA
  9241                           fsr2l	equ	0xFD9
  9242                           status	equ	0xFD8
  9243                           
  9244 ;; *************** function _TMR2_SetInterruptHandler *****************
  9245 ;; Defined at:
  9246 ;;		line 291 in file "mcc_generated_files/tmr2.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  InterruptHan    2   26[COMRAM] PTR void 
  9249 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9261 ;;      Params:         2       0       0       0       0       0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0
  9264 ;;      Totals:         2       0       0       0       0       0       0
  9265 ;;Total ram usage:        2 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    4
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_TMR2_Initialize
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text45
  9276  002F1E                     __ptext45:
  9277                           	opt stack 0
  9278  002F1E                     _TMR2_SetInterruptHandler:
  9279                           	opt stack 24
  9280                           
  9281                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  9282                           
  9283                           ;incstack = 0
  9284  002F1E  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9285  002F22  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9286  002F26  0012               	return		;funcret
  9287  002F28                     __end_of_TMR2_SetInterruptHandler:
  9288                           	opt stack 0
  9289                           tosu	equ	0xFFF
  9290                           tosh	equ	0xFFE
  9291                           tosl	equ	0xFFD
  9292                           pclath	equ	0xFFA
  9293                           tblptru	equ	0xFF8
  9294                           tblptrh	equ	0xFF7
  9295                           tblptrl	equ	0xFF6
  9296                           tablat	equ	0xFF5
  9297                           prodh	equ	0xFF4
  9298                           prodl	equ	0xFF3
  9299                           intcon	equ	0xFF2
  9300                           indf0	equ	0xFEF
  9301                           postinc0	equ	0xFEE
  9302                           fsr0h	equ	0xFEA
  9303                           fsr0l	equ	0xFE9
  9304                           wreg	equ	0xFE8
  9305                           indf2	equ	0xFDF
  9306                           postinc2	equ	0xFDE
  9307                           postdec2	equ	0xFDD
  9308                           plusw2	equ	0xFDB
  9309                           fsr2h	equ	0xFDA
  9310                           fsr2l	equ	0xFD9
  9311                           status	equ	0xFD8
  9312                           
  9313 ;; *************** function _TMR0_Initialize *****************
  9314 ;; Defined at:
  9315 ;;		line 23 in file "mcc_generated_files/tmr0.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;		None
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  1    wreg      void 
  9322 ;; Registers used:
  9323 ;;		wreg, status,2, cstack
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9329 ;;      Params:         0       0       0       0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0
  9331 ;;      Temps:          0       0       0       0       0       0       0
  9332 ;;      Totals:         0       0       0       0       0       0       0
  9333 ;;Total ram usage:        0 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    5
  9336 ;; This function calls:
  9337 ;;		_TMR0_StartTimer
  9338 ;; This function is called by:
  9339 ;;		_SYSTEM_Initialize
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text46
  9344  002DE8                     __ptext46:
  9345                           	opt stack 0
  9346  002DE8                     _TMR0_Initialize:
  9347                           	opt stack 24
  9348                           
  9349                           ;tmr0.c: 27: T0CON = 0x94;
  9350                           
  9351                           ;incstack = 0
  9352  002DE8  0E94               	movlw	148
  9353  002DEA  6ED5               	movwf	4053,c	;volatile
  9354                           
  9355                           ;tmr0.c: 30: TMR0H = 0xCF;
  9356  002DEC  0ECF               	movlw	207
  9357  002DEE  6ED7               	movwf	4055,c	;volatile
  9358                           
  9359                           ;tmr0.c: 33: TMR0L = 0x2C;
  9360  002DF0  0E2C               	movlw	44
  9361  002DF2  6ED6               	movwf	4054,c	;volatile
  9362                           
  9363                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  9364  002DF4  0ECF               	movlw	207
  9365  002DF6  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9366  002DF8  0E2C               	movlw	44
  9367  002DFA  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  9368                           
  9369                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  9370  002DFC  94F2               	bcf	intcon,2,c	;volatile
  9371                           
  9372                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  9373  002DFE  8AF2               	bsf	intcon,5,c	;volatile
  9374                           
  9375                           ;tmr0.c: 45: TMR0_StartTimer();
  9376  002E00  ECAB  F017         	call	_TMR0_StartTimer	;wreg free
  9377  002E04  0012               	return		;funcret
  9378  002E06                     __end_of_TMR0_Initialize:
  9379                           	opt stack 0
  9380                           tosu	equ	0xFFF
  9381                           tosh	equ	0xFFE
  9382                           tosl	equ	0xFFD
  9383                           pclath	equ	0xFFA
  9384                           tblptru	equ	0xFF8
  9385                           tblptrh	equ	0xFF7
  9386                           tblptrl	equ	0xFF6
  9387                           tablat	equ	0xFF5
  9388                           prodh	equ	0xFF4
  9389                           prodl	equ	0xFF3
  9390                           intcon	equ	0xFF2
  9391                           indf0	equ	0xFEF
  9392                           postinc0	equ	0xFEE
  9393                           fsr0h	equ	0xFEA
  9394                           fsr0l	equ	0xFE9
  9395                           wreg	equ	0xFE8
  9396                           indf2	equ	0xFDF
  9397                           postinc2	equ	0xFDE
  9398                           postdec2	equ	0xFDD
  9399                           plusw2	equ	0xFDB
  9400                           fsr2h	equ	0xFDA
  9401                           fsr2l	equ	0xFD9
  9402                           status	equ	0xFD8
  9403                           
  9404 ;; *************** function _TMR0_StartTimer *****************
  9405 ;; Defined at:
  9406 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;		None
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		None
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9420 ;;      Params:         0       0       0       0       0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:    4
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_TMR0_Initialize
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text47
  9435  002F56                     __ptext47:
  9436                           	opt stack 0
  9437  002F56                     _TMR0_StartTimer:
  9438                           	opt stack 24
  9439                           
  9440                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  9441                           
  9442                           ;incstack = 0
  9443  002F56  8ED5               	bsf	4053,7,c	;volatile
  9444  002F58  0012               	return		;funcret
  9445  002F5A                     __end_of_TMR0_StartTimer:
  9446                           	opt stack 0
  9447                           tosu	equ	0xFFF
  9448                           tosh	equ	0xFFE
  9449                           tosl	equ	0xFFD
  9450                           pclath	equ	0xFFA
  9451                           tblptru	equ	0xFF8
  9452                           tblptrh	equ	0xFF7
  9453                           tblptrl	equ	0xFF6
  9454                           tablat	equ	0xFF5
  9455                           prodh	equ	0xFF4
  9456                           prodl	equ	0xFF3
  9457                           intcon	equ	0xFF2
  9458                           indf0	equ	0xFEF
  9459                           postinc0	equ	0xFEE
  9460                           fsr0h	equ	0xFEA
  9461                           fsr0l	equ	0xFE9
  9462                           wreg	equ	0xFE8
  9463                           indf2	equ	0xFDF
  9464                           postinc2	equ	0xFDE
  9465                           postdec2	equ	0xFDD
  9466                           plusw2	equ	0xFDB
  9467                           fsr2h	equ	0xFDA
  9468                           fsr2l	equ	0xFD9
  9469                           status	equ	0xFD8
  9470                           
  9471 ;; *************** function _PIN_MANAGER_Initialize *****************
  9472 ;; Defined at:
  9473 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		wreg, status,2
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9487 ;;      Params:         0       0       0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:    4
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_SYSTEM_Initialize
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text48
  9502  00263C                     __ptext48:
  9503                           	opt stack 0
  9504  00263C                     _PIN_MANAGER_Initialize:
  9505                           	opt stack 25
  9506                           
  9507                           ;pin_manager.c: 52: LATA = 0x00;
  9508                           
  9509                           ;incstack = 0
  9510  00263C  0E00               	movlw	0
  9511  00263E  6E89               	movwf	3977,c	;volatile
  9512                           
  9513                           ;pin_manager.c: 53: TRISA = 0xF7;
  9514  002640  0EF7               	movlw	247
  9515  002642  6E92               	movwf	3986,c	;volatile
  9516                           
  9517                           ;pin_manager.c: 54: ANSELA = 0x20;
  9518  002644  0E20               	movlw	32
  9519  002646  010F               	movlb	15	; () banked
  9520  002648  6F38               	movwf	56,b	;volatile
  9521                           
  9522                           ;pin_manager.c: 56: LATB = 0x00;
  9523  00264A  0E00               	movlw	0
  9524  00264C  6E8A               	movwf	3978,c	;volatile
  9525                           
  9526                           ;pin_manager.c: 57: TRISB = 0xD7;
  9527  00264E  0ED7               	movlw	215
  9528  002650  6E93               	movwf	3987,c	;volatile
  9529                           
  9530                           ;pin_manager.c: 58: ANSELB = 0x00;
  9531  002652  0E00               	movlw	0
  9532  002654  010F               	movlb	15	; () banked
  9533  002656  6F39               	movwf	57,b	;volatile
  9534                           
  9535                           ;pin_manager.c: 59: WPUB = 0x00;
  9536  002658  0E00               	movlw	0
  9537  00265A  6E61               	movwf	3937,c	;volatile
  9538                           
  9539                           ;pin_manager.c: 61: LATC = 0x18;
  9540  00265C  0E18               	movlw	24
  9541  00265E  6E8B               	movwf	3979,c	;volatile
  9542                           
  9543                           ;pin_manager.c: 62: TRISC = 0xDF;
  9544  002660  0EDF               	movlw	223
  9545  002662  6E94               	movwf	3988,c	;volatile
  9546                           
  9547                           ;pin_manager.c: 65: LATD = 0x00;
  9548  002664  0E00               	movlw	0
  9549  002666  6E8C               	movwf	3980,c	;volatile
  9550                           
  9551                           ;pin_manager.c: 66: TRISD = 0xFD;
  9552  002668  0EFD               	movlw	253
  9553  00266A  6E95               	movwf	3989,c	;volatile
  9554                           
  9555                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9556  00266C  0EDD               	movlw	221
  9557  00266E  010F               	movlb	15	; () banked
  9558  002670  6F3B               	movwf	59,b	;volatile
  9559                           
  9560                           ;pin_manager.c: 69: LATE = 0x00;
  9561  002672  0E00               	movlw	0
  9562  002674  6E8D               	movwf	3981,c	;volatile
  9563                           
  9564                           ;pin_manager.c: 70: TRISE = 0x00;
  9565  002676  0E00               	movlw	0
  9566  002678  6E96               	movwf	3990,c	;volatile
  9567                           
  9568                           ;pin_manager.c: 71: ANSELE = 0x00;
  9569  00267A  0E00               	movlw	0
  9570  00267C  010F               	movlb	15	; () banked
  9571  00267E  6F3C               	movwf	60,b	;volatile
  9572                           
  9573                           ;pin_manager.c: 73: ANSELC = 0xE4;
  9574  002680  0EE4               	movlw	228
  9575  002682  010F               	movlb	15	; () banked
  9576  002684  6F3A               	movwf	58,b	;volatile
  9577                           
  9578                           ; BSR set to: 15
  9579                           ;pin_manager.c: 76: TRISCbits.RC5 = 0;
  9580  002686  9A94               	bcf	3988,5,c	;volatile
  9581                           
  9582                           ; BSR set to: 15
  9583                           ;pin_manager.c: 77: ANSELCbits.ANSC5 = 0;
  9584  002688  010F               	movlb	15	; () banked
  9585  00268A  9B3A               	bcf	58,5,b	;volatile
  9586                           
  9587                           ; BSR set to: 15
  9588                           ;pin_manager.c: 78: LATCbits.LATC5 = 0;
  9589  00268C  9A8B               	bcf	3979,5,c	;volatile
  9590                           
  9591                           ; BSR set to: 15
  9592                           ;pin_manager.c: 80: TRISCbits.TRISC5=0;
  9593  00268E  9A94               	bcf	3988,5,c	;volatile
  9594                           
  9595                           ; BSR set to: 15
  9596                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 0x01;
  9597  002690  8EF1               	bsf	intcon2,7,c	;volatile
  9598                           
  9599                           ; BSR set to: 15
  9600                           ;pin_manager.c: 84: TRISAbits.RA3 = 0;
  9601  002692  9692               	bcf	3986,3,c	;volatile
  9602                           
  9603                           ; BSR set to: 15
  9604                           ;pin_manager.c: 85: ANSELAbits.ANSA3 = 0;
  9605  002694  010F               	movlb	15	; () banked
  9606  002696  9738               	bcf	56,3,b	;volatile
  9607                           
  9608                           ; BSR set to: 15
  9609                           ;pin_manager.c: 88: TRISCbits.RC6 = 0;
  9610  002698  9C94               	bcf	3988,6,c	;volatile
  9611                           
  9612                           ; BSR set to: 15
  9613                           ;pin_manager.c: 89: TRISCbits.RC7 = 1;
  9614  00269A  8E94               	bsf	3988,7,c	;volatile
  9615                           
  9616                           ; BSR set to: 15
  9617                           ;pin_manager.c: 90: ANSELCbits.ANSC6 = 0;
  9618  00269C  010F               	movlb	15	; () banked
  9619  00269E  9D3A               	bcf	58,6,b	;volatile
  9620                           
  9621                           ; BSR set to: 15
  9622                           ;pin_manager.c: 91: ANSELCbits.ANSC7 = 0;
  9623  0026A0  010F               	movlb	15	; () banked
  9624  0026A2  9F3A               	bcf	58,7,b	;volatile
  9625                           
  9626                           ; BSR set to: 15
  9627                           
  9628                           ; BSR set to: 15
  9629                           
  9630                           ;pin_manager.c: 93: do { TRISA6 = 0; } while(0);
  9631  0026A4  9C92               	bcf	3986,6,c	;volatile
  9632                           
  9633                           ; BSR set to: 15
  9634                           
  9635                           ; BSR set to: 15
  9636                           
  9637                           ;pin_manager.c: 94: do { TRISC1 = 0; } while(0);
  9638                           
  9639                           ; BSR set to: 15
  9640  0026A6  9294               	bcf	3988,1,c	;volatile
  9641                           
  9642                           ; BSR set to: 15
  9643                           ;pin_manager.c: 95: LATA6 = 0;
  9644                           
  9645                           ; BSR set to: 15
  9646  0026A8  9C89               	bcf	3977,6,c	;volatile
  9647                           
  9648                           ; BSR set to: 15
  9649                           ;pin_manager.c: 96: LATC1 = 0;
  9650  0026AA  928B               	bcf	3979,1,c	;volatile
  9651                           
  9652                           ; BSR set to: 15
  9653  0026AC  0012               	return		;funcret
  9654  0026AE                     __end_of_PIN_MANAGER_Initialize:
  9655                           	opt stack 0
  9656                           tosu	equ	0xFFF
  9657                           tosh	equ	0xFFE
  9658                           tosl	equ	0xFFD
  9659                           pclath	equ	0xFFA
  9660                           tblptru	equ	0xFF8
  9661                           tblptrh	equ	0xFF7
  9662                           tblptrl	equ	0xFF6
  9663                           tablat	equ	0xFF5
  9664                           prodh	equ	0xFF4
  9665                           prodl	equ	0xFF3
  9666                           intcon	equ	0xFF2
  9667                           intcon2	equ	0xFF1
  9668                           indf0	equ	0xFEF
  9669                           postinc0	equ	0xFEE
  9670                           fsr0h	equ	0xFEA
  9671                           fsr0l	equ	0xFE9
  9672                           wreg	equ	0xFE8
  9673                           indf2	equ	0xFDF
  9674                           postinc2	equ	0xFDE
  9675                           postdec2	equ	0xFDD
  9676                           plusw2	equ	0xFDB
  9677                           fsr2h	equ	0xFDA
  9678                           fsr2l	equ	0xFD9
  9679                           status	equ	0xFD8
  9680                           
  9681 ;; *************** function _OSCILLATOR_Initialize *****************
  9682 ;; Defined at:
  9683 ;;		line 125 in file "mcc_generated_files/mcc.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, status,2
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9697 ;;      Params:         0       0       0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0
  9700 ;;      Totals:         0       0       0       0       0       0       0
  9701 ;;Total ram usage:        0 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    4
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		_SYSTEM_Initialize
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text49
  9712  002F06                     __ptext49:
  9713                           	opt stack 0
  9714  002F06                     _OSCILLATOR_Initialize:
  9715                           	opt stack 25
  9716                           
  9717                           ;mcc.c: 128: OSCCON = 0x72;
  9718                           
  9719                           ; BSR set to: 15
  9720                           ;incstack = 0
  9721  002F06  0E72               	movlw	114
  9722  002F08  6ED3               	movwf	4051,c	;volatile
  9723                           
  9724                           ;mcc.c: 130: OSCCON2 = 0x04;
  9725  002F0A  0E04               	movlw	4
  9726  002F0C  6ED2               	movwf	4050,c	;volatile
  9727                           
  9728                           ;mcc.c: 132: OSCTUNE = 0x00;
  9729  002F0E  0E00               	movlw	0
  9730  002F10  6E9B               	movwf	3995,c	;volatile
  9731  002F12  0012               	return		;funcret
  9732  002F14                     __end_of_OSCILLATOR_Initialize:
  9733                           	opt stack 0
  9734                           tosu	equ	0xFFF
  9735                           tosh	equ	0xFFE
  9736                           tosl	equ	0xFFD
  9737                           pclath	equ	0xFFA
  9738                           tblptru	equ	0xFF8
  9739                           tblptrh	equ	0xFF7
  9740                           tblptrl	equ	0xFF6
  9741                           tablat	equ	0xFF5
  9742                           prodh	equ	0xFF4
  9743                           prodl	equ	0xFF3
  9744                           intcon	equ	0xFF2
  9745                           intcon2	equ	0xFF1
  9746                           indf0	equ	0xFEF
  9747                           postinc0	equ	0xFEE
  9748                           fsr0h	equ	0xFEA
  9749                           fsr0l	equ	0xFE9
  9750                           wreg	equ	0xFE8
  9751                           indf2	equ	0xFDF
  9752                           postinc2	equ	0xFDE
  9753                           postdec2	equ	0xFDD
  9754                           plusw2	equ	0xFDB
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function _INTERRUPT_Initialize *****************
  9760 ;; Defined at:
  9761 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		None
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9775 ;;      Params:         0       0       0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0
  9778 ;;      Totals:         0       0       0       0       0       0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    4
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_SYSTEM_Initialize
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text50
  9790  002EE6                     __ptext50:
  9791                           	opt stack 0
  9792  002EE6                     _INTERRUPT_Initialize:
  9793                           	opt stack 25
  9794                           
  9795                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
  9796                           
  9797                           ;incstack = 0
  9798  002EE6  9ED0               	bcf	4048,7,c	;volatile
  9799                           
  9800                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
  9801  002EE8  9A9F               	bcf	3999,5,c	;volatile
  9802                           
  9803                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
  9804  002EEA  989F               	bcf	3999,4,c	;volatile
  9805                           
  9806                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
  9807  002EEC  94F1               	bcf	intcon2,2,c	;volatile
  9808                           
  9809                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
  9810  002EEE  9C9F               	bcf	3999,6,c	;volatile
  9811                           
  9812                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
  9813  002EF0  969F               	bcf	3999,3,c	;volatile
  9814                           
  9815                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
  9816  002EF2  96A2               	bcf	4002,3,c	;volatile
  9817                           
  9818                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
  9819  002EF4  929F               	bcf	3999,1,c	;volatile
  9820  002EF6  0012               	return		;funcret
  9821  002EF8                     __end_of_INTERRUPT_Initialize:
  9822                           	opt stack 0
  9823                           tosu	equ	0xFFF
  9824                           tosh	equ	0xFFE
  9825                           tosl	equ	0xFFD
  9826                           pclath	equ	0xFFA
  9827                           tblptru	equ	0xFF8
  9828                           tblptrh	equ	0xFF7
  9829                           tblptrl	equ	0xFF6
  9830                           tablat	equ	0xFF5
  9831                           prodh	equ	0xFF4
  9832                           prodl	equ	0xFF3
  9833                           intcon	equ	0xFF2
  9834                           intcon2	equ	0xFF1
  9835                           indf0	equ	0xFEF
  9836                           postinc0	equ	0xFEE
  9837                           fsr0h	equ	0xFEA
  9838                           fsr0l	equ	0xFE9
  9839                           wreg	equ	0xFE8
  9840                           indf2	equ	0xFDF
  9841                           postinc2	equ	0xFDE
  9842                           postdec2	equ	0xFDD
  9843                           plusw2	equ	0xFDB
  9844                           fsr2h	equ	0xFDA
  9845                           fsr2l	equ	0xFD9
  9846                           status	equ	0xFD8
  9847                           
  9848 ;; *************** function _I2C1_Initialize *****************
  9849 ;; Defined at:
  9850 ;;		line 151 in file "mcc_generated_files/i2c1.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9864 ;;      Params:         0       0       0       0       0       0       0
  9865 ;;      Locals:         0       0       0       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0
  9867 ;;      Totals:         0       0       0       0       0       0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    4
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_SYSTEM_Initialize
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           	psect	text51
  9879  002B2C                     __ptext51:
  9880                           	opt stack 0
  9881  002B2C                     _I2C1_Initialize:
  9882                           	opt stack 25
  9883                           
  9884                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
  9885                           
  9886                           ;incstack = 0
  9887  002B2C  0EEB               	movlw	low _i2c1_tr_queue
  9888  002B2E  0100               	movlb	0	; () banked
  9889  002B30  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
  9890  002B32  0E00               	movlw	high _i2c1_tr_queue
  9891  002B34  0100               	movlb	0	; () banked
  9892  002B36  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
  9893                           
  9894                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
  9895  002B38  0EEB               	movlw	low _i2c1_tr_queue
  9896  002B3A  0100               	movlb	0	; () banked
  9897  002B3C  6FB8               	movwf	_i2c1_object& (0+255),b
  9898  002B3E  0E00               	movlw	high _i2c1_tr_queue
  9899  002B40  0100               	movlb	0	; () banked
  9900  002B42  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
  9904  002B44  0100               	movlb	0	; () banked
  9905  002B46  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
  9909  002B48  0100               	movlb	0	; () banked
  9910  002B4A  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
  9914  002B4C  0E00               	movlw	0
  9915  002B4E  0100               	movlb	0	; () banked
  9916  002B50  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;i2c1.c: 161: SSP1STAT = 0x80;
  9920  002B52  0E80               	movlw	128
  9921  002B54  6EC7               	movwf	4039,c	;volatile
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;i2c1.c: 163: SSP1CON1 = 0x28;
  9925  002B56  0E28               	movlw	40
  9926  002B58  6EC6               	movwf	4038,c	;volatile
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;i2c1.c: 165: SSP1CON3 = 0x00;
  9930  002B5A  0E00               	movlw	0
  9931  002B5C  6ECB               	movwf	4043,c	;volatile
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;i2c1.c: 167: SSP1ADD = 0x03;
  9935  002B5E  0E03               	movlw	3
  9936  002B60  6EC8               	movwf	4040,c	;volatile
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
  9940  002B62  969E               	bcf	3998,3,c	;volatile
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
  9944  002B64  869D               	bsf	3997,3,c	;volatile
  9945                           
  9946                           ; BSR set to: 0
  9947  002B66  0012               	return		;funcret
  9948  002B68                     __end_of_I2C1_Initialize:
  9949                           	opt stack 0
  9950                           tosu	equ	0xFFF
  9951                           tosh	equ	0xFFE
  9952                           tosl	equ	0xFFD
  9953                           pclath	equ	0xFFA
  9954                           tblptru	equ	0xFF8
  9955                           tblptrh	equ	0xFF7
  9956                           tblptrl	equ	0xFF6
  9957                           tablat	equ	0xFF5
  9958                           prodh	equ	0xFF4
  9959                           prodl	equ	0xFF3
  9960                           intcon	equ	0xFF2
  9961                           intcon2	equ	0xFF1
  9962                           indf0	equ	0xFEF
  9963                           postinc0	equ	0xFEE
  9964                           fsr0h	equ	0xFEA
  9965                           fsr0l	equ	0xFE9
  9966                           wreg	equ	0xFE8
  9967                           indf2	equ	0xFDF
  9968                           postinc2	equ	0xFDE
  9969                           postdec2	equ	0xFDD
  9970                           plusw2	equ	0xFDB
  9971                           fsr2h	equ	0xFDA
  9972                           fsr2l	equ	0xFD9
  9973                           status	equ	0xFD8
  9974                           
  9975 ;; *************** function _EUSART1_Initialize *****************
  9976 ;; Defined at:
  9977 ;;		line 21 in file "UART.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9991 ;;      Params:         0       0       0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    6
  9998 ;; This function calls:
  9999 ;;		_UART_buff_init
 10000 ;; This function is called by:
 10001 ;;		_SYSTEM_Initialize
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text52
 10006  002B68                     __ptext52:
 10007                           	opt stack 0
 10008  002B68                     _EUSART1_Initialize:
 10009                           	opt stack 23
 10010                           
 10011                           ;UART.c: 23: PIE1bits.RC1IE = 0;
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;incstack = 0
 10015  002B68  9A9D               	bcf	3997,5,c	;volatile
 10016                           
 10017                           ;UART.c: 24: PIE1bits.TX1IE = 0;
 10018  002B6A  989D               	bcf	3997,4,c	;volatile
 10019                           
 10020                           ;UART.c: 29: BAUD1CON = 0x48;
 10021  002B6C  0E48               	movlw	72
 10022  002B6E  6EB8               	movwf	4024,c	;volatile
 10023                           
 10024                           ;UART.c: 32: RC1STA = 0x98;
 10025  002B70  0E98               	movlw	152
 10026  002B72  6EAB               	movwf	4011,c	;volatile
 10027                           
 10028                           ;UART.c: 35: TX1STA = 0x26;
 10029  002B74  0E26               	movlw	38
 10030  002B76  6EAC               	movwf	4012,c	;volatile
 10031                           
 10032                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
 10033  002B78  0E67               	movlw	103
 10034  002B7A  6EAF               	movwf	4015,c	;volatile
 10035                           
 10036                           ;UART.c: 41: SPBRGH1 = 0x00;
 10037  002B7C  0E00               	movlw	0
 10038  002B7E  6EB0               	movwf	4016,c	;volatile
 10039                           
 10040                           ;UART.c: 44: TXREG1 = 0x00;
 10041  002B80  0E00               	movlw	0
 10042  002B82  6EAD               	movwf	4013,c	;volatile
 10043                           
 10044                           ;UART.c: 47: RCREG1 = 0x00;
 10045  002B84  0E00               	movlw	0
 10046  002B86  6EAE               	movwf	4014,c	;volatile
 10047                           
 10048                           ;UART.c: 49: UART_buff_init(&input_buffer);
 10049  002B88  0E00               	movlw	low _input_buffer
 10050  002B8A  6E23               	movwf	UART_buff_init@_this,c
 10051  002B8C  0E03               	movlw	high _input_buffer
 10052  002B8E  6E24               	movwf	UART_buff_init@_this+1,c
 10053  002B90  EC03  F017         	call	_UART_buff_init	;wreg free
 10054                           
 10055                           ;UART.c: 50: UART_buff_init(&output_buffer);
 10056  002B94  0E00               	movlw	low _output_buffer
 10057  002B96  6E23               	movwf	UART_buff_init@_this,c
 10058  002B98  0E04               	movlw	high _output_buffer
 10059  002B9A  6E24               	movwf	UART_buff_init@_this+1,c
 10060  002B9C  EC03  F017         	call	_UART_buff_init	;wreg free
 10061                           
 10062                           ;UART.c: 52: PIE1bits.RC1IE = 1;
 10063  002BA0  8A9D               	bsf	3997,5,c	;volatile
 10064  002BA2  0012               	return		;funcret
 10065  002BA4                     __end_of_EUSART1_Initialize:
 10066                           	opt stack 0
 10067                           tosu	equ	0xFFF
 10068                           tosh	equ	0xFFE
 10069                           tosl	equ	0xFFD
 10070                           pclath	equ	0xFFA
 10071                           tblptru	equ	0xFF8
 10072                           tblptrh	equ	0xFF7
 10073                           tblptrl	equ	0xFF6
 10074                           tablat	equ	0xFF5
 10075                           prodh	equ	0xFF4
 10076                           prodl	equ	0xFF3
 10077                           intcon	equ	0xFF2
 10078                           intcon2	equ	0xFF1
 10079                           indf0	equ	0xFEF
 10080                           postinc0	equ	0xFEE
 10081                           fsr0h	equ	0xFEA
 10082                           fsr0l	equ	0xFE9
 10083                           wreg	equ	0xFE8
 10084                           indf2	equ	0xFDF
 10085                           postinc2	equ	0xFDE
 10086                           postdec2	equ	0xFDD
 10087                           plusw2	equ	0xFDB
 10088                           fsr2h	equ	0xFDA
 10089                           fsr2l	equ	0xFD9
 10090                           status	equ	0xFD8
 10091                           
 10092 ;; *************** function _UART_buff_init *****************
 10093 ;; Defined at:
 10094 ;;		line 56 in file "UART.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
 10097 ;;		 -> output_buffer(206), input_buffer(206), 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10109 ;;      Params:         2       0       0       0       0       0       0
 10110 ;;      Locals:         0       0       0       0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0
 10112 ;;      Totals:         2       0       0       0       0       0       0
 10113 ;;Total ram usage:        2 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    5
 10116 ;; This function calls:
 10117 ;;		_memset
 10118 ;; This function is called by:
 10119 ;;		_EUSART1_Initialize
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text53
 10124  002E06                     __ptext53:
 10125                           	opt stack 0
 10126  002E06                     _UART_buff_init:
 10127                           	opt stack 23
 10128                           
 10129                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
 10130                           
 10131                           ;incstack = 0
 10132  002E06  C023  F01B         	movff	UART_buff_init@_this,memset@p1
 10133  002E0A  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
 10134  002E0E  0E00               	movlw	0
 10135  002E10  6E1E               	movwf	memset@c+1,c
 10136  002E12  0E00               	movlw	0
 10137  002E14  6E1D               	movwf	memset@c,c
 10138  002E16  0E00               	movlw	0
 10139  002E18  6E20               	movwf	memset@n+1,c
 10140  002E1A  0ECE               	movlw	206
 10141  002E1C  6E1F               	movwf	memset@n,c
 10142  002E1E  EC54  F016         	call	_memset	;wreg free
 10143  002E22  0012               	return		;funcret
 10144  002E24                     __end_of_UART_buff_init:
 10145                           	opt stack 0
 10146                           tosu	equ	0xFFF
 10147                           tosh	equ	0xFFE
 10148                           tosl	equ	0xFFD
 10149                           pclath	equ	0xFFA
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           intcon2	equ	0xFF1
 10158                           indf0	equ	0xFEF
 10159                           postinc0	equ	0xFEE
 10160                           fsr0h	equ	0xFEA
 10161                           fsr0l	equ	0xFE9
 10162                           wreg	equ	0xFE8
 10163                           indf2	equ	0xFDF
 10164                           postinc2	equ	0xFDE
 10165                           postdec2	equ	0xFDD
 10166                           plusw2	equ	0xFDB
 10167                           fsr2h	equ	0xFDA
 10168                           fsr2l	equ	0xFD9
 10169                           status	equ	0xFD8
 10170                           
 10171 ;; *************** function _memset *****************
 10172 ;; Defined at:
 10173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  p1              2   26[COMRAM] PTR void 
 10176 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10177 ;;  c               2   28[COMRAM] int 
 10178 ;;  n               2   30[COMRAM] unsigned int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  p               2   32[COMRAM] PTR unsigned char 
 10181 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  2   26[COMRAM] PTR void 
 10184 ;; Registers used:
 10185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/0
 10188 ;;		On exit  : 0/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10191 ;;      Params:         6       0       0       0       0       0       0
 10192 ;;      Locals:         2       0       0       0       0       0       0
 10193 ;;      Temps:          0       0       0       0       0       0       0
 10194 ;;      Totals:         8       0       0       0       0       0       0
 10195 ;;Total ram usage:        8 bytes
 10196 ;; Hardware stack levels used:    1
 10197 ;; Hardware stack levels required when called:    4
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_FastTransfer_buffer_flush
 10202 ;;		_UART_buff_init
 10203 ;;		_UART_buff_flush
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text54
 10208  002CA8                     __ptext54:
 10209                           	opt stack 0
 10210  002CA8                     _memset:
 10211                           	opt stack 22
 10212                           
 10213                           ;incstack = 0
 10214  002CA8  C01B  F021         	movff	memset@p1,memset@p
 10215  002CAC  C01C  F022         	movff	memset@p1+1,memset@p+1
 10216  002CB0  D008               	goto	l6046
 10217  002CB2                     l6042:
 10218  002CB2  C021  FFD9         	movff	memset@p,fsr2l
 10219  002CB6  C022  FFDA         	movff	memset@p+1,fsr2h
 10220  002CBA  C01D  FFDF         	movff	memset@c,indf2
 10221  002CBE  4A21               	infsnz	memset@p,f,c
 10222  002CC0  2A22               	incf	memset@p+1,f,c
 10223  002CC2                     l6046:
 10224  002CC2  061F               	decf	memset@n,f,c
 10225  002CC4  A0D8               	btfss	status,0,c
 10226  002CC6  0620               	decf	memset@n+1,f,c
 10227  002CC8  281F               	incf	memset@n,w,c
 10228  002CCA  E1F3               	bnz	l6042
 10229  002CCC  2820               	incf	memset@n+1,w,c
 10230  002CCE  B4D8               	btfsc	status,2,c
 10231  002CD0  0012               	return	
 10232  002CD2  D7EF               	goto	l6042
 10233  002CD4                     __end_of_memset:
 10234                           	opt stack 0
 10235                           tosu	equ	0xFFF
 10236                           tosh	equ	0xFFE
 10237                           tosl	equ	0xFFD
 10238                           pclath	equ	0xFFA
 10239                           tblptru	equ	0xFF8
 10240                           tblptrh	equ	0xFF7
 10241                           tblptrl	equ	0xFF6
 10242                           tablat	equ	0xFF5
 10243                           prodh	equ	0xFF4
 10244                           prodl	equ	0xFF3
 10245                           intcon	equ	0xFF2
 10246                           intcon2	equ	0xFF1
 10247                           indf0	equ	0xFEF
 10248                           postinc0	equ	0xFEE
 10249                           fsr0h	equ	0xFEA
 10250                           fsr0l	equ	0xFE9
 10251                           wreg	equ	0xFE8
 10252                           indf2	equ	0xFDF
 10253                           postinc2	equ	0xFDE
 10254                           postdec2	equ	0xFDD
 10255                           plusw2	equ	0xFDB
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function _ADC_Initialize *****************
 10261 ;; Defined at:
 10262 ;;		line 59 in file "mcc_generated_files/adc.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10276 ;;      Params:         0       0       0       0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0
 10279 ;;      Totals:         0       0       0       0       0       0       0
 10280 ;;Total ram usage:        0 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    4
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_SYSTEM_Initialize
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           	psect	text55
 10291  002E7A                     __ptext55:
 10292                           	opt stack 0
 10293  002E7A                     _ADC_Initialize:
 10294                           	opt stack 25
 10295                           
 10296                           ;adc.c: 64: ADCON0 = 0x01;
 10297                           
 10298                           ;incstack = 0
 10299  002E7A  0E01               	movlw	1
 10300  002E7C  6EC2               	movwf	4034,c	;volatile
 10301                           
 10302                           ;adc.c: 67: ADCON1 = 0x80;
 10303  002E7E  0E80               	movlw	128
 10304  002E80  6EC1               	movwf	4033,c	;volatile
 10305                           
 10306                           ;adc.c: 70: ADCON2 = 0x05;
 10307  002E82  0E05               	movlw	5
 10308  002E84  6EC0               	movwf	4032,c	;volatile
 10309                           
 10310                           ;adc.c: 73: ADRESL = 0x00;
 10311  002E86  0E00               	movlw	0
 10312  002E88  6EC3               	movwf	4035,c	;volatile
 10313                           
 10314                           ;adc.c: 76: ADRESH = 0x00;
 10315  002E8A  0E00               	movlw	0
 10316  002E8C  6EC4               	movwf	4036,c	;volatile
 10317                           
 10318                           ;adc.c: 79: PIE1bits.ADIE = 1;
 10319  002E8E  8C9D               	bsf	3997,6,c	;volatile
 10320  002E90  0012               	return		;funcret
 10321  002E92                     __end_of_ADC_Initialize:
 10322                           	opt stack 0
 10323                           tosu	equ	0xFFF
 10324                           tosh	equ	0xFFE
 10325                           tosl	equ	0xFFD
 10326                           pclath	equ	0xFFA
 10327                           tblptru	equ	0xFF8
 10328                           tblptrh	equ	0xFF7
 10329                           tblptrl	equ	0xFF6
 10330                           tablat	equ	0xFF5
 10331                           prodh	equ	0xFF4
 10332                           prodl	equ	0xFF3
 10333                           intcon	equ	0xFF2
 10334                           intcon2	equ	0xFF1
 10335                           indf0	equ	0xFEF
 10336                           postinc0	equ	0xFEE
 10337                           fsr0h	equ	0xFEA
 10338                           fsr0l	equ	0xFE9
 10339                           wreg	equ	0xFE8
 10340                           indf2	equ	0xFDF
 10341                           postinc2	equ	0xFDE
 10342                           postdec2	equ	0xFDD
 10343                           plusw2	equ	0xFDB
 10344                           fsr2h	equ	0xFDA
 10345                           fsr2l	equ	0xFD9
 10346                           status	equ	0xFD8
 10347                           
 10348 ;; *************** function _LEDwriteDisplay *****************
 10349 ;; Defined at:
 10350 ;;		line 116 in file "LED_BarGraph.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  i2c_addr        1    wreg     unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
 10355 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
 10356 ;;  timeOut         2   21[BANK1 ] unsigned int 
 10357 ;;  status          1   23[BANK1 ] enum E8697
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10367 ;;      Params:         0       0       0       0       0       0       0
 10368 ;;      Locals:         0       0      24       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0
 10370 ;;      Totals:         0       0      24       0       0       0       0
 10371 ;;Total ram usage:       24 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    6
 10374 ;; This function calls:
 10375 ;;		_I2C1_MasterWrite
 10376 ;; This function is called by:
 10377 ;;		_main
 10378 ;;		_TestBarGraph
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text56
 10383  001224                     __ptext56:
 10384                           	opt stack 0
 10385  001224                     _LEDwriteDisplay:
 10386                           	opt stack 24
 10387                           
 10388                           ;incstack = 0
 10389                           ;LEDwriteDisplay@i2c_addr stored from wreg
 10390  001224  0101               	movlb	1	; () banked
 10391  001226  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
 10392                           
 10393                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
 10394                           ;LED_BarGraph.c: 118: uint16_t timeOut;
 10395                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
 10396  001228  0E00               	movlw	0
 10397  00122A  0101               	movlb	1	; () banked
 10398  00122C  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10399                           
 10400                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10401  00122E  0E02               	movlw	2
 10402  001230  0101               	movlb	1	; () banked
 10403  001232  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10404                           
 10405                           ;LED_BarGraph.c: 122: timeOut = 0;
 10406  001234  0E00               	movlw	0
 10407  001236  0101               	movlb	1	; () banked
 10408  001238  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10409  00123A  0E00               	movlw	0
 10410  00123C  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10411                           
 10412                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
 10413  00123E  D02F               	goto	l7050
 10414  001240                     l7030:
 10415                           
 10416                           ; BSR set to: 1
 10417                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
 10418                           ;LED_BarGraph.c: 126: 1,
 10419                           ;LED_BarGraph.c: 127: i2c_addr,
 10420                           ;LED_BarGraph.c: 128: &status);
 10421  001240  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10422  001242  0100               	movlb	0	; () banked
 10423  001244  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10424  001246  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10425  001248  0100               	movlb	0	; () banked
 10426  00124A  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10427  00124C  0E00               	movlw	0
 10428  00124E  0100               	movlb	0	; () banked
 10429  001250  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10430  001252  0E01               	movlw	1
 10431  001254  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10432  001256  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10433  00125A  0100               	movlb	0	; () banked
 10434  00125C  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10435  00125E  0E50               	movlw	low LEDwriteDisplay@status
 10436  001260  0100               	movlb	0	; () banked
 10437  001262  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10438  001264  0E01               	movlw	high LEDwriteDisplay@status
 10439  001266  0100               	movlb	0	; () banked
 10440  001268  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10441  00126A  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
 10442  00126E                     l7032:
 10443  00126E  0E02               	movlw	2
 10444  001270  0101               	movlb	1	; () banked
 10445  001272  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10446  001274  B4D8               	btfsc	status,2,c
 10447  001276  D7FB               	goto	l7032
 10448                           
 10449                           ; BSR set to: 1
 10450                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
 10451                           
 10452                           ; BSR set to: 1
 10453  001278  0101               	movlb	1	; () banked
 10454  00127A  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10455  00127C  0101               	movlb	1	; () banked
 10456  00127E  B4D8               	btfsc	status,2,c
 10457  001280  D012               	goto	l7052
 10458                           
 10459                           ; BSR set to: 1
 10460                           ;LED_BarGraph.c: 135: if (timeOut == 4)
 10461                           
 10462                           ; BSR set to: 1
 10463                           
 10464                           ; BSR set to: 1
 10465                           ;LED_BarGraph.c: 134: break;
 10466  001282  0E04               	movlw	4
 10467  001284  0101               	movlb	1	; () banked
 10468  001286  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10469  001288  0101               	movlb	1	; () banked
 10470  00128A  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10471  00128C  B4D8               	btfsc	status,2,c
 10472  00128E  D00B               	goto	l7052
 10473                           
 10474                           ; BSR set to: 1
 10475                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
 10476                           
 10477                           ; BSR set to: 1
 10478                           
 10479                           ; BSR set to: 1
 10480                           ;LED_BarGraph.c: 136: break;
 10481  001290  0101               	movlb	1	; () banked
 10482  001292  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10483  001294  B4D8               	btfsc	status,2,c
 10484  001296  D007               	goto	l7052
 10485                           
 10486                           ; BSR set to: 1
 10487                           ;LED_BarGraph.c: 139: else
 10488                           ;LED_BarGraph.c: 140: timeOut++;
 10489                           
 10490                           ; BSR set to: 1
 10491                           
 10492                           ; BSR set to: 1
 10493                           
 10494                           ; BSR set to: 1
 10495                           ;LED_BarGraph.c: 138: break;
 10496  001298  0101               	movlb	1	; () banked
 10497  00129A  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10498  00129C  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10499  00129E                     l7050:
 10500                           
 10501                           ; BSR set to: 1
 10502  00129E  0101               	movlb	1	; () banked
 10503  0012A0  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10504  0012A2  A4D8               	btfss	status,2,c
 10505  0012A4  D7CD               	goto	l7030
 10506  0012A6                     l7052:
 10507                           
 10508                           ; BSR set to: 1
 10509                           ;LED_BarGraph.c: 141: }
 10510                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10511  0012A6  0E02               	movlw	2
 10512  0012A8  0101               	movlb	1	; () banked
 10513  0012AA  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10514                           
 10515                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
 10516  0012AC  0E00               	movlw	0
 10517  0012AE  0101               	movlb	1	; () banked
 10518  0012B0  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10519                           
 10520                           ; BSR set to: 1
 10521                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
 10522  0012B2  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
 10523                           
 10524                           ; BSR set to: 1
 10525                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
 10526  0012B6  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
 10527                           
 10528                           ; BSR set to: 1
 10529                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
 10530  0012BA  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
 10531                           
 10532                           ; BSR set to: 1
 10533                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
 10534  0012BE  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
 10535                           
 10536                           ; BSR set to: 1
 10537                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
 10538  0012C2  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
 10542  0012C6  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
 10543                           
 10544                           ; BSR set to: 1
 10545                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
 10546  0012CA  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10547                           
 10548                           ; BSR set to: 1
 10549                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10550  0012CE  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10551                           
 10552                           ; BSR set to: 1
 10553                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10554  0012D2  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10555                           
 10556                           ; BSR set to: 1
 10557                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10558  0012D6  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10559                           
 10560                           ; BSR set to: 1
 10561                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10562  0012DA  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10563                           
 10564                           ; BSR set to: 1
 10565                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10566  0012DE  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10567                           
 10568                           ; BSR set to: 1
 10569                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10570  0012E2  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10571                           
 10572                           ; BSR set to: 1
 10573                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 10574  0012E6  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10575                           
 10576                           ; BSR set to: 1
 10577                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10578  0012EA  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 10582  0012EE  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10583                           
 10584                           ; BSR set to: 1
 10585                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10586  0012F2  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10587                           
 10588                           ; BSR set to: 1
 10589                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 10590  0012F6  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10591                           
 10592                           ;LED_BarGraph.c: 167: timeOut = 0;
 10593  0012FA  0E00               	movlw	0
 10594  0012FC  0101               	movlb	1	; () banked
 10595  0012FE  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10596  001300  0E00               	movlw	0
 10597  001302  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10598                           
 10599                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 10600  001304  D02F               	goto	l7110
 10601  001306                     l7090:
 10602                           
 10603                           ; BSR set to: 1
 10604                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 10605                           ;LED_BarGraph.c: 171: 17,
 10606                           ;LED_BarGraph.c: 172: i2c_addr,
 10607                           ;LED_BarGraph.c: 173: &status);
 10608  001306  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10609  001308  0100               	movlb	0	; () banked
 10610  00130A  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10611  00130C  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10612  00130E  0100               	movlb	0	; () banked
 10613  001310  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10614  001312  0E00               	movlw	0
 10615  001314  0100               	movlb	0	; () banked
 10616  001316  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10617  001318  0E11               	movlw	17
 10618  00131A  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10619  00131C  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10620  001320  0100               	movlb	0	; () banked
 10621  001322  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10622  001324  0E50               	movlw	low LEDwriteDisplay@status
 10623  001326  0100               	movlb	0	; () banked
 10624  001328  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10625  00132A  0E01               	movlw	high LEDwriteDisplay@status
 10626  00132C  0100               	movlb	0	; () banked
 10627  00132E  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10628  001330  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
 10629  001334                     l7092:
 10630  001334  0E02               	movlw	2
 10631  001336  0101               	movlb	1	; () banked
 10632  001338  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10633  00133A  B4D8               	btfsc	status,2,c
 10634  00133C  D7FB               	goto	l7092
 10635                           
 10636                           ; BSR set to: 1
 10637                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 10638                           
 10639                           ; BSR set to: 1
 10640  00133E  0101               	movlb	1	; () banked
 10641  001340  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10642  001342  0101               	movlb	1	; () banked
 10643  001344  B4D8               	btfsc	status,2,c
 10644  001346  0012               	return	
 10645                           
 10646                           ; BSR set to: 1
 10647                           ;LED_BarGraph.c: 180: if (timeOut == 4)
 10648                           
 10649                           ; BSR set to: 1
 10650                           
 10651                           ; BSR set to: 1
 10652                           ;LED_BarGraph.c: 179: break;
 10653  001348  0E04               	movlw	4
 10654  00134A  0101               	movlb	1	; () banked
 10655  00134C  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10656  00134E  0101               	movlb	1	; () banked
 10657  001350  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10658  001352  B4D8               	btfsc	status,2,c
 10659  001354  0012               	return	
 10660                           
 10661                           ; BSR set to: 1
 10662                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 10663                           
 10664                           ; BSR set to: 1
 10665                           
 10666                           ; BSR set to: 1
 10667                           ;LED_BarGraph.c: 181: break;
 10668  001356  0101               	movlb	1	; () banked
 10669  001358  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10670  00135A  B4D8               	btfsc	status,2,c
 10671  00135C  0012               	return	
 10672                           
 10673                           ; BSR set to: 1
 10674                           ;LED_BarGraph.c: 184: else
 10675                           ;LED_BarGraph.c: 185: timeOut++;
 10676                           
 10677                           ; BSR set to: 1
 10678                           
 10679                           ; BSR set to: 1
 10680                           
 10681                           ; BSR set to: 1
 10682                           ;LED_BarGraph.c: 183: break;
 10683  00135E  0101               	movlb	1	; () banked
 10684  001360  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10685  001362  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10686  001364                     l7110:
 10687                           
 10688                           ; BSR set to: 1
 10689  001364  0101               	movlb	1	; () banked
 10690  001366  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10691  001368  B4D8               	btfsc	status,2,c
 10692  00136A  0012               	return	
 10693  00136C  D7CC               	goto	l7090
 10694  00136E                     __end_of_LEDwriteDisplay:
 10695                           	opt stack 0
 10696                           tosu	equ	0xFFF
 10697                           tosh	equ	0xFFE
 10698                           tosl	equ	0xFFD
 10699                           pclath	equ	0xFFA
 10700                           tblptru	equ	0xFF8
 10701                           tblptrh	equ	0xFF7
 10702                           tblptrl	equ	0xFF6
 10703                           tablat	equ	0xFF5
 10704                           prodh	equ	0xFF4
 10705                           prodl	equ	0xFF3
 10706                           intcon	equ	0xFF2
 10707                           intcon2	equ	0xFF1
 10708                           indf0	equ	0xFEF
 10709                           postinc0	equ	0xFEE
 10710                           fsr0h	equ	0xFEA
 10711                           fsr0l	equ	0xFE9
 10712                           wreg	equ	0xFE8
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           postdec2	equ	0xFDD
 10716                           plusw2	equ	0xFDB
 10717                           fsr2h	equ	0xFDA
 10718                           fsr2l	equ	0xFD9
 10719                           status	equ	0xFD8
 10720                           
 10721 ;; *************** function _LEDsetValue *****************
 10722 ;; Defined at:
 10723 ;;		line 11 in file "LED_BarGraph.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  value           2   16[BANK1 ] int 
 10726 ;;  color           2   18[BANK1 ] int 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  k               2   21[BANK1 ] int 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      void 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10738 ;;      Params:         0       0       4       0       0       0       0
 10739 ;;      Locals:         0       0       2       0       0       0       0
 10740 ;;      Temps:          0       0       1       0       0       0       0
 10741 ;;      Totals:         0       0       7       0       0       0       0
 10742 ;;Total ram usage:        7 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    6
 10745 ;; This function calls:
 10746 ;;		_LEDsetBar
 10747 ;; This function is called by:
 10748 ;;		_main
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text57
 10753  001F9E                     __ptext57:
 10754                           	opt stack 0
 10755  001F9E                     _LEDsetValue:
 10756                           	opt stack 24
 10757                           
 10758                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 10759                           
 10760                           ; BSR set to: 1
 10761                           ;incstack = 0
 10762  001F9E  0101               	movlb	1	; () banked
 10763  001FA0  BF4A               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 10764  001FA2  D00D               	goto	l7010
 10765  001FA4  0101               	movlb	1	; () banked
 10766  001FA6  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10767  001FA8  E105               	bnz	u7630
 10768  001FAA  0E19               	movlw	25
 10769  001FAC  0101               	movlb	1	; () banked
 10770  001FAE  5D49               	subwf	LEDsetValue@value& (0+255),w,b
 10771  001FB0  A0D8               	btfss	status,0,c
 10772  001FB2  D005               	goto	l7010
 10773  001FB4                     u7630:
 10774                           
 10775                           ; BSR set to: 1
 10776  001FB4  0E00               	movlw	0
 10777  001FB6  0101               	movlb	1	; () banked
 10778  001FB8  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10779  001FBA  0E18               	movlw	24
 10780  001FBC  6F49               	movwf	LEDsetValue@value& (0+255),b
 10781  001FBE                     l7010:
 10782                           
 10783                           ; BSR set to: 1
 10784                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 10785  001FBE  0101               	movlb	1	; () banked
 10786  001FC0  AF4A               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 10787  001FC2  D005               	goto	l629
 10788                           
 10789                           ; BSR set to: 1
 10790  001FC4  0E00               	movlw	0
 10791  001FC6  0101               	movlb	1	; () banked
 10792  001FC8  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 10793  001FCA  0E00               	movlw	0
 10794  001FCC  6F49               	movwf	LEDsetValue@value& (0+255),b
 10795  001FCE                     l629:
 10796                           
 10797                           ; BSR set to: 1
 10798                           ;LED_BarGraph.c: 14: int k;
 10799                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 10800  001FCE  0E00               	movlw	0
 10801  001FD0  0101               	movlb	1	; () banked
 10802  001FD2  6F4F               	movwf	(LEDsetValue@k+1)& (0+255),b
 10803  001FD4  0E00               	movlw	0
 10804  001FD6  6F4E               	movwf	LEDsetValue@k& (0+255),b
 10805  001FD8                     l7014:
 10806                           
 10807                           ; BSR set to: 1
 10808  001FD8  0101               	movlb	1	; () banked
 10809  001FDA  BF4F               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 10810  001FDC  D008               	goto	l7018
 10811  001FDE  0101               	movlb	1	; () banked
 10812  001FE0  514F               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10813  001FE2  E12E               	bnz	l634
 10814  001FE4  0E18               	movlw	24
 10815  001FE6  0101               	movlb	1	; () banked
 10816  001FE8  5D4E               	subwf	LEDsetValue@k& (0+255),w,b
 10817  001FEA  B0D8               	btfsc	status,0,c
 10818  001FEC  0012               	return	
 10819  001FEE                     l7018:
 10820                           
 10821                           ; BSR set to: 1
 10822                           ;LED_BarGraph.c: 16: if (k < value){
 10823  001FEE  0101               	movlb	1	; () banked
 10824  001FF0  5149               	movf	LEDsetValue@value& (0+255),w,b
 10825  001FF2  0101               	movlb	1	; () banked
 10826  001FF4  5D4E               	subwf	LEDsetValue@k& (0+255),w,b
 10827  001FF6  0101               	movlb	1	; () banked
 10828  001FF8  514F               	movf	(LEDsetValue@k+1)& (0+255),w,b
 10829  001FFA  0A80               	xorlw	128
 10830  001FFC  0101               	movlb	1	; () banked
 10831  001FFE  6F4D               	movwf	??_LEDsetValue& (0+255),b
 10832  002000  0101               	movlb	1	; () banked
 10833  002002  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 10834  002004  0A80               	xorlw	128
 10835  002006  0101               	movlb	1	; () banked
 10836  002008  594D               	subwfb	??_LEDsetValue& (0+255),w,b
 10837  00200A  B0D8               	btfsc	status,0,c
 10838  00200C  D00B               	goto	l7022
 10839                           
 10840                           ; BSR set to: 1
 10841                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 10842  00200E  C14E  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10843  002012  C14F  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10844  002016  C14B  F025         	movff	LEDsetValue@color,LEDsetBar@color
 10845  00201A  C14C  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 10846  00201E  EC6A  F000         	call	_LEDsetBar	;wreg free
 10847  002022  D00A               	goto	l7024
 10848  002024                     l7022:
 10849                           
 10850                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 10851  002024  C14E  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 10852  002028  C14F  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 10853  00202C  0E00               	movlw	0
 10854  00202E  6E26               	movwf	LEDsetBar@color+1,c
 10855  002030  0E00               	movlw	0
 10856  002032  6E25               	movwf	LEDsetBar@color,c
 10857  002034  EC6A  F000         	call	_LEDsetBar	;wreg free
 10858  002038                     l7024:
 10859  002038  0101               	movlb	1	; () banked
 10860  00203A  4B4E               	infsnz	LEDsetValue@k& (0+255),f,b
 10861  00203C  2B4F               	incf	(LEDsetValue@k+1)& (0+255),f,b
 10862  00203E  D7CC               	goto	l7014
 10863  002040                     l634:
 10864                           
 10865                           ; BSR set to: 1
 10866  002040  0012               	return		;funcret
 10867  002042                     __end_of_LEDsetValue:
 10868                           	opt stack 0
 10869                           tosu	equ	0xFFF
 10870                           tosh	equ	0xFFE
 10871                           tosl	equ	0xFFD
 10872                           pclath	equ	0xFFA
 10873                           tblptru	equ	0xFF8
 10874                           tblptrh	equ	0xFF7
 10875                           tblptrl	equ	0xFF6
 10876                           tablat	equ	0xFF5
 10877                           prodh	equ	0xFF4
 10878                           prodl	equ	0xFF3
 10879                           intcon	equ	0xFF2
 10880                           intcon2	equ	0xFF1
 10881                           indf0	equ	0xFEF
 10882                           postinc0	equ	0xFEE
 10883                           fsr0h	equ	0xFEA
 10884                           fsr0l	equ	0xFE9
 10885                           wreg	equ	0xFE8
 10886                           indf2	equ	0xFDF
 10887                           postinc2	equ	0xFDE
 10888                           postdec2	equ	0xFDD
 10889                           plusw2	equ	0xFDB
 10890                           fsr2h	equ	0xFDA
 10891                           fsr2l	equ	0xFD9
 10892                           status	equ	0xFD8
 10893                           
 10894 ;; *************** function _LEDsetBar *****************
 10895 ;; Defined at:
 10896 ;;		line 195 in file "LED_BarGraph.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;  bar             2   34[COMRAM] int 
 10899 ;;  color           2   36[COMRAM] int 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  a               2   40[COMRAM] unsigned int 
 10902 ;;  c               2   38[COMRAM] unsigned int 
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10912 ;;      Params:         4       0       0       0       0       0       0
 10913 ;;      Locals:         4       0       0       0       0       0       0
 10914 ;;      Temps:          0       0      16       0       0       0       0
 10915 ;;      Totals:         8       0      16       0       0       0       0
 10916 ;;Total ram usage:       24 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    5
 10919 ;; This function calls:
 10920 ;;		___awdiv
 10921 ;; This function is called by:
 10922 ;;		_LEDsetValue
 10923 ;;		_TestBarGraph
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text58
 10928  0000D4                     __ptext58:
 10929                           	opt stack 0
 10930  0000D4                     _LEDsetBar:
 10931                           	opt stack 24
 10932                           
 10933                           ;LED_BarGraph.c: 196: uint16_t a, c;
 10934                           ;LED_BarGraph.c: 198: if (bar < 12)
 10935                           
 10936                           ; BSR set to: 1
 10937                           ;incstack = 0
 10938  0000D4  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10939  0000D6  D006               	goto	l6530
 10940  0000D8  5024               	movf	LEDsetBar@bar+1,w,c
 10941  0000DA  E10F               	bnz	l6532
 10942  0000DC  0E0C               	movlw	12
 10943  0000DE  5C23               	subwf	LEDsetBar@bar,w,c
 10944  0000E0  B0D8               	btfsc	status,0,c
 10945  0000E2  D00B               	goto	l6532
 10946  0000E4                     l6530:
 10947                           
 10948                           ;LED_BarGraph.c: 199: c = bar / 4;
 10949  0000E4  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 10950  0000E8  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 10951  0000EC  0E00               	movlw	0
 10952  0000EE  6E1E               	movwf	___awdiv@divisor+1,c
 10953  0000F0  0E04               	movlw	4
 10954  0000F2  6E1D               	movwf	___awdiv@divisor,c
 10955  0000F4  EC2A  F012         	call	___awdiv	;wreg free
 10956  0000F8  D00C               	goto	L3
 10957  0000FA                     l6532:
 10958                           
 10959                           ;LED_BarGraph.c: 200: else
 10960                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 10961  0000FA  0EF4               	movlw	244
 10962  0000FC  2423               	addwf	LEDsetBar@bar,w,c
 10963  0000FE  6E1B               	movwf	___awdiv@dividend,c
 10964  000100  0EFF               	movlw	255
 10965  000102  2024               	addwfc	LEDsetBar@bar+1,w,c
 10966  000104  6E1C               	movwf	___awdiv@dividend+1,c
 10967  000106  0E00               	movlw	0
 10968  000108  6E1E               	movwf	___awdiv@divisor+1,c
 10969  00010A  0E04               	movlw	4
 10970  00010C  6E1D               	movwf	___awdiv@divisor,c
 10971  00010E  EC2A  F012         	call	___awdiv	;wreg free
 10972  000112                     L3:
 10973  000112  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 10974  000116  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 10975                           
 10976                           ;LED_BarGraph.c: 203: a = bar % 4;
 10977  00011A  0E03               	movlw	3
 10978  00011C  1423               	andwf	LEDsetBar@bar,w,c
 10979  00011E  6E29               	movwf	LEDsetBar@a,c
 10980  000120  6A2A               	clrf	LEDsetBar@a+1,c
 10981                           
 10982                           ;LED_BarGraph.c: 204: if (bar >= 12)
 10983  000122  BE24               	btfsc	LEDsetBar@bar+1,7,c
 10984  000124  D00A               	goto	l708
 10985  000126  5024               	movf	LEDsetBar@bar+1,w,c
 10986  000128  E104               	bnz	u6700
 10987  00012A  0E0C               	movlw	12
 10988  00012C  5C23               	subwf	LEDsetBar@bar,w,c
 10989  00012E  A0D8               	btfss	status,0,c
 10990  000130  D004               	goto	l708
 10991  000132                     u6700:
 10992                           
 10993                           ;LED_BarGraph.c: 205: a += 4;
 10994  000132  0E04               	movlw	4
 10995  000134  2629               	addwf	LEDsetBar@a,f,c
 10996  000136  0E00               	movlw	0
 10997  000138  222A               	addwfc	LEDsetBar@a+1,f,c
 10998  00013A                     l708:
 10999                           
 11000                           ;LED_BarGraph.c: 208: if (color == 1) {
 11001  00013A  0425               	decf	LEDsetBar@color,w,c
 11002  00013C  1026               	iorwf	LEDsetBar@color+1,w,c
 11003  00013E  A4D8               	btfss	status,2,c
 11004  000140  D07D               	goto	l6542
 11005                           
 11006                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 11007  000142  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11008  000146  0E01               	movlw	1
 11009  000148  0101               	movlb	1	; () banked
 11010  00014A  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11011  00014C  0E00               	movlw	0
 11012  00014E  0101               	movlb	1	; () banked
 11013  000150  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11014  000152  0101               	movlb	1	; () banked
 11015  000154  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11016  000156  D004               	goto	u6724
 11017  000158                     u6725:
 11018  000158  90D8               	bcf	status,0,c
 11019  00015A  0101               	movlb	1	; () banked
 11020  00015C  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11021  00015E  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11022  000160                     u6724:
 11023  000160  0101               	movlb	1	; () banked
 11024  000162  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11025  000164  D7F9               	goto	u6725
 11026  000166  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11027  00016A  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11028  00016E  0E00               	movlw	0
 11029  000170  0101               	movlb	1	; () banked
 11030  000172  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11031  000174  0EFF               	movlw	255
 11032  000176  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11033  000178  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11034  00017A  0E60               	movlw	low _displaybuffer
 11035  00017C  0101               	movlb	1	; () banked
 11036  00017E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11037  000180  0E00               	movlw	high _displaybuffer
 11038  000182  0101               	movlb	1	; () banked
 11039  000184  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11040  000186  90D8               	bcf	status,0,c
 11041  000188  3427               	rlcf	LEDsetBar@c,w,c
 11042  00018A  6ED9               	movwf	fsr2l,c
 11043  00018C  3428               	rlcf	LEDsetBar@c+1,w,c
 11044  00018E  6EDA               	movwf	fsr2h,c
 11045  000190  90D8               	bcf	status,0,c
 11046  000192  36D9               	rlcf	fsr2l,f,c
 11047  000194  36DA               	rlcf	fsr2h,f,c
 11048  000196  0101               	movlb	1	; () banked
 11049  000198  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11050  00019A  26D9               	addwf	fsr2l,f,c
 11051  00019C  0101               	movlb	1	; () banked
 11052  00019E  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11053  0001A0  22DA               	addwfc	fsr2h,f,c
 11054  0001A2  0101               	movlb	1	; () banked
 11055  0001A4  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11056  0001A6  12DE               	iorwf	postinc2,f,c
 11057  0001A8  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11058  0001AA  12DE               	iorwf	postinc2,f,c
 11059  0001AC  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11060  0001AE  12DE               	iorwf	postinc2,f,c
 11061  0001B0  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11062  0001B2  12DE               	iorwf	postinc2,f,c
 11063                           
 11064                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 11065  0001B4  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11066  0001B8  0E08               	movlw	8
 11067  0001BA  0101               	movlb	1	; () banked
 11068  0001BC  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11069  0001BE  0E01               	movlw	1
 11070  0001C0  0101               	movlb	1	; () banked
 11071  0001C2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11072  0001C4  0E00               	movlw	0
 11073  0001C6  0101               	movlb	1	; () banked
 11074  0001C8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11075  0001CA  0101               	movlb	1	; () banked
 11076  0001CC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11077  0001CE  D004               	goto	u6734
 11078  0001D0                     u6735:
 11079  0001D0  90D8               	bcf	status,0,c
 11080  0001D2  0101               	movlb	1	; () banked
 11081  0001D4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11082  0001D6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11083  0001D8                     u6734:
 11084  0001D8  0101               	movlb	1	; () banked
 11085  0001DA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11086  0001DC  D7F9               	goto	u6735
 11087  0001DE  0101               	movlb	1	; () banked
 11088  0001E0  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11089  0001E2  0101               	movlb	1	; () banked
 11090  0001E4  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11091  0001E6  0101               	movlb	1	; () banked
 11092  0001E8  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11093  0001EA  0101               	movlb	1	; () banked
 11094  0001EC  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11095  0001EE  0101               	movlb	1	; () banked
 11096  0001F0  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11097  0001F2  0101               	movlb	1	; () banked
 11098  0001F4  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11099  0001F6  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11100  0001F8  0101               	movlb	1	; () banked
 11101  0001FA  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11102  0001FC  0101               	movlb	1	; () banked
 11103  0001FE  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11104  000200  0E60               	movlw	low _displaybuffer
 11105  000202  0101               	movlb	1	; () banked
 11106  000204  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11107  000206  0E00               	movlw	high _displaybuffer
 11108  000208  0101               	movlb	1	; () banked
 11109  00020A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11110  00020C  90D8               	bcf	status,0,c
 11111  00020E  3427               	rlcf	LEDsetBar@c,w,c
 11112  000210  6ED9               	movwf	fsr2l,c
 11113  000212  3428               	rlcf	LEDsetBar@c+1,w,c
 11114  000214  6EDA               	movwf	fsr2h,c
 11115  000216  90D8               	bcf	status,0,c
 11116  000218  36D9               	rlcf	fsr2l,f,c
 11117  00021A  36DA               	rlcf	fsr2h,f,c
 11118  00021C  0101               	movlb	1	; () banked
 11119  00021E  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11120  000220  26D9               	addwf	fsr2l,f,c
 11121  000222  0101               	movlb	1	; () banked
 11122  000224  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11123  000226  22DA               	addwfc	fsr2h,f,c
 11124  000228  0101               	movlb	1	; () banked
 11125  00022A  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11126  00022C  16DE               	andwf	postinc2,f,c
 11127  00022E  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11128  000230  16DE               	andwf	postinc2,f,c
 11129  000232  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11130  000234  16DE               	andwf	postinc2,f,c
 11131  000236  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11132  000238  16DE               	andwf	postinc2,f,c
 11133                           
 11134                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 11135  00023A  0012               	return	
 11136  00023C                     l6542:
 11137  00023C  0E02               	movlw	2
 11138  00023E  1825               	xorwf	LEDsetBar@color,w,c
 11139  000240  1026               	iorwf	LEDsetBar@color+1,w,c
 11140  000242  A4D8               	btfss	status,2,c
 11141  000244  D05A               	goto	l6546
 11142                           
 11143                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 11144  000246  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11145  00024A  0E08               	movlw	8
 11146  00024C  0101               	movlb	1	; () banked
 11147  00024E  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11148  000250  0E01               	movlw	1
 11149  000252  0101               	movlb	1	; () banked
 11150  000254  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11151  000256  0E00               	movlw	0
 11152  000258  0101               	movlb	1	; () banked
 11153  00025A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11154  00025C  0101               	movlb	1	; () banked
 11155  00025E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11156  000260  D004               	goto	u6754
 11157  000262                     u6755:
 11158  000262  90D8               	bcf	status,0,c
 11159  000264  0101               	movlb	1	; () banked
 11160  000266  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11161  000268  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11162  00026A                     u6754:
 11163  00026A  0101               	movlb	1	; () banked
 11164  00026C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11165  00026E  D7F9               	goto	u6755
 11166  000270  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 11167  000274  0E01               	movlw	1
 11168  000276  0101               	movlb	1	; () banked
 11169  000278  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11170  00027A  0E00               	movlw	0
 11171  00027C  0101               	movlb	1	; () banked
 11172  00027E  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11173  000280  0101               	movlb	1	; () banked
 11174  000282  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 11175  000284  D004               	goto	u6764
 11176  000286                     u6765:
 11177  000286  90D8               	bcf	status,0,c
 11178  000288  0101               	movlb	1	; () banked
 11179  00028A  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 11180  00028C  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 11181  00028E                     u6764:
 11182  00028E  0101               	movlb	1	; () banked
 11183  000290  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 11184  000292  D7F9               	goto	u6765
 11185  000294  0101               	movlb	1	; () banked
 11186  000296  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 11187  000298  0101               	movlb	1	; () banked
 11188  00029A  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 11189  00029C  0101               	movlb	1	; () banked
 11190  00029E  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11191  0002A0  0101               	movlb	1	; () banked
 11192  0002A2  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 11193  0002A4  0101               	movlb	1	; () banked
 11194  0002A6  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 11195  0002A8  0101               	movlb	1	; () banked
 11196  0002AA  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11197  0002AC  0101               	movlb	1	; () banked
 11198  0002AE  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 11199  0002B0  0101               	movlb	1	; () banked
 11200  0002B2  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 11201  0002B4  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 11202  0002B6  0101               	movlb	1	; () banked
 11203  0002B8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11204  0002BA  0101               	movlb	1	; () banked
 11205  0002BC  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11206  0002BE  0E60               	movlw	low _displaybuffer
 11207  0002C0  0101               	movlb	1	; () banked
 11208  0002C2  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11209  0002C4  0E00               	movlw	high _displaybuffer
 11210  0002C6  0101               	movlb	1	; () banked
 11211  0002C8  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11212  0002CA  90D8               	bcf	status,0,c
 11213  0002CC  3427               	rlcf	LEDsetBar@c,w,c
 11214  0002CE  6ED9               	movwf	fsr2l,c
 11215  0002D0  3428               	rlcf	LEDsetBar@c+1,w,c
 11216  0002D2  6EDA               	movwf	fsr2h,c
 11217  0002D4  90D8               	bcf	status,0,c
 11218  0002D6  36D9               	rlcf	fsr2l,f,c
 11219  0002D8  36DA               	rlcf	fsr2h,f,c
 11220  0002DA  0101               	movlb	1	; () banked
 11221  0002DC  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11222  0002DE  26D9               	addwf	fsr2l,f,c
 11223  0002E0  0101               	movlb	1	; () banked
 11224  0002E2  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11225  0002E4  22DA               	addwfc	fsr2h,f,c
 11226  0002E6  0101               	movlb	1	; () banked
 11227  0002E8  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11228  0002EA  12DE               	iorwf	postinc2,f,c
 11229  0002EC  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11230  0002EE  12DE               	iorwf	postinc2,f,c
 11231  0002F0  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11232  0002F2  12DE               	iorwf	postinc2,f,c
 11233  0002F4  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 11234  0002F6  12DE               	iorwf	postinc2,f,c
 11235                           
 11236                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 11237  0002F8  0012               	return	
 11238  0002FA                     l6546:
 11239  0002FA  5025               	movf	LEDsetBar@color,w,c
 11240  0002FC  1026               	iorwf	LEDsetBar@color+1,w,c
 11241  0002FE  A4D8               	btfss	status,2,c
 11242  000300  D06A               	goto	l6550
 11243                           
 11244                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 11245  000302  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11246  000306  0E08               	movlw	8
 11247  000308  0101               	movlb	1	; () banked
 11248  00030A  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11249  00030C  0E01               	movlw	1
 11250  00030E  0101               	movlb	1	; () banked
 11251  000310  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11252  000312  0E00               	movlw	0
 11253  000314  0101               	movlb	1	; () banked
 11254  000316  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11255  000318  0101               	movlb	1	; () banked
 11256  00031A  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11257  00031C  D004               	goto	u6784
 11258  00031E                     u6785:
 11259  00031E  90D8               	bcf	status,0,c
 11260  000320  0101               	movlb	1	; () banked
 11261  000322  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11262  000324  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11263  000326                     u6784:
 11264  000326  0101               	movlb	1	; () banked
 11265  000328  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11266  00032A  D7F9               	goto	u6785
 11267  00032C  0101               	movlb	1	; () banked
 11268  00032E  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11269  000330  0101               	movlb	1	; () banked
 11270  000332  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11271  000334  0101               	movlb	1	; () banked
 11272  000336  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11273  000338  0101               	movlb	1	; () banked
 11274  00033A  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11275  00033C  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 11276  000340  0E01               	movlw	1
 11277  000342  0101               	movlb	1	; () banked
 11278  000344  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11279  000346  0E00               	movlw	0
 11280  000348  0101               	movlb	1	; () banked
 11281  00034A  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11282  00034C  0101               	movlb	1	; () banked
 11283  00034E  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 11284  000350  D004               	goto	u6794
 11285  000352                     u6795:
 11286  000352  90D8               	bcf	status,0,c
 11287  000354  0101               	movlb	1	; () banked
 11288  000356  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 11289  000358  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 11290  00035A                     u6794:
 11291  00035A  0101               	movlb	1	; () banked
 11292  00035C  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 11293  00035E  D7F9               	goto	u6795
 11294  000360  0101               	movlb	1	; () banked
 11295  000362  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 11296  000364  0101               	movlb	1	; () banked
 11297  000366  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11298  000368  0101               	movlb	1	; () banked
 11299  00036A  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 11300  00036C  0101               	movlb	1	; () banked
 11301  00036E  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11302  000370  0101               	movlb	1	; () banked
 11303  000372  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11304  000374  0101               	movlb	1	; () banked
 11305  000376  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 11306  000378  0101               	movlb	1	; () banked
 11307  00037A  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11308  00037C  0101               	movlb	1	; () banked
 11309  00037E  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11310  000380  0101               	movlb	1	; () banked
 11311  000382  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 11312  000384  0101               	movlb	1	; () banked
 11313  000386  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11314  000388  0101               	movlb	1	; () banked
 11315  00038A  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 11316  00038C  0101               	movlb	1	; () banked
 11317  00038E  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 11318  000390  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 11319  000392  0101               	movlb	1	; () banked
 11320  000394  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11321  000396  0101               	movlb	1	; () banked
 11322  000398  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 11323  00039A  0E60               	movlw	low _displaybuffer
 11324  00039C  0101               	movlb	1	; () banked
 11325  00039E  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 11326  0003A0  0E00               	movlw	high _displaybuffer
 11327  0003A2  0101               	movlb	1	; () banked
 11328  0003A4  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 11329  0003A6  90D8               	bcf	status,0,c
 11330  0003A8  3427               	rlcf	LEDsetBar@c,w,c
 11331  0003AA  6ED9               	movwf	fsr2l,c
 11332  0003AC  3428               	rlcf	LEDsetBar@c+1,w,c
 11333  0003AE  6EDA               	movwf	fsr2h,c
 11334  0003B0  90D8               	bcf	status,0,c
 11335  0003B2  36D9               	rlcf	fsr2l,f,c
 11336  0003B4  36DA               	rlcf	fsr2h,f,c
 11337  0003B6  0101               	movlb	1	; () banked
 11338  0003B8  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 11339  0003BA  26D9               	addwf	fsr2l,f,c
 11340  0003BC  0101               	movlb	1	; () banked
 11341  0003BE  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 11342  0003C0  22DA               	addwfc	fsr2h,f,c
 11343  0003C2  0101               	movlb	1	; () banked
 11344  0003C4  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11345  0003C6  16DE               	andwf	postinc2,f,c
 11346  0003C8  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11347  0003CA  16DE               	andwf	postinc2,f,c
 11348  0003CC  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11349  0003CE  16DE               	andwf	postinc2,f,c
 11350  0003D0  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 11351  0003D2  16DE               	andwf	postinc2,f,c
 11352                           
 11353                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 11354  0003D4  0012               	return	
 11355  0003D6                     l6550:
 11356  0003D6  0E03               	movlw	3
 11357  0003D8  1825               	xorwf	LEDsetBar@color,w,c
 11358  0003DA  1026               	iorwf	LEDsetBar@color+1,w,c
 11359  0003DC  A4D8               	btfss	status,2,c
 11360  0003DE  0012               	return	
 11361                           
 11362                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 11363  0003E0  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11364  0003E4  0E08               	movlw	8
 11365  0003E6  0101               	movlb	1	; () banked
 11366  0003E8  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11367  0003EA  0E01               	movlw	1
 11368  0003EC  0101               	movlb	1	; () banked
 11369  0003EE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11370  0003F0  0E00               	movlw	0
 11371  0003F2  0101               	movlb	1	; () banked
 11372  0003F4  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11373  0003F6  0101               	movlb	1	; () banked
 11374  0003F8  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11375  0003FA  D004               	goto	u6814
 11376  0003FC                     u6815:
 11377  0003FC  90D8               	bcf	status,0,c
 11378  0003FE  0101               	movlb	1	; () banked
 11379  000400  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11380  000402  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11381  000404                     u6814:
 11382  000404  0101               	movlb	1	; () banked
 11383  000406  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11384  000408  D7F9               	goto	u6815
 11385  00040A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11386  00040E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11387  000412  0E00               	movlw	0
 11388  000414  0101               	movlb	1	; () banked
 11389  000416  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11390  000418  0EFF               	movlw	255
 11391  00041A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11392  00041C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11393  00041E  0E60               	movlw	low _displaybuffer
 11394  000420  0101               	movlb	1	; () banked
 11395  000422  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11396  000424  0E00               	movlw	high _displaybuffer
 11397  000426  0101               	movlb	1	; () banked
 11398  000428  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11399  00042A  90D8               	bcf	status,0,c
 11400  00042C  3427               	rlcf	LEDsetBar@c,w,c
 11401  00042E  6ED9               	movwf	fsr2l,c
 11402  000430  3428               	rlcf	LEDsetBar@c+1,w,c
 11403  000432  6EDA               	movwf	fsr2h,c
 11404  000434  90D8               	bcf	status,0,c
 11405  000436  36D9               	rlcf	fsr2l,f,c
 11406  000438  36DA               	rlcf	fsr2h,f,c
 11407  00043A  0101               	movlb	1	; () banked
 11408  00043C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11409  00043E  26D9               	addwf	fsr2l,f,c
 11410  000440  0101               	movlb	1	; () banked
 11411  000442  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11412  000444  22DA               	addwfc	fsr2h,f,c
 11413  000446  0101               	movlb	1	; () banked
 11414  000448  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11415  00044A  12DE               	iorwf	postinc2,f,c
 11416  00044C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11417  00044E  12DE               	iorwf	postinc2,f,c
 11418  000450  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11419  000452  12DE               	iorwf	postinc2,f,c
 11420  000454  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11421  000456  12DE               	iorwf	postinc2,f,c
 11422                           
 11423                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 11424  000458  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11425  00045C  0E01               	movlw	1
 11426  00045E  0101               	movlb	1	; () banked
 11427  000460  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11428  000462  0E00               	movlw	0
 11429  000464  0101               	movlb	1	; () banked
 11430  000466  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11431  000468  0101               	movlb	1	; () banked
 11432  00046A  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11433  00046C  D004               	goto	u6824
 11434  00046E                     u6825:
 11435  00046E  90D8               	bcf	status,0,c
 11436  000470  0101               	movlb	1	; () banked
 11437  000472  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11438  000474  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11439  000476                     u6824:
 11440  000476  0101               	movlb	1	; () banked
 11441  000478  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11442  00047A  D7F9               	goto	u6825
 11443  00047C  0101               	movlb	1	; () banked
 11444  00047E  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11445  000480  0101               	movlb	1	; () banked
 11446  000482  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11447  000484  0101               	movlb	1	; () banked
 11448  000486  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11449  000488  0101               	movlb	1	; () banked
 11450  00048A  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11451  00048C  0101               	movlb	1	; () banked
 11452  00048E  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11453  000490  0101               	movlb	1	; () banked
 11454  000492  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11455  000494  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11456  000496  0101               	movlb	1	; () banked
 11457  000498  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11458  00049A  0101               	movlb	1	; () banked
 11459  00049C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11460  00049E  0E60               	movlw	low _displaybuffer
 11461  0004A0  0101               	movlb	1	; () banked
 11462  0004A2  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11463  0004A4  0E00               	movlw	high _displaybuffer
 11464  0004A6  0101               	movlb	1	; () banked
 11465  0004A8  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11466  0004AA  90D8               	bcf	status,0,c
 11467  0004AC  3427               	rlcf	LEDsetBar@c,w,c
 11468  0004AE  6ED9               	movwf	fsr2l,c
 11469  0004B0  3428               	rlcf	LEDsetBar@c+1,w,c
 11470  0004B2  6EDA               	movwf	fsr2h,c
 11471  0004B4  90D8               	bcf	status,0,c
 11472  0004B6  36D9               	rlcf	fsr2l,f,c
 11473  0004B8  36DA               	rlcf	fsr2h,f,c
 11474  0004BA  0101               	movlb	1	; () banked
 11475  0004BC  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11476  0004BE  26D9               	addwf	fsr2l,f,c
 11477  0004C0  0101               	movlb	1	; () banked
 11478  0004C2  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11479  0004C4  22DA               	addwfc	fsr2h,f,c
 11480  0004C6  0101               	movlb	1	; () banked
 11481  0004C8  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11482  0004CA  16DE               	andwf	postinc2,f,c
 11483  0004CC  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11484  0004CE  16DE               	andwf	postinc2,f,c
 11485  0004D0  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11486  0004D2  16DE               	andwf	postinc2,f,c
 11487  0004D4  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11488  0004D6  16DE               	andwf	postinc2,f,c
 11489                           
 11490                           ; BSR set to: 1
 11491                           
 11492                           ; BSR set to: 1
 11493                           
 11494                           ; BSR set to: 1
 11495  0004D8  0012               	return	
 11496  0004DA                     __end_of_LEDsetBar:
 11497                           	opt stack 0
 11498                           tosu	equ	0xFFF
 11499                           tosh	equ	0xFFE
 11500                           tosl	equ	0xFFD
 11501                           pclath	equ	0xFFA
 11502                           tblptru	equ	0xFF8
 11503                           tblptrh	equ	0xFF7
 11504                           tblptrl	equ	0xFF6
 11505                           tablat	equ	0xFF5
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           intcon	equ	0xFF2
 11509                           intcon2	equ	0xFF1
 11510                           indf0	equ	0xFEF
 11511                           postinc0	equ	0xFEE
 11512                           fsr0h	equ	0xFEA
 11513                           fsr0l	equ	0xFE9
 11514                           wreg	equ	0xFE8
 11515                           indf2	equ	0xFDF
 11516                           postinc2	equ	0xFDE
 11517                           postdec2	equ	0xFDD
 11518                           plusw2	equ	0xFDB
 11519                           fsr2h	equ	0xFDA
 11520                           fsr2l	equ	0xFD9
 11521                           status	equ	0xFD8
 11522                           
 11523 ;; *************** function ___awdiv *****************
 11524 ;; Defined at:
 11525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  dividend        2   26[COMRAM] int 
 11528 ;;  divisor         2   28[COMRAM] int 
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;  quotient        2   32[COMRAM] int 
 11531 ;;  sign            1   31[COMRAM] unsigned char 
 11532 ;;  counter         1   30[COMRAM] unsigned char 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  2   26[COMRAM] int 
 11535 ;; Registers used:
 11536 ;;		wreg, status,2, status,0
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11542 ;;      Params:         4       0       0       0       0       0       0
 11543 ;;      Locals:         4       0       0       0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0
 11545 ;;      Totals:         8       0       0       0       0       0       0
 11546 ;;Total ram usage:        8 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:    4
 11549 ;; This function calls:
 11550 ;;		Nothing
 11551 ;; This function is called by:
 11552 ;;		_LEDsetBar
 11553 ;;		_begin
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text59
 11558  002454                     __ptext59:
 11559                           	opt stack 0
 11560  002454                     ___awdiv:
 11561                           	opt stack 24
 11562                           
 11563                           ;incstack = 0
 11564  002454  0E00               	movlw	0
 11565  002456  6E20               	movwf	___awdiv@sign,c
 11566  002458  AE1E               	btfss	___awdiv@divisor+1,7,c
 11567  00245A  D006               	goto	l6456
 11568  00245C  6C1D               	negf	___awdiv@divisor,c
 11569  00245E  1E1E               	comf	___awdiv@divisor+1,f,c
 11570  002460  B0D8               	btfsc	status,0,c
 11571  002462  2A1E               	incf	___awdiv@divisor+1,f,c
 11572  002464  0E01               	movlw	1
 11573  002466  6E20               	movwf	___awdiv@sign,c
 11574  002468                     l6456:
 11575  002468  AE1C               	btfss	___awdiv@dividend+1,7,c
 11576  00246A  D006               	goto	l6462
 11577  00246C  6C1B               	negf	___awdiv@dividend,c
 11578  00246E  1E1C               	comf	___awdiv@dividend+1,f,c
 11579  002470  B0D8               	btfsc	status,0,c
 11580  002472  2A1C               	incf	___awdiv@dividend+1,f,c
 11581  002474  0E01               	movlw	1
 11582  002476  1A20               	xorwf	___awdiv@sign,f,c
 11583  002478                     l6462:
 11584  002478  0E00               	movlw	0
 11585  00247A  6E22               	movwf	___awdiv@quotient+1,c
 11586  00247C  0E00               	movlw	0
 11587  00247E  6E21               	movwf	___awdiv@quotient,c
 11588  002480  501D               	movf	___awdiv@divisor,w,c
 11589  002482  101E               	iorwf	___awdiv@divisor+1,w,c
 11590  002484  B4D8               	btfsc	status,2,c
 11591  002486  D01C               	goto	l6484
 11592  002488  0E01               	movlw	1
 11593  00248A  6E1F               	movwf	___awdiv@counter,c
 11594  00248C  D004               	goto	l6470
 11595  00248E                     l6468:
 11596  00248E  90D8               	bcf	status,0,c
 11597  002490  361D               	rlcf	___awdiv@divisor,f,c
 11598  002492  361E               	rlcf	___awdiv@divisor+1,f,c
 11599  002494  2A1F               	incf	___awdiv@counter,f,c
 11600  002496                     l6470:
 11601  002496  AE1E               	btfss	___awdiv@divisor+1,7,c
 11602  002498  D7FA               	goto	l6468
 11603  00249A                     l6472:
 11604  00249A  90D8               	bcf	status,0,c
 11605  00249C  3621               	rlcf	___awdiv@quotient,f,c
 11606  00249E  3622               	rlcf	___awdiv@quotient+1,f,c
 11607  0024A0  501D               	movf	___awdiv@divisor,w,c
 11608  0024A2  5C1B               	subwf	___awdiv@dividend,w,c
 11609  0024A4  501E               	movf	___awdiv@divisor+1,w,c
 11610  0024A6  581C               	subwfb	___awdiv@dividend+1,w,c
 11611  0024A8  A0D8               	btfss	status,0,c
 11612  0024AA  D005               	goto	l6480
 11613  0024AC  501D               	movf	___awdiv@divisor,w,c
 11614  0024AE  5E1B               	subwf	___awdiv@dividend,f,c
 11615  0024B0  501E               	movf	___awdiv@divisor+1,w,c
 11616  0024B2  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11617  0024B4  8021               	bsf	___awdiv@quotient,0,c
 11618  0024B6                     l6480:
 11619  0024B6  90D8               	bcf	status,0,c
 11620  0024B8  321E               	rrcf	___awdiv@divisor+1,f,c
 11621  0024BA  321D               	rrcf	___awdiv@divisor,f,c
 11622  0024BC  2E1F               	decfsz	___awdiv@counter,f,c
 11623  0024BE  D7ED               	goto	l6472
 11624  0024C0                     l6484:
 11625  0024C0  5020               	movf	___awdiv@sign,w,c
 11626  0024C2  B4D8               	btfsc	status,2,c
 11627  0024C4  D004               	goto	l6488
 11628  0024C6  6C21               	negf	___awdiv@quotient,c
 11629  0024C8  1E22               	comf	___awdiv@quotient+1,f,c
 11630  0024CA  B0D8               	btfsc	status,0,c
 11631  0024CC  2A22               	incf	___awdiv@quotient+1,f,c
 11632  0024CE                     l6488:
 11633  0024CE  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11634  0024D2  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11635  0024D6  0012               	return	
 11636  0024D8                     __end_of___awdiv:
 11637                           	opt stack 0
 11638                           tosu	equ	0xFFF
 11639                           tosh	equ	0xFFE
 11640                           tosl	equ	0xFFD
 11641                           pclath	equ	0xFFA
 11642                           tblptru	equ	0xFF8
 11643                           tblptrh	equ	0xFF7
 11644                           tblptrl	equ	0xFF6
 11645                           tablat	equ	0xFF5
 11646                           prodh	equ	0xFF4
 11647                           prodl	equ	0xFF3
 11648                           intcon	equ	0xFF2
 11649                           intcon2	equ	0xFF1
 11650                           indf0	equ	0xFEF
 11651                           postinc0	equ	0xFEE
 11652                           fsr0h	equ	0xFEA
 11653                           fsr0l	equ	0xFE9
 11654                           wreg	equ	0xFE8
 11655                           indf2	equ	0xFDF
 11656                           postinc2	equ	0xFDE
 11657                           postdec2	equ	0xFDD
 11658                           plusw2	equ	0xFDB
 11659                           fsr2h	equ	0xFDA
 11660                           fsr2l	equ	0xFD9
 11661                           status	equ	0xFD8
 11662                           
 11663 ;; *************** function _LEDbegin *****************
 11664 ;; Defined at:
 11665 ;;		line 85 in file "LED_BarGraph.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  i2c_addr        1    wreg     unsigned char 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  i2c_addr        1   10[BANK1 ] unsigned char 
 11670 ;;  writeBuffer     3    5[BANK1 ] unsigned char [3]
 11671 ;;  timeOut         2    8[BANK1 ] unsigned int 
 11672 ;;  status          1   11[BANK1 ] enum E8697
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11682 ;;      Params:         0       0       0       0       0       0       0
 11683 ;;      Locals:         0       0       7       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0
 11685 ;;      Totals:         0       0       7       0       0       0       0
 11686 ;;Total ram usage:        7 bytes
 11687 ;; Hardware stack levels used:    1
 11688 ;; Hardware stack levels required when called:    7
 11689 ;; This function calls:
 11690 ;;		_I2C1_MasterWrite
 11691 ;;		_LEDBsetBrightness
 11692 ;;		_LEDblinkRate
 11693 ;; This function is called by:
 11694 ;;		_main
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text60
 11699  002042                     __ptext60:
 11700                           	opt stack 0
 11701  002042                     _LEDbegin:
 11702                           	opt stack 23
 11703                           
 11704                           ;incstack = 0
 11705                           ;LEDbegin@i2c_addr stored from wreg
 11706  002042  0101               	movlb	1	; () banked
 11707  002044  6F43               	movwf	LEDbegin@i2c_addr& (0+255),b
 11708                           
 11709                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 11710                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 11711                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 11712  002046  0E21               	movlw	33
 11713  002048  0101               	movlb	1	; () banked
 11714  00204A  6F3E               	movwf	LEDbegin@writeBuffer& (0+255),b
 11715                           
 11716                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11717  00204C  0E02               	movlw	2
 11718  00204E  0101               	movlb	1	; () banked
 11719  002050  6F44               	movwf	LEDbegin@status& (0+255),b
 11720                           
 11721                           ;LED_BarGraph.c: 91: timeOut = 0;
 11722  002052  0E00               	movlw	0
 11723  002054  0101               	movlb	1	; () banked
 11724  002056  6F42               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 11725  002058  0E00               	movlw	0
 11726  00205A  6F41               	movwf	LEDbegin@timeOut& (0+255),b
 11727                           
 11728                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 11729  00205C  D02F               	goto	l6976
 11730  00205E                     l6956:
 11731                           
 11732                           ; BSR set to: 1
 11733                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 11734                           ;LED_BarGraph.c: 95: 1,
 11735                           ;LED_BarGraph.c: 96: i2c_addr,
 11736                           ;LED_BarGraph.c: 97: &status);
 11737  00205E  0E3E               	movlw	low LEDbegin@writeBuffer
 11738  002060  0100               	movlb	0	; () banked
 11739  002062  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 11740  002064  0E01               	movlw	high LEDbegin@writeBuffer
 11741  002066  0100               	movlb	0	; () banked
 11742  002068  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 11743  00206A  0E00               	movlw	0
 11744  00206C  0100               	movlb	0	; () banked
 11745  00206E  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 11746  002070  0E01               	movlw	1
 11747  002072  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 11748  002074  C143  F0F6         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 11749  002078  0100               	movlb	0	; () banked
 11750  00207A  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 11751  00207C  0E44               	movlw	low LEDbegin@status
 11752  00207E  0100               	movlb	0	; () banked
 11753  002080  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 11754  002082  0E01               	movlw	high LEDbegin@status
 11755  002084  0100               	movlb	0	; () banked
 11756  002086  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 11757  002088  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
 11758  00208C                     l6958:
 11759  00208C  0E02               	movlw	2
 11760  00208E  0101               	movlb	1	; () banked
 11761  002090  1944               	xorwf	LEDbegin@status& (0+255),w,b
 11762  002092  B4D8               	btfsc	status,2,c
 11763  002094  D7FB               	goto	l6958
 11764                           
 11765                           ; BSR set to: 1
 11766                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 11767                           
 11768                           ; BSR set to: 1
 11769  002096  0101               	movlb	1	; () banked
 11770  002098  5144               	movf	LEDbegin@status& (0+255),w,b
 11771  00209A  0101               	movlb	1	; () banked
 11772  00209C  B4D8               	btfsc	status,2,c
 11773  00209E  D012               	goto	l6978
 11774                           
 11775                           ; BSR set to: 1
 11776                           ;LED_BarGraph.c: 104: if (timeOut == 4)
 11777                           
 11778                           ; BSR set to: 1
 11779                           
 11780                           ; BSR set to: 1
 11781                           ;LED_BarGraph.c: 103: break;
 11782  0020A0  0E04               	movlw	4
 11783  0020A2  0101               	movlb	1	; () banked
 11784  0020A4  1941               	xorwf	LEDbegin@timeOut& (0+255),w,b
 11785  0020A6  0101               	movlb	1	; () banked
 11786  0020A8  1142               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 11787  0020AA  B4D8               	btfsc	status,2,c
 11788  0020AC  D00B               	goto	l6978
 11789                           
 11790                           ; BSR set to: 1
 11791                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 11792                           
 11793                           ; BSR set to: 1
 11794                           
 11795                           ; BSR set to: 1
 11796                           ;LED_BarGraph.c: 105: break;
 11797  0020AE  0101               	movlb	1	; () banked
 11798  0020B0  0544               	decf	LEDbegin@status& (0+255),w,b
 11799  0020B2  B4D8               	btfsc	status,2,c
 11800  0020B4  D007               	goto	l6978
 11801                           
 11802                           ; BSR set to: 1
 11803                           ;LED_BarGraph.c: 108: else
 11804                           ;LED_BarGraph.c: 109: timeOut++;
 11805                           
 11806                           ; BSR set to: 1
 11807                           
 11808                           ; BSR set to: 1
 11809                           
 11810                           ; BSR set to: 1
 11811                           ;LED_BarGraph.c: 107: break;
 11812  0020B6  0101               	movlb	1	; () banked
 11813  0020B8  4B41               	infsnz	LEDbegin@timeOut& (0+255),f,b
 11814  0020BA  2B42               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 11815  0020BC                     l6976:
 11816                           
 11817                           ; BSR set to: 1
 11818  0020BC  0101               	movlb	1	; () banked
 11819  0020BE  0544               	decf	LEDbegin@status& (0+255),w,b
 11820  0020C0  A4D8               	btfss	status,2,c
 11821  0020C2  D7CD               	goto	l6956
 11822  0020C4                     l6978:
 11823                           
 11824                           ; BSR set to: 1
 11825                           ;LED_BarGraph.c: 110: }
 11826                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 11827  0020C4  0E00               	movlw	0
 11828  0020C6  6E26               	movwf	LEDblinkRate@b+1,c
 11829  0020C8  0E00               	movlw	0
 11830  0020CA  6E25               	movwf	LEDblinkRate@b,c
 11831  0020CC  C143  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 11832  0020D0  EC73  F010         	call	_LEDblinkRate	;wreg free
 11833                           
 11834                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 11835  0020D4  0E00               	movlw	0
 11836  0020D6  6E26               	movwf	LEDBsetBrightness@b+1,c
 11837  0020D8  0E0F               	movlw	15
 11838  0020DA  6E25               	movwf	LEDBsetBrightness@b,c
 11839  0020DC  C143  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 11840  0020E0  ECC1  F010         	call	_LEDBsetBrightness	;wreg free
 11841  0020E4  0012               	return		;funcret
 11842  0020E6                     __end_of_LEDbegin:
 11843                           	opt stack 0
 11844                           tosu	equ	0xFFF
 11845                           tosh	equ	0xFFE
 11846                           tosl	equ	0xFFD
 11847                           pclath	equ	0xFFA
 11848                           tblptru	equ	0xFF8
 11849                           tblptrh	equ	0xFF7
 11850                           tblptrl	equ	0xFF6
 11851                           tablat	equ	0xFF5
 11852                           prodh	equ	0xFF4
 11853                           prodl	equ	0xFF3
 11854                           intcon	equ	0xFF2
 11855                           intcon2	equ	0xFF1
 11856                           indf0	equ	0xFEF
 11857                           postinc0	equ	0xFEE
 11858                           fsr0h	equ	0xFEA
 11859                           fsr0l	equ	0xFE9
 11860                           wreg	equ	0xFE8
 11861                           indf2	equ	0xFDF
 11862                           postinc2	equ	0xFDE
 11863                           postdec2	equ	0xFDD
 11864                           plusw2	equ	0xFDB
 11865                           fsr2h	equ	0xFDA
 11866                           fsr2l	equ	0xFD9
 11867                           status	equ	0xFD8
 11868                           
 11869 ;; *************** function _LEDblinkRate *****************
 11870 ;; Defined at:
 11871 ;;		line 55 in file "LED_BarGraph.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  b               2   36[COMRAM] int 
 11874 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 11877 ;;  timeOut         2    2[BANK1 ] unsigned int 
 11878 ;;  status          1    4[BANK1 ] enum E8697
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11888 ;;      Params:         3       0       0       0       0       0       0
 11889 ;;      Locals:         0       0       5       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0
 11891 ;;      Totals:         3       0       5       0       0       0       0
 11892 ;;Total ram usage:        8 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    6
 11895 ;; This function calls:
 11896 ;;		_I2C1_MasterWrite
 11897 ;; This function is called by:
 11898 ;;		_LEDbegin
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text61
 11903  0020E6                     __ptext61:
 11904                           	opt stack 0
 11905  0020E6                     _LEDblinkRate:
 11906                           	opt stack 23
 11907                           
 11908                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 11909                           
 11910                           ;incstack = 0
 11911  0020E6  BE26               	btfsc	LEDblinkRate@b+1,7,c
 11912  0020E8  D00A               	goto	l6590
 11913  0020EA  5026               	movf	LEDblinkRate@b+1,w,c
 11914  0020EC  E104               	bnz	u6890
 11915  0020EE  0E04               	movlw	4
 11916  0020F0  5C25               	subwf	LEDblinkRate@b,w,c
 11917  0020F2  A0D8               	btfss	status,0,c
 11918  0020F4  D004               	goto	l6590
 11919  0020F6                     u6890:
 11920  0020F6  0E00               	movlw	0
 11921  0020F8  6E26               	movwf	LEDblinkRate@b+1,c
 11922  0020FA  0E00               	movlw	0
 11923  0020FC  6E25               	movwf	LEDblinkRate@b,c
 11924  0020FE                     l6590:
 11925                           
 11926                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 11927                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 11928                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 11929  0020FE  5025               	movf	LEDblinkRate@b,w,c
 11930  002100  2425               	addwf	LEDblinkRate@b,w,c
 11931  002102  0981               	iorlw	129
 11932  002104  0101               	movlb	1	; () banked
 11933  002106  6F39               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 11934                           
 11935                           ; BSR set to: 1
 11936                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11937  002108  0E02               	movlw	2
 11938  00210A  0101               	movlb	1	; () banked
 11939  00210C  6F3D               	movwf	LEDblinkRate@status& (0+255),b
 11940                           
 11941                           ; BSR set to: 1
 11942                           ;LED_BarGraph.c: 62: timeOut = 0;
 11943  00210E  0E00               	movlw	0
 11944  002110  0101               	movlb	1	; () banked
 11945  002112  6F3C               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 11946  002114  0E00               	movlw	0
 11947  002116  6F3B               	movwf	LEDblinkRate@timeOut& (0+255),b
 11948                           
 11949                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 11950  002118  D02F               	goto	l6616
 11951  00211A                     l6596:
 11952                           
 11953                           ; BSR set to: 1
 11954                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 11955                           ;LED_BarGraph.c: 66: 1,
 11956                           ;LED_BarGraph.c: 67: i2c_addr,
 11957                           ;LED_BarGraph.c: 68: &status);
 11958  00211A  0E39               	movlw	low LEDblinkRate@writeBuffer
 11959  00211C  0100               	movlb	0	; () banked
 11960  00211E  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 11961  002120  0E01               	movlw	high LEDblinkRate@writeBuffer
 11962  002122  0100               	movlb	0	; () banked
 11963  002124  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 11964  002126  0E00               	movlw	0
 11965  002128  0100               	movlb	0	; () banked
 11966  00212A  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 11967  00212C  0E01               	movlw	1
 11968  00212E  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 11969  002130  C027  F0F6         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 11970  002134  0100               	movlb	0	; () banked
 11971  002136  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 11972  002138  0E3D               	movlw	low LEDblinkRate@status
 11973  00213A  0100               	movlb	0	; () banked
 11974  00213C  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 11975  00213E  0E01               	movlw	high LEDblinkRate@status
 11976  002140  0100               	movlb	0	; () banked
 11977  002142  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 11978  002144  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
 11979  002148                     l6598:
 11980  002148  0E02               	movlw	2
 11981  00214A  0101               	movlb	1	; () banked
 11982  00214C  193D               	xorwf	LEDblinkRate@status& (0+255),w,b
 11983  00214E  B4D8               	btfsc	status,2,c
 11984  002150  D7FB               	goto	l6598
 11985                           
 11986                           ; BSR set to: 1
 11987                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 11988                           
 11989                           ; BSR set to: 1
 11990  002152  0101               	movlb	1	; () banked
 11991  002154  513D               	movf	LEDblinkRate@status& (0+255),w,b
 11992  002156  0101               	movlb	1	; () banked
 11993  002158  B4D8               	btfsc	status,2,c
 11994  00215A  0012               	return	
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;LED_BarGraph.c: 75: if (timeOut == 4)
 11998                           
 11999                           ; BSR set to: 1
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;LED_BarGraph.c: 74: break;
 12003  00215C  0E04               	movlw	4
 12004  00215E  0101               	movlb	1	; () banked
 12005  002160  193B               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 12006  002162  0101               	movlb	1	; () banked
 12007  002164  113C               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 12008  002166  B4D8               	btfsc	status,2,c
 12009  002168  0012               	return	
 12010                           
 12011                           ; BSR set to: 1
 12012                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 12013                           
 12014                           ; BSR set to: 1
 12015                           
 12016                           ; BSR set to: 1
 12017                           ;LED_BarGraph.c: 76: break;
 12018  00216A  0101               	movlb	1	; () banked
 12019  00216C  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12020  00216E  B4D8               	btfsc	status,2,c
 12021  002170  0012               	return	
 12022                           
 12023                           ; BSR set to: 1
 12024                           ;LED_BarGraph.c: 79: else
 12025                           ;LED_BarGraph.c: 80: timeOut++;
 12026                           
 12027                           ; BSR set to: 1
 12028                           
 12029                           ; BSR set to: 1
 12030                           
 12031                           ; BSR set to: 1
 12032                           ;LED_BarGraph.c: 78: break;
 12033  002172  0101               	movlb	1	; () banked
 12034  002174  4B3B               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 12035  002176  2B3C               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 12036  002178                     l6616:
 12037                           
 12038                           ; BSR set to: 1
 12039  002178  0101               	movlb	1	; () banked
 12040  00217A  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12041  00217C  B4D8               	btfsc	status,2,c
 12042  00217E  0012               	return	
 12043  002180  D7CC               	goto	l6596
 12044  002182                     __end_of_LEDblinkRate:
 12045                           	opt stack 0
 12046                           tosu	equ	0xFFF
 12047                           tosh	equ	0xFFE
 12048                           tosl	equ	0xFFD
 12049                           pclath	equ	0xFFA
 12050                           tblptru	equ	0xFF8
 12051                           tblptrh	equ	0xFF7
 12052                           tblptrl	equ	0xFF6
 12053                           tablat	equ	0xFF5
 12054                           prodh	equ	0xFF4
 12055                           prodl	equ	0xFF3
 12056                           intcon	equ	0xFF2
 12057                           intcon2	equ	0xFF1
 12058                           indf0	equ	0xFEF
 12059                           postinc0	equ	0xFEE
 12060                           fsr0h	equ	0xFEA
 12061                           fsr0l	equ	0xFE9
 12062                           wreg	equ	0xFE8
 12063                           indf2	equ	0xFDF
 12064                           postinc2	equ	0xFDE
 12065                           postdec2	equ	0xFDD
 12066                           plusw2	equ	0xFDB
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071 ;; *************** function _LEDBsetBrightness *****************
 12072 ;; Defined at:
 12073 ;;		line 25 in file "LED_BarGraph.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  b               2   36[COMRAM] int 
 12076 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12079 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12080 ;;  status          1    4[BANK1 ] enum E8697
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12090 ;;      Params:         3       0       0       0       0       0       0
 12091 ;;      Locals:         0       0       5       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0
 12093 ;;      Totals:         3       0       5       0       0       0       0
 12094 ;;Total ram usage:        8 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    6
 12097 ;; This function calls:
 12098 ;;		_I2C1_MasterWrite
 12099 ;; This function is called by:
 12100 ;;		_LEDbegin
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           	psect	text62
 12105  002182                     __ptext62:
 12106                           	opt stack 0
 12107  002182                     _LEDBsetBrightness:
 12108                           	opt stack 23
 12109                           
 12110                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 12111                           
 12112                           ; BSR set to: 1
 12113                           ;incstack = 0
 12114  002182  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 12115  002184  D00A               	goto	l6558
 12116  002186  5026               	movf	LEDBsetBrightness@b+1,w,c
 12117  002188  E104               	bnz	u6830
 12118  00218A  0E10               	movlw	16
 12119  00218C  5C25               	subwf	LEDBsetBrightness@b,w,c
 12120  00218E  A0D8               	btfss	status,0,c
 12121  002190  D004               	goto	l6558
 12122  002192                     u6830:
 12123  002192  0E00               	movlw	0
 12124  002194  6E26               	movwf	LEDBsetBrightness@b+1,c
 12125  002196  0E0F               	movlw	15
 12126  002198  6E25               	movwf	LEDBsetBrightness@b,c
 12127  00219A                     l6558:
 12128                           
 12129                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 12130                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 12131                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 12132  00219A  5025               	movf	LEDBsetBrightness@b,w,c
 12133  00219C  09E0               	iorlw	224
 12134  00219E  0101               	movlb	1	; () banked
 12135  0021A0  6F39               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 12136                           
 12137                           ; BSR set to: 1
 12138                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12139  0021A2  0E02               	movlw	2
 12140  0021A4  0101               	movlb	1	; () banked
 12141  0021A6  6F3D               	movwf	LEDBsetBrightness@status& (0+255),b
 12142                           
 12143                           ; BSR set to: 1
 12144                           ;LED_BarGraph.c: 32: timeOut = 0;
 12145  0021A8  0E00               	movlw	0
 12146  0021AA  0101               	movlb	1	; () banked
 12147  0021AC  6F3C               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 12148  0021AE  0E00               	movlw	0
 12149  0021B0  6F3B               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 12150                           
 12151                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 12152  0021B2  D02F               	goto	l6584
 12153  0021B4                     l6564:
 12154                           
 12155                           ; BSR set to: 1
 12156                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 12157                           ;LED_BarGraph.c: 36: 1,
 12158                           ;LED_BarGraph.c: 37: i2c_addr,
 12159                           ;LED_BarGraph.c: 38: &status);
 12160  0021B4  0E39               	movlw	low LEDBsetBrightness@writeBuffer
 12161  0021B6  0100               	movlb	0	; () banked
 12162  0021B8  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12163  0021BA  0E01               	movlw	high LEDBsetBrightness@writeBuffer
 12164  0021BC  0100               	movlb	0	; () banked
 12165  0021BE  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12166  0021C0  0E00               	movlw	0
 12167  0021C2  0100               	movlb	0	; () banked
 12168  0021C4  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12169  0021C6  0E01               	movlw	1
 12170  0021C8  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12171  0021CA  C027  F0F6         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 12172  0021CE  0100               	movlb	0	; () banked
 12173  0021D0  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12174  0021D2  0E3D               	movlw	low LEDBsetBrightness@status
 12175  0021D4  0100               	movlb	0	; () banked
 12176  0021D6  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12177  0021D8  0E01               	movlw	high LEDBsetBrightness@status
 12178  0021DA  0100               	movlb	0	; () banked
 12179  0021DC  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12180  0021DE  ECB6  F014         	call	_I2C1_MasterWrite	;wreg free
 12181  0021E2                     l6566:
 12182  0021E2  0E02               	movlw	2
 12183  0021E4  0101               	movlb	1	; () banked
 12184  0021E6  193D               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 12185  0021E8  B4D8               	btfsc	status,2,c
 12186  0021EA  D7FB               	goto	l6566
 12187                           
 12188                           ; BSR set to: 1
 12189                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 12190                           
 12191                           ; BSR set to: 1
 12192  0021EC  0101               	movlb	1	; () banked
 12193  0021EE  513D               	movf	LEDBsetBrightness@status& (0+255),w,b
 12194  0021F0  0101               	movlb	1	; () banked
 12195  0021F2  B4D8               	btfsc	status,2,c
 12196  0021F4  0012               	return	
 12197                           
 12198                           ; BSR set to: 1
 12199                           ;LED_BarGraph.c: 45: if (timeOut == 4)
 12200                           
 12201                           ; BSR set to: 1
 12202                           
 12203                           ; BSR set to: 1
 12204                           ;LED_BarGraph.c: 44: break;
 12205  0021F6  0E04               	movlw	4
 12206  0021F8  0101               	movlb	1	; () banked
 12207  0021FA  193B               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 12208  0021FC  0101               	movlb	1	; () banked
 12209  0021FE  113C               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 12210  002200  B4D8               	btfsc	status,2,c
 12211  002202  0012               	return	
 12212                           
 12213                           ; BSR set to: 1
 12214                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 12215                           
 12216                           ; BSR set to: 1
 12217                           
 12218                           ; BSR set to: 1
 12219                           ;LED_BarGraph.c: 46: break;
 12220  002204  0101               	movlb	1	; () banked
 12221  002206  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12222  002208  B4D8               	btfsc	status,2,c
 12223  00220A  0012               	return	
 12224                           
 12225                           ; BSR set to: 1
 12226                           ;LED_BarGraph.c: 49: else
 12227                           ;LED_BarGraph.c: 50: timeOut++;
 12228                           
 12229                           ; BSR set to: 1
 12230                           
 12231                           ; BSR set to: 1
 12232                           
 12233                           ; BSR set to: 1
 12234                           ;LED_BarGraph.c: 48: break;
 12235  00220C  0101               	movlb	1	; () banked
 12236  00220E  4B3B               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 12237  002210  2B3C               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 12238  002212                     l6584:
 12239                           
 12240                           ; BSR set to: 1
 12241  002212  0101               	movlb	1	; () banked
 12242  002214  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12243  002216  B4D8               	btfsc	status,2,c
 12244  002218  0012               	return	
 12245  00221A  D7CC               	goto	l6564
 12246  00221C                     __end_of_LEDBsetBrightness:
 12247                           	opt stack 0
 12248                           tosu	equ	0xFFF
 12249                           tosh	equ	0xFFE
 12250                           tosl	equ	0xFFD
 12251                           pclath	equ	0xFFA
 12252                           tblptru	equ	0xFF8
 12253                           tblptrh	equ	0xFF7
 12254                           tblptrl	equ	0xFF6
 12255                           tablat	equ	0xFF5
 12256                           prodh	equ	0xFF4
 12257                           prodl	equ	0xFF3
 12258                           intcon	equ	0xFF2
 12259                           intcon2	equ	0xFF1
 12260                           indf0	equ	0xFEF
 12261                           postinc0	equ	0xFEE
 12262                           fsr0h	equ	0xFEA
 12263                           fsr0l	equ	0xFE9
 12264                           wreg	equ	0xFE8
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           plusw2	equ	0xFDB
 12269                           fsr2h	equ	0xFDA
 12270                           fsr2l	equ	0xFD9
 12271                           status	equ	0xFD8
 12272                           
 12273 ;; *************** function _I2C1_MasterWrite *****************
 12274 ;; Defined at:
 12275 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12278 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12279 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12280 ;;  length          2    2[BANK0 ] int 
 12281 ;;  address         2    4[BANK0 ] unsigned int 
 12282 ;;  pflag           2    6[BANK0 ] PTR enum E8678
 12283 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12284 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;		None
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12296 ;;      Params:         0       8       0       0       0       0       0
 12297 ;;      Locals:         0       0       0       0       0       0       0
 12298 ;;      Temps:          0       0       0       0       0       0       0
 12299 ;;      Totals:         0       8       0       0       0       0       0
 12300 ;;Total ram usage:        8 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:    5
 12303 ;; This function calls:
 12304 ;;		_I2C1_MasterTRBInsert
 12305 ;;		_I2C1_MasterWriteTRBBuild
 12306 ;; This function is called by:
 12307 ;;		_LEDBsetBrightness
 12308 ;;		_LEDblinkRate
 12309 ;;		_LEDbegin
 12310 ;;		_LEDwriteDisplay
 12311 ;;		_OLED_command
 12312 ;;		_oledPutChar
 12313 ;;		_Display
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text63
 12318  00296C                     __ptext63:
 12319                           	opt stack 0
 12320  00296C                     _I2C1_MasterWrite:
 12321                           	opt stack 22
 12322                           
 12323                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12324                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 12325                           
 12326                           ; BSR set to: 1
 12327                           ;incstack = 0
 12328  00296C  0100               	movlb	0	; () banked
 12329  00296E  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12330  002970  D021               	goto	l6038
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;i2c1.c: 561: {
 12334                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 12335  002972  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12336  002974  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 12337  002976  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12338  002978  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 12339  00297A  C0F2  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 12340  00297E  C0F3  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 12341  002982  C0F4  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 12342  002986  C0F5  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 12343  00298A  C0F6  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 12344  00298E  C0F7  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 12345  002992  EC53  F015         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 12346                           
 12347                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12348  002996  0E00               	movlw	0
 12349  002998  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 12350  00299A  0E01               	movlw	1
 12351  00299C  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 12352  00299E  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12353  0029A0  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 12354  0029A2  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12355  0029A4  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 12356  0029A6  C0F8  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 12357  0029AA  C0F9  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 12358  0029AE  ECCA  F00E         	call	_I2C1_MasterTRBInsert	;wreg free
 12359                           
 12360                           ;i2c1.c: 564: }
 12361  0029B2  0012               	return	
 12362  0029B4                     l6038:
 12363                           
 12364                           ;i2c1.c: 565: else
 12365                           ;i2c1.c: 566: {
 12366                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 12367  0029B4  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 12368  0029B8  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 12369  0029BC  0E01               	movlw	1
 12370  0029BE  6EDF               	movwf	indf2,c
 12371  0029C0  0012               	return	
 12372  0029C2                     __end_of_I2C1_MasterWrite:
 12373                           	opt stack 0
 12374                           tosu	equ	0xFFF
 12375                           tosh	equ	0xFFE
 12376                           tosl	equ	0xFFD
 12377                           pclath	equ	0xFFA
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           intcon	equ	0xFF2
 12385                           intcon2	equ	0xFF1
 12386                           indf0	equ	0xFEF
 12387                           postinc0	equ	0xFEE
 12388                           fsr0h	equ	0xFEA
 12389                           fsr0l	equ	0xFE9
 12390                           wreg	equ	0xFE8
 12391                           indf2	equ	0xFDF
 12392                           postinc2	equ	0xFDE
 12393                           postdec2	equ	0xFDD
 12394                           plusw2	equ	0xFDB
 12395                           fsr2h	equ	0xFDA
 12396                           fsr2l	equ	0xFD9
 12397                           status	equ	0xFD8
 12398                           
 12399 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12400 ;; Defined at:
 12401 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  ptrb            2   26[COMRAM] PTR struct .
 12404 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 12405 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 12406 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12407 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12408 ;;  length          2   30[COMRAM] int 
 12409 ;;  address         2   32[COMRAM] unsigned int 
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;		None
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      void 
 12414 ;; Registers used:
 12415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12421 ;;      Params:         8       0       0       0       0       0       0
 12422 ;;      Locals:         0       0       0       0       0       0       0
 12423 ;;      Temps:          2       0       0       0       0       0       0
 12424 ;;      Totals:        10       0       0       0       0       0       0
 12425 ;;Total ram usage:       10 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    4
 12428 ;; This function calls:
 12429 ;;		Nothing
 12430 ;; This function is called by:
 12431 ;;		_I2C1_MasterWrite
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           	psect	text64
 12436  002AA6                     __ptext64:
 12437                           	opt stack 0
 12438  002AA6                     _I2C1_MasterWriteTRBBuild:
 12439                           	opt stack 22
 12440                           
 12441                           ;i2c1.c: 666: ptrb->address = address << 1;
 12442                           
 12443                           ;incstack = 0
 12444  002AA6  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 12445  002AAA  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 12446  002AAE  90D8               	bcf	status,0,c
 12447  002AB0  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 12448  002AB2  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 12449  002AB4  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 12450  002AB8  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 12451  002ABC  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 12452  002AC0  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 12453                           
 12454                           ;i2c1.c: 667: ptrb->length = length;
 12455  002AC4  EE20 F002          	lfsr	2,2
 12456  002AC8  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12457  002ACA  26D9               	addwf	fsr2l,f,c
 12458  002ACC  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12459  002ACE  22DA               	addwfc	fsr2h,f,c
 12460  002AD0  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 12461                           
 12462                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 12463  002AD4  EE20 F003          	lfsr	2,3
 12464  002AD8  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12465  002ADA  26D9               	addwf	fsr2l,f,c
 12466  002ADC  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12467  002ADE  22DA               	addwfc	fsr2h,f,c
 12468  002AE0  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 12469  002AE4  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 12470  002AE8  0012               	return		;funcret
 12471  002AEA                     __end_of_I2C1_MasterWriteTRBBuild:
 12472                           	opt stack 0
 12473                           tosu	equ	0xFFF
 12474                           tosh	equ	0xFFE
 12475                           tosl	equ	0xFFD
 12476                           pclath	equ	0xFFA
 12477                           tblptru	equ	0xFF8
 12478                           tblptrh	equ	0xFF7
 12479                           tblptrl	equ	0xFF6
 12480                           tablat	equ	0xFF5
 12481                           prodh	equ	0xFF4
 12482                           prodl	equ	0xFF3
 12483                           intcon	equ	0xFF2
 12484                           intcon2	equ	0xFF1
 12485                           indf0	equ	0xFEF
 12486                           postinc0	equ	0xFEE
 12487                           fsr0h	equ	0xFEA
 12488                           fsr0l	equ	0xFE9
 12489                           wreg	equ	0xFE8
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           plusw2	equ	0xFDB
 12494                           fsr2h	equ	0xFDA
 12495                           fsr2l	equ	0xFD9
 12496                           status	equ	0xFD8
 12497                           
 12498 ;; *************** function _I2C1_MasterTRBInsert *****************
 12499 ;; Defined at:
 12500 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  count           2   26[COMRAM] int 
 12503 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 12504 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 12505 ;;  pflag           2   30[COMRAM] PTR enum E8678
 12506 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12507 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;		None
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12519 ;;      Params:         6       0       0       0       0       0       0
 12520 ;;      Locals:         0       0       0       0       0       0       0
 12521 ;;      Temps:          1       0       0       0       0       0       0
 12522 ;;      Totals:         7       0       0       0       0       0       0
 12523 ;;Total ram usage:        7 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:    4
 12526 ;; This function calls:
 12527 ;;		Nothing
 12528 ;; This function is called by:
 12529 ;;		_I2C1_MasterWrite
 12530 ;;		_I2C1_MasterRead
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           	psect	text65
 12535  001D94                     __ptext65:
 12536                           	opt stack 0
 12537  001D94                     _I2C1_MasterTRBInsert:
 12538                           	opt stack 22
 12539                           
 12540                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 12541                           
 12542                           ;incstack = 0
 12543  001D94  0100               	movlb	0	; () banked
 12544  001D96  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12545  001D98  D046               	goto	l6018
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;i2c1.c: 602: {
 12549                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 12550  001D9A  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12551  001D9E  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12552  001DA2  0E02               	movlw	2
 12553  001DA4  6EDF               	movwf	indf2,c
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12557  001DA6  0100               	movlb	0	; () banked
 12558  001DA8  EE20 F001          	lfsr	2,1
 12559  001DAC  51B8               	movf	_i2c1_object& (0+255),w,b
 12560  001DAE  26D9               	addwf	fsr2l,f,c
 12561  001DB0  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12562  001DB2  22DA               	addwfc	fsr2h,f,c
 12563  001DB4  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 12564  001DB8  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 12568  001DBC  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 12569  001DC0  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 12570  001DC4  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 12574  001DC8  0100               	movlb	0	; () banked
 12575  001DCA  EE20 F003          	lfsr	2,3
 12576  001DCE  51B8               	movf	_i2c1_object& (0+255),w,b
 12577  001DD0  26D9               	addwf	fsr2l,f,c
 12578  001DD2  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12579  001DD4  22DA               	addwfc	fsr2h,f,c
 12580  001DD6  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 12581  001DDA  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 12585  001DDE  0E05               	movlw	5
 12586  001DE0  0100               	movlb	0	; () banked
 12587  001DE2  27B8               	addwf	_i2c1_object& (0+255),f,b
 12588  001DE4  0E00               	movlw	0
 12589  001DE6  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 12593  001DE8  0EF0               	movlw	low (_i2c1_tr_queue+5)
 12594  001DEA  0100               	movlb	0	; () banked
 12595  001DEC  19B8               	xorwf	_i2c1_object& (0+255),w,b
 12596  001DEE  E10B               	bnz	l6014
 12597  001DF0  0E00               	movlw	high (_i2c1_tr_queue+5)
 12598  001DF2  0100               	movlb	0	; () banked
 12599  001DF4  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 12600  001DF6  A4D8               	btfss	status,2,c
 12601  001DF8  D006               	goto	l6014
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;i2c1.c: 612: {
 12605                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12606  001DFA  0EEB               	movlw	low _i2c1_tr_queue
 12607  001DFC  0100               	movlb	0	; () banked
 12608  001DFE  6FB8               	movwf	_i2c1_object& (0+255),b
 12609  001E00  0E00               	movlw	high _i2c1_tr_queue
 12610  001E02  0100               	movlb	0	; () banked
 12611  001E04  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12612  001E06                     l6014:
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;i2c1.c: 615: }
 12616                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12617  001E06  0100               	movlb	0	; () banked
 12618  001E08  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12619                           
 12620                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12621  001E0A  0100               	movlb	0	; () banked
 12622  001E0C  51B8               	movf	_i2c1_object& (0+255),w,b
 12623  001E0E  0100               	movlb	0	; () banked
 12624  001E10  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12625  001E12  E10F               	bnz	l6020
 12626  001E14  0100               	movlb	0	; () banked
 12627  001E16  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12628  001E18  0100               	movlb	0	; () banked
 12629  001E1A  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12630  001E1C  A4D8               	btfss	status,2,c
 12631  001E1E  D009               	goto	l6020
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;i2c1.c: 623: {
 12635                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12636  001E20  0100               	movlb	0	; () banked
 12637  001E22  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;i2c1.c: 626: }
 12641                           ;i2c1.c: 628: }
 12642  001E24  D006               	goto	l6020
 12643  001E26                     l6018:
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;i2c1.c: 629: else
 12647                           ;i2c1.c: 630: {
 12648                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12649  001E26  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12650  001E2A  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12651  001E2E  0E01               	movlw	1
 12652  001E30  6EDF               	movwf	indf2,c
 12653  001E32                     l6020:
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;i2c1.c: 632: }
 12657                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12658  001E32  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12659  001E36  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12660  001E3A  0E02               	movlw	2
 12661  001E3C  18DE               	xorwf	postinc2,w,c
 12662  001E3E  A4D8               	btfss	status,2,c
 12663  001E40  0012               	return	
 12664  001E42                     l6024:
 12665  001E42  5038               	movf	_i2c1_state,w,c
 12666  001E44  A4D8               	btfss	status,2,c
 12667  001E46  D7FD               	goto	l6024
 12668                           
 12669                           ;i2c1.c: 638: {
 12670                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12671  001E48  869E               	bsf	3998,3,c	;volatile
 12672  001E4A  0012               	return	
 12673  001E4C                     __end_of_I2C1_MasterTRBInsert:
 12674                           	opt stack 0
 12675                           tosu	equ	0xFFF
 12676                           tosh	equ	0xFFE
 12677                           tosl	equ	0xFFD
 12678                           pclath	equ	0xFFA
 12679                           tblptru	equ	0xFF8
 12680                           tblptrh	equ	0xFF7
 12681                           tblptrl	equ	0xFF6
 12682                           tablat	equ	0xFF5
 12683                           prodh	equ	0xFF4
 12684                           prodl	equ	0xFF3
 12685                           intcon	equ	0xFF2
 12686                           intcon2	equ	0xFF1
 12687                           indf0	equ	0xFEF
 12688                           postinc0	equ	0xFEE
 12689                           fsr0h	equ	0xFEA
 12690                           fsr0l	equ	0xFE9
 12691                           wreg	equ	0xFE8
 12692                           indf2	equ	0xFDF
 12693                           postinc2	equ	0xFDE
 12694                           postdec2	equ	0xFDD
 12695                           plusw2	equ	0xFDB
 12696                           fsr2h	equ	0xFDA
 12697                           fsr2l	equ	0xFD9
 12698                           status	equ	0xFD8
 12699                           
 12700 ;; *************** function _GetTime *****************
 12701 ;; Defined at:
 12702 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;		None
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;		None
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  2   26[COMRAM] int 
 12709 ;; Registers used:
 12710 ;;		None
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12716 ;;      Params:         2       0       0       0       0       0       0
 12717 ;;      Locals:         0       0       0       0       0       0       0
 12718 ;;      Temps:          0       0       0       0       0       0       0
 12719 ;;      Totals:         2       0       0       0       0       0       0
 12720 ;;Total ram usage:        2 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; Hardware stack levels required when called:    4
 12723 ;; This function calls:
 12724 ;;		Nothing
 12725 ;; This function is called by:
 12726 ;;		_main
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           	psect	text66
 12731  002F3C                     __ptext66:
 12732                           	opt stack 0
 12733  002F3C                     _GetTime:
 12734                           	opt stack 26
 12735                           
 12736                           ;tmr0.c: 98: return time;
 12737                           
 12738                           ;incstack = 0
 12739  002F3C  C03F  F01B         	movff	_time,?_GetTime	;volatile
 12740  002F40  6A1C               	clrf	?_GetTime+1,c
 12741  002F42  0012               	return		;funcret
 12742  002F44                     __end_of_GetTime:
 12743                           	opt stack 0
 12744                           tosu	equ	0xFFF
 12745                           tosh	equ	0xFFE
 12746                           tosl	equ	0xFFD
 12747                           pclath	equ	0xFFA
 12748                           tblptru	equ	0xFF8
 12749                           tblptrh	equ	0xFF7
 12750                           tblptrl	equ	0xFF6
 12751                           tablat	equ	0xFF5
 12752                           prodh	equ	0xFF4
 12753                           prodl	equ	0xFF3
 12754                           intcon	equ	0xFF2
 12755                           intcon2	equ	0xFF1
 12756                           indf0	equ	0xFEF
 12757                           postinc0	equ	0xFEE
 12758                           fsr0h	equ	0xFEA
 12759                           fsr0l	equ	0xFE9
 12760                           wreg	equ	0xFE8
 12761                           indf2	equ	0xFDF
 12762                           postinc2	equ	0xFDE
 12763                           postdec2	equ	0xFDD
 12764                           plusw2	equ	0xFDB
 12765                           fsr2h	equ	0xFDA
 12766                           fsr2l	equ	0xFD9
 12767                           status	equ	0xFD8
 12768                           
 12769 ;; *************** function _GetDataBarGraphB *****************
 12770 ;; Defined at:
 12771 ;;		line 57 in file "Communications.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;		None
 12774 ;; Auto vars:     Size  Location     Type
 12775 ;;		None
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  2   26[COMRAM] unsigned int 
 12778 ;; Registers used:
 12779 ;;		None
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12785 ;;      Params:         2       0       0       0       0       0       0
 12786 ;;      Locals:         0       0       0       0       0       0       0
 12787 ;;      Temps:          0       0       0       0       0       0       0
 12788 ;;      Totals:         2       0       0       0       0       0       0
 12789 ;;Total ram usage:        2 bytes
 12790 ;; Hardware stack levels used:    1
 12791 ;; Hardware stack levels required when called:    4
 12792 ;; This function calls:
 12793 ;;		Nothing
 12794 ;; This function is called by:
 12795 ;;		_main
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799                           	psect	text67
 12800  002F28                     __ptext67:
 12801                           	opt stack 0
 12802  002F28                     _GetDataBarGraphB:
 12803                           	opt stack 26
 12804                           
 12805                           ;Communications.c: 58: return DataBarGraphA;
 12806                           
 12807                           ;incstack = 0
 12808  002F28  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphB
 12809  002F2C  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphB+1
 12810  002F30  0012               	return		;funcret
 12811  002F32                     __end_of_GetDataBarGraphB:
 12812                           	opt stack 0
 12813                           tosu	equ	0xFFF
 12814                           tosh	equ	0xFFE
 12815                           tosl	equ	0xFFD
 12816                           pclath	equ	0xFFA
 12817                           tblptru	equ	0xFF8
 12818                           tblptrh	equ	0xFF7
 12819                           tblptrl	equ	0xFF6
 12820                           tablat	equ	0xFF5
 12821                           prodh	equ	0xFF4
 12822                           prodl	equ	0xFF3
 12823                           intcon	equ	0xFF2
 12824                           intcon2	equ	0xFF1
 12825                           indf0	equ	0xFEF
 12826                           postinc0	equ	0xFEE
 12827                           fsr0h	equ	0xFEA
 12828                           fsr0l	equ	0xFE9
 12829                           wreg	equ	0xFE8
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           postdec2	equ	0xFDD
 12833                           plusw2	equ	0xFDB
 12834                           fsr2h	equ	0xFDA
 12835                           fsr2l	equ	0xFD9
 12836                           status	equ	0xFD8
 12837                           
 12838 ;; *************** function _GetDataBarGraphA *****************
 12839 ;; Defined at:
 12840 ;;		line 53 in file "Communications.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;		None
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  2   26[COMRAM] unsigned int 
 12847 ;; Registers used:
 12848 ;;		None
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12854 ;;      Params:         2       0       0       0       0       0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0
 12857 ;;      Totals:         2       0       0       0       0       0       0
 12858 ;;Total ram usage:        2 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; Hardware stack levels required when called:    4
 12861 ;; This function calls:
 12862 ;;		Nothing
 12863 ;; This function is called by:
 12864 ;;		_main
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text68
 12869  002F32                     __ptext68:
 12870                           	opt stack 0
 12871  002F32                     _GetDataBarGraphA:
 12872                           	opt stack 26
 12873                           
 12874                           ;Communications.c: 54: return DataBarGraphA;
 12875                           
 12876                           ;incstack = 0
 12877  002F32  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphA
 12878  002F36  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphA+1
 12879  002F3A  0012               	return		;funcret
 12880  002F3C                     __end_of_GetDataBarGraphA:
 12881                           	opt stack 0
 12882                           tosu	equ	0xFFF
 12883                           tosh	equ	0xFFE
 12884                           tosl	equ	0xFFD
 12885                           pclath	equ	0xFFA
 12886                           tblptru	equ	0xFF8
 12887                           tblptrh	equ	0xFF7
 12888                           tblptrl	equ	0xFF6
 12889                           tablat	equ	0xFF5
 12890                           prodh	equ	0xFF4
 12891                           prodl	equ	0xFF3
 12892                           intcon	equ	0xFF2
 12893                           intcon2	equ	0xFF1
 12894                           indf0	equ	0xFEF
 12895                           postinc0	equ	0xFEE
 12896                           fsr0h	equ	0xFEA
 12897                           fsr0l	equ	0xFE9
 12898                           wreg	equ	0xFE8
 12899                           indf2	equ	0xFDF
 12900                           postinc2	equ	0xFDE
 12901                           postdec2	equ	0xFDD
 12902                           plusw2	equ	0xFDB
 12903                           fsr2h	equ	0xFDA
 12904                           fsr2l	equ	0xFD9
 12905                           status	equ	0xFD8
 12906                           
 12907 ;; *************** function _ClearTime *****************
 12908 ;; Defined at:
 12909 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 12910 ;; Parameters:    Size  Location     Type
 12911 ;;		None
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;		None
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1    wreg      void 
 12916 ;; Registers used:
 12917 ;;		wreg, status,2
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12923 ;;      Params:         0       0       0       0       0       0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0
 12926 ;;      Totals:         0       0       0       0       0       0       0
 12927 ;;Total ram usage:        0 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    4
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		_main
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           	psect	text69
 12938  002F4C                     __ptext69:
 12939                           	opt stack 0
 12940  002F4C                     _ClearTime:
 12941                           	opt stack 26
 12942                           
 12943                           ;tmr0.c: 103: time = 0;
 12944                           
 12945                           ;incstack = 0
 12946  002F4C  0E00               	movlw	0
 12947  002F4E  6E3F               	movwf	_time,c	;volatile
 12948  002F50  0012               	return		;funcret
 12949  002F52                     __end_of_ClearTime:
 12950                           	opt stack 0
 12951                           tosu	equ	0xFFF
 12952                           tosh	equ	0xFFE
 12953                           tosl	equ	0xFFD
 12954                           pclath	equ	0xFFA
 12955                           tblptru	equ	0xFF8
 12956                           tblptrh	equ	0xFF7
 12957                           tblptrl	equ	0xFF6
 12958                           tablat	equ	0xFF5
 12959                           prodh	equ	0xFF4
 12960                           prodl	equ	0xFF3
 12961                           intcon	equ	0xFF2
 12962                           intcon2	equ	0xFF1
 12963                           indf0	equ	0xFEF
 12964                           postinc0	equ	0xFEE
 12965                           fsr0h	equ	0xFEA
 12966                           fsr0l	equ	0xFE9
 12967                           wreg	equ	0xFE8
 12968                           indf2	equ	0xFDF
 12969                           postinc2	equ	0xFDE
 12970                           postdec2	equ	0xFDD
 12971                           plusw2	equ	0xFDB
 12972                           fsr2h	equ	0xFDA
 12973                           fsr2l	equ	0xFD9
 12974                           status	equ	0xFD8
 12975                           
 12976 ;; *************** function _INTERRUPT_InterruptManager *****************
 12977 ;; Defined at:
 12978 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12992 ;;      Params:         0       0       0       0       0       0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0
 12994 ;;      Temps:         14       0       0       0       0       0       0
 12995 ;;      Totals:        14       0       0       0       0       0       0
 12996 ;;Total ram usage:       14 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:    3
 12999 ;; This function calls:
 13000 ;;		_ADC_ISR
 13001 ;;		_EUSART1_Receive_ISR
 13002 ;;		_EUSART1_Transmit_ISR
 13003 ;;		_I2C1_BusCollisionISR
 13004 ;;		_I2C1_ISR
 13005 ;;		_TMR0_ISR
 13006 ;;		_TMR2_ISR
 13007 ;; This function is called by:
 13008 ;;		Interrupt level 2
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           	psect	intcode
 13013  000008                     __pintcode:
 13014                           	opt stack 0
 13015  000008                     _INTERRUPT_InterruptManager:
 13016                           	opt stack 21
 13017                           
 13018                           ;incstack = 0
 13019  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13020  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 13021  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13022  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13023  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13024  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13025  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13026  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13027  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13028  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13029  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13030  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13031  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13032  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13033  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13034                           
 13035                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13036  000042  BA9D               	btfsc	3997,5,c	;volatile
 13037  000044  AA9E               	btfss	3998,5,c	;volatile
 13038  000046  D003               	goto	i2l289
 13039                           
 13040                           ;interrupt_manager.c: 35: {
 13041                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 13042  000048  EC12  F017         	call	_EUSART1_Receive_ISR	;wreg free
 13043                           
 13044                           ;interrupt_manager.c: 37: }
 13045  00004C  D023               	goto	i2l303
 13046  00004E                     i2l289:
 13047                           
 13048                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13049  00004E  B89D               	btfsc	3997,4,c	;volatile
 13050  000050  A89E               	btfss	3998,4,c	;volatile
 13051  000052  D003               	goto	i2l291
 13052                           
 13053                           ;interrupt_manager.c: 39: {
 13054                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 13055  000054  EC24  F016         	call	_EUSART1_Transmit_ISR	;wreg free
 13056                           
 13057                           ;interrupt_manager.c: 41: }
 13058  000058  D01D               	goto	i2l303
 13059  00005A                     i2l291:
 13060                           
 13061                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13062  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 13063  00005C  A4F2               	btfss	intcon,2,c	;volatile
 13064  00005E  D003               	goto	i2l293
 13065                           
 13066                           ;interrupt_manager.c: 43: {
 13067                           ;interrupt_manager.c: 44: TMR0_ISR();
 13068  000060  ECEE  F015         	call	_TMR0_ISR	;wreg free
 13069                           
 13070                           ;interrupt_manager.c: 45: }
 13071  000064  D017               	goto	i2l303
 13072  000066                     i2l293:
 13073                           
 13074                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 13075  000066  B29D               	btfsc	3997,1,c	;volatile
 13076  000068  A29E               	btfss	3998,1,c	;volatile
 13077  00006A  D003               	goto	i2l295
 13078                           
 13079                           ;interrupt_manager.c: 47: {
 13080                           ;interrupt_manager.c: 48: TMR2_ISR();
 13081  00006C  ECA2  F017         	call	_TMR2_ISR	;wreg free
 13082                           
 13083                           ;interrupt_manager.c: 49: }
 13084  000070  D011               	goto	i2l303
 13085  000072                     i2l295:
 13086                           
 13087                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13088  000072  BC9D               	btfsc	3997,6,c	;volatile
 13089  000074  AC9E               	btfss	3998,6,c	;volatile
 13090  000076  D003               	goto	i2l297
 13091                           
 13092                           ;interrupt_manager.c: 51: {
 13093                           ;interrupt_manager.c: 52: ADC_ISR();
 13094  000078  ECAD  F017         	call	_ADC_ISR	;wreg free
 13095                           
 13096                           ;interrupt_manager.c: 53: }
 13097  00007C  D00B               	goto	i2l303
 13098  00007E                     i2l297:
 13099                           
 13100                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13101  00007E  B69D               	btfsc	3997,3,c	;volatile
 13102  000080  A69E               	btfss	3998,3,c	;volatile
 13103  000082  D003               	goto	i2l299
 13104                           
 13105                           ;interrupt_manager.c: 55: {
 13106                           ;interrupt_manager.c: 56: I2C1_ISR();
 13107  000084  EC0D  F004         	call	_I2C1_ISR	;wreg free
 13108                           
 13109                           ;interrupt_manager.c: 57: }
 13110  000088  D005               	goto	i2l303
 13111  00008A                     i2l299:
 13112                           
 13113                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 13114  00008A  B6A0               	btfsc	4000,3,c	;volatile
 13115  00008C  A6A1               	btfss	4001,3,c	;volatile
 13116  00008E  D002               	goto	i2l303
 13117                           
 13118                           ;interrupt_manager.c: 59: {
 13119                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 13120  000090  ECB0  F017         	call	_I2C1_BusCollisionISR	;wreg free
 13121  000094                     i2l303:
 13122  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 13123  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 13124  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 13125  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 13126  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13127  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13128  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13129  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13130  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13131  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13132  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13133  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13134  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13135  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13136  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13137  0000CE  0011               	retfie		f
 13138  0000D0                     __end_of_INTERRUPT_InterruptManager:
 13139                           	opt stack 0
 13140                           tosu	equ	0xFFF
 13141                           tosh	equ	0xFFE
 13142                           tosl	equ	0xFFD
 13143                           pclatu	equ	0xFFB
 13144                           pclath	equ	0xFFA
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           intcon2	equ	0xFF1
 13153                           indf0	equ	0xFEF
 13154                           postinc0	equ	0xFEE
 13155                           fsr0h	equ	0xFEA
 13156                           fsr0l	equ	0xFE9
 13157                           wreg	equ	0xFE8
 13158                           fsr1h	equ	0xFE2
 13159                           fsr1l	equ	0xFE1
 13160                           indf2	equ	0xFDF
 13161                           postinc2	equ	0xFDE
 13162                           postdec2	equ	0xFDD
 13163                           plusw2	equ	0xFDB
 13164                           fsr2h	equ	0xFDA
 13165                           fsr2l	equ	0xFD9
 13166                           status	equ	0xFD8
 13167                           
 13168 ;; *************** function _TMR2_ISR *****************
 13169 ;; Defined at:
 13170 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 13171 ;; Parameters:    Size  Location     Type
 13172 ;;		None
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;		None
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      void 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13184 ;;      Params:         0       0       0       0       0       0       0
 13185 ;;      Locals:         0       0       0       0       0       0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0
 13187 ;;      Totals:         0       0       0       0       0       0       0
 13188 ;;Total ram usage:        0 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; Hardware stack levels required when called:    2
 13191 ;; This function calls:
 13192 ;;		_TMR2_CallBack
 13193 ;; This function is called by:
 13194 ;;		_INTERRUPT_InterruptManager
 13195 ;; This function uses a non-reentrant model
 13196 ;;
 13197                           
 13198                           	psect	text71
 13199  002F44                     __ptext71:
 13200                           	opt stack 0
 13201  002F44                     _TMR2_ISR:
 13202                           	opt stack 21
 13203                           
 13204                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 13205                           
 13206                           ;incstack = 0
 13207  002F44  929E               	bcf	3998,1,c	;volatile
 13208                           
 13209                           ;tmr2.c: 128: TMR2_CallBack();
 13210  002F46  ECD2  F006         	call	_TMR2_CallBack	;wreg free
 13211  002F4A  0012               	return		;funcret
 13212  002F4C                     __end_of_TMR2_ISR:
 13213                           	opt stack 0
 13214                           tosu	equ	0xFFF
 13215                           tosh	equ	0xFFE
 13216                           tosl	equ	0xFFD
 13217                           pclatu	equ	0xFFB
 13218                           pclath	equ	0xFFA
 13219                           tblptru	equ	0xFF8
 13220                           tblptrh	equ	0xFF7
 13221                           tblptrl	equ	0xFF6
 13222                           tablat	equ	0xFF5
 13223                           prodh	equ	0xFF4
 13224                           prodl	equ	0xFF3
 13225                           intcon	equ	0xFF2
 13226                           intcon2	equ	0xFF1
 13227                           indf0	equ	0xFEF
 13228                           postinc0	equ	0xFEE
 13229                           fsr0h	equ	0xFEA
 13230                           fsr0l	equ	0xFE9
 13231                           wreg	equ	0xFE8
 13232                           fsr1h	equ	0xFE2
 13233                           fsr1l	equ	0xFE1
 13234                           indf2	equ	0xFDF
 13235                           postinc2	equ	0xFDE
 13236                           postdec2	equ	0xFDD
 13237                           plusw2	equ	0xFDB
 13238                           fsr2h	equ	0xFDA
 13239                           fsr2l	equ	0xFD9
 13240                           status	equ	0xFD8
 13241                           
 13242 ;; *************** function _TMR2_CallBack *****************
 13243 ;; Defined at:
 13244 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;  i               2    2[COMRAM] int 
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      void 
 13251 ;; Registers used:
 13252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13258 ;;      Params:         0       0       0       0       0       0       0
 13259 ;;      Locals:         2       0       0       0       0       0       0
 13260 ;;      Temps:          2       0       0       0       0       0       0
 13261 ;;      Totals:         4       0       0       0       0       0       0
 13262 ;;Total ram usage:        4 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    1
 13265 ;; This function calls:
 13266 ;;		Absolute function
 13267 ;;		_TMR2_DefaultInterruptHandler
 13268 ;; This function is called by:
 13269 ;;		_TMR2_ISR
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text72
 13274  000DA4                     __ptext72:
 13275                           	opt stack 0
 13276  000DA4                     _TMR2_CallBack:
 13277                           	opt stack 21
 13278                           
 13279                           ;tmr2.c: 133: int i = 0;
 13280                           
 13281                           ;incstack = 0
 13282  000DA4  0E00               	movlw	0
 13283  000DA6  6E04               	movwf	TMR2_CallBack@i+1,c
 13284  000DA8  0E00               	movlw	0
 13285  000DAA  6E03               	movwf	TMR2_CallBack@i,c
 13286                           
 13287                           ;tmr2.c: 134: while (i <= 5) {
 13288  000DAC  D0C3               	goto	i2l468
 13289  000DAE                     i2l4734:
 13290                           
 13291                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 13292  000DAE  90D8               	bcf	status,0,c
 13293  000DB0  3403               	rlcf	TMR2_CallBack@i,w,c
 13294  000DB2  6ED9               	movwf	fsr2l,c
 13295  000DB4  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13296  000DB6  6EDA               	movwf	fsr2h,c
 13297  000DB8  0E98               	movlw	low _LEDNUM_ENAB
 13298  000DBA  26D9               	addwf	fsr2l,f,c
 13299  000DBC  0E00               	movlw	high _LEDNUM_ENAB
 13300  000DBE  22DA               	addwfc	fsr2h,f,c
 13301  000DC0  04DE               	decf	postinc2,w,c
 13302  000DC2  10DE               	iorwf	postinc2,w,c
 13303  000DC4  B4D8               	btfsc	status,2,c
 13304  000DC6  D098               	goto	i2l4752
 13305  000DC8  D0AF               	goto	i2l4754
 13306  000DCA                     i2l475:
 13307  000DCA  B28B               	btfsc	3979,1,c	;volatile
 13308  000DCC  D002               	goto	i2u388_40
 13309  000DCE  828B               	bsf	3979,1,c	;volatile
 13310  000DD0  D03B               	goto	i2l4742
 13311  000DD2                     i2u388_40:
 13312  000DD2  928B               	bcf	3979,1,c	;volatile
 13313                           
 13314                           ;tmr2.c: 142: break;
 13315  000DD4  D039               	goto	i2l4742
 13316  000DD6                     i2l479:
 13317  000DD6  BC89               	btfsc	3977,6,c	;volatile
 13318  000DD8  D002               	goto	i2u390_40
 13319  000DDA  8C89               	bsf	3977,6,c	;volatile
 13320  000DDC  D035               	goto	i2l4742
 13321  000DDE                     i2u390_40:
 13322  000DDE  9C89               	bcf	3977,6,c	;volatile
 13323                           
 13324                           ;tmr2.c: 145: break;
 13325  000DE0  D033               	goto	i2l4742
 13326  000DE2                     i2l482:
 13327  000DE2  BE89               	btfsc	3977,7,c	;volatile
 13328  000DE4  D002               	goto	i2u392_40
 13329  000DE6  8E89               	bsf	3977,7,c	;volatile
 13330  000DE8  D02F               	goto	i2l4742
 13331  000DEA                     i2u392_40:
 13332  000DEA  9E89               	bcf	3977,7,c	;volatile
 13333                           
 13334                           ;tmr2.c: 148: break;
 13335  000DEC  D02D               	goto	i2l4742
 13336  000DEE                     i2l485:
 13337  000DEE  B48D               	btfsc	3981,2,c	;volatile
 13338  000DF0  D002               	goto	i2u394_40
 13339  000DF2  848D               	bsf	3981,2,c	;volatile
 13340  000DF4  D029               	goto	i2l4742
 13341  000DF6                     i2u394_40:
 13342  000DF6  948D               	bcf	3981,2,c	;volatile
 13343                           
 13344                           ;tmr2.c: 151: break;
 13345  000DF8  D027               	goto	i2l4742
 13346  000DFA                     i2l488:
 13347  000DFA  B28D               	btfsc	3981,1,c	;volatile
 13348  000DFC  D002               	goto	i2u396_40
 13349  000DFE  828D               	bsf	3981,1,c	;volatile
 13350  000E00  D023               	goto	i2l4742
 13351  000E02                     i2u396_40:
 13352  000E02  928D               	bcf	3981,1,c	;volatile
 13353                           
 13354                           ;tmr2.c: 154: break;
 13355  000E04  D021               	goto	i2l4742
 13356  000E06                     i2l491:
 13357  000E06  B08D               	btfsc	3981,0,c	;volatile
 13358  000E08  D002               	goto	i2u398_40
 13359  000E0A  808D               	bsf	3981,0,c	;volatile
 13360  000E0C  D01D               	goto	i2l4742
 13361  000E0E                     i2u398_40:
 13362  000E0E  908D               	bcf	3981,0,c	;volatile
 13363                           
 13364                           ;tmr2.c: 158: }
 13365                           
 13366                           ;tmr2.c: 157: break;
 13367  000E10  D01B               	goto	i2l4742
 13368  000E12                     i2l4740:
 13369  000E12  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13370  000E16  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13371                           
 13372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13373                           ; Switch size 1, requested type "space"
 13374                           ; Number of cases is 1, Range of values is 0 to 0
 13375                           ; switch strategies available:
 13376                           ; Name         Instructions Cycles
 13377                           ; simple_byte            4     3 (average)
 13378                           ;	Chosen strategy is simple_byte
 13379  000E1A  5002               	movf	??_TMR2_CallBack+1,w,c
 13380  000E1C  0A00               	xorlw	0	; case 0
 13381  000E1E  A4D8               	btfss	status,2,c
 13382  000E20  D013               	goto	i2l4742
 13383                           
 13384                           ; Switch size 1, requested type "space"
 13385                           ; Number of cases is 6, Range of values is 0 to 5
 13386                           ; switch strategies available:
 13387                           ; Name         Instructions Cycles
 13388                           ; simple_byte           19    10 (average)
 13389                           ;	Chosen strategy is simple_byte
 13390  000E22  5001               	movf	??_TMR2_CallBack,w,c
 13391  000E24  0A00               	xorlw	0	; case 0
 13392  000E26  B4D8               	btfsc	status,2,c
 13393  000E28  D7D0               	goto	i2l475
 13394  000E2A  0A01               	xorlw	1	; case 1
 13395  000E2C  B4D8               	btfsc	status,2,c
 13396  000E2E  D7D3               	goto	i2l479
 13397  000E30  0A03               	xorlw	3	; case 2
 13398  000E32  B4D8               	btfsc	status,2,c
 13399  000E34  D7D6               	goto	i2l482
 13400  000E36  0A01               	xorlw	1	; case 3
 13401  000E38  B4D8               	btfsc	status,2,c
 13402  000E3A  D7D9               	goto	i2l485
 13403  000E3C  0A07               	xorlw	7	; case 4
 13404  000E3E  B4D8               	btfsc	status,2,c
 13405  000E40  D7DC               	goto	i2l488
 13406  000E42  0A01               	xorlw	1	; case 5
 13407  000E44  B4D8               	btfsc	status,2,c
 13408  000E46  D7DF               	goto	i2l491
 13409  000E48                     i2l4742:
 13410                           
 13411                           ;tmr2.c: 159: LEDState[i] = 1;
 13412  000E48  90D8               	bcf	status,0,c
 13413  000E4A  3403               	rlcf	TMR2_CallBack@i,w,c
 13414  000E4C  6ED9               	movwf	fsr2l,c
 13415  000E4E  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13416  000E50  6EDA               	movwf	fsr2h,c
 13417  000E52  0EA4               	movlw	low _LEDState
 13418  000E54  26D9               	addwf	fsr2l,f,c
 13419  000E56  0E00               	movlw	high _LEDState
 13420  000E58  22DA               	addwfc	fsr2h,f,c
 13421  000E5A  0E01               	movlw	1
 13422  000E5C  D049               	goto	L4
 13423  000E5E                     i2l497:
 13424  000E5E  B28B               	btfsc	3979,1,c	;volatile
 13425  000E60  D002               	goto	i2u400_40
 13426  000E62  828B               	bsf	3979,1,c	;volatile
 13427  000E64  D03B               	goto	i2l4748
 13428  000E66                     i2u400_40:
 13429  000E66  928B               	bcf	3979,1,c	;volatile
 13430                           
 13431                           ;tmr2.c: 165: break;
 13432  000E68  D039               	goto	i2l4748
 13433  000E6A                     i2l501:
 13434  000E6A  BC89               	btfsc	3977,6,c	;volatile
 13435  000E6C  D002               	goto	i2u402_40
 13436  000E6E  8C89               	bsf	3977,6,c	;volatile
 13437  000E70  D035               	goto	i2l4748
 13438  000E72                     i2u402_40:
 13439  000E72  9C89               	bcf	3977,6,c	;volatile
 13440                           
 13441                           ;tmr2.c: 168: break;
 13442  000E74  D033               	goto	i2l4748
 13443  000E76                     i2l504:
 13444  000E76  BE89               	btfsc	3977,7,c	;volatile
 13445  000E78  D002               	goto	i2u404_40
 13446  000E7A  8E89               	bsf	3977,7,c	;volatile
 13447  000E7C  D02F               	goto	i2l4748
 13448  000E7E                     i2u404_40:
 13449  000E7E  9E89               	bcf	3977,7,c	;volatile
 13450                           
 13451                           ;tmr2.c: 171: break;
 13452  000E80  D02D               	goto	i2l4748
 13453  000E82                     i2l507:
 13454  000E82  B48D               	btfsc	3981,2,c	;volatile
 13455  000E84  D002               	goto	i2u406_40
 13456  000E86  848D               	bsf	3981,2,c	;volatile
 13457  000E88  D029               	goto	i2l4748
 13458  000E8A                     i2u406_40:
 13459  000E8A  948D               	bcf	3981,2,c	;volatile
 13460                           
 13461                           ;tmr2.c: 174: break;
 13462  000E8C  D027               	goto	i2l4748
 13463  000E8E                     i2l510:
 13464  000E8E  B28D               	btfsc	3981,1,c	;volatile
 13465  000E90  D002               	goto	i2u408_40
 13466  000E92  828D               	bsf	3981,1,c	;volatile
 13467  000E94  D023               	goto	i2l4748
 13468  000E96                     i2u408_40:
 13469  000E96  928D               	bcf	3981,1,c	;volatile
 13470                           
 13471                           ;tmr2.c: 177: break;
 13472  000E98  D021               	goto	i2l4748
 13473  000E9A                     i2l513:
 13474  000E9A  B08D               	btfsc	3981,0,c	;volatile
 13475  000E9C  D002               	goto	i2u410_40
 13476  000E9E  808D               	bsf	3981,0,c	;volatile
 13477  000EA0  D01D               	goto	i2l4748
 13478  000EA2                     i2u410_40:
 13479  000EA2  908D               	bcf	3981,0,c	;volatile
 13480                           
 13481                           ;tmr2.c: 181: }
 13482                           
 13483                           ;tmr2.c: 180: break;
 13484  000EA4  D01B               	goto	i2l4748
 13485  000EA6                     i2l4746:
 13486  000EA6  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13487  000EAA  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13488                           
 13489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13490                           ; Switch size 1, requested type "space"
 13491                           ; Number of cases is 1, Range of values is 0 to 0
 13492                           ; switch strategies available:
 13493                           ; Name         Instructions Cycles
 13494                           ; simple_byte            4     3 (average)
 13495                           ;	Chosen strategy is simple_byte
 13496  000EAE  5002               	movf	??_TMR2_CallBack+1,w,c
 13497  000EB0  0A00               	xorlw	0	; case 0
 13498  000EB2  A4D8               	btfss	status,2,c
 13499  000EB4  D013               	goto	i2l4748
 13500                           
 13501                           ; Switch size 1, requested type "space"
 13502                           ; Number of cases is 6, Range of values is 0 to 5
 13503                           ; switch strategies available:
 13504                           ; Name         Instructions Cycles
 13505                           ; simple_byte           19    10 (average)
 13506                           ;	Chosen strategy is simple_byte
 13507  000EB6  5001               	movf	??_TMR2_CallBack,w,c
 13508  000EB8  0A00               	xorlw	0	; case 0
 13509  000EBA  B4D8               	btfsc	status,2,c
 13510  000EBC  D7D0               	goto	i2l497
 13511  000EBE  0A01               	xorlw	1	; case 1
 13512  000EC0  B4D8               	btfsc	status,2,c
 13513  000EC2  D7D3               	goto	i2l501
 13514  000EC4  0A03               	xorlw	3	; case 2
 13515  000EC6  B4D8               	btfsc	status,2,c
 13516  000EC8  D7D6               	goto	i2l504
 13517  000ECA  0A01               	xorlw	1	; case 3
 13518  000ECC  B4D8               	btfsc	status,2,c
 13519  000ECE  D7D9               	goto	i2l507
 13520  000ED0  0A07               	xorlw	7	; case 4
 13521  000ED2  B4D8               	btfsc	status,2,c
 13522  000ED4  D7DC               	goto	i2l510
 13523  000ED6  0A01               	xorlw	1	; case 5
 13524  000ED8  B4D8               	btfsc	status,2,c
 13525  000EDA  D7DF               	goto	i2l513
 13526  000EDC                     i2l4748:
 13527                           
 13528                           ;tmr2.c: 182: LEDState[i] = 0;
 13529  000EDC  90D8               	bcf	status,0,c
 13530  000EDE  3403               	rlcf	TMR2_CallBack@i,w,c
 13531  000EE0  6ED9               	movwf	fsr2l,c
 13532  000EE2  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13533  000EE4  6EDA               	movwf	fsr2h,c
 13534  000EE6  0EA4               	movlw	low _LEDState
 13535  000EE8  26D9               	addwf	fsr2l,f,c
 13536  000EEA  0E00               	movlw	high _LEDState
 13537  000EEC  22DA               	addwfc	fsr2h,f,c
 13538  000EEE  0E00               	movlw	0
 13539  000EF0                     L4:
 13540  000EF0  6EDE               	movwf	postinc2,c
 13541  000EF2  0E00               	movlw	0
 13542  000EF4  6EDD               	movwf	postdec2,c
 13543                           
 13544                           ;tmr2.c: 184: }
 13545                           
 13546                           ;tmr2.c: 183: break;
 13547  000EF6  D018               	goto	i2l4754
 13548  000EF8                     i2l4752:
 13549  000EF8  90D8               	bcf	status,0,c
 13550  000EFA  3403               	rlcf	TMR2_CallBack@i,w,c
 13551  000EFC  6ED9               	movwf	fsr2l,c
 13552  000EFE  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13553  000F00  6EDA               	movwf	fsr2h,c
 13554  000F02  0EA4               	movlw	low _LEDState
 13555  000F04  26D9               	addwf	fsr2l,f,c
 13556  000F06  0E00               	movlw	high _LEDState
 13557  000F08  22DA               	addwfc	fsr2h,f,c
 13558  000F0A  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 13559  000F0E  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 13560                           
 13561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13562                           ; Switch size 1, requested type "space"
 13563                           ; Number of cases is 1, Range of values is 0 to 0
 13564                           ; switch strategies available:
 13565                           ; Name         Instructions Cycles
 13566                           ; simple_byte            4     3 (average)
 13567                           ;	Chosen strategy is simple_byte
 13568  000F12  5002               	movf	??_TMR2_CallBack+1,w,c
 13569  000F14  0A00               	xorlw	0	; case 0
 13570  000F16  A4D8               	btfss	status,2,c
 13571  000F18  D007               	goto	i2l4754
 13572                           
 13573                           ; Switch size 1, requested type "space"
 13574                           ; Number of cases is 2, Range of values is 0 to 1
 13575                           ; switch strategies available:
 13576                           ; Name         Instructions Cycles
 13577                           ; simple_byte            7     4 (average)
 13578                           ;	Chosen strategy is simple_byte
 13579  000F1A  5001               	movf	??_TMR2_CallBack,w,c
 13580  000F1C  0A00               	xorlw	0	; case 0
 13581  000F1E  B4D8               	btfsc	status,2,c
 13582  000F20  D778               	goto	i2l4740
 13583  000F22  0A01               	xorlw	1	; case 1
 13584  000F24  B4D8               	btfsc	status,2,c
 13585  000F26  D7BF               	goto	i2l4746
 13586  000F28                     i2l4754:
 13587                           
 13588                           ;tmr2.c: 185: }
 13589                           ;tmr2.c: 186: i = i + 1;
 13590  000F28  0E01               	movlw	1
 13591  000F2A  2403               	addwf	TMR2_CallBack@i,w,c
 13592  000F2C  6E03               	movwf	TMR2_CallBack@i,c
 13593  000F2E  0E00               	movlw	0
 13594  000F30  2004               	addwfc	TMR2_CallBack@i+1,w,c
 13595  000F32  6E04               	movwf	TMR2_CallBack@i+1,c
 13596  000F34                     i2l468:
 13597  000F34  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 13598  000F36  D73B               	goto	i2l4734
 13599  000F38  5004               	movf	TMR2_CallBack@i+1,w,c
 13600  000F3A  E104               	bnz	i2l4756
 13601  000F3C  0E06               	movlw	6
 13602  000F3E  5C03               	subwf	TMR2_CallBack@i,w,c
 13603  000F40  A0D8               	btfss	status,0,c
 13604  000F42  D735               	goto	i2l4734
 13605  000F44                     i2l4756:
 13606                           
 13607                           ;tmr2.c: 187: }
 13608                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 13609  000F44  0100               	movlb	0	; () banked
 13610  000F46  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13611  000F48  0100               	movlb	0	; () banked
 13612  000F4A  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13613  000F4C  B4D8               	btfsc	status,2,c
 13614  000F4E  0012               	return	
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;tmr2.c: 192: {
 13618                           ;tmr2.c: 193: TMR2_InterruptHandler();
 13619  000F50  D801               	call	i2u414_48
 13620  000F52  0012               	return	
 13621  000F54                     i2u414_48:
 13622  000F54  0005               	push	
 13623  000F56  0100               	movlb	0	; () banked
 13624  000F58  6EFA               	movwf	pclath,c
 13625  000F5A  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13626  000F5C  6EFD               	movwf	tosl,c
 13627  000F5E  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13628  000F60  6EFE               	movwf	tosh,c
 13629  000F62  50F8               	movf	tblptru,w,c
 13630  000F64  6EFF               	movwf	tosu,c
 13631  000F66  50FA               	movf	pclath,w,c
 13632  000F68  0012               	return		;indir
 13633  000F6A                     __end_of_TMR2_CallBack:
 13634                           	opt stack 0
 13635                           tosu	equ	0xFFF
 13636                           tosh	equ	0xFFE
 13637                           tosl	equ	0xFFD
 13638                           pclatu	equ	0xFFB
 13639                           pclath	equ	0xFFA
 13640                           tblptru	equ	0xFF8
 13641                           tblptrh	equ	0xFF7
 13642                           tblptrl	equ	0xFF6
 13643                           tablat	equ	0xFF5
 13644                           prodh	equ	0xFF4
 13645                           prodl	equ	0xFF3
 13646                           intcon	equ	0xFF2
 13647                           intcon2	equ	0xFF1
 13648                           indf0	equ	0xFEF
 13649                           postinc0	equ	0xFEE
 13650                           fsr0h	equ	0xFEA
 13651                           fsr0l	equ	0xFE9
 13652                           wreg	equ	0xFE8
 13653                           fsr1h	equ	0xFE2
 13654                           fsr1l	equ	0xFE1
 13655                           indf2	equ	0xFDF
 13656                           postinc2	equ	0xFDE
 13657                           postdec2	equ	0xFDD
 13658                           plusw2	equ	0xFDB
 13659                           fsr2h	equ	0xFDA
 13660                           fsr2l	equ	0xFD9
 13661                           status	equ	0xFD8
 13662                           
 13663 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13664 ;; Defined at:
 13665 ;;		line 295 in file "mcc_generated_files/tmr2.c"
 13666 ;; Parameters:    Size  Location     Type
 13667 ;;		None
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;		None
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  1    wreg      void 
 13672 ;; Registers used:
 13673 ;;		None
 13674 ;; Tracked objects:
 13675 ;;		On entry : 0/0
 13676 ;;		On exit  : 0/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13679 ;;      Params:         0       0       0       0       0       0       0
 13680 ;;      Locals:         0       0       0       0       0       0       0
 13681 ;;      Temps:          0       0       0       0       0       0       0
 13682 ;;      Totals:         0       0       0       0       0       0       0
 13683 ;;Total ram usage:        0 bytes
 13684 ;; Hardware stack levels used:    1
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_TMR2_Initialize
 13689 ;;		_TMR2_CallBack
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693                           	psect	text73
 13694  002F5E                     __ptext73:
 13695                           	opt stack 0
 13696  002F5E                     _TMR2_DefaultInterruptHandler:
 13697                           	opt stack 21
 13698                           
 13699                           ;incstack = 0
 13700  002F5E  0012               	return		;funcret
 13701  002F60                     __end_of_TMR2_DefaultInterruptHandler:
 13702                           	opt stack 0
 13703                           tosu	equ	0xFFF
 13704                           tosh	equ	0xFFE
 13705                           tosl	equ	0xFFD
 13706                           pclatu	equ	0xFFB
 13707                           pclath	equ	0xFFA
 13708                           tblptru	equ	0xFF8
 13709                           tblptrh	equ	0xFF7
 13710                           tblptrl	equ	0xFF6
 13711                           tablat	equ	0xFF5
 13712                           prodh	equ	0xFF4
 13713                           prodl	equ	0xFF3
 13714                           intcon	equ	0xFF2
 13715                           intcon2	equ	0xFF1
 13716                           indf0	equ	0xFEF
 13717                           postinc0	equ	0xFEE
 13718                           fsr0h	equ	0xFEA
 13719                           fsr0l	equ	0xFE9
 13720                           wreg	equ	0xFE8
 13721                           fsr1h	equ	0xFE2
 13722                           fsr1l	equ	0xFE1
 13723                           indf2	equ	0xFDF
 13724                           postinc2	equ	0xFDE
 13725                           postdec2	equ	0xFDD
 13726                           plusw2	equ	0xFDB
 13727                           fsr2h	equ	0xFDA
 13728                           fsr2l	equ	0xFD9
 13729                           status	equ	0xFD8
 13730                           
 13731 ;; *************** function _TMR0_ISR *****************
 13732 ;; Defined at:
 13733 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;		None
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  x               2    4[COMRAM] int 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      void 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13747 ;;      Params:         0       0       0       0       0       0       0
 13748 ;;      Locals:         2       0       0       0       0       0       0
 13749 ;;      Temps:          0       0       0       0       0       0       0
 13750 ;;      Totals:         2       0       0       0       0       0       0
 13751 ;;Total ram usage:        2 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    1
 13754 ;; This function calls:
 13755 ;;		_ReadButtonState
 13756 ;; This function is called by:
 13757 ;;		_INTERRUPT_InterruptManager
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           	psect	text74
 13762  002BDC                     __ptext74:
 13763                           	opt stack 0
 13764  002BDC                     _TMR0_ISR:
 13765                           	opt stack 22
 13766                           
 13767                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 13768                           
 13769                           ;incstack = 0
 13770  002BDC  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 13771  002BDE  6ED7               	movwf	4055,c	;volatile
 13772                           
 13773                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 13774  002BE0  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 13775                           
 13776                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 13777  002BE4  0E00               	movlw	0
 13778  002BE6  6E06               	movwf	TMR0_ISR@x+1,c
 13779  002BE8  0E00               	movlw	0
 13780  002BEA  6E05               	movwf	TMR0_ISR@x,c
 13781  002BEC                     i2l5236:
 13782  002BEC  BE06               	btfsc	TMR0_ISR@x+1,7,c
 13783  002BEE  D006               	goto	i2l5240
 13784  002BF0  5006               	movf	TMR0_ISR@x+1,w,c
 13785  002BF2  E10D               	bnz	i2l5246
 13786  002BF4  0E08               	movlw	8
 13787  002BF6  5C05               	subwf	TMR0_ISR@x,w,c
 13788  002BF8  B0D8               	btfsc	status,0,c
 13789  002BFA  D009               	goto	i2l5246
 13790  002BFC                     i2l5240:
 13791                           
 13792                           ;tmr0.c: 89: ReadButtonState(x);
 13793  002BFC  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 13794  002C00  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 13795  002C04  EC15  F00C         	call	_ReadButtonState	;wreg free
 13796  002C08  4A05               	infsnz	TMR0_ISR@x,f,c
 13797  002C0A  2A06               	incf	TMR0_ISR@x+1,f,c
 13798  002C0C  D7EF               	goto	i2l5236
 13799  002C0E                     i2l5246:
 13800                           
 13801                           ;tmr0.c: 90: }
 13802                           ;tmr0.c: 91: time++;
 13803  002C0E  2A3F               	incf	_time,f,c	;volatile
 13804                           
 13805                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 13806  002C10  94F2               	bcf	intcon,2,c	;volatile
 13807  002C12  0012               	return		;funcret
 13808  002C14                     __end_of_TMR0_ISR:
 13809                           	opt stack 0
 13810                           tosu	equ	0xFFF
 13811                           tosh	equ	0xFFE
 13812                           tosl	equ	0xFFD
 13813                           pclatu	equ	0xFFB
 13814                           pclath	equ	0xFFA
 13815                           tblptru	equ	0xFF8
 13816                           tblptrh	equ	0xFF7
 13817                           tblptrl	equ	0xFF6
 13818                           tablat	equ	0xFF5
 13819                           prodh	equ	0xFF4
 13820                           prodl	equ	0xFF3
 13821                           intcon	equ	0xFF2
 13822                           intcon2	equ	0xFF1
 13823                           indf0	equ	0xFEF
 13824                           postinc0	equ	0xFEE
 13825                           fsr0h	equ	0xFEA
 13826                           fsr0l	equ	0xFE9
 13827                           wreg	equ	0xFE8
 13828                           fsr1h	equ	0xFE2
 13829                           fsr1l	equ	0xFE1
 13830                           indf2	equ	0xFDF
 13831                           postinc2	equ	0xFDE
 13832                           postdec2	equ	0xFDD
 13833                           plusw2	equ	0xFDB
 13834                           fsr2h	equ	0xFDA
 13835                           fsr2l	equ	0xFD9
 13836                           status	equ	0xFD8
 13837                           
 13838 ;; *************** function _ReadButtonState *****************
 13839 ;; Defined at:
 13840 ;;		line 154 in file "IO.c"
 13841 ;; Parameters:    Size  Location     Type
 13842 ;;  btnnum          2    0[COMRAM] int 
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;		None
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  1    wreg      void 
 13847 ;; Registers used:
 13848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13854 ;;      Params:         2       0       0       0       0       0       0
 13855 ;;      Locals:         0       0       0       0       0       0       0
 13856 ;;      Temps:          2       0       0       0       0       0       0
 13857 ;;      Totals:         4       0       0       0       0       0       0
 13858 ;;Total ram usage:        4 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; This function calls:
 13861 ;;		Nothing
 13862 ;; This function is called by:
 13863 ;;		_TMR0_ISR
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           	psect	text75
 13868  00182A                     __ptext75:
 13869                           	opt stack 0
 13870  00182A                     _ReadButtonState:
 13871                           	opt stack 22
 13872                           
 13873                           ;IO.c: 155: switch (btnnum) {
 13874                           
 13875                           ;incstack = 0
 13876  00182A  D068               	goto	i2l4726
 13877  00182C                     i2l4708:
 13878                           
 13879                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 13880  00182C  0EB0               	movlw	low _butnarray
 13881  00182E  2401               	addwf	ReadButtonState@btnnum,w,c
 13882  001830  6ED9               	movwf	fsr2l,c
 13883  001832  0E00               	movlw	high _butnarray
 13884  001834  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13885  001836  6EDA               	movwf	fsr2h,c
 13886  001838  AA83               	btfss	3971,5,c	;volatile
 13887  00183A  D002               	goto	i2u379_40
 13888  00183C  0E01               	movlw	1
 13889  00183E  D001               	goto	i2u379_46
 13890  001840                     i2u379_40:
 13891  001840  0E00               	movlw	0
 13892  001842                     i2u379_46:
 13893  001842  6EDF               	movwf	indf2,c
 13894                           
 13895                           ;IO.c: 158: break;
 13896  001844  0012               	return	
 13897  001846                     i2l4710:
 13898                           
 13899                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 13900  001846  0EB0               	movlw	low _butnarray
 13901  001848  2401               	addwf	ReadButtonState@btnnum,w,c
 13902  00184A  6ED9               	movwf	fsr2l,c
 13903  00184C  0E00               	movlw	high _butnarray
 13904  00184E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13905  001850  6EDA               	movwf	fsr2h,c
 13906  001852  A081               	btfss	3969,0,c	;volatile
 13907  001854  D002               	goto	i2u380_40
 13908  001856  0E01               	movlw	1
 13909  001858  D001               	goto	i2u380_46
 13910  00185A                     i2u380_40:
 13911  00185A  0E00               	movlw	0
 13912  00185C                     i2u380_46:
 13913  00185C  6EDF               	movwf	indf2,c
 13914                           
 13915                           ;IO.c: 161: break;
 13916  00185E  0012               	return	
 13917  001860                     i2l4712:
 13918                           
 13919                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 13920  001860  0EB0               	movlw	low _butnarray
 13921  001862  2401               	addwf	ReadButtonState@btnnum,w,c
 13922  001864  6ED9               	movwf	fsr2l,c
 13923  001866  0E00               	movlw	high _butnarray
 13924  001868  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13925  00186A  6EDA               	movwf	fsr2h,c
 13926  00186C  A281               	btfss	3969,1,c	;volatile
 13927  00186E  D002               	goto	i2u381_40
 13928  001870  0E01               	movlw	1
 13929  001872  D001               	goto	i2u381_46
 13930  001874                     i2u381_40:
 13931  001874  0E00               	movlw	0
 13932  001876                     i2u381_46:
 13933  001876  6EDF               	movwf	indf2,c
 13934                           
 13935                           ;IO.c: 164: break;
 13936  001878  0012               	return	
 13937  00187A                     i2l4714:
 13938                           
 13939                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 13940  00187A  0EB0               	movlw	low _butnarray
 13941  00187C  2401               	addwf	ReadButtonState@btnnum,w,c
 13942  00187E  6ED9               	movwf	fsr2l,c
 13943  001880  0E00               	movlw	high _butnarray
 13944  001882  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13945  001884  6EDA               	movwf	fsr2h,c
 13946  001886  A481               	btfss	3969,2,c	;volatile
 13947  001888  D002               	goto	i2u382_40
 13948  00188A  0E01               	movlw	1
 13949  00188C  D001               	goto	i2u382_46
 13950  00188E                     i2u382_40:
 13951  00188E  0E00               	movlw	0
 13952  001890                     i2u382_46:
 13953  001890  6EDF               	movwf	indf2,c
 13954                           
 13955                           ;IO.c: 167: break;
 13956  001892  0012               	return	
 13957  001894                     i2l4716:
 13958                           
 13959                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 13960  001894  0EB0               	movlw	low _butnarray
 13961  001896  2401               	addwf	ReadButtonState@btnnum,w,c
 13962  001898  6ED9               	movwf	fsr2l,c
 13963  00189A  0E00               	movlw	high _butnarray
 13964  00189C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13965  00189E  6EDA               	movwf	fsr2h,c
 13966  0018A0  A881               	btfss	3969,4,c	;volatile
 13967  0018A2  D002               	goto	i2u383_40
 13968  0018A4  0E01               	movlw	1
 13969  0018A6  D001               	goto	i2u383_46
 13970  0018A8                     i2u383_40:
 13971  0018A8  0E00               	movlw	0
 13972  0018AA                     i2u383_46:
 13973  0018AA  6EDF               	movwf	indf2,c
 13974                           
 13975                           ;IO.c: 170: break;
 13976  0018AC  0012               	return	
 13977  0018AE                     i2l4718:
 13978                           
 13979                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 13980  0018AE  0EB0               	movlw	low _butnarray
 13981  0018B0  2401               	addwf	ReadButtonState@btnnum,w,c
 13982  0018B2  6ED9               	movwf	fsr2l,c
 13983  0018B4  0E00               	movlw	high _butnarray
 13984  0018B6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 13985  0018B8  6EDA               	movwf	fsr2h,c
 13986  0018BA  A080               	btfss	3968,0,c	;volatile
 13987  0018BC  D002               	goto	i2u384_40
 13988  0018BE  0E01               	movlw	1
 13989  0018C0  D001               	goto	i2u384_46
 13990  0018C2                     i2u384_40:
 13991  0018C2  0E00               	movlw	0
 13992  0018C4                     i2u384_46:
 13993  0018C4  6EDF               	movwf	indf2,c
 13994                           
 13995                           ;IO.c: 173: break;
 13996  0018C6  0012               	return	
 13997  0018C8                     i2l4720:
 13998                           
 13999                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 14000  0018C8  0EB0               	movlw	low _butnarray
 14001  0018CA  2401               	addwf	ReadButtonState@btnnum,w,c
 14002  0018CC  6ED9               	movwf	fsr2l,c
 14003  0018CE  0E00               	movlw	high _butnarray
 14004  0018D0  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14005  0018D2  6EDA               	movwf	fsr2h,c
 14006  0018D4  A280               	btfss	3968,1,c	;volatile
 14007  0018D6  D002               	goto	i2u385_40
 14008  0018D8  0E01               	movlw	1
 14009  0018DA  D001               	goto	i2u385_46
 14010  0018DC                     i2u385_40:
 14011  0018DC  0E00               	movlw	0
 14012  0018DE                     i2u385_46:
 14013  0018DE  6EDF               	movwf	indf2,c
 14014                           
 14015                           ;IO.c: 176: break;
 14016  0018E0  0012               	return	
 14017  0018E2                     i2l4722:
 14018                           
 14019                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 14020  0018E2  0EB0               	movlw	low _butnarray
 14021  0018E4  2401               	addwf	ReadButtonState@btnnum,w,c
 14022  0018E6  6ED9               	movwf	fsr2l,c
 14023  0018E8  0E00               	movlw	high _butnarray
 14024  0018EA  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14025  0018EC  6EDA               	movwf	fsr2h,c
 14026  0018EE  A480               	btfss	3968,2,c	;volatile
 14027  0018F0  D002               	goto	i2u386_40
 14028  0018F2  0E01               	movlw	1
 14029  0018F4  D001               	goto	i2u386_46
 14030  0018F6                     i2u386_40:
 14031  0018F6  0E00               	movlw	0
 14032  0018F8                     i2u386_46:
 14033  0018F8  6EDF               	movwf	indf2,c
 14034                           
 14035                           ;IO.c: 181: }
 14036                           
 14037                           ;IO.c: 179: break;
 14038  0018FA  0012               	return	
 14039  0018FC                     i2l4726:
 14040  0018FC  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 14041  001900  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 14042                           
 14043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14044                           ; Switch size 1, requested type "space"
 14045                           ; Number of cases is 1, Range of values is 0 to 0
 14046                           ; switch strategies available:
 14047                           ; Name         Instructions Cycles
 14048                           ; simple_byte            4     3 (average)
 14049                           ;	Chosen strategy is simple_byte
 14050  001904  5004               	movf	??_ReadButtonState+1,w,c
 14051  001906  0A00               	xorlw	0	; case 0
 14052  001908  A4D8               	btfss	status,2,c
 14053  00190A  0012               	return	
 14054                           
 14055                           ; Switch size 1, requested type "space"
 14056                           ; Number of cases is 8, Range of values is 0 to 7
 14057                           ; switch strategies available:
 14058                           ; Name         Instructions Cycles
 14059                           ; simple_byte           25    13 (average)
 14060                           ;	Chosen strategy is simple_byte
 14061  00190C  5003               	movf	??_ReadButtonState,w,c
 14062  00190E  0A00               	xorlw	0	; case 0
 14063  001910  B4D8               	btfsc	status,2,c
 14064  001912  D78C               	goto	i2l4708
 14065  001914  0A01               	xorlw	1	; case 1
 14066  001916  B4D8               	btfsc	status,2,c
 14067  001918  D796               	goto	i2l4710
 14068  00191A  0A03               	xorlw	3	; case 2
 14069  00191C  B4D8               	btfsc	status,2,c
 14070  00191E  D7A0               	goto	i2l4712
 14071  001920  0A01               	xorlw	1	; case 3
 14072  001922  B4D8               	btfsc	status,2,c
 14073  001924  D7AA               	goto	i2l4714
 14074  001926  0A07               	xorlw	7	; case 4
 14075  001928  B4D8               	btfsc	status,2,c
 14076  00192A  D7B4               	goto	i2l4716
 14077  00192C  0A01               	xorlw	1	; case 5
 14078  00192E  B4D8               	btfsc	status,2,c
 14079  001930  D7BE               	goto	i2l4718
 14080  001932  0A03               	xorlw	3	; case 6
 14081  001934  B4D8               	btfsc	status,2,c
 14082  001936  D7C8               	goto	i2l4720
 14083  001938  0A01               	xorlw	1	; case 7
 14084  00193A  A4D8               	btfss	status,2,c
 14085  00193C  0012               	return	
 14086  00193E  D7D1               	goto	i2l4722
 14087  001940                     __end_of_ReadButtonState:
 14088                           	opt stack 0
 14089                           tosu	equ	0xFFF
 14090                           tosh	equ	0xFFE
 14091                           tosl	equ	0xFFD
 14092                           pclatu	equ	0xFFB
 14093                           pclath	equ	0xFFA
 14094                           tblptru	equ	0xFF8
 14095                           tblptrh	equ	0xFF7
 14096                           tblptrl	equ	0xFF6
 14097                           tablat	equ	0xFF5
 14098                           prodh	equ	0xFF4
 14099                           prodl	equ	0xFF3
 14100                           intcon	equ	0xFF2
 14101                           intcon2	equ	0xFF1
 14102                           indf0	equ	0xFEF
 14103                           postinc0	equ	0xFEE
 14104                           fsr0h	equ	0xFEA
 14105                           fsr0l	equ	0xFE9
 14106                           wreg	equ	0xFE8
 14107                           fsr1h	equ	0xFE2
 14108                           fsr1l	equ	0xFE1
 14109                           indf2	equ	0xFDF
 14110                           postinc2	equ	0xFDE
 14111                           postdec2	equ	0xFDD
 14112                           plusw2	equ	0xFDB
 14113                           fsr2h	equ	0xFDA
 14114                           fsr2l	equ	0xFD9
 14115                           status	equ	0xFD8
 14116                           
 14117 ;; *************** function _I2C1_ISR *****************
 14118 ;; Defined at:
 14119 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;		None
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14133 ;;      Params:         0       0       0       0       0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0
 14135 ;;      Temps:          2       0       0       0       0       0       0
 14136 ;;      Totals:         2       0       0       0       0       0       0
 14137 ;;Total ram usage:        2 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    1
 14140 ;; This function calls:
 14141 ;;		_I2C1_FunctionComplete
 14142 ;;		_I2C1_Stop
 14143 ;; This function is called by:
 14144 ;;		_INTERRUPT_InterruptManager
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text76
 14149  00081A                     __ptext76:
 14150                           	opt stack 0
 14151  00081A                     _I2C1_ISR:
 14152                           	opt stack 22
 14153                           
 14154                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 14155                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 14156                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 14157                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 14158                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 14159                           
 14160                           ;incstack = 0
 14161  00081A  969E               	bcf	3998,3,c	;volatile
 14162                           
 14163                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 14164  00081C  AEC6               	btfss	4038,7,c	;volatile
 14165  00081E  D14A               	goto	i2l6936
 14166                           
 14167                           ;i2c1.c: 199: {
 14168                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 14169  000820  9EC6               	bcf	4038,7,c	;volatile
 14170                           
 14171                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 14172  000822  0E00               	movlw	0
 14173  000824  6E38               	movwf	_i2c1_state,c
 14174                           
 14175                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14176  000826  0100               	movlb	0	; () banked
 14177  000828  EE20 F003          	lfsr	2,3
 14178  00082C  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14179  00082E  26D9               	addwf	fsr2l,f,c
 14180  000830  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14181  000832  22DA               	addwfc	fsr2h,f,c
 14182  000834  CFDE F004          	movff	postinc2,??_I2C1_ISR
 14183  000838  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 14184  00083C  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 14185  000840  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 14186  000844  0E01               	movlw	1
 14187  000846  6EDF               	movwf	indf2,c
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;i2c1.c: 206: p_i2c1_current = (0);
 14191  000848  0E00               	movlw	0
 14192  00084A  0100               	movlb	0	; () banked
 14193  00084C  6FD5               	movwf	_p_i2c1_current& (0+255),b
 14194  00084E  0E00               	movlw	0
 14195  000850  0100               	movlb	0	; () banked
 14196  000852  6FD6               	movwf	(_p_i2c1_current+1)& (0+255),b
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;i2c1.c: 208: return;
 14200  000854  0012               	return	
 14201  000856                     i2l60:
 14202                           
 14203                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 14204  000856  0100               	movlb	0	; () banked
 14205  000858  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 14206  00085A  0012               	return	
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;i2c1.c: 217: {
 14210                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 14211  00085C  C0BA  F0D5         	movff	_i2c1_object+2,_p_i2c1_current
 14212  000860  C0BB  F0D6         	movff	_i2c1_object+3,_p_i2c1_current+1
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 14216  000864  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 14217  000868  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 14218  00086C  50DF               	movf	indf2,w,c
 14219  00086E  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14220  000870  5004               	movf	??_I2C1_ISR,w,c
 14221  000872  0100               	movlb	0	; () banked
 14222  000874  6FD1               	movwf	_i2c1_trb_count& (0+255),b
 14223  000876  6BD2               	clrf	(_i2c1_trb_count+1)& (0+255),b
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14227  000878  0100               	movlb	0	; () banked
 14228  00087A  EE20 F001          	lfsr	2,1
 14229  00087E  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 14230  000880  26D9               	addwf	fsr2l,f,c
 14231  000882  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 14232  000884  22DA               	addwfc	fsr2h,f,c
 14233  000886  CFDE F02D          	movff	postinc2,_p_i2c1_trb_current
 14234  00088A  CFDD F02E          	movff	postdec2,_p_i2c1_trb_current+1
 14235                           
 14236                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 14237  00088E  0E05               	movlw	5
 14238  000890  0100               	movlb	0	; () banked
 14239  000892  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 14240  000894  0E00               	movlw	0
 14241  000896  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 14242                           
 14243                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14244  000898  0EF0               	movlw	low (_i2c1_tr_queue+5)
 14245  00089A  0100               	movlb	0	; () banked
 14246  00089C  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14247  00089E  E10B               	bnz	i2l6830
 14248  0008A0  0E00               	movlw	high (_i2c1_tr_queue+5)
 14249  0008A2  0100               	movlb	0	; () banked
 14250  0008A4  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14251  0008A6  A4D8               	btfss	status,2,c
 14252  0008A8  D006               	goto	i2l6830
 14253                           
 14254                           ; BSR set to: 0
 14255                           ;i2c1.c: 227: {
 14256                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 14257  0008AA  0EEB               	movlw	low _i2c1_tr_queue
 14258  0008AC  0100               	movlb	0	; () banked
 14259  0008AE  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 14260  0008B0  0E00               	movlw	high _i2c1_tr_queue
 14261  0008B2  0100               	movlb	0	; () banked
 14262  0008B4  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 14263  0008B6                     i2l6830:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;i2c1.c: 230: }
 14267                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 14268  0008B6  0100               	movlb	0	; () banked
 14269  0008B8  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 14270                           
 14271                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14272  0008BA  0100               	movlb	0	; () banked
 14273  0008BC  51B8               	movf	_i2c1_object& (0+255),w,b
 14274  0008BE  0100               	movlb	0	; () banked
 14275  0008C0  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14276  0008C2  E108               	bnz	i2l63
 14277  0008C4  0100               	movlb	0	; () banked
 14278  0008C6  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 14279  0008C8  0100               	movlb	0	; () banked
 14280  0008CA  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14281  0008CC  A4D8               	btfss	status,2,c
 14282  0008CE  D002               	goto	i2l63
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;i2c1.c: 238: {
 14286                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 14287  0008D0  0100               	movlb	0	; () banked
 14288  0008D2  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 14289  0008D4                     i2l63:
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;i2c1.c: 241: }
 14293                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 14294  0008D4  80C5               	bsf	4037,0,c	;volatile
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 14298  0008D6  0E02               	movlw	2
 14299  0008D8  6E38               	movwf	_i2c1_state,c
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;i2c1.c: 248: }
 14303                           ;i2c1.c: 250: break;
 14304  0008DA  0012               	return	
 14305  0008DC                     i2l65:
 14306                           
 14307                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 14308  0008DC  82C5               	bsf	4037,1,c	;volatile
 14309                           
 14310                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 14311  0008DE  0E02               	movlw	2
 14312  0008E0  6E38               	movwf	_i2c1_state,c
 14313                           
 14314                           ;i2c1.c: 262: break;
 14315  0008E2  0012               	return	
 14316  0008E4                     i2l66:
 14317                           
 14318                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 14319  0008E4  ACC5               	btfss	4037,6,c	;volatile
 14320  0008E6  D006               	goto	i2l6842
 14321                           
 14322                           ;i2c1.c: 267: {
 14323                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 14324  0008E8  0100               	movlb	0	; () banked
 14325  0008EA  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14329  0008EC  0E04               	movlw	4
 14330  0008EE  EC75  F015         	call	_I2C1_Stop
 14331                           
 14332                           ;i2c1.c: 270: }
 14333  0008F2  0012               	return	
 14334  0008F4                     i2l6842:
 14335                           
 14336                           ;i2c1.c: 271: else
 14337                           ;i2c1.c: 272: {
 14338                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14339  0008F4  90D8               	bcf	status,0,c
 14340  0008F6  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 14341  0008F8  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14342  0008FA  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 14343  0008FC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14344  0008FE  5004               	movf	??_I2C1_ISR,w,c
 14345  000900  6EC9               	movwf	4041,c	;volatile
 14346                           
 14347                           ;i2c1.c: 277: if(i2c_address & 0x01)
 14348  000902  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14349  000904  D003               	goto	i2l6848
 14350                           
 14351                           ;i2c1.c: 278: {
 14352                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 14353  000906  0E0B               	movlw	11
 14354  000908  6E38               	movwf	_i2c1_state,c
 14355                           
 14356                           ;i2c1.c: 282: }
 14357  00090A  0012               	return	
 14358  00090C                     i2l6848:
 14359                           
 14360                           ;i2c1.c: 283: else
 14361                           ;i2c1.c: 284: {
 14362                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 14363  00090C  0E03               	movlw	3
 14364  00090E  6E38               	movwf	_i2c1_state,c
 14365                           
 14366                           ;i2c1.c: 287: }
 14367                           ;i2c1.c: 288: }
 14368                           ;i2c1.c: 290: break;
 14369  000910  0012               	return	
 14370  000912                     i2l71:
 14371                           
 14372                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 14373  000912  ACC5               	btfss	4037,6,c	;volatile
 14374  000914  D006               	goto	i2l72
 14375                           
 14376                           ;i2c1.c: 295: {
 14377                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 14378  000916  0100               	movlb	0	; () banked
 14379  000918  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14380                           
 14381                           ; BSR set to: 0
 14382                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14383  00091A  0E04               	movlw	4
 14384  00091C  EC75  F015         	call	_I2C1_Stop
 14385                           
 14386                           ;i2c1.c: 298: }
 14387  000920  0012               	return	
 14388  000922                     i2l72:
 14389                           
 14390                           ;i2c1.c: 299: else
 14391                           ;i2c1.c: 300: {
 14392                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 14393  000922  82C5               	bsf	4037,1,c	;volatile
 14394                           
 14395                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14396  000924  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 14397  000928  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 14398  00092C  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 14399  000930  6A05               	clrf	??_I2C1_ISR+1,c
 14400  000932  0E06               	movlw	6
 14401  000934  1604               	andwf	??_I2C1_ISR,f,c
 14402  000936  0E00               	movlw	0
 14403  000938  1605               	andwf	??_I2C1_ISR+1,f,c
 14404  00093A  0EF0               	movlw	240
 14405  00093C  1004               	iorwf	??_I2C1_ISR,w,c
 14406  00093E  6E40               	movwf	I2C1_ISR@i2c_address,c
 14407  000940  5005               	movf	??_I2C1_ISR+1,w,c
 14408  000942  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 14409                           
 14410                           ;i2c1.c: 310: i2c_address |= 0x0001;
 14411  000944  8040               	bsf	I2C1_ISR@i2c_address,0,c
 14412                           
 14413                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 14414  000946  0E01               	movlw	1
 14415  000948  6E35               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 14416                           
 14417                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 14418  00094A  0E02               	movlw	2
 14419  00094C  6E38               	movwf	_i2c1_state,c
 14420                           
 14421                           ;i2c1.c: 317: }
 14422                           ;i2c1.c: 319: break;
 14423  00094E  0012               	return	
 14424  000950                     i2l6862:
 14425                           
 14426                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 14427  000950  0435               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 14428  000952  B4D8               	btfsc	status,2,c
 14429  000954  D01E               	goto	i2l76
 14430                           
 14431                           ;i2c1.c: 335: {
 14432                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 14433  000956  C02D  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 14434  00095A  C02E  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 14435  00095E  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 14436  000962  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 14437                           
 14438                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14439  000966  EE20 F003          	lfsr	2,3
 14440  00096A  502D               	movf	_p_i2c1_trb_current,w,c
 14441  00096C  26D9               	addwf	fsr2l,f,c
 14442  00096E  502E               	movf	_p_i2c1_trb_current+1,w,c
 14443  000970  22DA               	addwfc	fsr2h,f,c
 14444  000972  CFDE F0C1          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 14445  000976  CFDD F0C2          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 14446                           
 14447                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 14448  00097A  EE20 F002          	lfsr	2,2
 14449  00097E  502D               	movf	_p_i2c1_trb_current,w,c
 14450  000980  26D9               	addwf	fsr2l,f,c
 14451  000982  502E               	movf	_p_i2c1_trb_current+1,w,c
 14452  000984  22DA               	addwfc	fsr2h,f,c
 14453  000986  50DF               	movf	indf2,w,c
 14454  000988  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14455  00098A  5004               	movf	??_I2C1_ISR,w,c
 14456  00098C  0100               	movlb	0	; () banked
 14457  00098E  6FBF               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 14458  000990  6BC0               	clrf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),b
 14459  000992                     i2l76:
 14460                           
 14461                           ;i2c1.c: 362: else
 14462                           ;i2c1.c: 363: {
 14463                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 14464  000992  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 14465                           
 14466                           ;i2c1.c: 366: if(i2c_address & 0x01)
 14467  000996  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14468  000998  D003               	goto	i2l6882
 14469                           
 14470                           ;i2c1.c: 367: {
 14471                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 14472  00099A  0E05               	movlw	5
 14473  00099C  6E38               	movwf	_i2c1_state,c
 14474                           
 14475                           ;i2c1.c: 370: }
 14476  00099E  0012               	return	
 14477  0009A0                     i2l6882:
 14478                           
 14479                           ;i2c1.c: 371: else
 14480                           ;i2c1.c: 372: {
 14481                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 14482  0009A0  0E03               	movlw	3
 14483  0009A2  6E38               	movwf	_i2c1_state,c
 14484                           
 14485                           ;i2c1.c: 375: }
 14486                           ;i2c1.c: 376: }
 14487                           ;i2c1.c: 377: break;
 14488  0009A4  0012               	return	
 14489  0009A6                     i2l82:
 14490                           
 14491                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 14492  0009A6  ACC5               	btfss	4037,6,c	;volatile
 14493  0009A8  D007               	goto	i2l6890
 14494                           
 14495                           ;i2c1.c: 383: {
 14496                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 14497  0009AA  0100               	movlb	0	; () banked
 14498  0009AC  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 14502  0009AE  9CC5               	bcf	4037,6,c	;volatile
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 14506  0009B0  0E05               	movlw	5
 14507  0009B2  EC75  F015         	call	_I2C1_Stop
 14508                           
 14509                           ;i2c1.c: 393: }
 14510  0009B6  0012               	return	
 14511  0009B8                     i2l6890:
 14512                           
 14513                           ;i2c1.c: 394: else
 14514                           ;i2c1.c: 395: {
 14515                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 14516  0009B8  0100               	movlb	0	; () banked
 14517  0009BA  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14518  0009BC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14519  0009BE  0100               	movlb	0	; () banked
 14520  0009C0  51C0               	movf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14521  0009C2  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14522  0009C4  0E01               	movlw	1
 14523  0009C6  0100               	movlb	0	; () banked
 14524  0009C8  5FBF               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14525  0009CA  0E00               	movlw	0
 14526  0009CC  0100               	movlb	0	; () banked
 14527  0009CE  5BC0               	subwfb	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14528  0009D0  5004               	movf	??_I2C1_ISR,w,c
 14529  0009D2  1005               	iorwf	??_I2C1_ISR+1,w,c
 14530  0009D4  A4D8               	btfss	status,2,c
 14531  0009D6  D016               	goto	i2l6898
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;i2c1.c: 398: {
 14535                           ;i2c1.c: 402: p_i2c1_trb_current++;
 14536  0009D8  0E05               	movlw	5
 14537  0009DA  262D               	addwf	_p_i2c1_trb_current,f,c
 14538  0009DC  0E00               	movlw	0
 14539  0009DE  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14540                           
 14541                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 14542  0009E0  0100               	movlb	0	; () banked
 14543  0009E2  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14544  0009E4  A0D8               	btfss	status,0,c
 14545  0009E6  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14546  0009E8  0100               	movlb	0	; () banked
 14547  0009EA  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14548  0009EC  0100               	movlb	0	; () banked
 14549  0009EE  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14550  0009F0  A4D8               	btfss	status,2,c
 14551  0009F2  D004               	goto	i2l86
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;i2c1.c: 406: {
 14555                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14556  0009F4  0E00               	movlw	0
 14557  0009F6  EC75  F015         	call	_I2C1_Stop
 14558                           
 14559                           ;i2c1.c: 408: }
 14560  0009FA  0012               	return	
 14561  0009FC                     i2l86:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;i2c1.c: 409: else
 14565                           ;i2c1.c: 410: {
 14566                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 14567  0009FC  82C5               	bsf	4037,1,c	;volatile
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 14571  0009FE  0E02               	movlw	2
 14572  000A00  6E38               	movwf	_i2c1_state,c
 14573                           
 14574                           ; BSR set to: 0
 14575                           ;i2c1.c: 422: }
 14576                           ;i2c1.c: 423: }
 14577  000A02  0012               	return	
 14578  000A04                     i2l6898:
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;i2c1.c: 424: else
 14582                           ;i2c1.c: 425: {
 14583                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 14584  000A04  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14585  000A08  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14586  000A0C  6AF8               	clrf	tblptru,c
 14587  000A0E  0E05               	movlw	(high __ramtop+-1)
 14588  000A10  64F7               	cpfsgt	tblptrh,c
 14589  000A12  D003               	bra	i2u752_47
 14590  000A14  0008               	tblrd		*
 14591  000A16  50F5               	movf	tablat,w,c
 14592  000A18  D005               	bra	i2u752_40
 14593  000A1A                     i2u752_47:
 14594  000A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14595  000A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14596  000A22  50EF               	movf	indf0,w,c
 14597  000A24                     i2u752_40:
 14598  000A24  6EC9               	movwf	4041,c	;volatile
 14599  000A26  0100               	movlb	0	; () banked
 14600  000A28  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14601  000A2A  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;i2c1.c: 428: }
 14605                           ;i2c1.c: 429: }
 14606                           ;i2c1.c: 430: break;
 14607                           
 14608                           ; BSR set to: 0
 14609  000A2C  0012               	return	
 14610  000A2E                     i2l89:
 14611                           
 14612                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 14613  000A2E  ACC5               	btfss	4037,6,c	;volatile
 14614  000A30  D007               	goto	i2l90
 14615                           
 14616                           ;i2c1.c: 436: {
 14617                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 14618  000A32  0100               	movlb	0	; () banked
 14619  000A34  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14623  000A36  0E04               	movlw	4
 14624  000A38  EC75  F015         	call	_I2C1_Stop
 14625                           
 14626                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 14627  000A3C  9CC5               	bcf	4037,6,c	;volatile
 14628                           
 14629                           ;i2c1.c: 446: }
 14630  000A3E  0012               	return	
 14631  000A40                     i2l90:
 14632                           
 14633                           ;i2c1.c: 447: else
 14634                           ;i2c1.c: 448: {
 14635                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 14636  000A40  86C5               	bsf	4037,3,c	;volatile
 14637                           
 14638                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14639  000A42  0E08               	movlw	8
 14640  000A44  6E38               	movwf	_i2c1_state,c
 14641                           
 14642                           ;i2c1.c: 451: }
 14643                           ;i2c1.c: 452: break;
 14644  000A46  0012               	return	
 14645  000A48                     i2l6910:
 14646                           
 14647                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14648  000A48  0E08               	movlw	8
 14649  000A4A  6E38               	movwf	_i2c1_state,c
 14650                           
 14651                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 14652  000A4C  86C5               	bsf	4037,3,c	;volatile
 14653                           
 14654                           ;i2c1.c: 464: break;
 14655  000A4E  0012               	return	
 14656  000A50                     i2l6914:
 14657                           
 14658                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 14659  000A50  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14660  000A54  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14661  000A58  6AF8               	clrf	tblptru,c
 14662  000A5A  0E05               	movlw	(high __ramtop+-1)
 14663  000A5C  64F7               	cpfsgt	tblptrh,c
 14664  000A5E  D004               	bra	i2u754_47
 14665  000A60  CFC9 FFF5          	movff	4041,tablat	;volatile
 14666  000A64  000C               	tblwt		*
 14667  000A66  D006               	bra	i2u754_40
 14668  000A68                     i2u754_47:
 14669  000A68  CFF6 FFE9          	movff	tblptrl,fsr0l
 14670  000A6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14671  000A70  CFC9 FFEF          	movff	4041,indf0	;volatile
 14672  000A74                     i2u754_40:
 14673  000A74  0100               	movlb	0	; () banked
 14674  000A76  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14675  000A78  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;i2c1.c: 472: if(--i2c_bytes_left)
 14679  000A7A  0100               	movlb	0	; () banked
 14680  000A7C  07BF               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14681  000A7E  A0D8               	btfss	status,0,c
 14682  000A80  07C0               	decf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14683  000A82  0100               	movlb	0	; () banked
 14684  000A84  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14685  000A86  0100               	movlb	0	; () banked
 14686  000A88  11C0               	iorwf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14687  000A8A  B4D8               	btfsc	status,2,c
 14688  000A8C  D004               	goto	i2l94
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;i2c1.c: 473: {
 14692                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 14693  000A8E  9AC5               	bcf	4037,5,c	;volatile
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 14697  000A90  0E06               	movlw	6
 14698  000A92  6E38               	movwf	_i2c1_state,c
 14699                           
 14700                           ;i2c1.c: 483: }
 14701  000A94  D003               	goto	i2l6926
 14702  000A96                     i2l94:
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;i2c1.c: 484: else
 14706                           ;i2c1.c: 485: {
 14707                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 14708  000A96  8AC5               	bsf	4037,5,c	;volatile
 14709                           
 14710                           ; BSR set to: 0
 14711                           ;i2c1.c: 491: I2C1_FunctionComplete();
 14712  000A98  ECBD  F016         	call	_I2C1_FunctionComplete	;wreg free
 14713  000A9C                     i2l6926:
 14714                           
 14715                           ;i2c1.c: 492: }
 14716                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 14717  000A9C  88C5               	bsf	4037,4,c	;volatile
 14718                           
 14719                           ;i2c1.c: 496: break;
 14720  000A9E  0012               	return	
 14721  000AA0                     i2l6928:
 14722                           
 14723                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 14724                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14725  000AA0  0E00               	movlw	0
 14726  000AA2  EC75  F015         	call	_I2C1_Stop
 14727                           
 14728                           ;i2c1.c: 503: break;
 14729  000AA6  0012               	return	
 14730  000AA8                     i2l6930:
 14731                           
 14732                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 14733  000AA8  0100               	movlb	0	; () banked
 14734  000AAA  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 14738  000AAC  0E06               	movlw	6
 14739  000AAE  EC75  F015         	call	_I2C1_Stop
 14740                           
 14741                           ;i2c1.c: 513: }
 14742                           
 14743                           ;i2c1.c: 511: break;
 14744  000AB2  0012               	return	
 14745  000AB4                     i2l6936:
 14746  000AB4  5038               	movf	_i2c1_state,w,c
 14747                           
 14748                           ; Switch size 1, requested type "space"
 14749                           ; Number of cases is 11, Range of values is 0 to 11
 14750                           ; switch strategies available:
 14751                           ; Name         Instructions Cycles
 14752                           ; simple_byte           34    18 (average)
 14753                           ;	Chosen strategy is simple_byte
 14754  000AB6  0A00               	xorlw	0	; case 0
 14755  000AB8  B4D8               	btfsc	status,2,c
 14756  000ABA  D6CD               	goto	i2l60
 14757  000ABC  0A01               	xorlw	1	; case 1
 14758  000ABE  B4D8               	btfsc	status,2,c
 14759  000AC0  D70D               	goto	i2l65
 14760  000AC2  0A03               	xorlw	3	; case 2
 14761  000AC4  B4D8               	btfsc	status,2,c
 14762  000AC6  D744               	goto	i2l6862
 14763  000AC8  0A01               	xorlw	1	; case 3
 14764  000ACA  B4D8               	btfsc	status,2,c
 14765  000ACC  D76C               	goto	i2l82
 14766  000ACE  0A07               	xorlw	7	; case 4
 14767  000AD0  B4D8               	btfsc	status,2,c
 14768  000AD2  D7E6               	goto	i2l6928
 14769  000AD4  0A01               	xorlw	1	; case 5
 14770  000AD6  B4D8               	btfsc	status,2,c
 14771  000AD8  D7AA               	goto	i2l89
 14772  000ADA  0A03               	xorlw	3	; case 6
 14773  000ADC  B4D8               	btfsc	status,2,c
 14774  000ADE  D7B4               	goto	i2l6910
 14775  000AE0  0A01               	xorlw	1	; case 7
 14776  000AE2  B4D8               	btfsc	status,2,c
 14777  000AE4  D7DD               	goto	i2l6928
 14778  000AE6  0A0F               	xorlw	15	; case 8
 14779  000AE8  B4D8               	btfsc	status,2,c
 14780  000AEA  D7B2               	goto	i2l6914
 14781  000AEC  0A02               	xorlw	2	; case 10
 14782  000AEE  B4D8               	btfsc	status,2,c
 14783  000AF0  D6F9               	goto	i2l66
 14784  000AF2  0A01               	xorlw	1	; case 11
 14785  000AF4  B4D8               	btfsc	status,2,c
 14786  000AF6  D70D               	goto	i2l71
 14787  000AF8  D7D7               	goto	i2l6930
 14788  000AFA                     __end_of_I2C1_ISR:
 14789                           	opt stack 0
 14790                           tosu	equ	0xFFF
 14791                           tosh	equ	0xFFE
 14792                           tosl	equ	0xFFD
 14793                           pclatu	equ	0xFFB
 14794                           pclath	equ	0xFFA
 14795                           tblptru	equ	0xFF8
 14796                           tblptrh	equ	0xFF7
 14797                           tblptrl	equ	0xFF6
 14798                           tablat	equ	0xFF5
 14799                           prodh	equ	0xFF4
 14800                           prodl	equ	0xFF3
 14801                           intcon	equ	0xFF2
 14802                           intcon2	equ	0xFF1
 14803                           indf0	equ	0xFEF
 14804                           postinc0	equ	0xFEE
 14805                           fsr0h	equ	0xFEA
 14806                           fsr0l	equ	0xFE9
 14807                           wreg	equ	0xFE8
 14808                           fsr1h	equ	0xFE2
 14809                           fsr1l	equ	0xFE1
 14810                           indf2	equ	0xFDF
 14811                           postinc2	equ	0xFDE
 14812                           postdec2	equ	0xFDD
 14813                           plusw2	equ	0xFDB
 14814                           fsr2h	equ	0xFDA
 14815                           fsr2l	equ	0xFD9
 14816                           status	equ	0xFD8
 14817                           
 14818 ;; *************** function _I2C1_Stop *****************
 14819 ;; Defined at:
 14820 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 14821 ;; Parameters:    Size  Location     Type
 14822 ;;  completion_c    1    wreg     enum E8678
 14823 ;; Auto vars:     Size  Location     Type
 14824 ;;  completion_c    1    2[COMRAM] enum E8678
 14825 ;; Return value:  Size  Location     Type
 14826 ;;                  1    wreg      void 
 14827 ;; Registers used:
 14828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14829 ;; Tracked objects:
 14830 ;;		On entry : 0/0
 14831 ;;		On exit  : 0/0
 14832 ;;		Unchanged: 0/0
 14833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14834 ;;      Params:         0       0       0       0       0       0       0
 14835 ;;      Locals:         1       0       0       0       0       0       0
 14836 ;;      Temps:          2       0       0       0       0       0       0
 14837 ;;      Totals:         3       0       0       0       0       0       0
 14838 ;;Total ram usage:        3 bytes
 14839 ;; Hardware stack levels used:    1
 14840 ;; This function calls:
 14841 ;;		Nothing
 14842 ;; This function is called by:
 14843 ;;		_I2C1_ISR
 14844 ;; This function uses a non-reentrant model
 14845 ;;
 14846                           
 14847                           	psect	text77
 14848  002AEA                     __ptext77:
 14849                           	opt stack 0
 14850  002AEA                     _I2C1_Stop:
 14851                           	opt stack 22
 14852                           
 14853                           ;incstack = 0
 14854                           ;I2C1_Stop@completion_code stored from wreg
 14855  002AEA  6E03               	movwf	I2C1_Stop@completion_code,c
 14856                           
 14857                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 14858  002AEC  84C5               	bsf	4037,2,c	;volatile
 14859                           
 14860                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 14861  002AEE  0100               	movlb	0	; () banked
 14862  002AF0  EE20 F003          	lfsr	2,3
 14863  002AF4  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14864  002AF6  26D9               	addwf	fsr2l,f,c
 14865  002AF8  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14866  002AFA  22DA               	addwfc	fsr2h,f,c
 14867  002AFC  50DE               	movf	postinc2,w,c
 14868  002AFE  10DE               	iorwf	postinc2,w,c
 14869  002B00  B4D8               	btfsc	status,2,c
 14870  002B02  D011               	goto	i2l6498
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;i2c1.c: 541: {
 14874                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 14875  002B04  0100               	movlb	0	; () banked
 14876  002B06  EE20 F003          	lfsr	2,3
 14877  002B0A  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14878  002B0C  26D9               	addwf	fsr2l,f,c
 14879  002B0E  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14880  002B10  22DA               	addwfc	fsr2h,f,c
 14881  002B12  CFDE F001          	movff	postinc2,??_I2C1_Stop
 14882  002B16  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 14883  002B1A  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 14884  002B1E  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 14885  002B22  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 14886  002B26                     i2l6498:
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;i2c1.c: 544: }
 14890                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 14891  002B26  0E00               	movlw	0
 14892  002B28  6E38               	movwf	_i2c1_state,c
 14893                           
 14894                           ; BSR set to: 0
 14895  002B2A  0012               	return		;funcret
 14896  002B2C                     __end_of_I2C1_Stop:
 14897                           	opt stack 0
 14898                           tosu	equ	0xFFF
 14899                           tosh	equ	0xFFE
 14900                           tosl	equ	0xFFD
 14901                           pclatu	equ	0xFFB
 14902                           pclath	equ	0xFFA
 14903                           tblptru	equ	0xFF8
 14904                           tblptrh	equ	0xFF7
 14905                           tblptrl	equ	0xFF6
 14906                           tablat	equ	0xFF5
 14907                           prodh	equ	0xFF4
 14908                           prodl	equ	0xFF3
 14909                           intcon	equ	0xFF2
 14910                           intcon2	equ	0xFF1
 14911                           indf0	equ	0xFEF
 14912                           postinc0	equ	0xFEE
 14913                           fsr0h	equ	0xFEA
 14914                           fsr0l	equ	0xFE9
 14915                           wreg	equ	0xFE8
 14916                           fsr1h	equ	0xFE2
 14917                           fsr1l	equ	0xFE1
 14918                           indf2	equ	0xFDF
 14919                           postinc2	equ	0xFDE
 14920                           postdec2	equ	0xFDD
 14921                           plusw2	equ	0xFDB
 14922                           fsr2h	equ	0xFDA
 14923                           fsr2l	equ	0xFD9
 14924                           status	equ	0xFD8
 14925                           
 14926 ;; *************** function _I2C1_FunctionComplete *****************
 14927 ;; Defined at:
 14928 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;		None
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;		None
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      void 
 14935 ;; Registers used:
 14936 ;;		wreg, status,2, status,0
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/0
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14942 ;;      Params:         0       0       0       0       0       0       0
 14943 ;;      Locals:         0       0       0       0       0       0       0
 14944 ;;      Temps:          0       0       0       0       0       0       0
 14945 ;;      Totals:         0       0       0       0       0       0       0
 14946 ;;Total ram usage:        0 bytes
 14947 ;; Hardware stack levels used:    1
 14948 ;; This function calls:
 14949 ;;		Nothing
 14950 ;; This function is called by:
 14951 ;;		_I2C1_ISR
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           	psect	text78
 14956  002D7A                     __ptext78:
 14957                           	opt stack 0
 14958  002D7A                     _I2C1_FunctionComplete:
 14959                           	opt stack 22
 14960                           
 14961                           ;i2c1.c: 520: p_i2c1_trb_current++;
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;incstack = 0
 14965  002D7A  0E05               	movlw	5
 14966  002D7C  262D               	addwf	_p_i2c1_trb_current,f,c
 14967  002D7E  0E00               	movlw	0
 14968  002D80  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14969                           
 14970                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 14971  002D82  0100               	movlb	0	; () banked
 14972  002D84  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14973  002D86  A0D8               	btfss	status,0,c
 14974  002D88  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14975  002D8A  0100               	movlb	0	; () banked
 14976  002D8C  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14977  002D8E  0100               	movlb	0	; () banked
 14978  002D90  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14979  002D92  A4D8               	btfss	status,2,c
 14980  002D94  D003               	goto	i2l6504
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;i2c1.c: 524: {
 14984                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 14985  002D96  0E04               	movlw	4
 14986  002D98  6E38               	movwf	_i2c1_state,c
 14987                           
 14988                           ;i2c1.c: 526: }
 14989  002D9A  0012               	return	
 14990  002D9C                     i2l6504:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;i2c1.c: 527: else
 14994                           ;i2c1.c: 528: {
 14995                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 14996  002D9C  0E01               	movlw	1
 14997  002D9E  6E38               	movwf	_i2c1_state,c
 14998  002DA0  0012               	return	
 14999  002DA2                     __end_of_I2C1_FunctionComplete:
 15000                           	opt stack 0
 15001                           tosu	equ	0xFFF
 15002                           tosh	equ	0xFFE
 15003                           tosl	equ	0xFFD
 15004                           pclatu	equ	0xFFB
 15005                           pclath	equ	0xFFA
 15006                           tblptru	equ	0xFF8
 15007                           tblptrh	equ	0xFF7
 15008                           tblptrl	equ	0xFF6
 15009                           tablat	equ	0xFF5
 15010                           prodh	equ	0xFF4
 15011                           prodl	equ	0xFF3
 15012                           intcon	equ	0xFF2
 15013                           intcon2	equ	0xFF1
 15014                           indf0	equ	0xFEF
 15015                           postinc0	equ	0xFEE
 15016                           fsr0h	equ	0xFEA
 15017                           fsr0l	equ	0xFE9
 15018                           wreg	equ	0xFE8
 15019                           fsr1h	equ	0xFE2
 15020                           fsr1l	equ	0xFE1
 15021                           indf2	equ	0xFDF
 15022                           postinc2	equ	0xFDE
 15023                           postdec2	equ	0xFDD
 15024                           plusw2	equ	0xFDB
 15025                           fsr2h	equ	0xFDA
 15026                           fsr2l	equ	0xFD9
 15027                           status	equ	0xFD8
 15028                           
 15029 ;; *************** function _I2C1_BusCollisionISR *****************
 15030 ;; Defined at:
 15031 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;		None
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		None
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15045 ;;      Params:         0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0
 15048 ;;      Totals:         0       0       0       0       0       0       0
 15049 ;;Total ram usage:        0 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; This function calls:
 15052 ;;		Nothing
 15053 ;; This function is called by:
 15054 ;;		_INTERRUPT_InterruptManager
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           	psect	text79
 15059  002F60                     __ptext79:
 15060                           	opt stack 0
 15061  002F60                     _I2C1_BusCollisionISR:
 15062                           	opt stack 23
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;incstack = 0
 15066  002F60  0012               	return		;funcret
 15067  002F62                     __end_of_I2C1_BusCollisionISR:
 15068                           	opt stack 0
 15069                           tosu	equ	0xFFF
 15070                           tosh	equ	0xFFE
 15071                           tosl	equ	0xFFD
 15072                           pclatu	equ	0xFFB
 15073                           pclath	equ	0xFFA
 15074                           tblptru	equ	0xFF8
 15075                           tblptrh	equ	0xFF7
 15076                           tblptrl	equ	0xFF6
 15077                           tablat	equ	0xFF5
 15078                           prodh	equ	0xFF4
 15079                           prodl	equ	0xFF3
 15080                           intcon	equ	0xFF2
 15081                           intcon2	equ	0xFF1
 15082                           indf0	equ	0xFEF
 15083                           postinc0	equ	0xFEE
 15084                           fsr0h	equ	0xFEA
 15085                           fsr0l	equ	0xFE9
 15086                           wreg	equ	0xFE8
 15087                           fsr1h	equ	0xFE2
 15088                           fsr1l	equ	0xFE1
 15089                           indf2	equ	0xFDF
 15090                           postinc2	equ	0xFDE
 15091                           postdec2	equ	0xFDD
 15092                           plusw2	equ	0xFDB
 15093                           fsr2h	equ	0xFDA
 15094                           fsr2l	equ	0xFD9
 15095                           status	equ	0xFD8
 15096                           
 15097 ;; *************** function _EUSART1_Transmit_ISR *****************
 15098 ;; Defined at:
 15099 ;;		line 150 in file "UART.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;		None
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;		None
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  1    wreg      void 
 15106 ;; Registers used:
 15107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15113 ;;      Params:         0       0       0       0       0       0       0
 15114 ;;      Locals:         0       0       0       0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0
 15116 ;;      Totals:         0       0       0       0       0       0       0
 15117 ;;Total ram usage:        0 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:    2
 15120 ;; This function calls:
 15121 ;;		i2_UART_buff_get
 15122 ;;		i2_UART_buff_size
 15123 ;; This function is called by:
 15124 ;;		_INTERRUPT_InterruptManager
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128                           	psect	text80
 15129  002C48                     __ptext80:
 15130                           	opt stack 0
 15131  002C48                     _EUSART1_Transmit_ISR:
 15132                           	opt stack 21
 15133                           
 15134                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 15135                           
 15136                           ;incstack = 0
 15137  002C48  0E00               	movlw	low _output_buffer
 15138  002C4A  6E01               	movwf	i2UART_buff_size@_this,c
 15139  002C4C  0E04               	movlw	high _output_buffer
 15140  002C4E  6E02               	movwf	i2UART_buff_size@_this+1,c
 15141  002C50  EC5F  F017         	call	i2_UART_buff_size	;wreg free
 15142  002C54  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 15143  002C56  D00D               	goto	i2l5228
 15144  002C58  5002               	movf	?i2_UART_buff_size+1,w,c
 15145  002C5A  E103               	bnz	i2u505_40
 15146  002C5C  0401               	decf	?i2_UART_buff_size,w,c
 15147  002C5E  A0D8               	btfss	status,0,c
 15148  002C60  D008               	goto	i2l5228
 15149  002C62                     i2u505_40:
 15150                           
 15151                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 15152  002C62  0E00               	movlw	low _output_buffer
 15153  002C64  6E07               	movwf	i2UART_buff_get@_this,c
 15154  002C66  0E04               	movlw	high _output_buffer
 15155  002C68  6E08               	movwf	i2UART_buff_get@_this+1,c
 15156  002C6A  EC57  F011         	call	i2_UART_buff_get	;wreg free
 15157  002C6E  6EAD               	movwf	4013,c	;volatile
 15158                           
 15159                           ;UART.c: 154: } else {
 15160  002C70  0012               	return	
 15161  002C72                     i2l5228:
 15162                           
 15163                           ;UART.c: 155: Transmit_stall = 1;
 15164  002C72  0E01               	movlw	1
 15165  002C74  6E44               	movwf	_Transmit_stall,c
 15166                           
 15167                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 15168  002C76  989D               	bcf	3997,4,c	;volatile
 15169  002C78  0012               	return	
 15170  002C7A                     __end_of_EUSART1_Transmit_ISR:
 15171                           	opt stack 0
 15172                           tosu	equ	0xFFF
 15173                           tosh	equ	0xFFE
 15174                           tosl	equ	0xFFD
 15175                           pclatu	equ	0xFFB
 15176                           pclath	equ	0xFFA
 15177                           tblptru	equ	0xFF8
 15178                           tblptrh	equ	0xFF7
 15179                           tblptrl	equ	0xFF6
 15180                           tablat	equ	0xFF5
 15181                           prodh	equ	0xFF4
 15182                           prodl	equ	0xFF3
 15183                           intcon	equ	0xFF2
 15184                           intcon2	equ	0xFF1
 15185                           indf0	equ	0xFEF
 15186                           postinc0	equ	0xFEE
 15187                           fsr0h	equ	0xFEA
 15188                           fsr0l	equ	0xFE9
 15189                           wreg	equ	0xFE8
 15190                           fsr1h	equ	0xFE2
 15191                           fsr1l	equ	0xFE1
 15192                           indf2	equ	0xFDF
 15193                           postinc2	equ	0xFDE
 15194                           postdec2	equ	0xFDD
 15195                           plusw2	equ	0xFDB
 15196                           fsr2h	equ	0xFDA
 15197                           fsr2l	equ	0xFD9
 15198                           status	equ	0xFD8
 15199                           
 15200 ;; *************** function i2_UART_buff_size *****************
 15201 ;; Defined at:
 15202 ;;		line 102 in file "UART.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 15205 ;;		 -> output_buffer(206), input_buffer(206), 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;		None
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  2    0[COMRAM] int 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/0
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15217 ;;      Params:         2       0       0       0       0       0       0
 15218 ;;      Locals:         0       0       0       0       0       0       0
 15219 ;;      Temps:          0       0       0       0       0       0       0
 15220 ;;      Totals:         2       0       0       0       0       0       0
 15221 ;;Total ram usage:        2 bytes
 15222 ;; Hardware stack levels used:    1
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_EUSART1_Transmit_ISR
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text81
 15231  002EBE                     __ptext81:
 15232                           	opt stack 0
 15233  002EBE                     i2_UART_buff_size:
 15234                           	opt stack 22
 15235                           
 15236                           ;UART.c: 103: return (_this->count);
 15237                           
 15238                           ;incstack = 0
 15239  002EBE  EE20 F0CC          	lfsr	2,204
 15240  002EC2  5001               	movf	i2UART_buff_size@_this,w,c
 15241  002EC4  26D9               	addwf	fsr2l,f,c
 15242  002EC6  5002               	movf	i2UART_buff_size@_this+1,w,c
 15243  002EC8  22DA               	addwfc	fsr2h,f,c
 15244  002ECA  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 15245  002ECE  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 15246  002ED2  0012               	return	
 15247  002ED4                     __end_ofi2_UART_buff_size:
 15248                           	opt stack 0
 15249                           tosu	equ	0xFFF
 15250                           tosh	equ	0xFFE
 15251                           tosl	equ	0xFFD
 15252                           pclatu	equ	0xFFB
 15253                           pclath	equ	0xFFA
 15254                           tblptru	equ	0xFF8
 15255                           tblptrh	equ	0xFF7
 15256                           tblptrl	equ	0xFF6
 15257                           tablat	equ	0xFF5
 15258                           prodh	equ	0xFF4
 15259                           prodl	equ	0xFF3
 15260                           intcon	equ	0xFF2
 15261                           intcon2	equ	0xFF1
 15262                           indf0	equ	0xFEF
 15263                           postinc0	equ	0xFEE
 15264                           fsr0h	equ	0xFEA
 15265                           fsr0l	equ	0xFE9
 15266                           wreg	equ	0xFE8
 15267                           fsr1h	equ	0xFE2
 15268                           fsr1l	equ	0xFE1
 15269                           indf2	equ	0xFDF
 15270                           postinc2	equ	0xFDE
 15271                           postdec2	equ	0xFDD
 15272                           plusw2	equ	0xFDB
 15273                           fsr2h	equ	0xFDA
 15274                           fsr2l	equ	0xFD9
 15275                           status	equ	0xFD8
 15276                           
 15277 ;; *************** function i2_UART_buff_get *****************
 15278 ;; Defined at:
 15279 ;;		line 81 in file "UART.c"
 15280 ;; Parameters:    Size  Location     Type
 15281 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15282 ;;		 -> output_buffer(206), input_buffer(206), 
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      unsigned char 
 15287 ;; Registers used:
 15288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15294 ;;      Params:         2       0       0       0       0       0       0
 15295 ;;      Locals:         1       0       0       0       0       0       0
 15296 ;;      Temps:          2       0       0       0       0       0       0
 15297 ;;      Totals:         5       0       0       0       0       0       0
 15298 ;;Total ram usage:        5 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; Hardware stack levels required when called:    1
 15301 ;; This function calls:
 15302 ;;		i2_UART_buff_modulo_inc
 15303 ;; This function is called by:
 15304 ;;		_EUSART1_Transmit_ISR
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           	psect	text82
 15309  0022AE                     __ptext82:
 15310                           	opt stack 0
 15311  0022AE                     i2_UART_buff_get:
 15312                           	opt stack 21
 15313                           
 15314                           ;UART.c: 82: unsigned char c;
 15315                           ;UART.c: 83: if (_this->count > 0) {
 15316                           
 15317                           ;incstack = 0
 15318  0022AE  EE20 F0CC          	lfsr	2,204
 15319  0022B2  5007               	movf	i2UART_buff_get@_this,w,c
 15320  0022B4  26D9               	addwf	fsr2l,f,c
 15321  0022B6  5008               	movf	i2UART_buff_get@_this+1,w,c
 15322  0022B8  22DA               	addwfc	fsr2h,f,c
 15323  0022BA  0E01               	movlw	1
 15324  0022BC  BEDB               	btfsc	plusw2,7,c
 15325  0022BE  D03C               	goto	i2l5082
 15326  0022C0  0E01               	movlw	1
 15327  0022C2  50DB               	movf	plusw2,w,c
 15328  0022C4  E103               	bnz	i2u485_40
 15329  0022C6  04DE               	decf	postinc2,w,c
 15330  0022C8  A0D8               	btfss	status,0,c
 15331  0022CA  D036               	goto	i2l5082
 15332  0022CC                     i2u485_40:
 15333                           
 15334                           ;UART.c: 84: c = _this->buf[_this->tail];
 15335  0022CC  EE20 F0CA          	lfsr	2,202
 15336  0022D0  5007               	movf	i2UART_buff_get@_this,w,c
 15337  0022D2  26D9               	addwf	fsr2l,f,c
 15338  0022D4  5008               	movf	i2UART_buff_get@_this+1,w,c
 15339  0022D6  22DA               	addwfc	fsr2h,f,c
 15340  0022D8  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 15341  0022DC  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 15342  0022E0  5009               	movf	??i2_UART_buff_get,w,c
 15343  0022E2  2407               	addwf	i2UART_buff_get@_this,w,c
 15344  0022E4  6ED9               	movwf	fsr2l,c
 15345  0022E6  500A               	movf	??i2_UART_buff_get+1,w,c
 15346  0022E8  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 15347  0022EA  6EDA               	movwf	fsr2h,c
 15348  0022EC  50DF               	movf	indf2,w,c
 15349  0022EE  6E0B               	movwf	i2UART_buff_get@c,c
 15350                           
 15351                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15352  0022F0  EE20 F0CA          	lfsr	2,202
 15353  0022F4  5007               	movf	i2UART_buff_get@_this,w,c
 15354  0022F6  26D9               	addwf	fsr2l,f,c
 15355  0022F8  5008               	movf	i2UART_buff_get@_this+1,w,c
 15356  0022FA  22DA               	addwfc	fsr2h,f,c
 15357  0022FC  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15358  002300  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15359  002304  0E00               	movlw	0
 15360  002306  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15361  002308  0EC8               	movlw	200
 15362  00230A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15363  00230C  EC94  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 15364  002310  EE20 F0CA          	lfsr	2,202
 15365  002314  5007               	movf	i2UART_buff_get@_this,w,c
 15366  002316  26D9               	addwf	fsr2l,f,c
 15367  002318  5008               	movf	i2UART_buff_get@_this+1,w,c
 15368  00231A  22DA               	addwfc	fsr2h,f,c
 15369  00231C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15370  002320  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15371                           
 15372                           ;UART.c: 86: --_this->count;
 15373  002324  EE20 F0CC          	lfsr	2,204
 15374  002328  5007               	movf	i2UART_buff_get@_this,w,c
 15375  00232A  26D9               	addwf	fsr2l,f,c
 15376  00232C  5008               	movf	i2UART_buff_get@_this+1,w,c
 15377  00232E  22DA               	addwfc	fsr2h,f,c
 15378  002330  06DE               	decf	postinc2,f,c
 15379  002332  0E00               	movlw	0
 15380  002334  5ADD               	subwfb	postdec2,f,c
 15381                           
 15382                           ;UART.c: 87: } else {
 15383  002336  D002               	goto	i2l1137
 15384  002338                     i2l5082:
 15385                           
 15386                           ;UART.c: 88: c = 0;
 15387  002338  0E00               	movlw	0
 15388  00233A  6E0B               	movwf	i2UART_buff_get@c,c
 15389  00233C                     i2l1137:
 15390                           
 15391                           ;UART.c: 89: }
 15392                           ;UART.c: 90: return (c);
 15393  00233C  500B               	movf	i2UART_buff_get@c,w,c
 15394  00233E  0012               	return	
 15395  002340                     __end_ofi2_UART_buff_get:
 15396                           	opt stack 0
 15397                           tosu	equ	0xFFF
 15398                           tosh	equ	0xFFE
 15399                           tosl	equ	0xFFD
 15400                           pclatu	equ	0xFFB
 15401                           pclath	equ	0xFFA
 15402                           tblptru	equ	0xFF8
 15403                           tblptrh	equ	0xFF7
 15404                           tblptrl	equ	0xFF6
 15405                           tablat	equ	0xFF5
 15406                           prodh	equ	0xFF4
 15407                           prodl	equ	0xFF3
 15408                           intcon	equ	0xFF2
 15409                           intcon2	equ	0xFF1
 15410                           indf0	equ	0xFEF
 15411                           postinc0	equ	0xFEE
 15412                           fsr0h	equ	0xFEA
 15413                           fsr0l	equ	0xFE9
 15414                           wreg	equ	0xFE8
 15415                           fsr1h	equ	0xFE2
 15416                           fsr1l	equ	0xFE1
 15417                           indf2	equ	0xFDF
 15418                           postinc2	equ	0xFDE
 15419                           postdec2	equ	0xFDD
 15420                           plusw2	equ	0xFDB
 15421                           fsr2h	equ	0xFDA
 15422                           fsr2l	equ	0xFD9
 15423                           status	equ	0xFD8
 15424                           
 15425 ;; *************** function _EUSART1_Receive_ISR *****************
 15426 ;; Defined at:
 15427 ;;		line 139 in file "UART.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;		None
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;  data            1   11[COMRAM] unsigned char 
 15432 ;; Return value:  Size  Location     Type
 15433 ;;                  1    wreg      void 
 15434 ;; Registers used:
 15435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15436 ;; Tracked objects:
 15437 ;;		On entry : 0/0
 15438 ;;		On exit  : 0/0
 15439 ;;		Unchanged: 0/0
 15440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15441 ;;      Params:         0       0       0       0       0       0       0
 15442 ;;      Locals:         1       0       0       0       0       0       0
 15443 ;;      Temps:          0       0       0       0       0       0       0
 15444 ;;      Totals:         1       0       0       0       0       0       0
 15445 ;;Total ram usage:        1 bytes
 15446 ;; Hardware stack levels used:    1
 15447 ;; Hardware stack levels required when called:    2
 15448 ;; This function calls:
 15449 ;;		i2_UART_buff_put
 15450 ;; This function is called by:
 15451 ;;		_INTERRUPT_InterruptManager
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           
 15455                           	psect	text83
 15456  002E24                     __ptext83:
 15457                           	opt stack 0
 15458  002E24                     _EUSART1_Receive_ISR:
 15459                           	opt stack 21
 15460                           
 15461                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 15462                           
 15463                           ;incstack = 0
 15464  002E24  A2AB               	btfss	4011,1,c	;volatile
 15465  002E26  D002               	goto	i2l1168
 15466                           
 15467                           ;UART.c: 143: RC1STAbits.CREN = 0;
 15468  002E28  98AB               	bcf	4011,4,c	;volatile
 15469                           
 15470                           ;UART.c: 144: RC1STAbits.CREN = 1;
 15471  002E2A  88AB               	bsf	4011,4,c	;volatile
 15472  002E2C                     i2l1168:
 15473                           
 15474                           ;UART.c: 145: }
 15475                           ;UART.c: 146: unsigned char data = RCREG1;
 15476  002E2C  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 15477                           
 15478                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 15479  002E30  0E00               	movlw	low _input_buffer
 15480  002E32  6E07               	movwf	i2UART_buff_put@_this,c
 15481  002E34  0E03               	movlw	high _input_buffer
 15482  002E36  6E08               	movwf	i2UART_buff_put@_this+1,c
 15483  002E38  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 15484  002E3C  EC88  F00B         	call	i2_UART_buff_put	;wreg free
 15485  002E40  0012               	return		;funcret
 15486  002E42                     __end_of_EUSART1_Receive_ISR:
 15487                           	opt stack 0
 15488                           tosu	equ	0xFFF
 15489                           tosh	equ	0xFFE
 15490                           tosl	equ	0xFFD
 15491                           pclatu	equ	0xFFB
 15492                           pclath	equ	0xFFA
 15493                           tblptru	equ	0xFF8
 15494                           tblptrh	equ	0xFF7
 15495                           tblptrl	equ	0xFF6
 15496                           tablat	equ	0xFF5
 15497                           prodh	equ	0xFF4
 15498                           prodl	equ	0xFF3
 15499                           intcon	equ	0xFF2
 15500                           intcon2	equ	0xFF1
 15501                           indf0	equ	0xFEF
 15502                           postinc0	equ	0xFEE
 15503                           fsr0h	equ	0xFEA
 15504                           fsr0l	equ	0xFE9
 15505                           wreg	equ	0xFE8
 15506                           fsr1h	equ	0xFE2
 15507                           fsr1l	equ	0xFE1
 15508                           indf2	equ	0xFDF
 15509                           postinc2	equ	0xFDE
 15510                           postdec2	equ	0xFDD
 15511                           plusw2	equ	0xFDB
 15512                           fsr2h	equ	0xFDA
 15513                           fsr2l	equ	0xFD9
 15514                           status	equ	0xFD8
 15515                           
 15516 ;; *************** function i2_UART_buff_put *****************
 15517 ;; Defined at:
 15518 ;;		line 68 in file "UART.c"
 15519 ;; Parameters:    Size  Location     Type
 15520 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15521 ;;		 -> output_buffer(206), input_buffer(206), 
 15522 ;;  c               1    8[COMRAM] const unsigned char 
 15523 ;; Auto vars:     Size  Location     Type
 15524 ;;		None
 15525 ;; Return value:  Size  Location     Type
 15526 ;;                  1    wreg      void 
 15527 ;; Registers used:
 15528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15529 ;; Tracked objects:
 15530 ;;		On entry : 0/0
 15531 ;;		On exit  : 0/0
 15532 ;;		Unchanged: 0/0
 15533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15534 ;;      Params:         3       0       0       0       0       0       0
 15535 ;;      Locals:         0       0       0       0       0       0       0
 15536 ;;      Temps:          2       0       0       0       0       0       0
 15537 ;;      Totals:         5       0       0       0       0       0       0
 15538 ;;Total ram usage:        5 bytes
 15539 ;; Hardware stack levels used:    1
 15540 ;; Hardware stack levels required when called:    1
 15541 ;; This function calls:
 15542 ;;		i2_UART_buff_modulo_inc
 15543 ;; This function is called by:
 15544 ;;		_EUSART1_Receive_ISR
 15545 ;; This function uses a non-reentrant model
 15546 ;;
 15547                           
 15548                           	psect	text84
 15549  001710                     __ptext84:
 15550                           	opt stack 0
 15551  001710                     i2_UART_buff_put:
 15552                           	opt stack 21
 15553                           
 15554                           ;UART.c: 69: if (_this->count < 200) {
 15555                           
 15556                           ;incstack = 0
 15557  001710  EE20 F0CC          	lfsr	2,204
 15558  001714  5007               	movf	i2UART_buff_put@_this,w,c
 15559  001716  26D9               	addwf	fsr2l,f,c
 15560  001718  5008               	movf	i2UART_buff_put@_this+1,w,c
 15561  00171A  22DA               	addwfc	fsr2h,f,c
 15562  00171C  0E01               	movlw	1
 15563  00171E  BEDB               	btfsc	plusw2,7,c
 15564  001720  D007               	goto	i2l5062
 15565  001722  0E01               	movlw	1
 15566  001724  50DB               	movf	plusw2,w,c
 15567  001726  E13A               	bnz	i2l5068
 15568  001728  0EC8               	movlw	200
 15569  00172A  5CDE               	subwf	postinc2,w,c
 15570  00172C  B0D8               	btfsc	status,0,c
 15571  00172E  D036               	goto	i2l5068
 15572  001730                     i2l5062:
 15573                           
 15574                           ;UART.c: 70: _this->buf[_this->head] = c;
 15575  001730  EE20 F0C8          	lfsr	2,200
 15576  001734  5007               	movf	i2UART_buff_put@_this,w,c
 15577  001736  26D9               	addwf	fsr2l,f,c
 15578  001738  5008               	movf	i2UART_buff_put@_this+1,w,c
 15579  00173A  22DA               	addwfc	fsr2h,f,c
 15580  00173C  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15581  001740  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15582  001744  500A               	movf	??i2_UART_buff_put,w,c
 15583  001746  2407               	addwf	i2UART_buff_put@_this,w,c
 15584  001748  6ED9               	movwf	fsr2l,c
 15585  00174A  500B               	movf	??i2_UART_buff_put+1,w,c
 15586  00174C  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15587  00174E  6EDA               	movwf	fsr2h,c
 15588  001750  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15589                           
 15590                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15591  001754  EE20 F0C8          	lfsr	2,200
 15592  001758  5007               	movf	i2UART_buff_put@_this,w,c
 15593  00175A  26D9               	addwf	fsr2l,f,c
 15594  00175C  5008               	movf	i2UART_buff_put@_this+1,w,c
 15595  00175E  22DA               	addwfc	fsr2h,f,c
 15596  001760  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15597  001764  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15598  001768  0E00               	movlw	0
 15599  00176A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15600  00176C  0EC8               	movlw	200
 15601  00176E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15602  001770  EC94  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 15603  001774  EE20 F0C8          	lfsr	2,200
 15604  001778  5007               	movf	i2UART_buff_put@_this,w,c
 15605  00177A  26D9               	addwf	fsr2l,f,c
 15606  00177C  5008               	movf	i2UART_buff_put@_this+1,w,c
 15607  00177E  22DA               	addwfc	fsr2h,f,c
 15608  001780  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15609  001784  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15610                           
 15611                           ;UART.c: 72: ++_this->count;
 15612  001788  EE20 F0CC          	lfsr	2,204
 15613  00178C  5007               	movf	i2UART_buff_put@_this,w,c
 15614  00178E  26D9               	addwf	fsr2l,f,c
 15615  001790  5008               	movf	i2UART_buff_put@_this+1,w,c
 15616  001792  22DA               	addwfc	fsr2h,f,c
 15617  001794  2ADE               	incf	postinc2,f,c
 15618  001796  0E00               	movlw	0
 15619  001798  22DD               	addwfc	postdec2,f,c
 15620                           
 15621                           ;UART.c: 73: } else {
 15622  00179A  0012               	return	
 15623  00179C                     i2l5068:
 15624                           
 15625                           ;UART.c: 74: _this->buf[_this->head] = c;
 15626  00179C  EE20 F0C8          	lfsr	2,200
 15627  0017A0  5007               	movf	i2UART_buff_put@_this,w,c
 15628  0017A2  26D9               	addwf	fsr2l,f,c
 15629  0017A4  5008               	movf	i2UART_buff_put@_this+1,w,c
 15630  0017A6  22DA               	addwfc	fsr2h,f,c
 15631  0017A8  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15632  0017AC  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15633  0017B0  500A               	movf	??i2_UART_buff_put,w,c
 15634  0017B2  2407               	addwf	i2UART_buff_put@_this,w,c
 15635  0017B4  6ED9               	movwf	fsr2l,c
 15636  0017B6  500B               	movf	??i2_UART_buff_put+1,w,c
 15637  0017B8  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15638  0017BA  6EDA               	movwf	fsr2h,c
 15639  0017BC  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15640                           
 15641                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15642  0017C0  EE20 F0C8          	lfsr	2,200
 15643  0017C4  5007               	movf	i2UART_buff_put@_this,w,c
 15644  0017C6  26D9               	addwf	fsr2l,f,c
 15645  0017C8  5008               	movf	i2UART_buff_put@_this+1,w,c
 15646  0017CA  22DA               	addwfc	fsr2h,f,c
 15647  0017CC  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15648  0017D0  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15649  0017D4  0E00               	movlw	0
 15650  0017D6  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15651  0017D8  0EC8               	movlw	200
 15652  0017DA  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15653  0017DC  EC94  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 15654  0017E0  EE20 F0C8          	lfsr	2,200
 15655  0017E4  5007               	movf	i2UART_buff_put@_this,w,c
 15656  0017E6  26D9               	addwf	fsr2l,f,c
 15657  0017E8  5008               	movf	i2UART_buff_put@_this+1,w,c
 15658  0017EA  22DA               	addwfc	fsr2h,f,c
 15659  0017EC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15660  0017F0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15661                           
 15662                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15663  0017F4  EE20 F0CA          	lfsr	2,202
 15664  0017F8  5007               	movf	i2UART_buff_put@_this,w,c
 15665  0017FA  26D9               	addwf	fsr2l,f,c
 15666  0017FC  5008               	movf	i2UART_buff_put@_this+1,w,c
 15667  0017FE  22DA               	addwfc	fsr2h,f,c
 15668  001800  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15669  001804  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15670  001808  0E00               	movlw	0
 15671  00180A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15672  00180C  0EC8               	movlw	200
 15673  00180E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15674  001810  EC94  F016         	call	i2_UART_buff_modulo_inc	;wreg free
 15675  001814  EE20 F0CA          	lfsr	2,202
 15676  001818  5007               	movf	i2UART_buff_put@_this,w,c
 15677  00181A  26D9               	addwf	fsr2l,f,c
 15678  00181C  5008               	movf	i2UART_buff_put@_this+1,w,c
 15679  00181E  22DA               	addwfc	fsr2h,f,c
 15680  001820  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15681  001824  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15682  001828  0012               	return	
 15683  00182A                     __end_ofi2_UART_buff_put:
 15684                           	opt stack 0
 15685                           tosu	equ	0xFFF
 15686                           tosh	equ	0xFFE
 15687                           tosl	equ	0xFFD
 15688                           pclatu	equ	0xFFB
 15689                           pclath	equ	0xFFA
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           intcon2	equ	0xFF1
 15698                           indf0	equ	0xFEF
 15699                           postinc0	equ	0xFEE
 15700                           fsr0h	equ	0xFEA
 15701                           fsr0l	equ	0xFE9
 15702                           wreg	equ	0xFE8
 15703                           fsr1h	equ	0xFE2
 15704                           fsr1l	equ	0xFE1
 15705                           indf2	equ	0xFDF
 15706                           postinc2	equ	0xFDE
 15707                           postdec2	equ	0xFDD
 15708                           plusw2	equ	0xFDB
 15709                           fsr2h	equ	0xFDA
 15710                           fsr2l	equ	0xFD9
 15711                           status	equ	0xFD8
 15712                           
 15713 ;; *************** function i2_UART_buff_modulo_inc *****************
 15714 ;; Defined at:
 15715 ;;		line 106 in file "UART.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;  value           2    0[COMRAM] const unsigned int 
 15718 ;;  modulus         2    2[COMRAM] const unsigned int 
 15719 ;; Auto vars:     Size  Location     Type
 15720 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 15721 ;; Return value:  Size  Location     Type
 15722 ;;                  2    0[COMRAM] unsigned int 
 15723 ;; Registers used:
 15724 ;;		wreg, status,2, status,0
 15725 ;; Tracked objects:
 15726 ;;		On entry : 0/0
 15727 ;;		On exit  : 0/0
 15728 ;;		Unchanged: 0/0
 15729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15730 ;;      Params:         4       0       0       0       0       0       0
 15731 ;;      Locals:         2       0       0       0       0       0       0
 15732 ;;      Temps:          0       0       0       0       0       0       0
 15733 ;;      Totals:         6       0       0       0       0       0       0
 15734 ;;Total ram usage:        6 bytes
 15735 ;; Hardware stack levels used:    1
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		i2_UART_buff_put
 15740 ;;		i2_UART_buff_get
 15741 ;; This function uses a non-reentrant model
 15742 ;;
 15743                           
 15744                           	psect	text85
 15745  002D28                     __ptext85:
 15746                           	opt stack 0
 15747  002D28                     i2_UART_buff_modulo_inc:
 15748                           	opt stack 21
 15749                           
 15750                           ;UART.c: 107: unsigned int my_value = value + 1;
 15751                           
 15752                           ;incstack = 0
 15753  002D28  0E01               	movlw	1
 15754  002D2A  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 15755  002D2C  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 15756  002D2E  0E00               	movlw	0
 15757  002D30  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 15758  002D32  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 15759                           
 15760                           ;UART.c: 108: if (my_value >= modulus) {
 15761  002D34  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 15762  002D36  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 15763  002D38  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 15764  002D3A  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 15765  002D3C  A0D8               	btfss	status,0,c
 15766  002D3E  D004               	goto	i2l4588
 15767                           
 15768                           ;UART.c: 109: my_value = 0;
 15769  002D40  0E00               	movlw	0
 15770  002D42  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 15771  002D44  0E00               	movlw	0
 15772  002D46  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 15773  002D48                     i2l4588:
 15774                           
 15775                           ;UART.c: 110: }
 15776                           ;UART.c: 111: return (my_value);
 15777  002D48  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 15778  002D4C  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 15779  002D50  0012               	return	
 15780  002D52                     __end_ofi2_UART_buff_modulo_inc:
 15781                           	opt stack 0
 15782                           tosu	equ	0xFFF
 15783                           tosh	equ	0xFFE
 15784                           tosl	equ	0xFFD
 15785                           pclatu	equ	0xFFB
 15786                           pclath	equ	0xFFA
 15787                           tblptru	equ	0xFF8
 15788                           tblptrh	equ	0xFF7
 15789                           tblptrl	equ	0xFF6
 15790                           tablat	equ	0xFF5
 15791                           prodh	equ	0xFF4
 15792                           prodl	equ	0xFF3
 15793                           intcon	equ	0xFF2
 15794                           intcon2	equ	0xFF1
 15795                           indf0	equ	0xFEF
 15796                           postinc0	equ	0xFEE
 15797                           fsr0h	equ	0xFEA
 15798                           fsr0l	equ	0xFE9
 15799                           wreg	equ	0xFE8
 15800                           fsr1h	equ	0xFE2
 15801                           fsr1l	equ	0xFE1
 15802                           indf2	equ	0xFDF
 15803                           postinc2	equ	0xFDE
 15804                           postdec2	equ	0xFDD
 15805                           plusw2	equ	0xFDB
 15806                           fsr2h	equ	0xFDA
 15807                           fsr2l	equ	0xFD9
 15808                           status	equ	0xFD8
 15809                           
 15810 ;; *************** function _ADC_ISR *****************
 15811 ;; Defined at:
 15812 ;;		line 128 in file "mcc_generated_files/adc.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;		None
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		None
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15826 ;;      Params:         0       0       0       0       0       0       0
 15827 ;;      Locals:         0       0       0       0       0       0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0
 15829 ;;      Totals:         0       0       0       0       0       0       0
 15830 ;;Total ram usage:        0 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; This function calls:
 15833 ;;		Nothing
 15834 ;; This function is called by:
 15835 ;;		_INTERRUPT_InterruptManager
 15836 ;; This function uses a non-reentrant model
 15837 ;;
 15838                           
 15839                           	psect	text86
 15840  002F5A                     __ptext86:
 15841                           	opt stack 0
 15842  002F5A                     _ADC_ISR:
 15843                           	opt stack 23
 15844                           
 15845                           ;adc.c: 131: PIR1bits.ADIF = 0;
 15846                           
 15847                           ;incstack = 0
 15848  002F5A  9C9E               	bcf	3998,6,c	;volatile
 15849  002F5C  0012               	return		;funcret
 15850  002F5E                     __end_of_ADC_ISR:
 15851                           	opt stack 0
 15852                           tosu	equ	0xFFF
 15853                           tosh	equ	0xFFE
 15854                           tosl	equ	0xFFD
 15855                           pclatu	equ	0xFFB
 15856                           pclath	equ	0xFFA
 15857                           tblptru	equ	0xFF8
 15858                           tblptrh	equ	0xFF7
 15859                           tblptrl	equ	0xFF6
 15860                           tablat	equ	0xFF5
 15861                           prodh	equ	0xFF4
 15862                           prodl	equ	0xFF3
 15863                           intcon	equ	0xFF2
 15864                           intcon2	equ	0xFF1
 15865                           indf0	equ	0xFEF
 15866                           postinc0	equ	0xFEE
 15867                           fsr0h	equ	0xFEA
 15868                           fsr0l	equ	0xFE9
 15869                           wreg	equ	0xFE8
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           indf2	equ	0xFDF
 15873                           postinc2	equ	0xFDE
 15874                           postdec2	equ	0xFDD
 15875                           plusw2	equ	0xFDB
 15876                           fsr2h	equ	0xFDA
 15877                           fsr2l	equ	0xFD9
 15878                           status	equ	0xFD8
 15879                           tosu	equ	0xFFF
 15880                           tosh	equ	0xFFE
 15881                           tosl	equ	0xFFD
 15882                           pclatu	equ	0xFFB
 15883                           pclath	equ	0xFFA
 15884                           tblptru	equ	0xFF8
 15885                           tblptrh	equ	0xFF7
 15886                           tblptrl	equ	0xFF6
 15887                           tablat	equ	0xFF5
 15888                           prodh	equ	0xFF4
 15889                           prodl	equ	0xFF3
 15890                           intcon	equ	0xFF2
 15891                           intcon2	equ	0xFF1
 15892                           indf0	equ	0xFEF
 15893                           postinc0	equ	0xFEE
 15894                           fsr0h	equ	0xFEA
 15895                           fsr0l	equ	0xFE9
 15896                           wreg	equ	0xFE8
 15897                           fsr1h	equ	0xFE2
 15898                           fsr1l	equ	0xFE1
 15899                           indf2	equ	0xFDF
 15900                           postinc2	equ	0xFDE
 15901                           postdec2	equ	0xFDD
 15902                           plusw2	equ	0xFDB
 15903                           fsr2h	equ	0xFDA
 15904                           fsr2l	equ	0xFD9
 15905                           status	equ	0xFD8
 15906                           
 15907                           	psect	text87
 15908  000000                     __ptext87:
 15909                           	opt stack 0
 15910                           tosu	equ	0xFFF
 15911                           tosh	equ	0xFFE
 15912                           tosl	equ	0xFFD
 15913                           pclatu	equ	0xFFB
 15914                           pclath	equ	0xFFA
 15915                           tblptru	equ	0xFF8
 15916                           tblptrh	equ	0xFF7
 15917                           tblptrl	equ	0xFF6
 15918                           tablat	equ	0xFF5
 15919                           prodh	equ	0xFF4
 15920                           prodl	equ	0xFF3
 15921                           intcon	equ	0xFF2
 15922                           intcon2	equ	0xFF1
 15923                           indf0	equ	0xFEF
 15924                           postinc0	equ	0xFEE
 15925                           fsr0h	equ	0xFEA
 15926                           fsr0l	equ	0xFE9
 15927                           wreg	equ	0xFE8
 15928                           fsr1h	equ	0xFE2
 15929                           fsr1l	equ	0xFE1
 15930                           indf2	equ	0xFDF
 15931                           postinc2	equ	0xFDE
 15932                           postdec2	equ	0xFDD
 15933                           plusw2	equ	0xFDB
 15934                           fsr2h	equ	0xFDA
 15935                           fsr2l	equ	0xFD9
 15936                           status	equ	0xFD8
 15937                           
 15938                           	psect	rparam
 15939  0000                     tosu	equ	0xFFF
 15940                           tosh	equ	0xFFE
 15941                           tosl	equ	0xFFD
 15942                           pclatu	equ	0xFFB
 15943                           pclath	equ	0xFFA
 15944                           tblptru	equ	0xFF8
 15945                           tblptrh	equ	0xFF7
 15946                           tblptrl	equ	0xFF6
 15947                           tablat	equ	0xFF5
 15948                           prodh	equ	0xFF4
 15949                           prodl	equ	0xFF3
 15950                           intcon	equ	0xFF2
 15951                           intcon2	equ	0xFF1
 15952                           indf0	equ	0xFEF
 15953                           postinc0	equ	0xFEE
 15954                           fsr0h	equ	0xFEA
 15955                           fsr0l	equ	0xFE9
 15956                           wreg	equ	0xFE8
 15957                           fsr1h	equ	0xFE2
 15958                           fsr1l	equ	0xFE1
 15959                           indf2	equ	0xFDF
 15960                           postinc2	equ	0xFDE
 15961                           postdec2	equ	0xFDD
 15962                           plusw2	equ	0xFDB
 15963                           fsr2h	equ	0xFDA
 15964                           fsr2l	equ	0xFD9
 15965                           status	equ	0xFD8
 15966                           
 15967                           	psect	temp
 15968  000045                     btemp:
 15969                           	opt stack 0
 15970  000045                     	ds	1
 15971  0000                     int$flags	set	btemp
 15972                           tosu	equ	0xFFF
 15973                           tosh	equ	0xFFE
 15974                           tosl	equ	0xFFD
 15975                           pclatu	equ	0xFFB
 15976                           pclath	equ	0xFFA
 15977                           tblptru	equ	0xFF8
 15978                           tblptrh	equ	0xFF7
 15979                           tblptrl	equ	0xFF6
 15980                           tablat	equ	0xFF5
 15981                           prodh	equ	0xFF4
 15982                           prodl	equ	0xFF3
 15983                           intcon	equ	0xFF2
 15984                           intcon2	equ	0xFF1
 15985                           indf0	equ	0xFEF
 15986                           postinc0	equ	0xFEE
 15987                           fsr0h	equ	0xFEA
 15988                           fsr0l	equ	0xFE9
 15989                           wreg	equ	0xFE8
 15990                           fsr1h	equ	0xFE2
 15991                           fsr1l	equ	0xFE1
 15992                           indf2	equ	0xFDF
 15993                           postinc2	equ	0xFDE
 15994                           postdec2	equ	0xFDD
 15995                           plusw2	equ	0xFDB
 15996                           fsr2h	equ	0xFDA
 15997                           fsr2l	equ	0xFD9
 15998                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         1044
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12     160
    BANK1           256     24      81
    BANK2           256      0     206
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0     200

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8678 size(2) Largest target is 0
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(COMRAM[3]), ring_buffer(BANK2[206]), rx_buffer(BANK5[200]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    F8790.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    F8785.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 
		 -> LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    _DataBarGraphs->_ReceiveArrayGet
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->___ftmul
    _updateComms->_receiveData
    _respondECU->_sendData
    ___fttol->___ftmul
    _Splash->_oledPrint
    _Setupdisplay->_oledClear
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   67122
                          _ClearTime
                   _GetDataBarGraphA
                   _GetDataBarGraphB
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   12564
                      _DataBarGraphs
                    _ReceiveArrayGet
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7327
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5396
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     302
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         10    10      0    2293
                                             37 COMRAM     4     4      0
                                              0 BANK0      6     6      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                       _wipeRxBuffer
 ---------------------------------------------------------------------------------
 (3) _wipeRxBuffer                                         2     2      0      69
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     124
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     124
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3     706
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     5     3      2
                                              0 BANK0      2     2      0
                    _ReceiveArrayGet (ARG)
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReceiveArrayGet                                      2     0      2     278
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DataBarGraphs                                        4     0      4     172
                                             28 COMRAM     4     0      4
                    _ReceiveArrayGet (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              0 BANK1     15    11      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   10386
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    5370
                                              8 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   14117
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   10134
                                              8 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    4920
                                             38 COMRAM     4     4      0
                                              0 BANK1     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     752
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5016
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    3983
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    3983
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2872
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4989
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3155
                                             16 BANK1      7     3      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2556
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   12731
                                              5 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    3761
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     494
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     648
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphB                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphA                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetDataBarGraphA
   _GetDataBarGraphB
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     _LEDsetBar (ARG)
       ___awdiv
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftmul (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _GetDataBarGraphA (ARG)
           _GetDataBarGraphB (ARG)
           ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   ___ftmul
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___fttol
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
   _updateComms
     _DataBarGraphs
       _ReceiveArrayGet (ARG)
     _ReceiveArrayGet
     _handleIndicators
       _ReceiveArrayGet (ARG)
       _SetLEDOut (ARG)
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _wipeRxBuffer *
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      C8      15       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      51       6       31.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     467       9        0.0%
DATA                 0      0     467      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Nov 11 20:44:24 2016

       __end_of_FastTransfer_buffer_flush 28B6                    i2_UART_buff_modulo_inc 2D28  
        __end_of_TMR2_SetInterruptHandler 2F28                                         _i 00CF  
                                       _k 00D3                              _wipeRxBuffer 2BA4  
                            _rx_array_inx 003D                              ___awdiv@sign 0020  
                LEDBsetBrightness@timeOut 013B                                Off_Led@led 001B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l634 2040                                       l708 013A  
                                     l629 1FCE                                       l908 2714  
                                     l894 244A                                       l975 2BDA  
                                     l985 2A48                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 2F5E      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 2DC6                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
           i2UART_buff_modulo_inc@modulus 0003                              __CFG_LVP$OFF 000000  
                        __end_of_I2C1_ISR 0AFA                                      l1302 2C32  
                                    l1137 22AA                                      l1234 296A  
                                    l1537 1EDA                                      l4062 2CF4  
                                    l6020 1E32                                      l6014 1E06  
                                    l6110 1C56                                      l6102 1C26  
                                    l6030 2D1E                                      l6024 1E42  
                                    l4440 2C1E                                      l4432 26D6  
                                    l6018 1E26                                      l7010 1FBE  
                                    l6042 2CB2                                      l6202 254C  
                                    l6210 1F3E                                      l6114 1C6E  
                                    l6106 1C3E                                      l6050 1616  
                                    l6124 1C9E                                      l6300 0C56  
                                    l6132 2A1C                                      l6038 29B4  
                                    l7022 2024                                      l7014 1FD8  
                                    l7110 1364                                      l7030 1240  
                                    l6046 2CC2                                      l6214 1F70  
                                    l6118 1C86                                      l6070 22A6  
                                    l4198 0F92                                      l7024 2038  
                                    l7032 126E                                      l6080 1D04  
                                    l4472 2BB4                                      l6056 1682  
                                    l7018 1FEE                                      l7050 129E  
                                    l7202 15E4                                      l6082 1D1A  
                                    l6090 1D5C                                      l6330 0CE0  
                                    l6322 0CBE                                      l6314 0C9C  
                                    l6242 0B40                                      l6234 0B1E  
                                    l6226 0AFC                                      l6138 2A32  
                                    l6146 2A4E                                      l7052 12A6  
                                    l7124 113A                                      l6084 1D30  
                                    l6076 1CD8                                      l6308 0C78  
                                    l6148 2A54                                      l4476 2BC4  
                                    l6182 24F4                                      l6414 1A56  
                                    l7142 11A6                                      l7118 1106  
                                    l6086 1D46                                      l6078 1CEE  
                                    l6270 0BCC                                      l6184 2524  
                                    l6416 1A5C                                      l7152 11E4  
                                    l6352 0D48                                      l6344 0D26  
                                    l6336 0D04                                      l6264 0BA8  
                                    l6256 0B86                                      l6248 0B64  
                                    l6360 0D6C                                      l6530 00E4  
                                    l7090 1306                                      l6426 1ACA  
                                    l7138 1188                                      l6098 1C0E  
                                    l6532 00FA                                      l7092 1334  
                                    l6428 1AFA                                      l7148 11C6  
                                    l6292 0C34                                      l6380 140C  
                                    l6372 13A0                                      l6470 2496  
                                    l6462 2478                                      l6550 03D6  
                                    l6542 023C                                      l6446 1B2A  
                                    l7166 14EC                                      l6286 0C10  
                                    l6278 0BEE                                      l6710 0816  
                                    l6390 1484                                      l6382 1418  
                                    l6374 13BA                                      l6616 2178  
                                    l6480 24B6                                      l6472 249A  
                                    l6456 2468                                      l7184 157E  
                                    l6624 050A                                      l6632 053C  
                                    l6384 1446                                      l6376 13D6  
                                    l7264 1A3C                                      l7256 195E  
                                    l6546 02FA                                      l7194 15AE  
                                    l6386 144C                                      l6378 13F0  
                                    l6564 21B4                                      l6468 248E  
                                    l6484 24C0                                      l7196 15BE  
                                    l7188 1592                                      l6660 0638  
                                    l6644 05DE                                      l6628 0538  
                                    l6566 21E2                                      l6558 219A  
                                    l6590 20FE                                      l6750 2938  
                                    l7198 15C8                                      l6734 2408  
                                    l6646 05F6                                      l6584 2212  
                                    l6488 24CE                                      l6744 291E  
                                    l6664 066A                                      l6648 05FA  
                                    l6656 0630                                      l6762 2962  
                                    l6682 07BA                                      l6596 211A  
                                    l6772 29EE                                      l6684 07C0  
                                    l6676 072C                                      l6668 0692  
                                    l6598 2148                                      l6790 1EA8  
                                    l6782 1E6A                                      l6686 07CC  
                                    l6768 29C4                                      l6792 1EC6  
                                    l6784 1E74                                      l6794 1ED0  
                                    l6786 1E92                                      l6778 1E5C  
                                    l6698 0800                                      l6956 205E  
                                    l6958 208C                                      l6976 20BC  
                                    l6978 20C4                                      STR_1 7FE3  
                                    STR_2 7FFC                                      STR_3 7FF6  
                                    STR_4 7FEE                                      _CRC8 2A16  
                         _ReceiveArrayGet 2E5E                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u3171 0F90                                      u3490 2714  
                                    u6130 1BF6                                      u3484 26F6  
                                    u3485 26F0                                      u7008 0540  
                                    u7009 0554                                      u6090 223A  
                                    u7220 244A                                      u7028 055E  
                                    u7029 0572                                      u7214 2426  
                                    u7118 063C                                      u7215 2420  
                                    u7151 06D2                                      u7119 0650  
                                    u7128 066E                                      u7048 057C  
                                    u7129 0682                                      u7049 0590  
                                    u7058 0596                                      u7059 05AA  
                                    i2l60 0856                                      u6700 0132  
                                    u7068 05B0                                      u6525 2822  
                                    u7069 05C4                                      u7270 29E4  
                                    u7190 23DE                                      u6518 146C  
                                    u8070 1976                                      i2l71 0912  
                                    i2l63 08D4                                      u6535 283E  
                                    i2l72 0922                                      u7280 2A0E  
                                    u7088 05E2                                      u6448 138A  
                                    u8080 1A3A                                      i2l65 08DC  
                                    i2l90 0A40                                      i2l82 09A6  
                                    i2l66 08E4                                      u6458 13A4  
                                    i2l76 0992                                      u6724 0160  
                                    u6468 13BE                                      u6725 0158  
                                    u7277 29DA                                      i2l94 0A96  
                                    i2l86 09FC                                      u6830 2192  
                                    u6814 0404                                      u6734 01D8  
                                    u7630 1FB4                                      u6478 13DA  
                                    u6815 03FC                                      u6735 01D0  
                                    u7287 2A04                                      u6824 0476  
                                    u6488 13F4                                      i2l89 0A2E  
                                    u6825 046E                                      u7801 1118  
                                    u6754 026A                                      u6498 141C  
                                    u6755 0262                                      u6764 028E  
                                    u6765 0286                                      u6784 0326  
                                    u6785 031E                                      u7841 14C8  
                                    u8377 2C24                                      u6890 20F6  
                                    u6794 035A                                      u6795 0352  
                                    u7860 1512                                      u7781 10E4  
                                    u6968 04E4                                      u7865 1508  
                                    u6969 04F8                                      u6988 0514  
                                    u6989 0528                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F0  
                __end_of_GetDataBarGraphA 2F3C                  __end_of_GetDataBarGraphB 2F32  
                           oledPutChar@ch 0144                                      _main 1940  
                            ___ftpack@arg 001B                              ___ftpack@exp 001E  
                         _TMR0_StartTimer 2F56                                      _time 003F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 0021                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                         OLED_command@com 0025                                      prodh 000FF4  
                                    prodl 000FF3           __end_of_FastTransfer_buffer_put 10D2  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         __end_of_GetTime 2F44                              ___ftmul@cntr 00FC  
                            ___param_bank 000010                              ___ftmul@sign 00FD  
                         __end_of_Off_Led 1CD6            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 23CC  
                            ___fttol@exp1 0147                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 0143                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 2E06                                _i2c1_state 0038  
                      __size_of_OLED_init 008C            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 001B             __end_of_OSCILLATOR_Initialize 2F14  
               I2C1_MasterTRBInsert@pflag 001F                          LEDbegin@i2c_addr 0143  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 20E6  
                                   ?_main 0001                           __end_of___awdiv 24D8  
                       __end_of_I2C1_Stop 2B2C                           __end_of___ftmul 1224  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 15F6                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATC1 007C59  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l303 0094                                     i2l501 0E6A  
                                   i2l510 0E8E                                     i2l504 0E76  
                                   i2l513 0E9A                                     i2l507 0E82  
                                   i2l291 005A                                     i2l293 0066  
                                   i2l295 0072                                     i2l297 007E  
                                   i2l289 004E                                     i2l482 0DE2  
                                   i2l491 0E06                                     i2l475 0DCA  
                                   i2l299 008A                                     i2l468 0F34  
                                   i2l485 0DEE                                     i2l479 0DD6  
                                   i2l488 0DFA                                     i2l497 0E5E  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2C14              __end_of_I2C1_BusCollisionISR 2F62  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                   ReceiveArrayGet@location 001B  
                    _EUSART1_Transmit_ISR 2C48                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                       ??_I2C1_Initialize 001B                          __end_of_TMR0_ISR 2C14  
                        __end_of_TMR2_ISR 2F4C                             __CFG_WRTB$OFF 000000  
                            ?_LEDsetValue 0149                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                                     _begin 28B6  
                          __CFG_EBTRB$OFF 000000                        ??_buttonsCollector 0023  
                                   _group 002B                           __end_of_memmove 1F9E  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 001F  
                         __end_of_picture 7FE3                                     pclath 000FFA  
                            ?_oledPutChar 0001                                     tablat 000FF5  
                           ??_Receive_get 0026                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 2F52                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0021  
                            __end_of_CRC8 2A60                           __initialization 2554  
                   I2C1_MasterWrite@pdata 00F2                     I2C1_MasterWrite@pflag 00F8  
              __end_of_EUSART1_Initialize 2BA4                              __end_of_main 1A42  
                  __size_of_DataBarGraphs 0012                                ToSend@what 00F2  
                                  ??_CRC8 001E                             ?_LEDblinkRate 0025  
                 __end_of_TMR2_Initialize 2DE8                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7ED3  
                      __size_of_ClearTime 0006                               _i2c1_object 00B8  
                _TMR2_SetInterruptHandler 2F1E                                    ??_main 002B  
                           ___fttol@sign1 0142                             __activetblptr 000002  
                        __end_of_Send_put 2CA8                 __size_ofi2_UART_buff_size 0016  
                 __end_of_ReceiveArrayGet 2E7A                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                                  ?_begin 0139                   __end_of_TMR0_StartTimer 2F5A  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 1EFA  
                       __end_of_LEDsetBar 04DA                           i2_UART_buff_get 22AE  
                                  _RC1STA 000FAB                                    i2l1137 233C  
                                  i2l1168 2E2C                           i2_UART_buff_put 1710  
                          __CFG_WDTEN$OFF 000000                                    Delay@x 001E  
                                  i2l5062 1730                                    i2l5240 2BFC  
             UART_buff_modulo_inc@modulus 001D                                    i2l5082 2338  
                                  i2l5068 179C                                    i2l5228 2C72  
                                  i2l5236 2BEC                                    i2l4710 1846  
                                  i2l5246 2C0E                                    i2l4720 18C8  
                                  i2l4712 1860                                    i2l4722 18E2  
                                  i2l4714 187A                                    i2l4716 1894  
                                  i2l4708 182C                                    i2l4740 0E12  
                                  i2l4718 18AE                                    i2l4726 18FC  
                                  i2l4742 0E48                                    i2l4734 0DAE  
                                  i2l6504 2D9C                                    i2l4752 0EF8  
                                  i2l4746 0EA6                                    i2l4754 0F28  
                                  i2l4588 2D48                                    i2l4756 0F44  
                                  i2l4748 0EDC                            _GetButtonState 2D52  
                                  i2l6910 0A48                                    i2l6830 08B6  
                                  i2l6498 2B26                                    i2l6930 0AA8  
                                  i2l6914 0A50                                    i2l6842 08F4  
                                  i2l6926 0A9C                                    i2l6862 0950  
                                  i2l6928 0AA0                                    i2l6848 090C  
                                  i2l6936 0AB4                                    i2l6890 09B8  
                                  i2l6882 09A0                                    i2l6898 0A04  
                                  _RCREG1 000FAE                         __end_of_OLED_init 23CC  
                        __end_of___lwtoft 2DC6                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                 ??_GetTime 001D  
                                  _TX1STA 000FAC                                    _TRISC1 007CA1  
                                  _TRISA6 007C96                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 00F2                            __CFG_XINST$OFF 000000  
                                  _ToSend 2E42                        ??_I2C1_MasterWrite 0025  
                     __end_of_Receive_get 2F06               ??_FastTransfer_buffer_flush 0027  
                                  _Splash 271E                            _p_i2c1_current 00D5  
                           _output_buffer 0400                                 ??___awdiv 001F  
                               CRC8@tempI 0020                           oledPutChar@base 0142  
                          __CFG_STVREN$ON 000000                                 ??___ftmul 0026  
                               ??___fttol 013D                            ??_LEDblinkRate 0028  
              ??_I2C1_MasterWriteTRBBuild 0023                          ?_TMR0_Initialize 0001  
                                  _setLED 1CD6                                    _memset 2CA8  
                               ?_I2C1_ISR 0001                                    clear_0 255A  
                                  clear_1 2566                                    clear_2 2572  
                                  clear_3 257E                                    clear_4 258A  
                                  clear_5 2596                                    clear_6 25A2  
                        ___awdiv@quotient 0021                             ?_OLED_command 0001  
                                  _rx_len 003E                          __end_of_sendData 14B2  
                   ___ftmul@f3_as_product 00F9                              __pdataCOMRAM 0044  
                               ??_memmove 0021                             Send_put@_data 0026  
                            __mediumconst 7BD2                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
        __size_of_FastTransfer_buffer_put 0168              __end_of_UART_buff_modulo_inc 2D28  
                           _DataBarGraphA 00C3                             _DataBarGraphB 00C5  
                           _DataBarGraphs 2ED4                   __end_of_TMR2_StartTimer 2F56  
TMR2_SetInterruptHandler@InterruptHandler 001B                    __end_of_GetButtonState 2D7A  
           I2C1_MasterWriteTRBBuild@pdata 001D                        LEDblinkRate@status 013D  
           __size_of_INTERRUPT_Initialize 0012                           SetLEDOut@lednum 001F  
                       _SYSTEM_Initialize 25C8                         __end_of_ClearTime 2F52  
                              __accesstop 0060                   __end_of__initialization 25BA  
                   __end_of_TMR2_CallBack 0F6A                        ?_SYSTEM_Initialize 0001  
                               ?_LEDbegin 0001                             ___rparam_used 000001  
                 ?i2_UART_buff_modulo_inc 0001                            _i2c1_trb_count 00D1  
                            ?_updateComms 0001                             __end_of_Delay 2C48  
                              ___ftmul@f1 00F2                                ___ftmul@f2 00F5  
                   _I2C1_FunctionComplete 2D7A                      _I2C1_BusCollisionISR 2F60  
                              ___fttol@f1 0139                    LEDwriteDisplay@timeOut 014E  
                          __pcstackCOMRAM 0001                    I2C1_MasterWrite@length 00F4  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2914                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2CFE  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2CD4  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001              FastTransfer_buffer_put@_this 0021  
                             ToSend@where 002A                                ___lwtoft@c 0023  
                      UART_buff_get@_this 0021                     __end_of_UART_buff_get 22AE  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1710  
                       __end_of_SetLEDOut 0DA4                                   ??_Delay 001D  
                          LEDbegin@status 0144                   __end_ofi2_UART_buff_get 2340  
                        ?_ReceiveArrayGet 001B                   __end_ofi2_UART_buff_put 182A  
             __end_of_EUSART1_Receive_ISR 2E42                             wipeRxBuffer@i 001B  
               _FastTransfer_buffer_flush 2854                                   CRC8@crc 0021  
                          ?_DataBarGraphs 001D                                   CRC8@len 001D  
                                 CRC8@sum 001E                                   ??_begin 0023  
                        ?_TMR0_StartTimer 0001                           ?_GetButtonState 001B  
               __end_of_SYSTEM_Initialize 263C                  __end_of_handleIndicators 2454  
                     _addressErrorCounter 00C7                      __size_of_LEDsetValue 00A4  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                                __pbssBANK5 0500  
                         __CFG_PLLCFG$OFF 000000                               _Receive_get 2EF8  
                       ?_GetDataBarGraphA 001B                         ?_GetDataBarGraphB 001B  
          __end_ofi2_UART_buff_modulo_inc 2D52                                __pnvCOMRAM 0042  
                       begin@givenAddress 013C                      __size_of_oledPutChar 00F2  
                 __size_of_UART_buff_init 001E                                ??_LEDbegin 0028  
                 __size_of_UART_buff_size 0016                        __size_of_oledClear 0058  
                      ??_GetDataBarGraphA 001D                        ??_GetDataBarGraphB 001D  
                               ?_Send_put 0001                     ?_I2C1_BusCollisionISR 0001  
                      __size_of_oledPrint 0054                      __size_of_receiveData 0340  
                                 ?_ToSend 00F2                        __CFG_CCP2MX$PORTC1 000000  
                                 ?_Splash 0001                  __size_of_LEDwriteDisplay 014A  
                              ??_TMR0_ISR 0005                                ??_TMR2_ISR 0005  
                      __CFG_CCP3MX$PORTB5 000000       FastTransfer_buffer_modulo_inc@value 001B  
                         _I2C1_Initialize 2B2C                                   _ADC_ISR 2F5A  
                                 ?_setLED 001B                                   ?_memset 001B  
                              _crc_buffer 0128                                 ?___ftpack 001B  
                               TMR0_ISR@x 0005                   __size_of_ADC_Initialize 0018  
                               ?___lwtoft 0023                        UART_buff_put@_this 0021  
                        i2_UART_buff_size 2EBE               i2UART_buff_modulo_inc@value 0001  
                                 _OSCCON2 000FD2                                 _I2C1_Stop 2AEA  
                       _Receive_available 2E92              UART_buff_modulo_inc@my_value 001F  
                       __CFG_PRICLKEN$OFF 000000                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                                   _SSP1ADD 000FC8  
                     sendData@whereToSend 00F2                           _ReadButtonState 182A  
                     _receiveArrayAddress 00D7                                   _SSP1BUF 000FC9  
                        ?_TMR2_StartTimer 0001                        ?_Receive_available 001D  
                              begin@error 013D                      __end_of_LEDblinkRate 2182  
           I2C1_MasterTRBInsert@ptrb_list 001D                                   _GetTime 2F3C  
                                 _Off_Led 1C0C                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C9  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00B8  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001C                        _p_i2c1_trb_current 002D  
                               _AKNAKsend 0036                           __size_of_Splash 006A  
                                 ___awdiv 2454                      _UART_buff_modulo_inc 2CFE  
                                 ___ftmul 10D2                                   ___fttol 14B2  
                                 _calc_CS 0037                                   __pcinit 2554  
                              ??___ftpack 0020                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        oledPutChar@bytes 0139                          i2UART_buff_get@c 000B  
                           ?_Setupdisplay 0001                                   __ptext0 1940  
                                 __ptext1 2788                                   __ptext2 2A60  
                                 __ptext3 136E                                   __ptext4 1B34  
                                 __ptext5 2C7A                                   __ptext6 15F6  
                                 __ptext7 2854                                   __ptext8 26AE  
                                 __ptext9 2D52                                _oledGotoYX 27F0  
                              ??___lwtoft 0026                                 _T0CONbits 000FD5  
                        i2UART_buff_put@c 0009                     _OSCILLATOR_Initialize 2F06  
               __end_of_Receive_available 2EA8                                 _T2CONbits 000FBA  
                         ??_DataBarGraphs 0021                                   _memmove 1EFA  
                 _FastTransfer_buffer_put 0F6A                         __end_of_oledClear 296C  
                      _EUSART1_Initialize 2B68                          ?i2_UART_buff_get 0007  
                ??_PIN_MANAGER_Initialize 001B                                   _picture 7ED3  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
                       __end_of_oledPrint 2A16                                   _timeOut 00DD  
                          TMR2_CallBack@i 0003                             ??_crcBufS_put 0020  
              __size_of_SYSTEM_Initialize 0074                      I2C1_ISR@pi2c_buf_ptr 00C1  
                    end_of_initialization 25BA                                 Delay@wait 001B  
                     ?_EUSART1_Initialize 0001                   LEDwriteDisplay@i2c_addr 014D  
                               _LED_array 0088                              oledClear@col 00FC  
                    __end_of_OLED_command 2554                              oledClear@row 00FA  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7BD2                                 _LEDsetBar 00D4  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2B68                                 _OLED_init 2340  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 0068  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                _respondECU 2A60  
                   ReadButtonState@btnnum 0001                        OLED_command@status 0026  
                        begin@stufftosend 013E                              LEDsetValue@k 014E  
                    ??_EUSART1_Initialize 0025                       LEDblinkRate@timeOut 013B  
                          ??_Setupdisplay 002B                                 _PORTAbits 000F80  
                               _PORTBbits 000F81                                 _PORTDbits 000F83  
                       ??_LEDwriteDisplay 0025                   __end_of_ReadButtonState 1940  
               __size_of_I2C1_MasterWrite 0056                    _dataAdressErrorCounter 00CD  
                       __size_of_I2C1_ISR 02E0                                _rx_address 003C  
                               _TRISAbits 000F92                                 _TRISCbits 000F94  
                 LEDBsetBrightness@status 013D         I2C1_ISR@i2c_10bit_address_restart 0035  
                     LEDbegin@writeBuffer 013E                              begin@maxSize 013B  
      __size_of_FastTransfer_buffer_flush 0062                     i2UART_buff_size@_this 0001  
                          _UART_buff_init 2E06                            _UART_buff_size 2EA8  
                              ?_LEDsetBar 0023                       __end_of_crcBufS_put 1C0C  
                              ?_OLED_init 0001                   I2C1_MasterWrite@address 00F6  
                               _ClearTime 2F4C                 LEDBsetBrightness@i2c_addr 0027  
                             ___ftmul@exp 00F8                         __size_of_LEDbegin 00A4  
                           _moduleAddress 003A                      _timer0ReloadVal16bit 0042  
                           ?_wipeRxBuffer 0001                            __end_of_ToSend 2E5E  
            __end_of_INTERRUPT_Initialize 2EF8      __end_of_TMR2_DefaultInterruptHandler 2F60  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 2F5E  
                          __end_of_Splash 2788                           _crcErrorCounter 00CB  
                 I2C1_MasterWrite@trBlock 00E6                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 2F62                         __size_of_TMR0_ISR 0038  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 2E7A                 ??_FastTransfer_buffer_put 0026  
                             ?_oledGotoYX 0027                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 1D94                            __end_of_memset 2CD4  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0028                __size_of_Receive_available 0016  
                            receiveData@u 0026                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 2182                       start_initialization 2554  
                   __size_of_LEDblinkRate 009C                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 0072  
                      ?_LEDBsetBrightness 0025                                 _SetLEDOut 0AFA  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 2E24  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 2EBE  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 0141  
                     ??_LEDBsetBrightness 0028                          _buttonsCollector 26AE  
                __end_ofi2_UART_buff_size 2ED4                                ?_ClearTime 0001  
                        ?_I2C1_Initialize 0001                                  ??_ToSend 002A  
                  ??_UART_buff_modulo_inc 001F                                  CRC8@data 001B  
                                ??_Splash 002B                            ??_wipeRxBuffer 001B  
                       __size_of_Send_put 002E                               ?_respondECU 0001  
              LEDwriteDisplay@writeBuffer 0139                    __end_of_ADC_Initialize 2E92  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 20E6  
                       handleIndicators@i 00F2                 __size_of_GetDataBarGraphA 000A  
               __size_of_GetDataBarGraphB 000A             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 221C              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                         __size_of___ftpack 00AE  
                  __size_of_TMR2_CallBack 01C6                               __pbssCOMRAM 002B  
                       __size_of___lwtoft 0024             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00F2                             __pcstackBANK1 0139  
                              oledPrint@s 00FA                             ??_LEDsetValue 014D  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00EB  
                   LEDwriteDisplay@status 0150                     __size_of_OLED_command 007C  
                            _Receive_peek 000000                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_put 1B34  
                           ??_oledPutChar 0027                          LEDsetValue@color 014B  
                         ?_UART_buff_init 0023                           ?_UART_buff_size 001B  
                        LEDsetValue@value 0149                  __size_of_ReceiveArrayGet 001C  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                    __end_of_Setupdisplay 2F1E                                  ?_GetTime 001B  
                           ??_receiveData 00F2                                sendData@CS 00F3  
                                ?_Off_Led 001B                               ??_LEDsetBar 0139  
                     __size_of_oledGotoYX 0064                                 __pnvBANK0 00FE  
                __size_of_TMR0_StartTimer 0004                               ??_OLED_init 0027  
                  __size_of_UART_buff_get 0092                    __size_of_UART_buff_put 011A  
                  _PIN_MANAGER_Initialize 263C                         __size_of_sendData 0144  
                               __pintcode 0008                             __pmediumconst 7BD2  
                                ?___awdiv 001B                                  ?___ftmul 00F2  
                                ?___fttol 0139                           ?_ADC_Initialize 0001  
                                _I2C1_ISR 081A              ??_INTERRUPT_InterruptManager 000D  
            LEDBsetBrightness@writeBuffer 0139                      i2UART_buff_get@_this 0007  
                            _OLED_command 24D8                          _I2C1_MasterWrite 296C  
                                _BAUD1CON 000FB8              __end_of_I2C1_MasterTRBInsert 1E4C  
                                ?_memmove 001B                         buttonsCollector@i 0028  
                          __size_of_Delay 0034                                 _butnarray 00B0  
                          __size_of_begin 005E                                 _oledClear 2914  
                     __size_of_respondECU 0046                      _INTERRUPT_Initialize 2EE6  
                    GetButtonState@btnnum 001B                                 _oledPrint 29C2  
                            _receiveArray 0100                               _LEDNUM_ENAB 0098  
                  I2C1_MasterRead@trBlock 00E1                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 2042                                  _LATCbits 000F8B  
                                _LEDState 00A4                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 0DA4                                  _IPR1bits 000F9F  
                                _LEDbegin 2042                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 0025                  __size_of_TMR2_StartTimer 0004  
                             ??_ClearTime 001B                       __end_of_oledPutChar 1B34  
                         _LEDwriteDisplay 1224       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u400_40 0E66                                  i2u410_40 0EA2  
                                i2u402_40 0E72                                  i2u404_40 0E7E  
                                i2u406_40 0E8A                                  i2u414_48 0F54  
                                i2u408_40 0E96                                  i2u505_40 2C62  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u380_40 185A                                  i2u380_46 185C  
                                i2u381_40 1874                                  i2u381_46 1876  
                                i2u382_40 188E                                  i2u390_40 0DDE  
                                i2u382_46 1890                                  i2u383_40 18A8  
                                i2u383_46 18AA                                  i2u384_40 18C2  
                                i2u392_40 0DEA                                  i2u384_46 18C4  
                                i2u385_40 18DC                                  i2u385_46 18DE  
                                i2u386_40 18F6                                  i2u394_40 0DF6  
                                i2u386_46 18F8                                  i2u379_40 1840  
                                i2u379_46 1842                                  i2u396_40 0E02  
                                i2u388_40 0DD2                                  i2u485_40 22CC  
                                i2u398_40 0E0E                                  i2u752_40 0A24  
                                i2u752_47 0A1A                                  i2u754_40 0A74  
                                i2u754_47 0A68                       begin@stuffavailable 0142  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 081A                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2BDC  
                                _TMR2_ISR 2F44                                  _SSP1STAT 000FC7  
          FastTransfer_buffer_flush@_this 0023                              _input_buffer 0300  
                               _rx_buffer 0500                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 221C  
                           _UART_buff_put 15F6            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                   __end_of_DataBarGraphs 2EE6                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                      __end_of_wipeRxBuffer 2BDC  
                              ?_oledClear 0001                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                ?_oledPrint 00FA  
                       _sendStructAddress 00D9                  __size_ofi2_UART_buff_get 0092  
                       ??_TMR2_Initialize 001D                  __size_ofi2_UART_buff_put 011A  
                                _OledFont 7BD3                            ?_TMR2_CallBack 0001  
                        __size_of_GetTime 0008                             ??_updateComms 002B  
                    __size_of_Receive_get 000E                          __size_of_Off_Led 00CA  
                                __Hrparam 0000                                  _Send_put 2C7A  
                       ??_ReceiveArrayGet 001D             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 00BF  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 0139  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 0152                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                          _GetDataBarGraphA 2F32  
                        _GetDataBarGraphB 2F28                       begin@stufftoreceive 0140  
                                ___ftpack 1E4C          __end_of_I2C1_MasterWriteTRBBuild 2AEA  
                            ??_oledGotoYX 0028                                _ANSELAbits 000F38  
                                ___lwtoft 2DA2                                _ANSELCbits 000F3A  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 271E  
                               sendData@i 00F4                          __size_of_memmove 00A4  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 1F9E  
                                __ptext10 2E42                                  __ptext11 0F6A  
                                __ptext20 2EA8                                  __ptext12 2CD4  
                                __ptext21 2A16                                  __ptext13 2C14  
                   __size_of_Setupdisplay 000A                                  __ptext30 10D2  
                                __ptext22 23CC                                  __ptext14 04DA  
                                __ptext31 1E4C                                  __ptext23 0AFA  
                                __ptext15 2BA4                                  __ptext40 24D8  
                                __ptext32 271E                                  __ptext24 1CD6  
                                __ptext16 2EF8                                  __ptext41 25C8  
                                __ptext33 29C2                                  __ptext25 1C0C  
                                __ptext17 221C                                  __ptext50 2EE6  
                                __ptext42 28B6                                  __ptext34 2F14  
                                __ptext26 2E5E                                  __ptext18 2CFE  
                                __ptext51 2B2C                                  __ptext43 2DC6  
                                __ptext35 2914                                  __ptext27 2ED4  
                                __ptext19 2E92                                  __ptext60 2042  
                                __ptext52 2B68                                  __ptext44 2F52  
                                __ptext36 1A42                                  __ptext28 2DA2  
                                __ptext61 20E6                                  __ptext53 2E06  
                                __ptext45 2F1E                                  __ptext37 1EFA  
                                __ptext29 14B2                                  __ptext62 2182  
                                __ptext54 2CA8                                  __ptext46 2DE8  
                                __ptext38 27F0                                  __ptext71 2F44  
                                __ptext63 296C                                  __ptext55 2E7A  
                                __ptext47 2F56                                  __ptext39 2340  
                                __ptext80 2C48                                  __ptext72 0DA4  
                                __ptext64 2AA6                                  __ptext56 1224  
                                __ptext48 263C                                  __ptext81 2EBE  
                                __ptext73 2F5E                                  __ptext65 1D94  
                                __ptext57 1F9E                                  __ptext49 2F06  
                                __ptext82 22AE                                  __ptext74 2BDC  
                                __ptext66 2F3C                                  __ptext58 00D4  
                                __ptext83 2E24                                  __ptext75 182A  
                                __ptext67 2F28                                  __ptext59 2454  
                                __ptext84 1710                                  __ptext76 081A  
                                __ptext68 2F32                                  __ptext85 2D28  
                                __ptext77 2AEA                                  __ptext69 2F4C  
                                __ptext86 2F5A                                  __ptext78 2D7A  
                                __ptext87 0000                                  __ptext79 2F60  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                       oledPutChar@status 0145                             __size_of_CRC8 004A  
                        oledGotoYX@Column 0027                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 136E  
                             _oledPutChar 1A42                             _returnAddress 003B  
                           __size_of_main 0102                               _receiveData 04DA  
                          _Transmit_stall 0044                                  _sendData 136E  
                      __end_of_oledGotoYX 2854                      _I2C1_MasterTRBInsert 1D94  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 0027                              ??_respondECU 002B  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0088             handleIndicators@oldIndicators 00DF  
                            _serial_write 0033                         ??_TMR2_StartTimer 001B  
                     __end_of_updateComms 27F0        __end_of_INTERRUPT_InterruptManager 00D0  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 2E24  
                            _Setupdisplay 2F14                        LEDBsetBrightness@b 0025  
                              _INTCONbits 000FF2                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_size 001D                    ??_INTERRUPT_Initialize 001B  
                                memset@p1 001B                          _serial_available 002F  
                                memmove@d 0023                                  memmove@n 001F  
                                memmove@s 0025                               ??_oledClear 002B  
         __size_ofi2_UART_buff_modulo_inc 002A                              ?_crcBufS_put 001B  
                             ??_oledPrint 002B                                  intlevel2 0000  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2AA6  
                    ?_EUSART1_Receive_ISR 0001    FastTransfer_buffer_modulo_inc@my_value 001F  
          FastTransfer_buffer_put@towhere 0023                   ?_PIN_MANAGER_Initialize 0001  
                __end_of_I2C1_MasterWrite 29C2            __size_of_I2C1_FunctionComplete 0028  
           __end_of_I2C1_FunctionComplete 2DA2                     ?_I2C1_MasterTRBInsert 001B  
            __end_of_EUSART1_Transmit_ISR 2C7A                               _ring_buffer 0200  
                        ??_ADC_Initialize 001B                ?_FastTransfer_buffer_flush 0023  
                       ??i2_UART_buff_get 0009                               _serial_peek 00DB  
                             _serial_read 0031                         ??i2_UART_buff_put 000A  
                ?_FastTransfer_buffer_put 0021             __size_of_UART_buff_modulo_inc 002A  
                __size_of_I2C1_Initialize 003C                           ??_UART_buff_get 0023  
                         ??_UART_buff_put 0024     FastTransfer_buffer_modulo_inc@modulus 001D  
                   __size_of_wipeRxBuffer 0038                          DataBarGraphs@BGA 001D  
                        DataBarGraphs@BGB 001F                           _TMR0_Initialize 2DE8  
                _I2C1_MasterWriteTRBBuild 2AA6                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 0039                  __size_of_ReadButtonState 0116  
                   ??_EUSART1_Receive_ISR 000C            __end_of_PIN_MANAGER_Initialize 26AE  
        ??_FastTransfer_buffer_modulo_inc 001F           ?_FastTransfer_buffer_modulo_inc 001B  
                           oledGotoYX@Row 0029                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2788  
