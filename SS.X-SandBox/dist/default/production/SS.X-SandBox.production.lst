

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Aug 11 16:24:17 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.42
    53                           ; Generated 13/04/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F45K22 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  000E38                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _COBS_DECODE_DST_BUF_LEN_MAX
    92  000E38  001E               	dw	30
    93                           
    94                           ;initializer for _COBS_ENCODE_DST_BUF_LEN_MAX
    95  000E3A  001E               	dw	30
    96                           
    97                           ;initializer for _Transmit_stall
    98  000E3C  01                 	db	1
    99  0000                     _ANSELE	set	3900
   100  0000                     _ANSELD	set	3899
   101  0000                     _ANSELC	set	3898
   102  0000                     _ANSELB	set	3897
   103  0000                     _ANSELA	set	3896
   104  0000                     _LATAbits	set	3977
   105  0000                     _PIR1bits	set	3998
   106  0000                     _IPR2bits	set	4002
   107  0000                     _IPR1bits	set	3999
   108  0000                     _RCONbits	set	4048
   109  0000                     _OSCTUNE	set	3995
   110  0000                     _OSCCON2	set	4050
   111  0000                     _OSCCON	set	4051
   112  0000                     _TRISAbits	set	3986
   113  0000                     _TRISDbits	set	3989
   114  0000                     _TRISCbits	set	3988
   115  0000                     _PORTAbits	set	3968
   116  0000                     _PORTDbits	set	3971
   117  0000                     _PORTCbits	set	3970
   118  0000                     _T0CONbits	set	4053
   119  0000                     _INTCONbits	set	4082
   120  0000                     _TMR0L	set	4054
   121  0000                     _TMR0H	set	4055
   122  0000                     _T0CON	set	4053
   123  0000                     _RC1STAbits	set	4011
   124  0000                     _RCREG1	set	4014
   125  0000                     _TXREG1	set	4013
   126  0000                     _SPBRGH1	set	4016
   127  0000                     _SPBRG1	set	4015
   128  0000                     _TX1STA	set	4012
   129  0000                     _RC1STA	set	4011
   130  0000                     _BAUD1CON	set	4024
   131  0000                     _PIE1bits	set	3997
   132  0000                     _LATDbits	set	3980
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  000AE8                     __pcinit:
   138                           	opt stack 0
   139  000AE8                     start_initialization:
   140                           	opt stack 0
   141  000AE8                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (5 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  000AE8  0E38               	movlw	low __pidataCOMRAM
   147  000AEA  6EF6               	movwf	tblptrl,c
   148  000AEC  0E0E               	movlw	high __pidataCOMRAM
   149  000AEE  6EF7               	movwf	tblptrh,c
   150  000AF0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  000AF2  6EF8               	movwf	tblptru,c
   152  000AF4  EE00  F040         	lfsr	0,__pdataCOMRAM
   153  000AF8  EE10 F005          	lfsr	1,5
   154  000AFC                     copy_data0:
   155  000AFC  0009               	tblrd		*+
   156  000AFE  CFF5 FFEE          	movff	tablat,postinc0
   157  000B02  50E5               	movf	postdec1,w,c
   158  000B04  50E1               	movf	fsr1l,w,c
   159  000B06  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to BANK1 (212 bytes)
   162  000B08  EE01  F000         	lfsr	0,__pbssBANK1
   163  000B0C  0ED4               	movlw	212
   164  000B0E                     clear_0:
   165  000B0E  6AEE               	clrf	postinc0,c
   166  000B10  06E8               	decf	wreg,f,c
   167  000B12  E1FD               	bnz	clear_0
   168                           
   169                           ; Clear objects allocated to BANK0 (70 bytes)
   170  000B14  EE00  F0BA         	lfsr	0,__pbssBANK0
   171  000B18  0E46               	movlw	70
   172  000B1A                     clear_1:
   173  000B1A  6AEE               	clrf	postinc0,c
   174  000B1C  06E8               	decf	wreg,f,c
   175  000B1E  E1FD               	bnz	clear_1
   176                           
   177                           ; Clear objects allocated to COMRAM (27 bytes)
   178  000B20  EE00  F025         	lfsr	0,__pbssCOMRAM
   179  000B24  0E1B               	movlw	27
   180  000B26                     clear_2:
   181  000B26  6AEE               	clrf	postinc0,c
   182  000B28  06E8               	decf	wreg,f,c
   183  000B2A  E1FD               	bnz	clear_2
   184  000B2C                     end_of_initialization:
   185                           	opt stack 0
   186  000B2C                     __end_of__initialization:
   187                           	opt stack 0
   188  000B2C  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189  000B2E  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190  000B30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  000B32  6EF8               	movwf	tblptru,c
   192  000B34  0100               	movlb	0
   193  000B36  EFF7  F006         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           	psect	bssCOMRAM
   204  000025                     __pbssCOMRAM:
   205                           	opt stack 0
   206  000025                     _DataTableArrayOne:
   207                           	opt stack 0
   208  000025                     	ds	10
   209  00002F                     _time:
   210                           	opt stack 0
   211  00002F                     	ds	4
   212  000033                     _DataTableArrayTwo:
   213                           	opt stack 0
   214  000033                     	ds	3
   215  000036                     cobs_decode@F192:
   216                           	opt stack 0
   217  000036                     	ds	3
   218  000039                     cobs_encode@F180:
   219                           	opt stack 0
   220  000039                     	ds	3
   221  00003C                     _timer0ReloadVal16bit:
   222                           	opt stack 0
   223  00003C                     	ds	2
   224  00003E                     _ByteLow:
   225                           	opt stack 0
   226  00003E                     	ds	1
   227  00003F                     _ByteHigh:
   228                           	opt stack 0
   229  00003F                     	ds	1
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec1	equ	0xFE5
   237                           fsr1l	equ	0xFE1
   238                           
   239                           	psect	dataCOMRAM
   240  000040                     __pdataCOMRAM:
   241                           	opt stack 0
   242  000040                     _COBS_DECODE_DST_BUF_LEN_MAX:
   243                           	opt stack 0
   244  000040                     	ds	2
   245  000042                     _COBS_ENCODE_DST_BUF_LEN_MAX:
   246                           	opt stack 0
   247  000042                     	ds	2
   248  000044                     _Transmit_stall:
   249                           	opt stack 0
   250  000044                     	ds	1
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	bssBANK0
   261  0000BA                     __pbssBANK0:
   262                           	opt stack 0
   263  0000BA                     _receiveArray:
   264                           	opt stack 0
   265  0000BA                     	ds	10
   266  0000C4                     _ProcessArray:
   267                           	opt stack 0
   268  0000C4                     	ds	30
   269  0000E2                     _ReciveArray:
   270                           	opt stack 0
   271  0000E2                     	ds	30
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	bssBANK1
   282  000100                     __pbssBANK1:
   283                           	opt stack 0
   284  000100                     _output_buffer:
   285                           	opt stack 0
   286  000100                     	ds	106
   287  00016A                     _input_buffer:
   288                           	opt stack 0
   289  00016A                     	ds	106
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	cstackBANK0
   300  000060                     __pcstackBANK0:
   301                           	opt stack 0
   302  000060                     ??_UART_buff_put:
   303  000060                     UART_buff_get@c:
   304                           	opt stack 0
   305  000060                     cobs_encode@src_end_ptr:
   306                           	opt stack 0
   307  000060                     cobs_decode@src_end_ptr:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x0
   311  000060                     	ds	2
   312  000062                     Send_put@_data:
   313                           	opt stack 0
   314  000062                     cobs_encode@src_byte:
   315                           	opt stack 0
   316  000062                     cobs_decode@dst_buf_end_ptr:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320  000062                     	ds	1
   321  000063                     cobs_encode@dst_buf_end_ptr:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x3
   325  000063                     	ds	1
   326  000064                     cobs_decode@src_byte:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x4
   330  000064                     	ds	1
   331  000065                     cobs_encode@search_len:
   332                           	opt stack 0
   333  000065                     cobs_decode@i:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x5
   337  000065                     	ds	1
   338  000066                     cobs_encode@dst_code_write_ptr:
   339                           	opt stack 0
   340  000066                     cobs_decode@remaining_bytes:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x6
   344  000066                     	ds	2
   345  000068                     cobs_encode@dst_write_ptr:
   346                           	opt stack 0
   347  000068                     cobs_decode@dst_write_ptr:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x8
   351  000068                     	ds	2
   352  00006A                     cobs_decode@len_code:
   353                           	opt stack 0
   354  00006A                     cobs_encode@result:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0xA
   358  00006A                     	ds	1
   359  00006B                     cobs_decode@result:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0xB
   363  00006B                     	ds	2
   364  00006D                     sendData@ComandByte:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0xD
   368  00006D                     	ds	1
   369  00006E                     ??_receiveData:
   370  00006E                     sendData@DataTable:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0xE
   374  00006E                     	ds	1
   375  00006F                     sendData@DataTableIndex:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0xF
   379  00006F                     	ds	1
   380  000070                     ??_sendData:
   381                           
   382                           ; 1 bytes @ 0x10
   383  000070                     	ds	3
   384  000073                     receiveData@CS:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388  000073                     	ds	1
   389  000074                     receiveData@result:
   390                           	opt stack 0
   391  000074                     sendData@COBSArray:
   392                           	opt stack 0
   393                           
   394                           ; 30 bytes @ 0x14
   395  000074                     	ds	3
   396  000077                     receiveData@i:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x17
   400  000077                     	ds	2
   401  000079                     receiveData@Data:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x19
   405  000079                     	ds	25
   406  000092                     sendData@SendArray:
   407                           	opt stack 0
   408                           
   409                           ; 30 bytes @ 0x32
   410  000092                     	ds	30
   411  0000B0                     sendData@whereToSend:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x50
   415  0000B0                     	ds	1
   416  0000B1                     sendData@count:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x51
   420  0000B1                     	ds	2
   421  0000B3                     sendData@DataLenth:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x53
   425  0000B3                     	ds	1
   426  0000B4                     sendData@CS:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x54
   430  0000B4                     	ds	1
   431  0000B5                     sendData@result:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x55
   435  0000B5                     	ds	3
   436  0000B8                     sendData@i:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x58
   440  0000B8                     	ds	2
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	cstackCOMRAM
   451  000001                     __pcstackCOMRAM:
   452                           	opt stack 0
   453  000001                     ?i2_UART_buff_size:
   454                           	opt stack 0
   455  000001                     ?i2_UART_buff_modulo_inc:
   456                           	opt stack 0
   457  000001                     i2UART_buff_size@_this:
   458                           	opt stack 0
   459  000001                     i2UART_buff_modulo_inc@value:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x0
   463  000001                     	ds	2
   464  000003                     i2UART_buff_modulo_inc@modulus:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  000003                     	ds	2
   469  000005                     i2UART_buff_modulo_inc@my_value:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x4
   473  000005                     	ds	2
   474  000007                     i2UART_buff_put@_this:
   475                           	opt stack 0
   476  000007                     i2UART_buff_get@_this:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x6
   480  000007                     	ds	2
   481  000009                     ??i2_UART_buff_get:
   482  000009                     i2UART_buff_put@c:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x8
   486  000009                     	ds	1
   487  00000A                     ??i2_UART_buff_put:
   488                           
   489                           ; 1 bytes @ 0x9
   490  00000A                     	ds	1
   491  00000B                     i2UART_buff_get@c:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0xA
   495  00000B                     	ds	1
   496  00000C                     EUSART1_Receive_ISR@data:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0xB
   500  00000C                     	ds	1
   501  00000D                     ??_INTERRUPT_InterruptManager:
   502                           
   503                           ; 1 bytes @ 0xC
   504  00000D                     	ds	14
   505  00001B                     ??_ReadFaults:
   506  00001B                     ?_UART_buff_modulo_inc:
   507                           	opt stack 0
   508  00001B                     ?_UART_buff_size:
   509                           	opt stack 0
   510  00001B                     ?_cobs_encode:
   511                           	opt stack 0
   512  00001B                     ?_cobs_decode:
   513                           	opt stack 0
   514  00001B                     GetFaults@num:
   515                           	opt stack 0
   516  00001B                     UART_buff_size@_this:
   517                           	opt stack 0
   518  00001B                     UART_buff_modulo_inc@value:
   519                           	opt stack 0
   520  00001B                     Delay@wait:
   521                           	opt stack 0
   522  00001B                     cobs_encode@dst_buf_ptr:
   523                           	opt stack 0
   524  00001B                     cobs_decode@dst_buf_ptr:
   525                           	opt stack 0
   526  00001B                     CRC8@data:
   527                           	opt stack 0
   528  00001B                     memset@p1:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x1A
   532  00001B                     	ds	2
   533  00001D                     ??_Delay:
   534  00001D                     ?_Receive_available:
   535                           	opt stack 0
   536  00001D                     CRC8@len:
   537                           	opt stack 0
   538  00001D                     UART_buff_modulo_inc@modulus:
   539                           	opt stack 0
   540  00001D                     cobs_encode@dst_buf_len:
   541                           	opt stack 0
   542  00001D                     cobs_decode@dst_buf_len:
   543                           	opt stack 0
   544  00001D                     memset@c:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x1C
   548  00001D                     	ds	1
   549  00001E                     CRC8@sum:
   550                           	opt stack 0
   551  00001E                     Delay@x:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x1D
   555  00001E                     	ds	1
   556  00001F                     CRC8@extract:
   557                           	opt stack 0
   558  00001F                     UART_buff_modulo_inc@my_value:
   559                           	opt stack 0
   560  00001F                     cobs_encode@src_ptr:
   561                           	opt stack 0
   562  00001F                     cobs_decode@src_ptr:
   563                           	opt stack 0
   564  00001F                     memset@n:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x1E
   568  00001F                     	ds	1
   569  000020                     CRC8@tempI:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x1F
   573  000020                     	ds	1
   574  000021                     CRC8@crc:
   575                           	opt stack 0
   576  000021                     UART_buff_put@_this:
   577                           	opt stack 0
   578  000021                     UART_buff_get@_this:
   579                           	opt stack 0
   580  000021                     cobs_encode@src_len:
   581                           	opt stack 0
   582  000021                     cobs_decode@src_len:
   583                           	opt stack 0
   584  000021                     memset@p:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x20
   588  000021                     	ds	2
   589  000023                     ??_UART_buff_get:
   590  000023                     ??_cobs_encode:
   591  000023                     ??_cobs_decode:
   592  000023                     UART_buff_put@c:
   593                           	opt stack 0
   594  000023                     UART_buff_init@_this:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x22
   598  000023                     	ds	2
   599  000025                     tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608                           ; 1 bytes @ 0x24
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 23 in file "Main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   628 ;;      Params:         0       0       0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels required when called:   10
   634 ;; This function calls:
   635 ;;		_ReadFaults
   636 ;;		_SetTime
   637 ;;		_Start
   638 ;;		_updateComms
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text0
   645  000DEE                     __ptext0:
   646                           	opt stack 0
   647  000DEE                     _main:
   648                           	opt stack 21
   649                           
   650                           ;Main.c: 24: Start();
   651                           
   652                           ;incstack = 0
   653  000DEE  EC49  F005         	call	_Start	;wreg free
   654                           
   655                           ;Main.c: 25: LATDbits.LATD4 = 0;
   656  000DF2  988C               	bcf	3980,4,c	;volatile
   657  000DF4                     l2358:
   658                           
   659                           ;Main.c: 27: updateComms();
   660  000DF4  EC0A  F007         	call	_updateComms	;wreg free
   661                           
   662                           ;Main.c: 30: ReadFaults();
   663  000DF8  EC46  F004         	call	_ReadFaults	;wreg free
   664                           
   665                           ;Main.c: 31: SetTime();
   666  000DFC  EC01  F007         	call	_SetTime	;wreg free
   667  000E00  D7F9               	goto	l2358
   668  000E02                     __end_of_main:
   669                           	opt stack 0
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679 ;; *************** function _updateComms *****************
   680 ;; Defined at:
   681 ;;		line 17 in file "Communications.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   695 ;;      Params:         0       0       0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    9
   702 ;; This function calls:
   703 ;;		_receiveData
   704 ;;		_respondECU
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  000E14                     __ptext1:
   712                           	opt stack 0
   713  000E14                     _updateComms:
   714                           	opt stack 21
   715                           
   716                           ;Communications.c: 18: if (receiveData()) {
   717                           
   718                           ;incstack = 0
   719  000E14  ECCE  F003         	call	_receiveData	;wreg free
   720  000E18  0900               	iorlw	0
   721  000E1A  B4D8               	btfsc	status,2,c
   722  000E1C  0012               	return	
   723                           
   724                           ;Communications.c: 19: respondECU();
   725  000E1E  ECE0  F005         	call	_respondECU	;wreg free
   726  000E22  0012               	return	
   727  000E24                     __end_of_updateComms:
   728                           	opt stack 0
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1l	equ	0xFE1
   737                           status	equ	0xFD8
   738                           
   739 ;; *************** function _respondECU *****************
   740 ;; Defined at:
   741 ;;		line 23 in file "Communications.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    8
   762 ;; This function calls:
   763 ;;		_Delay
   764 ;;		_sendData
   765 ;; This function is called by:
   766 ;;		_updateComms
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text2
   771  000BC0                     __ptext2:
   772                           	opt stack 0
   773  000BC0                     _respondECU:
   774                           	opt stack 21
   775                           
   776                           ;Communications.c: 24: LATDbits.LATD4 = 1;
   777                           
   778                           ;incstack = 0
   779  000BC0  888C               	bsf	3980,4,c	;volatile
   780                           
   781                           ;Communications.c: 25: Delay(5);
   782  000BC2  0E00               	movlw	0
   783  000BC4  6E1C               	movwf	Delay@wait+1,c
   784  000BC6  0E05               	movlw	5
   785  000BC8  6E1B               	movwf	Delay@wait,c
   786  000BCA  ECFB  F005         	call	_Delay	;wreg free
   787                           
   788                           ;Communications.c: 26: sendData(1, 1, 1, 1);
   789  000BCE  0E01               	movlw	1
   790  000BD0  0100               	movlb	0	; () banked
   791  000BD2  6F6D               	movwf	sendData@ComandByte& (0+255),b
   792  000BD4  0E01               	movlw	1
   793  000BD6  0100               	movlb	0	; () banked
   794  000BD8  6F6E               	movwf	sendData@DataTable& (0+255),b
   795  000BDA  0E01               	movlw	1
   796  000BDC  0100               	movlb	0	; () banked
   797  000BDE  6F6F               	movwf	sendData@DataTableIndex& (0+255),b
   798  000BE0  0E01               	movlw	1
   799  000BE2  ECFD  F001         	call	_sendData
   800                           
   801                           ;Communications.c: 27: Delay(3);
   802  000BE6  0E00               	movlw	0
   803  000BE8  6E1C               	movwf	Delay@wait+1,c
   804  000BEA  0E03               	movlw	3
   805  000BEC  6E1B               	movwf	Delay@wait,c
   806  000BEE  ECFB  F005         	call	_Delay	;wreg free
   807                           
   808                           ;Communications.c: 28: LATDbits.LATD4 = 0;
   809  000BF2  988C               	bcf	3980,4,c	;volatile
   810  000BF4  0012               	return		;funcret
   811  000BF6                     __end_of_respondECU:
   812                           	opt stack 0
   813                           tblptru	equ	0xFF8
   814                           tblptrh	equ	0xFF7
   815                           tblptrl	equ	0xFF6
   816                           tablat	equ	0xFF5
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           postdec1	equ	0xFE5
   820                           fsr1l	equ	0xFE1
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _sendData *****************
   824 ;; Defined at:
   825 ;;		line 39 in file "CarCom.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  whereToSend     1    wreg     unsigned char 
   828 ;;  ComandByte      1   13[BANK0 ] unsigned char 
   829 ;;  DataTable       1   14[BANK0 ] unsigned char 
   830 ;;  DataTableInd    1   15[BANK0 ] unsigned char 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  whereToSend     1   80[BANK0 ] unsigned char 
   833 ;;  SendArray      30   50[BANK0 ] unsigned char [30]
   834 ;;  COBSArray      30   20[BANK0 ] unsigned char [30]
   835 ;;  result          3   85[BANK0 ] struct .
   836 ;;  i               2   88[BANK0 ] int 
   837 ;;  count           2   81[BANK0 ] int 
   838 ;;  CS              1   84[BANK0 ] unsigned char 
   839 ;;  DataLenth       1   83[BANK0 ] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         0       3       0       0       0       0       0
   850 ;;      Locals:         0      70       0       0       0       0       0
   851 ;;      Temps:          0       4       0       0       0       0       0
   852 ;;      Totals:         0      77       0       0       0       0       0
   853 ;;Total ram usage:       77 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    7
   856 ;; This function calls:
   857 ;;		_CRC8
   858 ;;		_GetFaults
   859 ;;		_Send_put
   860 ;;		_cobs_encode
   861 ;; This function is called by:
   862 ;;		_respondECU
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text3
   867  0003FA                     __ptext3:
   868                           	opt stack 0
   869  0003FA                     _sendData:
   870                           	opt stack 21
   871                           
   872                           ;incstack = 0
   873                           ;sendData@whereToSend stored from wreg
   874  0003FA  0100               	movlb	0	; () banked
   875  0003FC  6FB0               	movwf	sendData@whereToSend& (0+255),b
   876                           
   877                           ;CarCom.c: 44: unsigned char SendArray[30];
   878                           ;CarCom.c: 45: unsigned char COBSArray[30];
   879                           ;CarCom.c: 47: unsigned char DataLenth = 1;
   880  0003FE  0E01               	movlw	1
   881  000400  0100               	movlb	0	; () banked
   882  000402  6FB3               	movwf	sendData@DataLenth& (0+255),b
   883                           
   884                           ;CarCom.c: 49: cobs_encode_result result;
   885                           ;CarCom.c: 51: SendArray[0] = 4+1;
   886  000404  0E05               	movlw	5
   887  000406  0100               	movlb	0	; () banked
   888  000408  6F92               	movwf	sendData@SendArray& (0+255),b
   889                           
   890                           ; BSR set to: 0
   891                           ;CarCom.c: 52: SendArray[1] = ComandByte;
   892  00040A  C06D  F093         	movff	sendData@ComandByte,sendData@SendArray+1
   893                           
   894                           ; BSR set to: 0
   895                           ;CarCom.c: 53: SendArray[2] = DataTable;
   896  00040E  C06E  F094         	movff	sendData@DataTable,sendData@SendArray+2
   897                           
   898                           ; BSR set to: 0
   899                           ;CarCom.c: 54: SendArray[3] = DataTableIndex;
   900  000412  C06F  F095         	movff	sendData@DataTableIndex,sendData@SendArray+3
   901                           
   902                           ; BSR set to: 0
   903                           ;CarCom.c: 55: SendArray[4] = DataLenth;
   904  000416  C0B3  F096         	movff	sendData@DataLenth,sendData@SendArray+4
   905                           
   906                           ;CarCom.c: 60: int i;
   907                           ;CarCom.c: 61: int count = 5;
   908  00041A  0E00               	movlw	0
   909  00041C  0100               	movlb	0	; () banked
   910  00041E  6FB2               	movwf	(sendData@count+1)& (0+255),b
   911  000420  0E05               	movlw	5
   912  000422  6FB1               	movwf	sendData@count& (0+255),b
   913                           
   914                           ; BSR set to: 0
   915                           ;CarCom.c: 62: i = count;
   916  000424  C0B1  F0B8         	movff	sendData@count,sendData@i
   917  000428  C0B2  F0B9         	movff	sendData@count+1,sendData@i+1
   918                           
   919                           ; BSR set to: 0
   920                           ;CarCom.c: 64: SendArray[5] = GetFaults(0);
   921  00042C  0E00               	movlw	0
   922  00042E  ECCB  F006         	call	_GetFaults
   923  000432  0100               	movlb	0	; () banked
   924  000434  6F97               	movwf	(sendData@SendArray+5)& (0+255),b
   925                           
   926                           ; BSR set to: 0
   927                           ;CarCom.c: 66: SendArray[6] = GetFaults(1);
   928  000436  0E01               	movlw	1
   929  000438  ECCB  F006         	call	_GetFaults
   930  00043C  0100               	movlb	0	; () banked
   931  00043E  6F98               	movwf	(sendData@SendArray+6)& (0+255),b
   932                           
   933                           ; BSR set to: 0
   934                           ;CarCom.c: 69: unsigned char CS = CRC8(SendArray, 7);
   935  000440  0E92               	movlw	low sendData@SendArray
   936  000442  6E1B               	movwf	CRC8@data,c
   937  000444  0E00               	movlw	high sendData@SendArray
   938  000446  6E1C               	movwf	CRC8@data+1,c
   939  000448  0E07               	movlw	7
   940  00044A  6E1D               	movwf	CRC8@len,c
   941  00044C  EC9D  F005         	call	_CRC8	;wreg free
   942  000450  0100               	movlb	0	; () banked
   943  000452  6FB4               	movwf	sendData@CS& (0+255),b
   944                           
   945                           ; BSR set to: 0
   946                           ;CarCom.c: 73: SendArray[7] = CS;
   947  000454  C0B4  F099         	movff	sendData@CS,sendData@SendArray+7
   948                           
   949                           ; BSR set to: 0
   950                           ;CarCom.c: 75: result = cobs_encode(COBSArray, sizeof(COBSArray), SendArray, 8);
   951  000458  0E74               	movlw	low sendData@COBSArray
   952  00045A  6E1B               	movwf	cobs_encode@dst_buf_ptr,c
   953  00045C  0E00               	movlw	high sendData@COBSArray
   954  00045E  6E1C               	movwf	cobs_encode@dst_buf_ptr+1,c
   955  000460  0E00               	movlw	0
   956  000462  6E1E               	movwf	cobs_encode@dst_buf_len+1,c
   957  000464  0E1E               	movlw	30
   958  000466  6E1D               	movwf	cobs_encode@dst_buf_len,c
   959  000468  0E92               	movlw	low sendData@SendArray
   960  00046A  6E1F               	movwf	cobs_encode@src_ptr,c
   961  00046C  0E00               	movlw	high sendData@SendArray
   962  00046E  6E20               	movwf	cobs_encode@src_ptr+1,c
   963  000470  0E00               	movlw	0
   964  000472  6E22               	movwf	cobs_encode@src_len+1,c
   965  000474  0E08               	movlw	8
   966  000476  6E21               	movwf	cobs_encode@src_len,c
   967  000478  EC31  F001         	call	_cobs_encode	;wreg free
   968  00047C  C01B  F0B5         	movff	?_cobs_encode,sendData@result
   969  000480  C01C  F0B6         	movff	?_cobs_encode+1,sendData@result+1
   970  000484  C01D  F0B7         	movff	?_cobs_encode+2,sendData@result+2
   971                           
   972                           ;CarCom.c: 77: SendArray[0] = whereToSend;
   973  000488  C0B0  F092         	movff	sendData@whereToSend,sendData@SendArray
   974                           
   975                           ;CarCom.c: 79: for(i = 1;i<result.out_len+1;i++){
   976  00048C  0E00               	movlw	0
   977  00048E  0100               	movlb	0	; () banked
   978  000490  6FB9               	movwf	(sendData@i+1)& (0+255),b
   979  000492  0E01               	movlw	1
   980  000494  6FB8               	movwf	sendData@i& (0+255),b
   981  000496  D027               	goto	l2210
   982  000498                     l2206:
   983                           
   984                           ; BSR set to: 0
   985                           ;CarCom.c: 80: SendArray[i] = COBSArray[i-1];
   986  000498  0EFF               	movlw	255
   987  00049A  0100               	movlb	0	; () banked
   988  00049C  6F70               	movwf	??_sendData& (0+255),b
   989  00049E  0EFF               	movlw	255
   990  0004A0  0100               	movlb	0	; () banked
   991  0004A2  6F71               	movwf	(??_sendData+1)& (0+255),b
   992  0004A4  C0B8  F072         	movff	sendData@i,??_sendData+2
   993  0004A8  C0B9  F073         	movff	sendData@i+1,??_sendData+3
   994  0004AC  0100               	movlb	0	; () banked
   995  0004AE  5170               	movf	??_sendData& (0+255),w,b
   996  0004B0  0100               	movlb	0	; () banked
   997  0004B2  2772               	addwf	(??_sendData+2)& (0+255),f,b
   998  0004B4  0100               	movlb	0	; () banked
   999  0004B6  5171               	movf	(??_sendData+1)& (0+255),w,b
  1000  0004B8  0100               	movlb	0	; () banked
  1001  0004BA  2373               	addwfc	(??_sendData+3)& (0+255),f,b
  1002  0004BC  0E74               	movlw	low sendData@COBSArray
  1003  0004BE  0100               	movlb	0	; () banked
  1004  0004C0  2572               	addwf	(??_sendData+2)& (0+255),w,b
  1005  0004C2  6ED9               	movwf	fsr2l,c
  1006  0004C4  0E00               	movlw	high sendData@COBSArray
  1007  0004C6  0100               	movlb	0	; () banked
  1008  0004C8  2173               	addwfc	(??_sendData+3)& (0+255),w,b
  1009  0004CA  6EDA               	movwf	fsr2h,c
  1010  0004CC  0E92               	movlw	low sendData@SendArray
  1011  0004CE  0100               	movlb	0	; () banked
  1012  0004D0  25B8               	addwf	sendData@i& (0+255),w,b
  1013  0004D2  6EE1               	movwf	fsr1l,c
  1014  0004D4  0E00               	movlw	high sendData@SendArray
  1015  0004D6  0100               	movlb	0	; () banked
  1016  0004D8  21B9               	addwfc	(sendData@i+1)& (0+255),w,b
  1017  0004DA  6EE2               	movwf	fsr1h,c
  1018  0004DC  CFDF FFE7          	movff	indf2,indf1
  1019                           
  1020                           ; BSR set to: 0
  1021  0004E0  0100               	movlb	0	; () banked
  1022  0004E2  4BB8               	infsnz	sendData@i& (0+255),f,b
  1023  0004E4  2BB9               	incf	(sendData@i+1)& (0+255),f,b
  1024  0004E6                     l2210:
  1025                           
  1026                           ; BSR set to: 0
  1027  0004E6  0E01               	movlw	1
  1028  0004E8  0100               	movlb	0	; () banked
  1029  0004EA  25B5               	addwf	sendData@result& (0+255),w,b
  1030  0004EC  0100               	movlb	0	; () banked
  1031  0004EE  6F70               	movwf	??_sendData& (0+255),b
  1032  0004F0  0E00               	movlw	0
  1033  0004F2  0100               	movlb	0	; () banked
  1034  0004F4  21B6               	addwfc	(sendData@result+1)& (0+255),w,b
  1035  0004F6  0100               	movlb	0	; () banked
  1036  0004F8  6F71               	movwf	(??_sendData+1)& (0+255),b
  1037  0004FA  0100               	movlb	0	; () banked
  1038  0004FC  5170               	movf	??_sendData& (0+255),w,b
  1039  0004FE  0100               	movlb	0	; () banked
  1040  000500  5DB8               	subwf	sendData@i& (0+255),w,b
  1041  000502  0100               	movlb	0	; () banked
  1042  000504  5171               	movf	(??_sendData+1)& (0+255),w,b
  1043  000506  0100               	movlb	0	; () banked
  1044  000508  59B9               	subwfb	(sendData@i+1)& (0+255),w,b
  1045  00050A  A0D8               	btfss	status,0,c
  1046  00050C  D7C5               	goto	l2206
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;CarCom.c: 81: }
  1050                           ;CarCom.c: 83: for(i = 0;i<result.out_len+2;i++){
  1051                           
  1052                           ; BSR set to: 0
  1053  00050E  0E00               	movlw	0
  1054  000510  0100               	movlb	0	; () banked
  1055  000512  6FB9               	movwf	(sendData@i+1)& (0+255),b
  1056  000514  0E00               	movlw	0
  1057  000516  6FB8               	movwf	sendData@i& (0+255),b
  1058  000518  D00E               	goto	l2218
  1059  00051A                     l2214:
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;CarCom.c: 84: Send_put(SendArray[i]);
  1063  00051A  0E92               	movlw	low sendData@SendArray
  1064  00051C  0100               	movlb	0	; () banked
  1065  00051E  25B8               	addwf	sendData@i& (0+255),w,b
  1066  000520  6ED9               	movwf	fsr2l,c
  1067  000522  0E00               	movlw	high sendData@SendArray
  1068  000524  0100               	movlb	0	; () banked
  1069  000526  21B9               	addwfc	(sendData@i+1)& (0+255),w,b
  1070  000528  6EDA               	movwf	fsr2h,c
  1071  00052A  50DF               	movf	indf2,w,c
  1072  00052C  EC2E  F006         	call	_Send_put
  1073  000530  0100               	movlb	0	; () banked
  1074  000532  4BB8               	infsnz	sendData@i& (0+255),f,b
  1075  000534  2BB9               	incf	(sendData@i+1)& (0+255),f,b
  1076  000536                     l2218:
  1077                           
  1078                           ; BSR set to: 0
  1079  000536  0E02               	movlw	2
  1080  000538  0100               	movlb	0	; () banked
  1081  00053A  25B5               	addwf	sendData@result& (0+255),w,b
  1082  00053C  0100               	movlb	0	; () banked
  1083  00053E  6F70               	movwf	??_sendData& (0+255),b
  1084  000540  0E00               	movlw	0
  1085  000542  0100               	movlb	0	; () banked
  1086  000544  21B6               	addwfc	(sendData@result+1)& (0+255),w,b
  1087  000546  0100               	movlb	0	; () banked
  1088  000548  6F71               	movwf	(??_sendData+1)& (0+255),b
  1089  00054A  0100               	movlb	0	; () banked
  1090  00054C  5170               	movf	??_sendData& (0+255),w,b
  1091  00054E  0100               	movlb	0	; () banked
  1092  000550  5DB8               	subwf	sendData@i& (0+255),w,b
  1093  000552  0100               	movlb	0	; () banked
  1094  000554  5171               	movf	(??_sendData+1)& (0+255),w,b
  1095  000556  0100               	movlb	0	; () banked
  1096  000558  59B9               	subwfb	(sendData@i+1)& (0+255),w,b
  1097  00055A  B0D8               	btfsc	status,0,c
  1098  00055C  0012               	return	
  1099  00055E  D7DD               	goto	l2214
  1100  000560                     __end_of_sendData:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           indf1	equ	0xFE7
  1109                           postdec1	equ	0xFE5
  1110                           fsr1h	equ	0xFE2
  1111                           fsr1l	equ	0xFE1
  1112                           indf2	equ	0xFDF
  1113                           fsr2h	equ	0xFDA
  1114                           fsr2l	equ	0xFD9
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _cobs_encode *****************
  1118 ;; Defined at:
  1119 ;;		line 29 in file "COBS.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  dst_buf_ptr     2   26[COMRAM] PTR unsigned char 
  1122 ;;		 -> sendData@COBSArray(30), 
  1123 ;;  dst_buf_len     2   28[COMRAM] unsigned int 
  1124 ;;  src_ptr         2   30[COMRAM] PTR const unsigned char 
  1125 ;;		 -> sendData@SendArray(30), 
  1126 ;;  src_len         2   32[COMRAM] unsigned int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  result          3   10[BANK0 ] struct .
  1129 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  1130 ;;		 -> sendData@COBSArray(30), 
  1131 ;;  dst_code_wri    2    6[BANK0 ] PTR unsigned char 
  1132 ;;		 -> sendData@COBSArray(30), 
  1133 ;;  dst_buf_end_    2    3[BANK0 ] PTR unsigned char 
  1134 ;;		 -> sendData@COBSArray(30), 
  1135 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  1136 ;;		 -> sendData@SendArray(30), 
  1137 ;;  search_len      1    5[BANK0 ] unsigned char 
  1138 ;;  src_byte        1    2[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  3   26[COMRAM] struct .
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1148 ;;      Params:         8       0       0       0       0       0       0
  1149 ;;      Locals:         0      13       0       0       0       0       0
  1150 ;;      Temps:          2       0       0       0       0       0       0
  1151 ;;      Totals:        10      13       0       0       0       0       0
  1152 ;;Total ram usage:       23 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    4
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_sendData
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163  000262                     __ptext4:
  1164                           	opt stack 0
  1165  000262                     _cobs_encode:
  1166                           	opt stack 23
  1167                           
  1168                           ;COBS.c: 31: cobs_encode_result result = { 0, COBS_ENCODE_OK };
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;incstack = 0
  1172  000262  C039  F06A         	movff	cobs_encode@F180,cobs_encode@result
  1173  000266  C03A  F06B         	movff	cobs_encode@F180+1,cobs_encode@result+1
  1174  00026A  C03B  F06C         	movff	cobs_encode@F180+2,cobs_encode@result+2
  1175                           
  1176                           ;COBS.c: 32: const uint8_t * src_end_ptr = src_ptr + src_len;
  1177  00026E  5021               	movf	cobs_encode@src_len,w,c
  1178  000270  241F               	addwf	cobs_encode@src_ptr,w,c
  1179  000272  0100               	movlb	0	; () banked
  1180  000274  6F60               	movwf	cobs_encode@src_end_ptr& (0+255),b
  1181  000276  5022               	movf	cobs_encode@src_len+1,w,c
  1182  000278  2020               	addwfc	cobs_encode@src_ptr+1,w,c
  1183  00027A  0100               	movlb	0	; () banked
  1184  00027C  6F61               	movwf	(cobs_encode@src_end_ptr+1)& (0+255),b
  1185                           
  1186                           ;COBS.c: 33: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  1187  00027E  501D               	movf	cobs_encode@dst_buf_len,w,c
  1188  000280  241B               	addwf	cobs_encode@dst_buf_ptr,w,c
  1189  000282  0100               	movlb	0	; () banked
  1190  000284  6F63               	movwf	cobs_encode@dst_buf_end_ptr& (0+255),b
  1191  000286  501E               	movf	cobs_encode@dst_buf_len+1,w,c
  1192  000288  201C               	addwfc	cobs_encode@dst_buf_ptr+1,w,c
  1193  00028A  0100               	movlb	0	; () banked
  1194  00028C  6F64               	movwf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),b
  1195                           
  1196                           ;COBS.c: 34: uint8_t * dst_code_write_ptr = dst_buf_ptr;
  1197  00028E  C01B  F066         	movff	cobs_encode@dst_buf_ptr,cobs_encode@dst_code_write_ptr
  1198  000292  C01C  F067         	movff	cobs_encode@dst_buf_ptr+1,cobs_encode@dst_code_write_ptr+1
  1199                           
  1200                           ;COBS.c: 35: uint8_t * dst_write_ptr = dst_code_write_ptr + 1;
  1201  000296  0E01               	movlw	1
  1202  000298  0100               	movlb	0	; () banked
  1203  00029A  2566               	addwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  1204  00029C  0100               	movlb	0	; () banked
  1205  00029E  6F68               	movwf	cobs_encode@dst_write_ptr& (0+255),b
  1206  0002A0  0E00               	movlw	0
  1207  0002A2  0100               	movlb	0	; () banked
  1208  0002A4  2167               	addwfc	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  1209  0002A6  0100               	movlb	0	; () banked
  1210  0002A8  6F69               	movwf	(cobs_encode@dst_write_ptr+1)& (0+255),b
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;COBS.c: 36: uint8_t src_byte = 0;
  1214  0002AA  0E00               	movlw	0
  1215  0002AC  0100               	movlb	0	; () banked
  1216  0002AE  6F62               	movwf	cobs_encode@src_byte& (0+255),b
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;COBS.c: 37: uint8_t search_len = 1;
  1220  0002B0  0E01               	movlw	1
  1221  0002B2  0100               	movlb	0	; () banked
  1222  0002B4  6F65               	movwf	cobs_encode@search_len& (0+255),b
  1223                           
  1224                           ;COBS.c: 41: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  1225  0002B6  501B               	movf	cobs_encode@dst_buf_ptr,w,c
  1226  0002B8  101C               	iorwf	cobs_encode@dst_buf_ptr+1,w,c
  1227  0002BA  B4D8               	btfsc	status,2,c
  1228  0002BC  D004               	goto	l2092
  1229                           
  1230                           ; BSR set to: 0
  1231  0002BE  501F               	movf	cobs_encode@src_ptr,w,c
  1232  0002C0  1020               	iorwf	cobs_encode@src_ptr+1,w,c
  1233  0002C2  A4D8               	btfss	status,2,c
  1234  0002C4  D00A               	goto	l2098
  1235  0002C6                     l2092:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;COBS.c: 42: {
  1239                           ;COBS.c: 43: result.status = COBS_ENCODE_NULL_POINTER;
  1240  0002C6  0E01               	movlw	1
  1241  0002C8  0100               	movlb	0	; () banked
  1242  0002CA  6F6C               	movwf	(cobs_encode@result+2)& (0+255),b
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;COBS.c: 44: return result;
  1246  0002CC  C06A  F01B         	movff	cobs_encode@result,?_cobs_encode
  1247  0002D0  C06B  F01C         	movff	cobs_encode@result+1,?_cobs_encode+1
  1248  0002D4  C06C  F01D         	movff	cobs_encode@result+2,?_cobs_encode+2
  1249                           
  1250                           ; BSR set to: 0
  1251  0002D8  0012               	return	
  1252  0002DA                     l2098:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;COBS.c: 45: }
  1256                           ;COBS.c: 47: if (src_len != 0)
  1257  0002DA  5021               	movf	cobs_encode@src_len,w,c
  1258  0002DC  1022               	iorwf	cobs_encode@src_len+1,w,c
  1259  0002DE  B4D8               	btfsc	status,2,c
  1260  0002E0  D05C               	goto	l2142
  1261  0002E2                     l2100:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;COBS.c: 51: {
  1265                           ;COBS.c: 53: if (dst_write_ptr >= dst_buf_end_ptr)
  1266  0002E2  0100               	movlb	0	; () banked
  1267  0002E4  5163               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  1268  0002E6  0100               	movlb	0	; () banked
  1269  0002E8  5D68               	subwf	cobs_encode@dst_write_ptr& (0+255),w,b
  1270  0002EA  0100               	movlb	0	; () banked
  1271  0002EC  5164               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  1272  0002EE  0100               	movlb	0	; () banked
  1273  0002F0  5969               	subwfb	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  1274  0002F2  A0D8               	btfss	status,0,c
  1275  0002F4  D003               	goto	l2104
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;COBS.c: 54: {
  1279                           ;COBS.c: 55: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  1280  0002F6  0100               	movlb	0	; () banked
  1281  0002F8  836C               	bsf	(cobs_encode@result+2)& (0+255),1,b
  1282                           
  1283                           ;COBS.c: 56: break;
  1284  0002FA  D04F               	goto	l2142
  1285  0002FC                     l2104:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;COBS.c: 57: }
  1289                           ;COBS.c: 59: src_byte = *src_ptr++;
  1290  0002FC  C01F  FFD9         	movff	cobs_encode@src_ptr,fsr2l
  1291  000300  C020  FFDA         	movff	cobs_encode@src_ptr+1,fsr2h
  1292  000304  50DF               	movf	indf2,w,c
  1293  000306  0100               	movlb	0	; () banked
  1294  000308  6F62               	movwf	cobs_encode@src_byte& (0+255),b
  1295                           
  1296                           ; BSR set to: 0
  1297  00030A  4A1F               	infsnz	cobs_encode@src_ptr,f,c
  1298  00030C  2A20               	incf	cobs_encode@src_ptr+1,f,c
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;COBS.c: 60: if (src_byte == 0)
  1302  00030E  0100               	movlb	0	; () banked
  1303  000310  5162               	movf	cobs_encode@src_byte& (0+255),w,b
  1304  000312  0100               	movlb	0	; () banked
  1305  000314  A4D8               	btfss	status,2,c
  1306  000316  D019               	goto	l2122
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;COBS.c: 61: {
  1310                           ;COBS.c: 63: *dst_code_write_ptr = search_len;
  1311  000318  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  1312  00031C  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  1313  000320  C065  FFDF         	movff	cobs_encode@search_len,indf2
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;COBS.c: 64: dst_code_write_ptr = dst_write_ptr++;
  1317  000324  C068  F066         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  1318  000328  C069  F067         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  1319                           
  1320                           ; BSR set to: 0
  1321  00032C  0100               	movlb	0	; () banked
  1322  00032E  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  1323  000330  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;COBS.c: 65: search_len = 1;
  1327  000332  0E01               	movlw	1
  1328  000334  0100               	movlb	0	; () banked
  1329  000336  6F65               	movwf	cobs_encode@search_len& (0+255),b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;COBS.c: 66: if (src_ptr >= src_end_ptr)
  1333  000338  0100               	movlb	0	; () banked
  1334  00033A  5160               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  1335  00033C  5C1F               	subwf	cobs_encode@src_ptr,w,c
  1336  00033E  0100               	movlb	0	; () banked
  1337  000340  5161               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  1338  000342  5820               	subwfb	cobs_encode@src_ptr+1,w,c
  1339  000344  B0D8               	btfsc	status,0,c
  1340  000346  D029               	goto	l2142
  1341  000348  D7CC               	goto	l2100
  1342  00034A                     l2122:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;COBS.c: 71: else
  1346                           ;COBS.c: 72: {
  1347                           ;COBS.c: 74: *dst_write_ptr++ = src_byte;
  1348  00034A  C068  FFD9         	movff	cobs_encode@dst_write_ptr,fsr2l
  1349  00034E  C069  FFDA         	movff	cobs_encode@dst_write_ptr+1,fsr2h
  1350  000352  C062  FFDF         	movff	cobs_encode@src_byte,indf2
  1351                           
  1352                           ; BSR set to: 0
  1353  000356  0100               	movlb	0	; () banked
  1354  000358  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  1355  00035A  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;COBS.c: 75: search_len++;
  1359  00035C  0100               	movlb	0	; () banked
  1360  00035E  2B65               	incf	cobs_encode@search_len& (0+255),f,b
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;COBS.c: 76: if (src_ptr >= src_end_ptr)
  1364  000360  0100               	movlb	0	; () banked
  1365  000362  5160               	movf	cobs_encode@src_end_ptr& (0+255),w,b
  1366  000364  5C1F               	subwf	cobs_encode@src_ptr,w,c
  1367  000366  0100               	movlb	0	; () banked
  1368  000368  5161               	movf	(cobs_encode@src_end_ptr+1)& (0+255),w,b
  1369  00036A  5820               	subwfb	cobs_encode@src_ptr+1,w,c
  1370  00036C  B0D8               	btfsc	status,0,c
  1371  00036E  D015               	goto	l2142
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;COBS.c: 79: }
  1375                           ;COBS.c: 80: if (search_len == 0xFF)
  1376                           
  1377                           ; BSR set to: 0
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;COBS.c: 77: {
  1381                           ;COBS.c: 78: break;
  1382  000370  0100               	movlb	0	; () banked
  1383  000372  2965               	incf	cobs_encode@search_len& (0+255),w,b
  1384  000374  A4D8               	btfss	status,2,c
  1385  000376  D7B5               	goto	l2100
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;COBS.c: 81: {
  1389                           ;COBS.c: 84: *dst_code_write_ptr = search_len;
  1390  000378  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  1391  00037C  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  1392  000380  C065  FFDF         	movff	cobs_encode@search_len,indf2
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;COBS.c: 85: dst_code_write_ptr = dst_write_ptr++;
  1396  000384  C068  F066         	movff	cobs_encode@dst_write_ptr,cobs_encode@dst_code_write_ptr
  1397  000388  C069  F067         	movff	cobs_encode@dst_write_ptr+1,cobs_encode@dst_code_write_ptr+1
  1398                           
  1399                           ; BSR set to: 0
  1400  00038C  0100               	movlb	0	; () banked
  1401  00038E  4B68               	infsnz	cobs_encode@dst_write_ptr& (0+255),f,b
  1402  000390  2B69               	incf	(cobs_encode@dst_write_ptr+1)& (0+255),f,b
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;COBS.c: 86: search_len = 1;
  1406  000392  0E01               	movlw	1
  1407  000394  0100               	movlb	0	; () banked
  1408  000396  6F65               	movwf	cobs_encode@search_len& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;COBS.c: 87: }
  1412                           ;COBS.c: 88: }
  1413                           ;COBS.c: 89: }
  1414                           
  1415                           ; BSR set to: 0
  1416  000398  D7A4               	goto	l2100
  1417  00039A                     l2142:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;COBS.c: 90: }
  1421                           ;COBS.c: 96: if (dst_code_write_ptr >= dst_buf_end_ptr)
  1422  00039A  0100               	movlb	0	; () banked
  1423  00039C  5163               	movf	cobs_encode@dst_buf_end_ptr& (0+255),w,b
  1424  00039E  0100               	movlb	0	; () banked
  1425  0003A0  5D66               	subwf	cobs_encode@dst_code_write_ptr& (0+255),w,b
  1426  0003A2  0100               	movlb	0	; () banked
  1427  0003A4  5164               	movf	(cobs_encode@dst_buf_end_ptr+1)& (0+255),w,b
  1428  0003A6  0100               	movlb	0	; () banked
  1429  0003A8  5967               	subwfb	(cobs_encode@dst_code_write_ptr+1)& (0+255),w,b
  1430  0003AA  A0D8               	btfss	status,0,c
  1431  0003AC  D007               	goto	l2148
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;COBS.c: 97: {
  1435                           ;COBS.c: 99: result.status |= COBS_ENCODE_OUT_BUFFER_OVERFLOW;
  1436  0003AE  0100               	movlb	0	; () banked
  1437  0003B0  836C               	bsf	(cobs_encode@result+2)& (0+255),1,b
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;COBS.c: 100: dst_write_ptr = dst_buf_end_ptr;
  1441  0003B2  C063  F068         	movff	cobs_encode@dst_buf_end_ptr,cobs_encode@dst_write_ptr
  1442  0003B6  C064  F069         	movff	cobs_encode@dst_buf_end_ptr+1,cobs_encode@dst_write_ptr+1
  1443                           
  1444                           ;COBS.c: 101: }
  1445  0003BA  D006               	goto	l2150
  1446  0003BC                     l2148:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;COBS.c: 102: else
  1450                           ;COBS.c: 103: {
  1451                           ;COBS.c: 105: *dst_code_write_ptr = search_len;
  1452  0003BC  C066  FFD9         	movff	cobs_encode@dst_code_write_ptr,fsr2l
  1453  0003C0  C067  FFDA         	movff	cobs_encode@dst_code_write_ptr+1,fsr2h
  1454  0003C4  C065  FFDF         	movff	cobs_encode@search_len,indf2
  1455  0003C8                     l2150:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;COBS.c: 106: }
  1459                           ;COBS.c: 109: result.out_len = dst_write_ptr - dst_buf_ptr;
  1460  0003C8  C01B  F023         	movff	cobs_encode@dst_buf_ptr,??_cobs_encode
  1461  0003CC  C01C  F024         	movff	cobs_encode@dst_buf_ptr+1,??_cobs_encode+1
  1462  0003D0  1E23               	comf	??_cobs_encode,f,c
  1463  0003D2  1E24               	comf	??_cobs_encode+1,f,c
  1464  0003D4  4A23               	infsnz	??_cobs_encode,f,c
  1465  0003D6  2A24               	incf	??_cobs_encode+1,f,c
  1466  0003D8  0100               	movlb	0	; () banked
  1467  0003DA  5168               	movf	cobs_encode@dst_write_ptr& (0+255),w,b
  1468  0003DC  2423               	addwf	??_cobs_encode,w,c
  1469  0003DE  0100               	movlb	0	; () banked
  1470  0003E0  6F6A               	movwf	cobs_encode@result& (0+255),b
  1471  0003E2  0100               	movlb	0	; () banked
  1472  0003E4  5169               	movf	(cobs_encode@dst_write_ptr+1)& (0+255),w,b
  1473  0003E6  2024               	addwfc	??_cobs_encode+1,w,c
  1474  0003E8  0100               	movlb	0	; () banked
  1475  0003EA  6F6B               	movwf	(cobs_encode@result+1)& (0+255),b
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;COBS.c: 111: return result;
  1479  0003EC  C06A  F01B         	movff	cobs_encode@result,?_cobs_encode
  1480  0003F0  C06B  F01C         	movff	cobs_encode@result+1,?_cobs_encode+1
  1481  0003F4  C06C  F01D         	movff	cobs_encode@result+2,?_cobs_encode+2
  1482  0003F8  0012               	return	
  1483  0003FA                     __end_of_cobs_encode:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           indf1	equ	0xFE7
  1492                           postdec1	equ	0xFE5
  1493                           fsr1h	equ	0xFE2
  1494                           fsr1l	equ	0xFE1
  1495                           indf2	equ	0xFDF
  1496                           fsr2h	equ	0xFDA
  1497                           fsr2l	equ	0xFD9
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function _Send_put *****************
  1501 ;; Defined at:
  1502 ;;		line 129 in file "UART.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  _data           1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  _data           1    2[BANK0 ] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         0       0       0       0       0       0       0
  1517 ;;      Locals:         0       1       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         0       1       0       0       0       0       0
  1520 ;;Total ram usage:        1 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    6
  1523 ;; This function calls:
  1524 ;;		_UART_buff_get
  1525 ;;		_UART_buff_put
  1526 ;; This function is called by:
  1527 ;;		_sendData
  1528 ;;		_putch
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text5
  1533  000C5C                     __ptext5:
  1534                           	opt stack 0
  1535  000C5C                     _Send_put:
  1536                           	opt stack 21
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;incstack = 0
  1540                           ;Send_put@_data stored from wreg
  1541  000C5C  0100               	movlb	0	; () banked
  1542  000C5E  6F62               	movwf	Send_put@_data& (0+255),b
  1543                           
  1544                           ;UART.c: 130: UART_buff_put(&output_buffer, _data);
  1545  000C60  0E00               	movlw	low _output_buffer
  1546  000C62  6E21               	movwf	UART_buff_put@_this,c
  1547  000C64  0E01               	movlw	high _output_buffer
  1548  000C66  6E22               	movwf	UART_buff_put@_this+1,c
  1549  000C68  C062  F023         	movff	Send_put@_data,UART_buff_put@c
  1550  000C6C  ECB0  F002         	call	_UART_buff_put	;wreg free
  1551                           
  1552                           ;UART.c: 131: if (Transmit_stall == 1) {
  1553  000C70  0444               	decf	_Transmit_stall,w,c
  1554  000C72  A4D8               	btfss	status,2,c
  1555  000C74  0012               	return	
  1556                           
  1557                           ;UART.c: 132: Transmit_stall = 0;
  1558  000C76  0E00               	movlw	0
  1559  000C78  6E44               	movwf	_Transmit_stall,c
  1560                           
  1561                           ;UART.c: 133: TXREG1 = UART_buff_get(&output_buffer);
  1562  000C7A  0E00               	movlw	low _output_buffer
  1563  000C7C  6E21               	movwf	UART_buff_get@_this,c
  1564  000C7E  0E01               	movlw	high _output_buffer
  1565  000C80  6E22               	movwf	UART_buff_get@_this+1,c
  1566  000C82  ECB4  F004         	call	_UART_buff_get	;wreg free
  1567  000C86  6EAD               	movwf	4013,c	;volatile
  1568                           
  1569                           ;UART.c: 134: PIE1bits.TX1IE = 1;
  1570  000C88  889D               	bsf	3997,4,c	;volatile
  1571  000C8A  0012               	return	
  1572  000C8C                     __end_of_Send_put:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           postinc0	equ	0xFEE
  1579                           wreg	equ	0xFE8
  1580                           indf1	equ	0xFE7
  1581                           postdec1	equ	0xFE5
  1582                           fsr1h	equ	0xFE2
  1583                           fsr1l	equ	0xFE1
  1584                           indf2	equ	0xFDF
  1585                           fsr2h	equ	0xFDA
  1586                           fsr2l	equ	0xFD9
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function _UART_buff_put *****************
  1590 ;; Defined at:
  1591 ;;		line 67 in file "UART.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  1594 ;;		 -> output_buffer(106), input_buffer(106), 
  1595 ;;  c               1   34[COMRAM] const unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1607 ;;      Params:         3       0       0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0
  1609 ;;      Temps:          0       2       0       0       0       0       0
  1610 ;;      Totals:         3       2       0       0       0       0       0
  1611 ;;Total ram usage:        5 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    5
  1614 ;; This function calls:
  1615 ;;		_UART_buff_modulo_inc
  1616 ;; This function is called by:
  1617 ;;		_Send_put
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text6
  1622  000560                     __ptext6:
  1623                           	opt stack 0
  1624  000560                     _UART_buff_put:
  1625                           	opt stack 21
  1626                           
  1627                           ;UART.c: 68: if (_this->count < 100) {
  1628                           
  1629                           ;incstack = 0
  1630  000560  EE20 F068          	lfsr	2,104
  1631  000564  5021               	movf	UART_buff_put@_this,w,c
  1632  000566  26D9               	addwf	fsr2l,f,c
  1633  000568  5022               	movf	UART_buff_put@_this+1,w,c
  1634  00056A  22DA               	addwfc	fsr2h,f,c
  1635  00056C  0E01               	movlw	1
  1636  00056E  BEDB               	btfsc	plusw2,7,c
  1637  000570  D007               	goto	l2044
  1638  000572  0E01               	movlw	1
  1639  000574  50DB               	movf	plusw2,w,c
  1640  000576  E13C               	bnz	l2050
  1641  000578  0E64               	movlw	100
  1642  00057A  5CDE               	subwf	postinc2,w,c
  1643  00057C  B0D8               	btfsc	status,0,c
  1644  00057E  D038               	goto	l2050
  1645  000580                     l2044:
  1646                           
  1647                           ;UART.c: 69: _this->buf[_this->head] = c;
  1648  000580  EE20 F064          	lfsr	2,100
  1649  000584  5021               	movf	UART_buff_put@_this,w,c
  1650  000586  26D9               	addwf	fsr2l,f,c
  1651  000588  5022               	movf	UART_buff_put@_this+1,w,c
  1652  00058A  22DA               	addwfc	fsr2h,f,c
  1653  00058C  CFDE F060          	movff	postinc2,??_UART_buff_put
  1654  000590  CFDD F061          	movff	postdec2,??_UART_buff_put+1
  1655  000594  0100               	movlb	0	; () banked
  1656  000596  5160               	movf	??_UART_buff_put& (0+255),w,b
  1657  000598  2421               	addwf	UART_buff_put@_this,w,c
  1658  00059A  6ED9               	movwf	fsr2l,c
  1659  00059C  0100               	movlb	0	; () banked
  1660  00059E  5161               	movf	(??_UART_buff_put+1)& (0+255),w,b
  1661  0005A0  2022               	addwfc	UART_buff_put@_this+1,w,c
  1662  0005A2  6EDA               	movwf	fsr2h,c
  1663  0005A4  C023  FFDF         	movff	UART_buff_put@c,indf2
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;UART.c: 70: _this->head = UART_buff_modulo_inc(_this->head, 100);
  1667  0005A8  EE20 F064          	lfsr	2,100
  1668  0005AC  5021               	movf	UART_buff_put@_this,w,c
  1669  0005AE  26D9               	addwf	fsr2l,f,c
  1670  0005B0  5022               	movf	UART_buff_put@_this+1,w,c
  1671  0005B2  22DA               	addwfc	fsr2h,f,c
  1672  0005B4  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  1673  0005B8  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  1674  0005BC  0E00               	movlw	0
  1675  0005BE  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  1676  0005C0  0E64               	movlw	100
  1677  0005C2  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  1678  0005C4  EC5C  F006         	call	_UART_buff_modulo_inc	;wreg free
  1679  0005C8  EE20 F064          	lfsr	2,100
  1680  0005CC  5021               	movf	UART_buff_put@_this,w,c
  1681  0005CE  26D9               	addwf	fsr2l,f,c
  1682  0005D0  5022               	movf	UART_buff_put@_this+1,w,c
  1683  0005D2  22DA               	addwfc	fsr2h,f,c
  1684  0005D4  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1685  0005D8  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1686                           
  1687                           ;UART.c: 71: ++_this->count;
  1688  0005DC  EE20 F068          	lfsr	2,104
  1689  0005E0  5021               	movf	UART_buff_put@_this,w,c
  1690  0005E2  26D9               	addwf	fsr2l,f,c
  1691  0005E4  5022               	movf	UART_buff_put@_this+1,w,c
  1692  0005E6  22DA               	addwfc	fsr2h,f,c
  1693  0005E8  2ADE               	incf	postinc2,f,c
  1694  0005EA  0E00               	movlw	0
  1695  0005EC  22DD               	addwfc	postdec2,f,c
  1696                           
  1697                           ;UART.c: 72: } else {
  1698  0005EE  0012               	return	
  1699  0005F0                     l2050:
  1700                           
  1701                           ;UART.c: 73: _this->buf[_this->head] = c;
  1702  0005F0  EE20 F064          	lfsr	2,100
  1703  0005F4  5021               	movf	UART_buff_put@_this,w,c
  1704  0005F6  26D9               	addwf	fsr2l,f,c
  1705  0005F8  5022               	movf	UART_buff_put@_this+1,w,c
  1706  0005FA  22DA               	addwfc	fsr2h,f,c
  1707  0005FC  CFDE F060          	movff	postinc2,??_UART_buff_put
  1708  000600  CFDD F061          	movff	postdec2,??_UART_buff_put+1
  1709  000604  0100               	movlb	0	; () banked
  1710  000606  5160               	movf	??_UART_buff_put& (0+255),w,b
  1711  000608  2421               	addwf	UART_buff_put@_this,w,c
  1712  00060A  6ED9               	movwf	fsr2l,c
  1713  00060C  0100               	movlb	0	; () banked
  1714  00060E  5161               	movf	(??_UART_buff_put+1)& (0+255),w,b
  1715  000610  2022               	addwfc	UART_buff_put@_this+1,w,c
  1716  000612  6EDA               	movwf	fsr2h,c
  1717  000614  C023  FFDF         	movff	UART_buff_put@c,indf2
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;UART.c: 74: _this->head = UART_buff_modulo_inc(_this->head, 100);
  1721  000618  EE20 F064          	lfsr	2,100
  1722  00061C  5021               	movf	UART_buff_put@_this,w,c
  1723  00061E  26D9               	addwf	fsr2l,f,c
  1724  000620  5022               	movf	UART_buff_put@_this+1,w,c
  1725  000622  22DA               	addwfc	fsr2h,f,c
  1726  000624  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  1727  000628  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  1728  00062C  0E00               	movlw	0
  1729  00062E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  1730  000630  0E64               	movlw	100
  1731  000632  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  1732  000634  EC5C  F006         	call	_UART_buff_modulo_inc	;wreg free
  1733  000638  EE20 F064          	lfsr	2,100
  1734  00063C  5021               	movf	UART_buff_put@_this,w,c
  1735  00063E  26D9               	addwf	fsr2l,f,c
  1736  000640  5022               	movf	UART_buff_put@_this+1,w,c
  1737  000642  22DA               	addwfc	fsr2h,f,c
  1738  000644  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1739  000648  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1740                           
  1741                           ;UART.c: 75: _this->tail = UART_buff_modulo_inc(_this->tail, 100);
  1742  00064C  EE20 F066          	lfsr	2,102
  1743  000650  5021               	movf	UART_buff_put@_this,w,c
  1744  000652  26D9               	addwf	fsr2l,f,c
  1745  000654  5022               	movf	UART_buff_put@_this+1,w,c
  1746  000656  22DA               	addwfc	fsr2h,f,c
  1747  000658  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  1748  00065C  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  1749  000660  0E00               	movlw	0
  1750  000662  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  1751  000664  0E64               	movlw	100
  1752  000666  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  1753  000668  EC5C  F006         	call	_UART_buff_modulo_inc	;wreg free
  1754  00066C  EE20 F066          	lfsr	2,102
  1755  000670  5021               	movf	UART_buff_put@_this,w,c
  1756  000672  26D9               	addwf	fsr2l,f,c
  1757  000674  5022               	movf	UART_buff_put@_this+1,w,c
  1758  000676  22DA               	addwfc	fsr2h,f,c
  1759  000678  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  1760  00067C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  1761  000680  0012               	return	
  1762  000682                     __end_of_UART_buff_put:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           indf1	equ	0xFE7
  1771                           postdec1	equ	0xFE5
  1772                           fsr1h	equ	0xFE2
  1773                           fsr1l	equ	0xFE1
  1774                           indf2	equ	0xFDF
  1775                           postinc2	equ	0xFDE
  1776                           postdec2	equ	0xFDD
  1777                           plusw2	equ	0xFDB
  1778                           fsr2h	equ	0xFDA
  1779                           fsr2l	equ	0xFD9
  1780                           status	equ	0xFD8
  1781                           
  1782 ;; *************** function _GetFaults *****************
  1783 ;; Defined at:
  1784 ;;		line 38 in file "Function.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  num             1    wreg     unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  num             1   26[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         0       0       0       0       0       0       0
  1799 ;;      Locals:         1       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         1       0       0       0       0       0       0
  1802 ;;Total ram usage:        1 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    4
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_sendData
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text7
  1813  000D96                     __ptext7:
  1814                           	opt stack 0
  1815  000D96                     _GetFaults:
  1816                           	opt stack 23
  1817                           
  1818                           ;incstack = 0
  1819                           ;GetFaults@num stored from wreg
  1820  000D96  6E1B               	movwf	GetFaults@num,c
  1821                           
  1822                           ;Function.c: 39: if(num == 1){
  1823  000D98  041B               	decf	GetFaults@num,w,c
  1824  000D9A  A4D8               	btfss	status,2,c
  1825  000D9C  D002               	goto	l1636
  1826                           
  1827                           ;Function.c: 40: return ByteHigh;
  1828  000D9E  503F               	movf	_ByteHigh,w,c
  1829  000DA0  0012               	return	
  1830  000DA2                     l1636:
  1831                           
  1832                           ;Function.c: 41: }
  1833                           ;Function.c: 42: if(num == 0){
  1834  000DA2  501B               	movf	GetFaults@num,w,c
  1835  000DA4  A4D8               	btfss	status,2,c
  1836  000DA6  0012               	return	
  1837                           
  1838                           ;Function.c: 43: return ByteLow;
  1839  000DA8  503E               	movf	_ByteLow,w,c
  1840  000DAA  0012               	return	
  1841  000DAC                     __end_of_GetFaults:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           indf1	equ	0xFE7
  1850                           postdec1	equ	0xFE5
  1851                           fsr1h	equ	0xFE2
  1852                           fsr1l	equ	0xFE1
  1853                           indf2	equ	0xFDF
  1854                           postinc2	equ	0xFDE
  1855                           postdec2	equ	0xFDD
  1856                           plusw2	equ	0xFDB
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _Delay *****************
  1862 ;; Defined at:
  1863 ;;		line 203 in file "Function.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  wait            2   26[COMRAM] int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  x               2   29[COMRAM] int 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1877 ;;      Params:         2       0       0       0       0       0       0
  1878 ;;      Locals:         2       0       0       0       0       0       0
  1879 ;;      Temps:          1       0       0       0       0       0       0
  1880 ;;      Totals:         5       0       0       0       0       0       0
  1881 ;;Total ram usage:        5 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    4
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_respondECU
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text8
  1892  000BF6                     __ptext8:
  1893                           	opt stack 0
  1894  000BF6                     _Delay:
  1895                           	opt stack 24
  1896                           
  1897                           ;Function.c: 204: int x;
  1898                           ;Function.c: 205: for (x = 0; x < wait; x++) {
  1899                           
  1900                           ;incstack = 0
  1901  000BF6  0E00               	movlw	0
  1902  000BF8  6E1F               	movwf	Delay@x+1,c
  1903  000BFA  0E00               	movlw	0
  1904  000BFC  6E1E               	movwf	Delay@x,c
  1905  000BFE  D00A               	goto	l271
  1906  000C00                     l1750:
  1907                           
  1908                           ;Function.c: 206: _delay((unsigned long)((1)*(16000000/4000.0)));
  1909  000C00  0E06               	movlw	6
  1910  000C02  6E1D               	movwf	??_Delay& (0+255),c
  1911  000C04  0E30               	movlw	48
  1912  000C06                     u1567:
  1913  000C06  2EE8               	decfsz	wreg,f,c
  1914  000C08  D7FE               	bra	u1567
  1915  000C0A  2E1D               	decfsz	??_Delay& (0+255),f,c
  1916  000C0C  D7FC               	bra	u1567
  1917  000C0E  D000               	nop2	
  1918  000C10  4A1E               	infsnz	Delay@x,f,c
  1919  000C12  2A1F               	incf	Delay@x+1,f,c
  1920  000C14                     l271:
  1921  000C14  501B               	movf	Delay@wait,w,c
  1922  000C16  5C1E               	subwf	Delay@x,w,c
  1923  000C18  501F               	movf	Delay@x+1,w,c
  1924  000C1A  0A80               	xorlw	128
  1925  000C1C  6E1D               	movwf	??_Delay& (0+255),c
  1926  000C1E  501C               	movf	Delay@wait+1,w,c
  1927  000C20  0A80               	xorlw	128
  1928  000C22  581D               	subwfb	??_Delay& (0+255),w,c
  1929  000C24  B0D8               	btfsc	status,0,c
  1930  000C26  0012               	return	
  1931  000C28  D7EB               	goto	l1750
  1932  000C2A                     __end_of_Delay:
  1933                           	opt stack 0
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           indf1	equ	0xFE7
  1941                           postdec1	equ	0xFE5
  1942                           fsr1h	equ	0xFE2
  1943                           fsr1l	equ	0xFE1
  1944                           indf2	equ	0xFDF
  1945                           postinc2	equ	0xFDE
  1946                           postdec2	equ	0xFDD
  1947                           plusw2	equ	0xFDB
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _receiveData *****************
  1953 ;; Defined at:
  1954 ;;		line 94 in file "CarCom.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  result          3   20[BANK0 ] struct .
  1959 ;;  i               2   23[BANK0 ] int 
  1960 ;;  Data            1   25[BANK0 ] unsigned char 
  1961 ;;  CS              1   19[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      unsigned char 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         0       0       0       0       0       0       0
  1972 ;;      Locals:         0       7       0       0       0       0       0
  1973 ;;      Temps:          0       5       0       0       0       0       0
  1974 ;;      Totals:         0      12       0       0       0       0       0
  1975 ;;Total ram usage:       12 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    7
  1978 ;; This function calls:
  1979 ;;		_CRC8
  1980 ;;		_Receive_available
  1981 ;;		_Receive_get
  1982 ;;		_cobs_decode
  1983 ;; This function is called by:
  1984 ;;		_updateComms
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text9
  1989  00079C                     __ptext9:
  1990                           	opt stack 0
  1991  00079C                     _receiveData:
  1992                           	opt stack 22
  1993                           
  1994                           ;CarCom.c: 96: if(Receive_available()>5){
  1995                           
  1996                           ;incstack = 0
  1997  00079C  ECD6  F006         	call	_Receive_available	;wreg free
  1998  0007A0  BE1E               	btfsc	?_Receive_available+1,7,c
  1999  0007A2  D072               	goto	l2336
  2000  0007A4  501E               	movf	?_Receive_available+1,w,c
  2001  0007A6  E104               	bnz	u1510
  2002  0007A8  0E06               	movlw	6
  2003  0007AA  5C1D               	subwf	?_Receive_available,w,c
  2004  0007AC  A0D8               	btfss	status,0,c
  2005  0007AE  D06C               	goto	l2336
  2006  0007B0                     u1510:
  2007                           
  2008                           ;CarCom.c: 97: if(Receive_get() == 8){
  2009  0007B0  EC12  F007         	call	_Receive_get	;wreg free
  2010  0007B4  0A08               	xorlw	8
  2011  0007B6  A4D8               	btfss	status,2,c
  2012  0007B8  D067               	goto	l2336
  2013                           
  2014                           ;CarCom.c: 98: int i = 0;
  2015  0007BA  0E00               	movlw	0
  2016  0007BC  0100               	movlb	0	; () banked
  2017  0007BE  6F78               	movwf	(receiveData@i+1)& (0+255),b
  2018  0007C0  0E00               	movlw	0
  2019  0007C2  6F77               	movwf	receiveData@i& (0+255),b
  2020                           
  2021                           ;CarCom.c: 99: char Data = 0;
  2022  0007C4  0E00               	movlw	0
  2023  0007C6  0100               	movlb	0	; () banked
  2024  0007C8  6F79               	movwf	receiveData@Data& (0+255),b
  2025  0007CA                     l2316:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;CarCom.c: 101: Data = Receive_get();
  2029  0007CA  EC12  F007         	call	_Receive_get	;wreg free
  2030  0007CE  0100               	movlb	0	; () banked
  2031  0007D0  6F79               	movwf	receiveData@Data& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;CarCom.c: 102: ReciveArray[i] = Data;
  2035  0007D2  0EE2               	movlw	low _ReciveArray
  2036  0007D4  0100               	movlb	0	; () banked
  2037  0007D6  2577               	addwf	receiveData@i& (0+255),w,b
  2038  0007D8  6ED9               	movwf	fsr2l,c
  2039  0007DA  0E00               	movlw	high _ReciveArray
  2040  0007DC  0100               	movlb	0	; () banked
  2041  0007DE  2178               	addwfc	(receiveData@i+1)& (0+255),w,b
  2042  0007E0  6EDA               	movwf	fsr2h,c
  2043  0007E2  C079  FFDF         	movff	receiveData@Data,indf2
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;CarCom.c: 103: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2047  0007E6  0E85               	movlw	133
  2048  0007E8                     u1577:
  2049  0007E8  2EE8               	decfsz	wreg,f,c
  2050  0007EA  D7FE               	bra	u1577
  2051  0007EC  F000               	nop	
  2052                           
  2053                           ;CarCom.c: 104: i++;
  2054  0007EE  0100               	movlb	0	; () banked
  2055  0007F0  4B77               	infsnz	receiveData@i& (0+255),f,b
  2056  0007F2  2B78               	incf	(receiveData@i+1)& (0+255),f,b
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;CarCom.c: 105: }while(Data != 0x00);
  2060  0007F4  0100               	movlb	0	; () banked
  2061  0007F6  5179               	movf	receiveData@Data& (0+255),w,b
  2062  0007F8  0100               	movlb	0	; () banked
  2063  0007FA  A4D8               	btfss	status,2,c
  2064  0007FC  D7E6               	goto	l2316
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;CarCom.c: 107: cobs_decode_result result;
  2068                           ;CarCom.c: 109: result = cobs_decode(ProcessArray, sizeof(ProcessArray), ReciveArray, i)
      +                          ;
  2069                           
  2070                           ; BSR set to: 0
  2071  0007FE  0EC4               	movlw	low _ProcessArray
  2072  000800  6E1B               	movwf	cobs_decode@dst_buf_ptr,c
  2073  000802  0E00               	movlw	high _ProcessArray
  2074  000804  6E1C               	movwf	cobs_decode@dst_buf_ptr+1,c
  2075  000806  0E00               	movlw	0
  2076  000808  6E1E               	movwf	cobs_decode@dst_buf_len+1,c
  2077  00080A  0E1E               	movlw	30
  2078  00080C  6E1D               	movwf	cobs_decode@dst_buf_len,c
  2079  00080E  0EE2               	movlw	low _ReciveArray
  2080  000810  6E1F               	movwf	cobs_decode@src_ptr,c
  2081  000812  0E00               	movlw	high _ReciveArray
  2082  000814  6E20               	movwf	cobs_decode@src_ptr+1,c
  2083  000816  C077  F021         	movff	receiveData@i,cobs_decode@src_len
  2084  00081A  C078  F022         	movff	receiveData@i+1,cobs_decode@src_len+1
  2085  00081E  EC52  F000         	call	_cobs_decode	;wreg free
  2086  000822  C01B  F074         	movff	?_cobs_decode,receiveData@result
  2087  000826  C01C  F075         	movff	?_cobs_decode+1,receiveData@result+1
  2088  00082A  C01D  F076         	movff	?_cobs_decode+2,receiveData@result+2
  2089                           
  2090                           ;CarCom.c: 111: char CS = CRC8(ProcessArray, result.out_len-1);
  2091  00082E  0EC4               	movlw	low _ProcessArray
  2092  000830  6E1B               	movwf	CRC8@data,c
  2093  000832  0E00               	movlw	high _ProcessArray
  2094  000834  6E1C               	movwf	CRC8@data+1,c
  2095  000836  0100               	movlb	0	; () banked
  2096  000838  0574               	decf	receiveData@result& (0+255),w,b
  2097  00083A  6E1D               	movwf	CRC8@len,c
  2098  00083C  EC9D  F005         	call	_CRC8	;wreg free
  2099  000840  0100               	movlb	0	; () banked
  2100  000842  6F73               	movwf	receiveData@CS& (0+255),b
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;CarCom.c: 113: if(ProcessArray[result.out_len-1] == CS){
  2104  000844  0EFF               	movlw	255
  2105  000846  0100               	movlb	0	; () banked
  2106  000848  6F6E               	movwf	??_receiveData& (0+255),b
  2107  00084A  0EFF               	movlw	255
  2108  00084C  0100               	movlb	0	; () banked
  2109  00084E  6F6F               	movwf	(??_receiveData+1)& (0+255),b
  2110  000850  C074  F070         	movff	receiveData@result,??_receiveData+2
  2111  000854  C075  F071         	movff	receiveData@result+1,??_receiveData+3
  2112  000858  0100               	movlb	0	; () banked
  2113  00085A  516E               	movf	??_receiveData& (0+255),w,b
  2114  00085C  0100               	movlb	0	; () banked
  2115  00085E  2770               	addwf	(??_receiveData+2)& (0+255),f,b
  2116  000860  0100               	movlb	0	; () banked
  2117  000862  516F               	movf	(??_receiveData+1)& (0+255),w,b
  2118  000864  0100               	movlb	0	; () banked
  2119  000866  2371               	addwfc	(??_receiveData+3)& (0+255),f,b
  2120  000868  0EC4               	movlw	low _ProcessArray
  2121  00086A  0100               	movlb	0	; () banked
  2122  00086C  2570               	addwf	(??_receiveData+2)& (0+255),w,b
  2123  00086E  6ED9               	movwf	fsr2l,c
  2124  000870  0E00               	movlw	high _ProcessArray
  2125  000872  0100               	movlb	0	; () banked
  2126  000874  2171               	addwfc	(??_receiveData+3)& (0+255),w,b
  2127  000876  6EDA               	movwf	fsr2h,c
  2128  000878  0100               	movlb	0	; () banked
  2129  00087A  5173               	movf	receiveData@CS& (0+255),w,b
  2130  00087C  18DE               	xorwf	postinc2,w,c
  2131  00087E  A4D8               	btfss	status,2,c
  2132  000880  D003               	goto	l2336
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;CarCom.c: 114: LATAbits.LATA3 ^= 1;
  2136  000882  7689               	btg	3977,3,c	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;CarCom.c: 115: return 1;
  2140  000884  0E01               	movlw	1
  2141                           
  2142                           ; BSR set to: 0
  2143  000886  0012               	return	
  2144  000888                     l2336:
  2145                           
  2146                           ;CarCom.c: 124: }
  2147                           ;CarCom.c: 126: return 0;
  2148  000888  0E00               	movlw	0
  2149  00088A  0012               	return	
  2150  00088C                     __end_of_receiveData:
  2151                           	opt stack 0
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf1	equ	0xFE7
  2159                           postdec1	equ	0xFE5
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           indf2	equ	0xFDF
  2163                           postinc2	equ	0xFDE
  2164                           postdec2	equ	0xFDD
  2165                           plusw2	equ	0xFDB
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _cobs_decode *****************
  2171 ;; Defined at:
  2172 ;;		line 115 in file "COBS.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  dst_buf_ptr     2   26[COMRAM] PTR unsigned char 
  2175 ;;		 -> ProcessArray(30), 
  2176 ;;  dst_buf_len     2   28[COMRAM] unsigned int 
  2177 ;;  src_ptr         2   30[COMRAM] PTR const unsigned char 
  2178 ;;		 -> ReciveArray(30), 
  2179 ;;  src_len         2   32[COMRAM] unsigned int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  result          3   11[BANK0 ] struct .
  2182 ;;  dst_write_pt    2    8[BANK0 ] PTR unsigned char 
  2183 ;;		 -> ProcessArray(30), 
  2184 ;;  remaining_by    2    6[BANK0 ] unsigned int 
  2185 ;;  dst_buf_end_    2    2[BANK0 ] PTR unsigned char 
  2186 ;;		 -> ProcessArray(30), 
  2187 ;;  src_end_ptr     2    0[BANK0 ] PTR const unsigned char 
  2188 ;;		 -> ReciveArray(30), 
  2189 ;;  len_code        1   10[BANK0 ] unsigned char 
  2190 ;;  i               1    5[BANK0 ] unsigned char 
  2191 ;;  src_byte        1    4[BANK0 ] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  3   26[COMRAM] struct .
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         8       0       0       0       0       0       0
  2202 ;;      Locals:         0      14       0       0       0       0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0
  2204 ;;      Totals:        10      14       0       0       0       0       0
  2205 ;;Total ram usage:       24 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    4
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_receiveData
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text10
  2216  0000A4                     __ptext10:
  2217                           	opt stack 0
  2218  0000A4                     _cobs_decode:
  2219                           	opt stack 24
  2220                           
  2221                           ;COBS.c: 117: cobs_decode_result result = { 0, COBS_DECODE_OK };
  2222                           
  2223                           ;incstack = 0
  2224  0000A4  C036  F06B         	movff	cobs_decode@F192,cobs_decode@result
  2225  0000A8  C037  F06C         	movff	cobs_decode@F192+1,cobs_decode@result+1
  2226  0000AC  C038  F06D         	movff	cobs_decode@F192+2,cobs_decode@result+2
  2227                           
  2228                           ;COBS.c: 118: const uint8_t * src_end_ptr = src_ptr + src_len;
  2229  0000B0  5021               	movf	cobs_decode@src_len,w,c
  2230  0000B2  241F               	addwf	cobs_decode@src_ptr,w,c
  2231  0000B4  0100               	movlb	0	; () banked
  2232  0000B6  6F60               	movwf	cobs_decode@src_end_ptr& (0+255),b
  2233  0000B8  5022               	movf	cobs_decode@src_len+1,w,c
  2234  0000BA  2020               	addwfc	cobs_decode@src_ptr+1,w,c
  2235  0000BC  0100               	movlb	0	; () banked
  2236  0000BE  6F61               	movwf	(cobs_decode@src_end_ptr+1)& (0+255),b
  2237                           
  2238                           ;COBS.c: 119: uint8_t * dst_buf_end_ptr = dst_buf_ptr + dst_buf_len;
  2239  0000C0  501D               	movf	cobs_decode@dst_buf_len,w,c
  2240  0000C2  241B               	addwf	cobs_decode@dst_buf_ptr,w,c
  2241  0000C4  0100               	movlb	0	; () banked
  2242  0000C6  6F62               	movwf	cobs_decode@dst_buf_end_ptr& (0+255),b
  2243  0000C8  501E               	movf	cobs_decode@dst_buf_len+1,w,c
  2244  0000CA  201C               	addwfc	cobs_decode@dst_buf_ptr+1,w,c
  2245  0000CC  0100               	movlb	0	; () banked
  2246  0000CE  6F63               	movwf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),b
  2247                           
  2248                           ;COBS.c: 120: uint8_t * dst_write_ptr = dst_buf_ptr;
  2249  0000D0  C01B  F068         	movff	cobs_decode@dst_buf_ptr,cobs_decode@dst_write_ptr
  2250  0000D4  C01C  F069         	movff	cobs_decode@dst_buf_ptr+1,cobs_decode@dst_write_ptr+1
  2251                           
  2252                           ;COBS.c: 121: size_t remaining_bytes;
  2253                           ;COBS.c: 122: uint8_t src_byte;
  2254                           ;COBS.c: 123: uint8_t i;
  2255                           ;COBS.c: 124: uint8_t len_code;
  2256                           ;COBS.c: 128: if ((dst_buf_ptr == (0)) || (src_ptr == (0)))
  2257  0000D8  501B               	movf	cobs_decode@dst_buf_ptr,w,c
  2258  0000DA  101C               	iorwf	cobs_decode@dst_buf_ptr+1,w,c
  2259  0000DC  B4D8               	btfsc	status,2,c
  2260  0000DE  D004               	goto	l2234
  2261                           
  2262                           ; BSR set to: 0
  2263  0000E0  501F               	movf	cobs_decode@src_ptr,w,c
  2264  0000E2  1020               	iorwf	cobs_decode@src_ptr+1,w,c
  2265  0000E4  A4D8               	btfss	status,2,c
  2266  0000E6  D00A               	goto	l2240
  2267  0000E8                     l2234:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;COBS.c: 129: {
  2271                           ;COBS.c: 130: result.status = COBS_DECODE_NULL_POINTER;
  2272  0000E8  0E01               	movlw	1
  2273  0000EA  0100               	movlb	0	; () banked
  2274  0000EC  6F6D               	movwf	(cobs_decode@result+2)& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;COBS.c: 131: return result;
  2278  0000EE  C06B  F01B         	movff	cobs_decode@result,?_cobs_decode
  2279  0000F2  C06C  F01C         	movff	cobs_decode@result+1,?_cobs_decode+1
  2280  0000F6  C06D  F01D         	movff	cobs_decode@result+2,?_cobs_decode+2
  2281                           
  2282                           ; BSR set to: 0
  2283  0000FA  0012               	return	
  2284  0000FC                     l2240:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;COBS.c: 132: }
  2288                           ;COBS.c: 134: if (src_len != 0)
  2289  0000FC  5021               	movf	cobs_decode@src_len,w,c
  2290  0000FE  1022               	iorwf	cobs_decode@src_len+1,w,c
  2291  000100  B4D8               	btfsc	status,2,c
  2292  000102  D096               	goto	l2304
  2293  000104                     l2242:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;COBS.c: 137: {
  2297                           ;COBS.c: 138: len_code = *src_ptr++;
  2298  000104  C01F  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  2299  000108  C020  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  2300  00010C  50DF               	movf	indf2,w,c
  2301  00010E  0100               	movlb	0	; () banked
  2302  000110  6F6A               	movwf	cobs_decode@len_code& (0+255),b
  2303                           
  2304                           ; BSR set to: 0
  2305  000112  4A1F               	infsnz	cobs_decode@src_ptr,f,c
  2306  000114  2A20               	incf	cobs_decode@src_ptr+1,f,c
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;COBS.c: 139: if (len_code == 0)
  2310  000116  0100               	movlb	0	; () banked
  2311  000118  516A               	movf	cobs_decode@len_code& (0+255),w,b
  2312  00011A  0100               	movlb	0	; () banked
  2313  00011C  A4D8               	btfss	status,2,c
  2314  00011E  D003               	goto	l2250
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;COBS.c: 140: {
  2318                           ;COBS.c: 141: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  2319  000120  0100               	movlb	0	; () banked
  2320  000122  856D               	bsf	(cobs_decode@result+2)& (0+255),2,b
  2321                           
  2322                           ;COBS.c: 142: break;
  2323  000124  D085               	goto	l2304
  2324  000126                     l2250:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;COBS.c: 143: }
  2328                           ;COBS.c: 144: len_code--;
  2329  000126  0100               	movlb	0	; () banked
  2330  000128  076A               	decf	cobs_decode@len_code& (0+255),f,b
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;COBS.c: 147: remaining_bytes = src_end_ptr - src_ptr;
  2334  00012A  C01F  F023         	movff	cobs_decode@src_ptr,??_cobs_decode
  2335  00012E  C020  F024         	movff	cobs_decode@src_ptr+1,??_cobs_decode+1
  2336  000132  1E23               	comf	??_cobs_decode,f,c
  2337  000134  1E24               	comf	??_cobs_decode+1,f,c
  2338  000136  4A23               	infsnz	??_cobs_decode,f,c
  2339  000138  2A24               	incf	??_cobs_decode+1,f,c
  2340  00013A  0100               	movlb	0	; () banked
  2341  00013C  5160               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  2342  00013E  2423               	addwf	??_cobs_decode,w,c
  2343  000140  0100               	movlb	0	; () banked
  2344  000142  6F66               	movwf	cobs_decode@remaining_bytes& (0+255),b
  2345  000144  0100               	movlb	0	; () banked
  2346  000146  5161               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  2347  000148  2024               	addwfc	??_cobs_decode+1,w,c
  2348  00014A  0100               	movlb	0	; () banked
  2349  00014C  6F67               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;COBS.c: 148: if (len_code > remaining_bytes)
  2353  00014E  0100               	movlb	0	; () banked
  2354  000150  516A               	movf	cobs_decode@len_code& (0+255),w,b
  2355  000152  0100               	movlb	0	; () banked
  2356  000154  5D66               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  2357  000156  0E00               	movlw	0
  2358  000158  5967               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  2359  00015A  B0D8               	btfsc	status,0,c
  2360  00015C  D004               	goto	l2260
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;COBS.c: 149: {
  2364                           ;COBS.c: 150: result.status |= COBS_DECODE_INPUT_TOO_SHORT;
  2365  00015E  0100               	movlb	0	; () banked
  2366  000160  876D               	bsf	(cobs_decode@result+2)& (0+255),3,b
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;COBS.c: 151: len_code = remaining_bytes;
  2370  000162  C066  F06A         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  2371  000166                     l2260:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;COBS.c: 152: }
  2375                           ;COBS.c: 155: remaining_bytes = dst_buf_end_ptr - dst_write_ptr;
  2376  000166  C068  F023         	movff	cobs_decode@dst_write_ptr,??_cobs_decode
  2377  00016A  C069  F024         	movff	cobs_decode@dst_write_ptr+1,??_cobs_decode+1
  2378  00016E  1E23               	comf	??_cobs_decode,f,c
  2379  000170  1E24               	comf	??_cobs_decode+1,f,c
  2380  000172  4A23               	infsnz	??_cobs_decode,f,c
  2381  000174  2A24               	incf	??_cobs_decode+1,f,c
  2382  000176  0100               	movlb	0	; () banked
  2383  000178  5162               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  2384  00017A  2423               	addwf	??_cobs_decode,w,c
  2385  00017C  0100               	movlb	0	; () banked
  2386  00017E  6F66               	movwf	cobs_decode@remaining_bytes& (0+255),b
  2387  000180  0100               	movlb	0	; () banked
  2388  000182  5163               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  2389  000184  2024               	addwfc	??_cobs_decode+1,w,c
  2390  000186  0100               	movlb	0	; () banked
  2391  000188  6F67               	movwf	(cobs_decode@remaining_bytes+1)& (0+255),b
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;COBS.c: 156: if (len_code > remaining_bytes)
  2395  00018A  0100               	movlb	0	; () banked
  2396  00018C  516A               	movf	cobs_decode@len_code& (0+255),w,b
  2397  00018E  0100               	movlb	0	; () banked
  2398  000190  5D66               	subwf	cobs_decode@remaining_bytes& (0+255),w,b
  2399  000192  0E00               	movlw	0
  2400  000194  5967               	subwfb	(cobs_decode@remaining_bytes+1)& (0+255),w,b
  2401  000196  B0D8               	btfsc	status,0,c
  2402  000198  D004               	goto	l2268
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;COBS.c: 157: {
  2406                           ;COBS.c: 158: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  2407  00019A  0100               	movlb	0	; () banked
  2408  00019C  836D               	bsf	(cobs_decode@result+2)& (0+255),1,b
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;COBS.c: 159: len_code = remaining_bytes;
  2412  00019E  C066  F06A         	movff	cobs_decode@remaining_bytes,cobs_decode@len_code
  2413  0001A2                     l2268:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;COBS.c: 160: }
  2417                           ;COBS.c: 162: for (i = len_code; i != 0; i--)
  2418  0001A2  C06A  F065         	movff	cobs_decode@len_code,cobs_decode@i
  2419  0001A6                     l2270:
  2420                           
  2421                           ; BSR set to: 0
  2422  0001A6  0100               	movlb	0	; () banked
  2423  0001A8  5165               	movf	cobs_decode@i& (0+255),w,b
  2424  0001AA  0100               	movlb	0	; () banked
  2425  0001AC  B4D8               	btfsc	status,2,c
  2426  0001AE  D01C               	goto	l2290
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;COBS.c: 163: {
  2430                           ;COBS.c: 164: src_byte = *src_ptr++;
  2431                           
  2432                           ; BSR set to: 0
  2433                           
  2434                           ; BSR set to: 0
  2435  0001B0  C01F  FFD9         	movff	cobs_decode@src_ptr,fsr2l
  2436  0001B4  C020  FFDA         	movff	cobs_decode@src_ptr+1,fsr2h
  2437  0001B8  50DF               	movf	indf2,w,c
  2438  0001BA  0100               	movlb	0	; () banked
  2439  0001BC  6F64               	movwf	cobs_decode@src_byte& (0+255),b
  2440                           
  2441                           ; BSR set to: 0
  2442  0001BE  4A1F               	infsnz	cobs_decode@src_ptr,f,c
  2443  0001C0  2A20               	incf	cobs_decode@src_ptr+1,f,c
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;COBS.c: 165: if (src_byte == 0)
  2447  0001C2  0100               	movlb	0	; () banked
  2448  0001C4  5164               	movf	cobs_decode@src_byte& (0+255),w,b
  2449  0001C6  0100               	movlb	0	; () banked
  2450  0001C8  A4D8               	btfss	status,2,c
  2451  0001CA  D002               	goto	l2282
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;COBS.c: 166: {
  2455                           ;COBS.c: 167: result.status |= COBS_DECODE_ZERO_BYTE_IN_INPUT;
  2456  0001CC  0100               	movlb	0	; () banked
  2457  0001CE  856D               	bsf	(cobs_decode@result+2)& (0+255),2,b
  2458  0001D0                     l2282:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;COBS.c: 168: }
  2462                           ;COBS.c: 169: *dst_write_ptr++ = src_byte;
  2463  0001D0  C068  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  2464  0001D4  C069  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  2465  0001D8  C064  FFDF         	movff	cobs_decode@src_byte,indf2
  2466                           
  2467                           ; BSR set to: 0
  2468  0001DC  0100               	movlb	0	; () banked
  2469  0001DE  4B68               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  2470  0001E0  2B69               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  2471                           
  2472                           ; BSR set to: 0
  2473  0001E2  0100               	movlb	0	; () banked
  2474  0001E4  0765               	decf	cobs_decode@i& (0+255),f,b
  2475  0001E6  D7DF               	goto	l2270
  2476  0001E8                     l2290:
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;COBS.c: 170: }
  2480                           ;COBS.c: 172: if (src_ptr >= src_end_ptr)
  2481  0001E8  0100               	movlb	0	; () banked
  2482  0001EA  5160               	movf	cobs_decode@src_end_ptr& (0+255),w,b
  2483  0001EC  5C1F               	subwf	cobs_decode@src_ptr,w,c
  2484  0001EE  0100               	movlb	0	; () banked
  2485  0001F0  5161               	movf	(cobs_decode@src_end_ptr+1)& (0+255),w,b
  2486  0001F2  5820               	subwfb	cobs_decode@src_ptr+1,w,c
  2487  0001F4  B0D8               	btfsc	status,0,c
  2488  0001F6  D01C               	goto	l2304
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;COBS.c: 175: }
  2492                           ;COBS.c: 178: if (len_code != 0xFE)
  2493                           
  2494                           ; BSR set to: 0
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;COBS.c: 173: {
  2498                           ;COBS.c: 174: break;
  2499  0001F8  0EFE               	movlw	254
  2500  0001FA  0100               	movlb	0	; () banked
  2501  0001FC  196A               	xorwf	cobs_decode@len_code& (0+255),w,b
  2502  0001FE  B4D8               	btfsc	status,2,c
  2503  000200  D781               	goto	l2242
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;COBS.c: 179: {
  2507                           ;COBS.c: 180: if (dst_write_ptr >= dst_buf_end_ptr)
  2508  000202  0100               	movlb	0	; () banked
  2509  000204  5162               	movf	cobs_decode@dst_buf_end_ptr& (0+255),w,b
  2510  000206  0100               	movlb	0	; () banked
  2511  000208  5D68               	subwf	cobs_decode@dst_write_ptr& (0+255),w,b
  2512  00020A  0100               	movlb	0	; () banked
  2513  00020C  5163               	movf	(cobs_decode@dst_buf_end_ptr+1)& (0+255),w,b
  2514  00020E  0100               	movlb	0	; () banked
  2515  000210  5969               	subwfb	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  2516  000212  A0D8               	btfss	status,0,c
  2517  000214  D003               	goto	l2300
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;COBS.c: 181: {
  2521                           ;COBS.c: 182: result.status |= COBS_DECODE_OUT_BUFFER_OVERFLOW;
  2522  000216  0100               	movlb	0	; () banked
  2523  000218  836D               	bsf	(cobs_decode@result+2)& (0+255),1,b
  2524                           
  2525                           ;COBS.c: 183: break;
  2526  00021A  D00A               	goto	l2304
  2527  00021C                     l2300:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;COBS.c: 184: }
  2531                           ;COBS.c: 185: *dst_write_ptr++ = 0;
  2532  00021C  C068  FFD9         	movff	cobs_decode@dst_write_ptr,fsr2l
  2533  000220  C069  FFDA         	movff	cobs_decode@dst_write_ptr+1,fsr2h
  2534  000224  0E00               	movlw	0
  2535  000226  6EDF               	movwf	indf2,c
  2536                           
  2537                           ; BSR set to: 0
  2538  000228  0100               	movlb	0	; () banked
  2539  00022A  4B68               	infsnz	cobs_decode@dst_write_ptr& (0+255),f,b
  2540  00022C  2B69               	incf	(cobs_decode@dst_write_ptr+1)& (0+255),f,b
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;COBS.c: 186: }
  2544                           ;COBS.c: 187: }
  2545  00022E  D76A               	goto	l2242
  2546  000230                     l2304:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;COBS.c: 188: }
  2550                           ;COBS.c: 190: result.out_len = dst_write_ptr - dst_buf_ptr;
  2551  000230  C01B  F023         	movff	cobs_decode@dst_buf_ptr,??_cobs_decode
  2552  000234  C01C  F024         	movff	cobs_decode@dst_buf_ptr+1,??_cobs_decode+1
  2553  000238  1E23               	comf	??_cobs_decode,f,c
  2554  00023A  1E24               	comf	??_cobs_decode+1,f,c
  2555  00023C  4A23               	infsnz	??_cobs_decode,f,c
  2556  00023E  2A24               	incf	??_cobs_decode+1,f,c
  2557  000240  0100               	movlb	0	; () banked
  2558  000242  5168               	movf	cobs_decode@dst_write_ptr& (0+255),w,b
  2559  000244  2423               	addwf	??_cobs_decode,w,c
  2560  000246  0100               	movlb	0	; () banked
  2561  000248  6F6B               	movwf	cobs_decode@result& (0+255),b
  2562  00024A  0100               	movlb	0	; () banked
  2563  00024C  5169               	movf	(cobs_decode@dst_write_ptr+1)& (0+255),w,b
  2564  00024E  2024               	addwfc	??_cobs_decode+1,w,c
  2565  000250  0100               	movlb	0	; () banked
  2566  000252  6F6C               	movwf	(cobs_decode@result+1)& (0+255),b
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;COBS.c: 192: return result;
  2570  000254  C06B  F01B         	movff	cobs_decode@result,?_cobs_decode
  2571  000258  C06C  F01C         	movff	cobs_decode@result+1,?_cobs_decode+1
  2572  00025C  C06D  F01D         	movff	cobs_decode@result+2,?_cobs_decode+2
  2573  000260  0012               	return	
  2574  000262                     __end_of_cobs_decode:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           indf1	equ	0xFE7
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           indf2	equ	0xFDF
  2587                           postinc2	equ	0xFDE
  2588                           postdec2	equ	0xFDD
  2589                           plusw2	equ	0xFDB
  2590                           fsr2h	equ	0xFDA
  2591                           fsr2l	equ	0xFD9
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function _Receive_get *****************
  2595 ;; Defined at:
  2596 ;;		line 125 in file "UART.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      unsigned char 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         0       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    6
  2617 ;; This function calls:
  2618 ;;		_UART_buff_get
  2619 ;; This function is called by:
  2620 ;;		_receiveData
  2621 ;;		_getch
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text11
  2626  000E24                     __ptext11:
  2627                           	opt stack 0
  2628  000E24                     _Receive_get:
  2629                           	opt stack 22
  2630                           
  2631                           ;UART.c: 126: return UART_buff_get(&input_buffer);
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;incstack = 0
  2635  000E24  0E6A               	movlw	low _input_buffer
  2636  000E26  6E21               	movwf	UART_buff_get@_this,c
  2637  000E28  0E01               	movlw	high _input_buffer
  2638  000E2A  6E22               	movwf	UART_buff_get@_this+1,c
  2639  000E2C  ECB4  F004         	call	_UART_buff_get	;wreg free
  2640  000E30  0012               	return	
  2641  000E32                     __end_of_Receive_get:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           indf1	equ	0xFE7
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           indf2	equ	0xFDF
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           plusw2	equ	0xFDB
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _UART_buff_get *****************
  2662 ;; Defined at:
  2663 ;;		line 80 in file "UART.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  2666 ;;		 -> output_buffer(106), input_buffer(106), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  c               1    0[BANK0 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         2       0       0       0       0       0       0
  2679 ;;      Locals:         0       1       0       0       0       0       0
  2680 ;;      Temps:          2       0       0       0       0       0       0
  2681 ;;      Totals:         4       1       0       0       0       0       0
  2682 ;;Total ram usage:        5 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    5
  2685 ;; This function calls:
  2686 ;;		_UART_buff_modulo_inc
  2687 ;; This function is called by:
  2688 ;;		_Receive_get
  2689 ;;		_Send_put
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text12
  2694  000968                     __ptext12:
  2695                           	opt stack 0
  2696  000968                     _UART_buff_get:
  2697                           	opt stack 21
  2698                           
  2699                           ;UART.c: 81: unsigned char c;
  2700                           ;UART.c: 82: if (_this->count > 0) {
  2701                           
  2702                           ;incstack = 0
  2703  000968  EE20 F068          	lfsr	2,104
  2704  00096C  5021               	movf	UART_buff_get@_this,w,c
  2705  00096E  26D9               	addwf	fsr2l,f,c
  2706  000970  5022               	movf	UART_buff_get@_this+1,w,c
  2707  000972  22DA               	addwfc	fsr2h,f,c
  2708  000974  0E01               	movlw	1
  2709  000976  BEDB               	btfsc	plusw2,7,c
  2710  000978  D03D               	goto	l2064
  2711  00097A  0E01               	movlw	1
  2712  00097C  50DB               	movf	plusw2,w,c
  2713  00097E  E103               	bnz	u1230
  2714  000980  04DE               	decf	postinc2,w,c
  2715  000982  A0D8               	btfss	status,0,c
  2716  000984  D037               	goto	l2064
  2717  000986                     u1230:
  2718                           
  2719                           ;UART.c: 83: c = _this->buf[_this->tail];
  2720  000986  EE20 F066          	lfsr	2,102
  2721  00098A  5021               	movf	UART_buff_get@_this,w,c
  2722  00098C  26D9               	addwf	fsr2l,f,c
  2723  00098E  5022               	movf	UART_buff_get@_this+1,w,c
  2724  000990  22DA               	addwfc	fsr2h,f,c
  2725  000992  CFDE F023          	movff	postinc2,??_UART_buff_get
  2726  000996  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  2727  00099A  5023               	movf	??_UART_buff_get,w,c
  2728  00099C  2421               	addwf	UART_buff_get@_this,w,c
  2729  00099E  6ED9               	movwf	fsr2l,c
  2730  0009A0  5024               	movf	??_UART_buff_get+1,w,c
  2731  0009A2  2022               	addwfc	UART_buff_get@_this+1,w,c
  2732  0009A4  6EDA               	movwf	fsr2h,c
  2733  0009A6  50DF               	movf	indf2,w,c
  2734  0009A8  0100               	movlb	0	; () banked
  2735  0009AA  6F60               	movwf	UART_buff_get@c& (0+255),b
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;UART.c: 84: _this->tail = UART_buff_modulo_inc(_this->tail, 100);
  2739  0009AC  EE20 F066          	lfsr	2,102
  2740  0009B0  5021               	movf	UART_buff_get@_this,w,c
  2741  0009B2  26D9               	addwf	fsr2l,f,c
  2742  0009B4  5022               	movf	UART_buff_get@_this+1,w,c
  2743  0009B6  22DA               	addwfc	fsr2h,f,c
  2744  0009B8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  2745  0009BC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  2746  0009C0  0E00               	movlw	0
  2747  0009C2  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  2748  0009C4  0E64               	movlw	100
  2749  0009C6  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  2750  0009C8  EC5C  F006         	call	_UART_buff_modulo_inc	;wreg free
  2751  0009CC  EE20 F066          	lfsr	2,102
  2752  0009D0  5021               	movf	UART_buff_get@_this,w,c
  2753  0009D2  26D9               	addwf	fsr2l,f,c
  2754  0009D4  5022               	movf	UART_buff_get@_this+1,w,c
  2755  0009D6  22DA               	addwfc	fsr2h,f,c
  2756  0009D8  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  2757  0009DC  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  2758                           
  2759                           ;UART.c: 85: --_this->count;
  2760  0009E0  EE20 F068          	lfsr	2,104
  2761  0009E4  5021               	movf	UART_buff_get@_this,w,c
  2762  0009E6  26D9               	addwf	fsr2l,f,c
  2763  0009E8  5022               	movf	UART_buff_get@_this+1,w,c
  2764  0009EA  22DA               	addwfc	fsr2h,f,c
  2765  0009EC  06DE               	decf	postinc2,f,c
  2766  0009EE  0E00               	movlw	0
  2767  0009F0  5ADD               	subwfb	postdec2,f,c
  2768                           
  2769                           ;UART.c: 86: } else {
  2770  0009F2  D003               	goto	l93
  2771  0009F4                     l2064:
  2772                           
  2773                           ;UART.c: 87: c = 0;
  2774  0009F4  0E00               	movlw	0
  2775  0009F6  0100               	movlb	0	; () banked
  2776  0009F8  6F60               	movwf	UART_buff_get@c& (0+255),b
  2777  0009FA                     l93:
  2778                           
  2779                           ;UART.c: 88: }
  2780                           ;UART.c: 89: return (c);
  2781  0009FA  0100               	movlb	0	; () banked
  2782  0009FC  5160               	movf	UART_buff_get@c& (0+255),w,b
  2783  0009FE  0012               	return	
  2784  000A00                     __end_of_UART_buff_get:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           postinc0	equ	0xFEE
  2791                           wreg	equ	0xFE8
  2792                           indf1	equ	0xFE7
  2793                           postdec1	equ	0xFE5
  2794                           fsr1h	equ	0xFE2
  2795                           fsr1l	equ	0xFE1
  2796                           indf2	equ	0xFDF
  2797                           postinc2	equ	0xFDE
  2798                           postdec2	equ	0xFDD
  2799                           plusw2	equ	0xFDB
  2800                           fsr2h	equ	0xFDA
  2801                           fsr2l	equ	0xFD9
  2802                           status	equ	0xFD8
  2803                           
  2804 ;; *************** function _UART_buff_modulo_inc *****************
  2805 ;; Defined at:
  2806 ;;		line 105 in file "UART.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  value           2   26[COMRAM] const unsigned int 
  2809 ;;  modulus         2   28[COMRAM] const unsigned int 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  my_value        2   30[COMRAM] unsigned int 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2   26[COMRAM] unsigned int 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2821 ;;      Params:         4       0       0       0       0       0       0
  2822 ;;      Locals:         2       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0
  2824 ;;      Totals:         6       0       0       0       0       0       0
  2825 ;;Total ram usage:        6 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    4
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_UART_buff_put
  2832 ;;		_UART_buff_get
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text13
  2837  000CB8                     __ptext13:
  2838                           	opt stack 0
  2839  000CB8                     _UART_buff_modulo_inc:
  2840                           	opt stack 21
  2841                           
  2842                           ;UART.c: 106: unsigned int my_value = value + 1;
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;incstack = 0
  2846  000CB8  0E01               	movlw	1
  2847  000CBA  241B               	addwf	UART_buff_modulo_inc@value,w,c
  2848  000CBC  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  2849  000CBE  0E00               	movlw	0
  2850  000CC0  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  2851  000CC2  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  2852                           
  2853                           ;UART.c: 107: if (my_value >= modulus) {
  2854  000CC4  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  2855  000CC6  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  2856  000CC8  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  2857  000CCA  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  2858  000CCC  A0D8               	btfss	status,0,c
  2859  000CCE  D004               	goto	l2038
  2860                           
  2861                           ;UART.c: 108: my_value = 0;
  2862  000CD0  0E00               	movlw	0
  2863  000CD2  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  2864  000CD4  0E00               	movlw	0
  2865  000CD6  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  2866  000CD8                     l2038:
  2867                           
  2868                           ;UART.c: 109: }
  2869                           ;UART.c: 110: return (my_value);
  2870  000CD8  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  2871  000CDC  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  2872  000CE0  0012               	return	
  2873  000CE2                     __end_of_UART_buff_modulo_inc:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           indf1	equ	0xFE7
  2882                           postdec1	equ	0xFE5
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           indf2	equ	0xFDF
  2886                           postinc2	equ	0xFDE
  2887                           postdec2	equ	0xFDD
  2888                           plusw2	equ	0xFDB
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function _Receive_available *****************
  2894 ;; Defined at:
  2895 ;;		line 121 in file "UART.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  2   28[COMRAM] int 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2909 ;;      Params:         2       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0
  2912 ;;      Totals:         2       0       0       0       0       0       0
  2913 ;;Total ram usage:        2 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    5
  2916 ;; This function calls:
  2917 ;;		_UART_buff_size
  2918 ;; This function is called by:
  2919 ;;		_receiveData
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text14
  2924  000DAC                     __ptext14:
  2925                           	opt stack 0
  2926  000DAC                     _Receive_available:
  2927                           	opt stack 23
  2928                           
  2929                           ;UART.c: 122: return UART_buff_size(&input_buffer);
  2930                           
  2931                           ;incstack = 0
  2932  000DAC  0E6A               	movlw	low _input_buffer
  2933  000DAE  6E1B               	movwf	UART_buff_size@_this,c
  2934  000DB0  0E01               	movlw	high _input_buffer
  2935  000DB2  6E1C               	movwf	UART_buff_size@_this+1,c
  2936  000DB4  ECE1  F006         	call	_UART_buff_size	;wreg free
  2937  000DB8  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  2938  000DBC  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  2939  000DC0  0012               	return	
  2940  000DC2                     __end_of_Receive_available:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           indf1	equ	0xFE7
  2949                           postdec1	equ	0xFE5
  2950                           fsr1h	equ	0xFE2
  2951                           fsr1l	equ	0xFE1
  2952                           indf2	equ	0xFDF
  2953                           postinc2	equ	0xFDE
  2954                           postdec2	equ	0xFDD
  2955                           plusw2	equ	0xFDB
  2956                           fsr2h	equ	0xFDA
  2957                           fsr2l	equ	0xFD9
  2958                           status	equ	0xFD8
  2959                           
  2960 ;; *************** function _UART_buff_size *****************
  2961 ;; Defined at:
  2962 ;;		line 101 in file "UART.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  2965 ;;		 -> output_buffer(106), input_buffer(106), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2   26[COMRAM] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2977 ;;      Params:         2       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0
  2980 ;;      Totals:         2       0       0       0       0       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    4
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_Receive_available
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text15
  2992  000DC2                     __ptext15:
  2993                           	opt stack 0
  2994  000DC2                     _UART_buff_size:
  2995                           	opt stack 23
  2996                           
  2997                           ;UART.c: 102: return (_this->count);
  2998                           
  2999                           ;incstack = 0
  3000  000DC2  EE20 F068          	lfsr	2,104
  3001  000DC6  501B               	movf	UART_buff_size@_this,w,c
  3002  000DC8  26D9               	addwf	fsr2l,f,c
  3003  000DCA  501C               	movf	UART_buff_size@_this+1,w,c
  3004  000DCC  22DA               	addwfc	fsr2h,f,c
  3005  000DCE  CFDE F01B          	movff	postinc2,?_UART_buff_size
  3006  000DD2  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  3007  000DD6  0012               	return	
  3008  000DD8                     __end_of_UART_buff_size:
  3009                           	opt stack 0
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           indf1	equ	0xFE7
  3017                           postdec1	equ	0xFE5
  3018                           fsr1h	equ	0xFE2
  3019                           fsr1l	equ	0xFE1
  3020                           indf2	equ	0xFDF
  3021                           postinc2	equ	0xFDE
  3022                           postdec2	equ	0xFDD
  3023                           plusw2	equ	0xFDB
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _CRC8 *****************
  3029 ;; Defined at:
  3030 ;;		line 20 in file "CarCom.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  data            2   26[COMRAM] PTR const unsigned char 
  3033 ;;		 -> ProcessArray(30), sendData@SendArray(30), 
  3034 ;;  len             1   28[COMRAM] unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  sum             1   29[COMRAM] unsigned char 
  3037 ;;  tempI           1   31[COMRAM] unsigned char 
  3038 ;;  extract         1   30[COMRAM] unsigned char 
  3039 ;;  crc             1   32[COMRAM] unsigned char 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      unsigned char 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3049 ;;      Params:         3       0       0       0       0       0       0
  3050 ;;      Locals:         4       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0
  3052 ;;      Totals:         7       0       0       0       0       0       0
  3053 ;;Total ram usage:        7 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    4
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_sendData
  3060 ;;		_receiveData
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text16
  3065  000B3A                     __ptext16:
  3066                           	opt stack 0
  3067  000B3A                     _CRC8:
  3068                           	opt stack 23
  3069                           
  3070                           ;CarCom.c: 21: unsigned char crc = 0x00;
  3071                           
  3072                           ;incstack = 0
  3073  000B3A  0E00               	movlw	0
  3074  000B3C  6E21               	movwf	CRC8@crc,c
  3075                           
  3076                           ;CarCom.c: 22: while (len--) {
  3077  000B3E  D01C               	goto	l2174
  3078  000B40                     l2158:
  3079                           
  3080                           ;CarCom.c: 23: unsigned char extract = *data++;
  3081  000B40  C01B  FFD9         	movff	CRC8@data,fsr2l
  3082  000B44  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  3083  000B48  50DF               	movf	indf2,w,c
  3084  000B4A  6E1F               	movwf	CRC8@extract,c
  3085  000B4C  4A1B               	infsnz	CRC8@data,f,c
  3086  000B4E  2A1C               	incf	CRC8@data+1,f,c
  3087                           
  3088                           ;CarCom.c: 24: unsigned char tempI;
  3089                           ;CarCom.c: 25: for (tempI = 8; tempI; tempI--) {
  3090  000B50  0E08               	movlw	8
  3091  000B52  6E20               	movwf	CRC8@tempI,c
  3092  000B54  D00E               	goto	l2172
  3093  000B56                     l2164:
  3094                           
  3095                           ;CarCom.c: 26: unsigned char sum = (crc ^ extract) & 0x01;
  3096  000B56  5021               	movf	CRC8@crc,w,c
  3097  000B58  181F               	xorwf	CRC8@extract,w,c
  3098  000B5A  0B01               	andlw	1
  3099  000B5C  6E1E               	movwf	CRC8@sum,c
  3100                           
  3101                           ;CarCom.c: 27: crc >>= 1;
  3102  000B5E  90D8               	bcf	status,0,c
  3103  000B60  3221               	rrcf	CRC8@crc,f,c
  3104                           
  3105                           ;CarCom.c: 28: if (sum) {
  3106  000B62  501E               	movf	CRC8@sum,w,c
  3107  000B64  B4D8               	btfsc	status,2,c
  3108  000B66  D002               	goto	l342
  3109                           
  3110                           ;CarCom.c: 29: crc ^= 0x8C;
  3111  000B68  0E8C               	movlw	140
  3112  000B6A  1A21               	xorwf	CRC8@crc,f,c
  3113  000B6C                     l342:
  3114                           
  3115                           ;CarCom.c: 30: }
  3116                           ;CarCom.c: 31: extract >>= 1;
  3117  000B6C  90D8               	bcf	status,0,c
  3118  000B6E  321F               	rrcf	CRC8@extract,f,c
  3119  000B70  0620               	decf	CRC8@tempI,f,c
  3120  000B72                     l2172:
  3121  000B72  5020               	movf	CRC8@tempI,w,c
  3122  000B74  A4D8               	btfss	status,2,c
  3123  000B76  D7EF               	goto	l2164
  3124  000B78                     l2174:
  3125  000B78  061D               	decf	CRC8@len,f,c
  3126  000B7A  281D               	incf	CRC8@len,w,c
  3127  000B7C  A4D8               	btfss	status,2,c
  3128  000B7E  D7E0               	goto	l2158
  3129                           
  3130                           ;CarCom.c: 32: }
  3131                           ;CarCom.c: 33: }
  3132                           ;CarCom.c: 34: return crc;
  3133  000B80  5021               	movf	CRC8@crc,w,c
  3134  000B82  0012               	return	
  3135  000B84                     __end_of_CRC8:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           postinc0	equ	0xFEE
  3142                           wreg	equ	0xFE8
  3143                           indf1	equ	0xFE7
  3144                           postdec1	equ	0xFE5
  3145                           fsr1h	equ	0xFE2
  3146                           fsr1l	equ	0xFE1
  3147                           indf2	equ	0xFDF
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           plusw2	equ	0xFDB
  3151                           fsr2h	equ	0xFDA
  3152                           fsr2l	equ	0xFD9
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _Start *****************
  3156 ;; Defined at:
  3157 ;;		line 47 in file "Function.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3171 ;;      Params:         0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    8
  3178 ;; This function calls:
  3179 ;;		_ComStart
  3180 ;;		_INTERRUPT_Initialize
  3181 ;;		_TMR0_Initialize
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text17
  3188  000A92                     __ptext17:
  3189                           	opt stack 0
  3190  000A92                     _Start:
  3191                           	opt stack 22
  3192                           
  3193                           ;Function.c: 112: TRISCbits.TRISC5 = 1;
  3194                           
  3195                           ;incstack = 0
  3196  000A92  8A94               	bsf	3988,5,c	;volatile
  3197                           
  3198                           ;Function.c: 113: TRISCbits.TRISC4 = 1;
  3199  000A94  8894               	bsf	3988,4,c	;volatile
  3200                           
  3201                           ;Function.c: 114: TRISDbits.TRISD3 = 1;
  3202  000A96  8695               	bsf	3989,3,c	;volatile
  3203                           
  3204                           ;Function.c: 115: TRISDbits.TRISD2 = 1;
  3205  000A98  8495               	bsf	3989,2,c	;volatile
  3206                           
  3207                           ;Function.c: 116: TRISDbits.TRISD1 = 1;
  3208  000A9A  8295               	bsf	3989,1,c	;volatile
  3209                           
  3210                           ;Function.c: 117: TRISDbits.TRISD0 = 1;
  3211  000A9C  8095               	bsf	3989,0,c	;volatile
  3212                           
  3213                           ;Function.c: 118: TRISCbits.TRISC3 = 1;
  3214  000A9E  8694               	bsf	3988,3,c	;volatile
  3215                           
  3216                           ;Function.c: 119: TRISCbits.TRISC2 = 1;
  3217  000AA0  8494               	bsf	3988,2,c	;volatile
  3218                           
  3219                           ;Function.c: 120: TRISCbits.TRISC1 = 1;
  3220  000AA2  8294               	bsf	3988,1,c	;volatile
  3221                           
  3222                           ;Function.c: 121: TRISAbits.TRISA7 = 1;
  3223  000AA4  8E92               	bsf	3986,7,c	;volatile
  3224                           
  3225                           ;Function.c: 122: TRISCbits.TRISC0 = 1;
  3226  000AA6  8094               	bsf	3988,0,c	;volatile
  3227                           
  3228                           ;Function.c: 123: TRISAbits.TRISA4 = 1;
  3229  000AA8  8892               	bsf	3986,4,c	;volatile
  3230                           
  3231                           ;Function.c: 124: TRISAbits.TRISA6 = 1;
  3232  000AAA  8C92               	bsf	3986,6,c	;volatile
  3233                           
  3234                           ;Function.c: 127: TRISAbits.TRISA3 = 0;
  3235  000AAC  9692               	bcf	3986,3,c	;volatile
  3236                           
  3237                           ;Function.c: 128: TRISDbits.TRISD4 = 0;
  3238  000AAE  9895               	bcf	3989,4,c	;volatile
  3239                           
  3240                           ;Function.c: 133: ANSELA = 0;
  3241  000AB0  0E00               	movlw	0
  3242  000AB2  010F               	movlb	15	; () banked
  3243  000AB4  6F38               	movwf	56,b	;volatile
  3244                           
  3245                           ;Function.c: 134: ANSELB = 0;
  3246  000AB6  0E00               	movlw	0
  3247  000AB8  010F               	movlb	15	; () banked
  3248  000ABA  6F39               	movwf	57,b	;volatile
  3249                           
  3250                           ;Function.c: 135: ANSELC = 0;
  3251  000ABC  0E00               	movlw	0
  3252  000ABE  010F               	movlb	15	; () banked
  3253  000AC0  6F3A               	movwf	58,b	;volatile
  3254                           
  3255                           ;Function.c: 136: ANSELD = 0;
  3256  000AC2  0E00               	movlw	0
  3257  000AC4  010F               	movlb	15	; () banked
  3258  000AC6  6F3B               	movwf	59,b	;volatile
  3259                           
  3260                           ;Function.c: 137: ANSELE = 0;
  3261  000AC8  0E00               	movlw	0
  3262  000ACA  010F               	movlb	15	; () banked
  3263  000ACC  6F3C               	movwf	60,b	;volatile
  3264                           
  3265                           ;Function.c: 141: OSCCON = 0x72;
  3266  000ACE  0E72               	movlw	114
  3267  000AD0  6ED3               	movwf	4051,c	;volatile
  3268                           
  3269                           ;Function.c: 143: OSCCON2 = 0x04;
  3270  000AD2  0E04               	movlw	4
  3271  000AD4  6ED2               	movwf	4050,c	;volatile
  3272                           
  3273                           ;Function.c: 145: OSCTUNE = 0x00;
  3274  000AD6  0E00               	movlw	0
  3275  000AD8  6E9B               	movwf	3995,c	;volatile
  3276                           
  3277                           ; BSR set to: 15
  3278                           ;Function.c: 148: ComStart();
  3279  000ADA  EC19  F007         	call	_ComStart	;wreg free
  3280                           
  3281                           ;Function.c: 149: INTERRUPT_Initialize();
  3282  000ADE  ECB3  F006         	call	_INTERRUPT_Initialize	;wreg free
  3283                           
  3284                           ;Function.c: 150: TMR0_Initialize();
  3285  000AE2  EC86  F006         	call	_TMR0_Initialize	;wreg free
  3286  000AE6  0012               	return		;funcret
  3287  000AE8                     __end_of_Start:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           indf1	equ	0xFE7
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           plusw2	equ	0xFDB
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _TMR0_Initialize *****************
  3308 ;; Defined at:
  3309 ;;		line 23 in file "tmr0.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3323 ;;      Params:         0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    5
  3330 ;; This function calls:
  3331 ;;		_TMR0_StartTimer
  3332 ;; This function is called by:
  3333 ;;		_Start
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text18
  3338  000D0C                     __ptext18:
  3339                           	opt stack 0
  3340  000D0C                     _TMR0_Initialize:
  3341                           	opt stack 24
  3342                           
  3343                           ;tmr0.c: 27: T0CON = 0x94;
  3344                           
  3345                           ;incstack = 0
  3346  000D0C  0E94               	movlw	148
  3347  000D0E  6ED5               	movwf	4053,c	;volatile
  3348                           
  3349                           ;tmr0.c: 30: TMR0H = 0xCF;
  3350  000D10  0ECF               	movlw	207
  3351  000D12  6ED7               	movwf	4055,c	;volatile
  3352                           
  3353                           ;tmr0.c: 33: TMR0L = 0x2C;
  3354  000D14  0E2C               	movlw	44
  3355  000D16  6ED6               	movwf	4054,c	;volatile
  3356                           
  3357                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  3358  000D18  0ECF               	movlw	207
  3359  000D1A  6E3D               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  3360  000D1C  0E2C               	movlw	44
  3361  000D1E  6E3C               	movwf	_timer0ReloadVal16bit,c	;volatile
  3362                           
  3363                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  3364  000D20  94F2               	bcf	intcon,2,c	;volatile
  3365                           
  3366                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  3367  000D22  8AF2               	bsf	intcon,5,c	;volatile
  3368                           
  3369                           ;tmr0.c: 45: TMR0_StartTimer();
  3370  000D24  EC1F  F007         	call	_TMR0_StartTimer	;wreg free
  3371  000D28  0012               	return		;funcret
  3372  000D2A                     __end_of_TMR0_Initialize:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           intcon	equ	0xFF2
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           indf1	equ	0xFE7
  3382                           postdec1	equ	0xFE5
  3383                           fsr1h	equ	0xFE2
  3384                           fsr1l	equ	0xFE1
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           postdec2	equ	0xFDD
  3388                           plusw2	equ	0xFDB
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function _TMR0_StartTimer *****************
  3394 ;; Defined at:
  3395 ;;		line 48 in file "tmr0.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		None
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         0       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    4
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_TMR0_Initialize
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text19
  3424  000E3E                     __ptext19:
  3425                           	opt stack 0
  3426  000E3E                     _TMR0_StartTimer:
  3427                           	opt stack 24
  3428                           
  3429                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  3430                           
  3431                           ;incstack = 0
  3432  000E3E  8ED5               	bsf	4053,7,c	;volatile
  3433  000E40  0012               	return		;funcret
  3434  000E42                     __end_of_TMR0_StartTimer:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           intcon	equ	0xFF2
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           indf1	equ	0xFE7
  3444                           postdec1	equ	0xFE5
  3445                           fsr1h	equ	0xFE2
  3446                           fsr1l	equ	0xFE1
  3447                           indf2	equ	0xFDF
  3448                           postinc2	equ	0xFDE
  3449                           postdec2	equ	0xFDD
  3450                           plusw2	equ	0xFDB
  3451                           fsr2h	equ	0xFDA
  3452                           fsr2l	equ	0xFD9
  3453                           status	equ	0xFD8
  3454                           
  3455 ;; *************** function _INTERRUPT_Initialize *****************
  3456 ;; Defined at:
  3457 ;;		line 153 in file "Function.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		None
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3471 ;;      Params:         0       0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_Start
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text20
  3486  000D66                     __ptext20:
  3487                           	opt stack 0
  3488  000D66                     _INTERRUPT_Initialize:
  3489                           	opt stack 25
  3490                           
  3491                           ;Function.c: 155: INTCONbits.PEIE = 1;
  3492                           
  3493                           ;incstack = 0
  3494  000D66  8CF2               	bsf	intcon,6,c	;volatile
  3495                           
  3496                           ;Function.c: 156: INTCONbits.GIE = 1;
  3497  000D68  8EF2               	bsf	intcon,7,c	;volatile
  3498                           
  3499                           ;Function.c: 158: RCONbits.IPEN = 0;
  3500  000D6A  9ED0               	bcf	4048,7,c	;volatile
  3501                           
  3502                           ;Function.c: 163: IPR1bits.RC1IP = 0;
  3503  000D6C  9A9F               	bcf	3999,5,c	;volatile
  3504                           
  3505                           ;Function.c: 165: IPR1bits.TX1IP = 0;
  3506  000D6E  989F               	bcf	3999,4,c	;volatile
  3507                           
  3508                           ;Function.c: 168: INTCONbits.TMR0IF = 0;
  3509  000D70  94F2               	bcf	intcon,2,c	;volatile
  3510                           
  3511                           ;Function.c: 171: INTCONbits.TMR0IE = 1;
  3512  000D72  8AF2               	bsf	intcon,5,c	;volatile
  3513                           
  3514                           ;Function.c: 173: IPR1bits.ADIP = 0;
  3515  000D74  9C9F               	bcf	3999,6,c	;volatile
  3516                           
  3517                           ;Function.c: 175: IPR1bits.SSP1IP = 0;
  3518  000D76  969F               	bcf	3999,3,c	;volatile
  3519                           
  3520                           ;Function.c: 177: IPR2bits.BCL1IP = 0;
  3521  000D78  96A2               	bcf	4002,3,c	;volatile
  3522                           
  3523                           ;Function.c: 178: IPR1bits.TMR2IP=0;
  3524  000D7A  929F               	bcf	3999,1,c	;volatile
  3525  000D7C  0012               	return		;funcret
  3526  000D7E                     __end_of_INTERRUPT_Initialize:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf1	equ	0xFE7
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           postinc2	equ	0xFDE
  3541                           postdec2	equ	0xFDD
  3542                           plusw2	equ	0xFDB
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _ComStart *****************
  3548 ;; Defined at:
  3549 ;;		line 12 in file "Communications.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         0       0       0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    7
  3570 ;; This function calls:
  3571 ;;		_EUSART1_Initialize
  3572 ;; This function is called by:
  3573 ;;		_Start
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text21
  3578  000E32                     __ptext21:
  3579                           	opt stack 0
  3580  000E32                     _ComStart:
  3581                           	opt stack 22
  3582                           
  3583                           ;Communications.c: 13: EUSART1_Initialize();
  3584                           
  3585                           ;incstack = 0
  3586  000E32  ECC2  F005         	call	_EUSART1_Initialize	;wreg free
  3587  000E36  0012               	return		;funcret
  3588  000E38                     __end_of_ComStart:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           indf1	equ	0xFE7
  3598                           postdec1	equ	0xFE5
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           plusw2	equ	0xFDB
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _EUSART1_Initialize *****************
  3610 ;; Defined at:
  3611 ;;		line 20 in file "UART.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3625 ;;      Params:         0       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    6
  3632 ;; This function calls:
  3633 ;;		_UART_buff_init
  3634 ;; This function is called by:
  3635 ;;		_ComStart
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text22
  3640  000B84                     __ptext22:
  3641                           	opt stack 0
  3642  000B84                     _EUSART1_Initialize:
  3643                           	opt stack 22
  3644                           
  3645                           ;UART.c: 22: PIE1bits.RC1IE = 0;
  3646                           
  3647                           ;incstack = 0
  3648  000B84  9A9D               	bcf	3997,5,c	;volatile
  3649                           
  3650                           ;UART.c: 23: PIE1bits.TX1IE = 0;
  3651  000B86  989D               	bcf	3997,4,c	;volatile
  3652                           
  3653                           ;UART.c: 28: BAUD1CON = 0x48;
  3654  000B88  0E48               	movlw	72
  3655  000B8A  6EB8               	movwf	4024,c	;volatile
  3656                           
  3657                           ;UART.c: 31: RC1STA = 0x98;
  3658  000B8C  0E98               	movlw	152
  3659  000B8E  6EAB               	movwf	4011,c	;volatile
  3660                           
  3661                           ;UART.c: 34: TX1STA = 0x26;
  3662  000B90  0E26               	movlw	38
  3663  000B92  6EAC               	movwf	4012,c	;volatile
  3664                           
  3665                           ;UART.c: 37: SPBRG1 = (((16000000/38400)/4)-1);
  3666  000B94  0E67               	movlw	103
  3667  000B96  6EAF               	movwf	4015,c	;volatile
  3668                           
  3669                           ;UART.c: 40: SPBRGH1 = 0x00;
  3670  000B98  0E00               	movlw	0
  3671  000B9A  6EB0               	movwf	4016,c	;volatile
  3672                           
  3673                           ;UART.c: 43: TXREG1 = 0x00;
  3674  000B9C  0E00               	movlw	0
  3675  000B9E  6EAD               	movwf	4013,c	;volatile
  3676                           
  3677                           ;UART.c: 46: RCREG1 = 0x00;
  3678  000BA0  0E00               	movlw	0
  3679  000BA2  6EAE               	movwf	4014,c	;volatile
  3680                           
  3681                           ;UART.c: 48: UART_buff_init(&input_buffer);
  3682  000BA4  0E6A               	movlw	low _input_buffer
  3683  000BA6  6E23               	movwf	UART_buff_init@_this,c
  3684  000BA8  0E01               	movlw	high _input_buffer
  3685  000BAA  6E24               	movwf	UART_buff_init@_this+1,c
  3686  000BAC  EC95  F006         	call	_UART_buff_init	;wreg free
  3687                           
  3688                           ;UART.c: 49: UART_buff_init(&output_buffer);
  3689  000BB0  0E00               	movlw	low _output_buffer
  3690  000BB2  6E23               	movwf	UART_buff_init@_this,c
  3691  000BB4  0E01               	movlw	high _output_buffer
  3692  000BB6  6E24               	movwf	UART_buff_init@_this+1,c
  3693  000BB8  EC95  F006         	call	_UART_buff_init	;wreg free
  3694                           
  3695                           ;UART.c: 51: PIE1bits.RC1IE = 1;
  3696  000BBC  8A9D               	bsf	3997,5,c	;volatile
  3697  000BBE  0012               	return		;funcret
  3698  000BC0                     __end_of_EUSART1_Initialize:
  3699                           	opt stack 0
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           intcon	equ	0xFF2
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           indf1	equ	0xFE7
  3708                           postdec1	equ	0xFE5
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           postinc2	equ	0xFDE
  3713                           postdec2	equ	0xFDD
  3714                           plusw2	equ	0xFDB
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _UART_buff_init *****************
  3720 ;; Defined at:
  3721 ;;		line 55 in file "UART.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  3724 ;;		 -> output_buffer(106), input_buffer(106), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3736 ;;      Params:         2       0       0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0
  3739 ;;      Totals:         2       0       0       0       0       0       0
  3740 ;;Total ram usage:        2 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    5
  3743 ;; This function calls:
  3744 ;;		_memset
  3745 ;; This function is called by:
  3746 ;;		_EUSART1_Initialize
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text23
  3751  000D2A                     __ptext23:
  3752                           	opt stack 0
  3753  000D2A                     _UART_buff_init:
  3754                           	opt stack 22
  3755                           
  3756                           ;UART.c: 64: memset(_this, 0, sizeof (*_this));
  3757                           
  3758                           ;incstack = 0
  3759  000D2A  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  3760  000D2E  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  3761  000D32  0E00               	movlw	0
  3762  000D34  6E1E               	movwf	memset@c+1,c
  3763  000D36  0E00               	movlw	0
  3764  000D38  6E1D               	movwf	memset@c,c
  3765  000D3A  0E00               	movlw	0
  3766  000D3C  6E20               	movwf	memset@n+1,c
  3767  000D3E  0E6A               	movlw	106
  3768  000D40  6E1F               	movwf	memset@n,c
  3769  000D42  EC46  F006         	call	_memset	;wreg free
  3770  000D46  0012               	return		;funcret
  3771  000D48                     __end_of_UART_buff_init:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           intcon	equ	0xFF2
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           indf1	equ	0xFE7
  3781                           postdec1	equ	0xFE5
  3782                           fsr1h	equ	0xFE2
  3783                           fsr1l	equ	0xFE1
  3784                           indf2	equ	0xFDF
  3785                           postinc2	equ	0xFDE
  3786                           postdec2	equ	0xFDD
  3787                           plusw2	equ	0xFDB
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _memset *****************
  3793 ;; Defined at:
  3794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  p1              2   26[COMRAM] PTR void 
  3797 ;;		 -> output_buffer(106), input_buffer(106), 
  3798 ;;  c               2   28[COMRAM] int 
  3799 ;;  n               2   30[COMRAM] unsigned int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  p               2   32[COMRAM] PTR unsigned char 
  3802 ;;		 -> output_buffer(106), input_buffer(106), 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2   26[COMRAM] PTR void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3812 ;;      Params:         6       0       0       0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0
  3815 ;;      Totals:         8       0       0       0       0       0       0
  3816 ;;Total ram usage:        8 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_UART_buff_init
  3823 ;;		_UART_buff_flush
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text24
  3828  000C8C                     __ptext24:
  3829                           	opt stack 0
  3830  000C8C                     _memset:
  3831                           	opt stack 22
  3832                           
  3833                           ;incstack = 0
  3834  000C8C  C01B  F021         	movff	memset@p1,memset@p
  3835  000C90  C01C  F022         	movff	memset@p1+1,memset@p+1
  3836  000C94  D008               	goto	l1588
  3837  000C96                     l1584:
  3838  000C96  C021  FFD9         	movff	memset@p,fsr2l
  3839  000C9A  C022  FFDA         	movff	memset@p+1,fsr2h
  3840  000C9E  C01D  FFDF         	movff	memset@c,indf2
  3841  000CA2  4A21               	infsnz	memset@p,f,c
  3842  000CA4  2A22               	incf	memset@p+1,f,c
  3843  000CA6                     l1588:
  3844  000CA6  061F               	decf	memset@n,f,c
  3845  000CA8  A0D8               	btfss	status,0,c
  3846  000CAA  0620               	decf	memset@n+1,f,c
  3847  000CAC  281F               	incf	memset@n,w,c
  3848  000CAE  E1F3               	bnz	l1584
  3849  000CB0  2820               	incf	memset@n+1,w,c
  3850  000CB2  B4D8               	btfsc	status,2,c
  3851  000CB4  0012               	return	
  3852  000CB6  D7EF               	goto	l1584
  3853  000CB8                     __end_of_memset:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           intcon	equ	0xFF2
  3860                           postinc0	equ	0xFEE
  3861                           wreg	equ	0xFE8
  3862                           indf1	equ	0xFE7
  3863                           postdec1	equ	0xFE5
  3864                           fsr1h	equ	0xFE2
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           postinc2	equ	0xFDE
  3868                           postdec2	equ	0xFDD
  3869                           plusw2	equ	0xFDB
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _SetTime *****************
  3875 ;; Defined at:
  3876 ;;		line 97 in file "tmr0.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3890 ;;      Params:         0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text25
  3905  000E02                     __ptext25:
  3906                           	opt stack 0
  3907  000E02                     _SetTime:
  3908                           	opt stack 26
  3909                           
  3910                           ;tmr0.c: 98: time = 0;
  3911                           
  3912                           ;incstack = 0
  3913  000E02  0E00               	movlw	0
  3914  000E04  6E2F               	movwf	_time,c
  3915  000E06  0E00               	movlw	0
  3916  000E08  6E30               	movwf	_time+1,c
  3917  000E0A  0E00               	movlw	0
  3918  000E0C  6E31               	movwf	_time+2,c
  3919  000E0E  0E00               	movlw	0
  3920  000E10  6E32               	movwf	_time+3,c
  3921  000E12  0012               	return		;funcret
  3922  000E14                     __end_of_SetTime:
  3923                           	opt stack 0
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           indf1	equ	0xFE7
  3932                           postdec1	equ	0xFE5
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           indf2	equ	0xFDF
  3936                           postinc2	equ	0xFDE
  3937                           postdec2	equ	0xFDD
  3938                           plusw2	equ	0xFDB
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _ReadFaults *****************
  3944 ;; Defined at:
  3945 ;;		line 11 in file "Function.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3959 ;;      Params:         0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0
  3961 ;;      Temps:          1       0       0       0       0       0       0
  3962 ;;      Totals:         1       0       0       0       0       0       0
  3963 ;;Total ram usage:        1 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    4
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text26
  3974  00088C                     __ptext26:
  3975                           	opt stack 0
  3976  00088C                     _ReadFaults:
  3977                           	opt stack 26
  3978                           
  3979                           ;Function.c: 13: ByteHigh = ByteHigh | ((PORTCbits.RC2 & 0x01) << 0);
  3980                           
  3981                           ;incstack = 0
  3982  00088C  A482               	btfss	3970,2,c	;volatile
  3983  00088E  D002               	goto	u430
  3984  000890  0E01               	movlw	1
  3985  000892  D001               	goto	u436
  3986  000894                     u430:
  3987  000894  0E00               	movlw	0
  3988  000896                     u436:
  3989  000896  103F               	iorwf	_ByteHigh,w,c
  3990  000898  6E3F               	movwf	_ByteHigh,c
  3991                           
  3992                           ;Function.c: 14: ByteHigh = ByteHigh | ((PORTCbits.RC4 & 0x01) << 1);
  3993  00089A  A882               	btfss	3970,4,c	;volatile
  3994  00089C  D003               	goto	u440
  3995  00089E  6A1B               	clrf	??_ReadFaults& (0+255),c
  3996  0008A0  2A1B               	incf	??_ReadFaults& (0+255),f,c
  3997  0008A2  D001               	goto	u448
  3998  0008A4                     u440:
  3999  0008A4  6A1B               	clrf	??_ReadFaults& (0+255),c
  4000  0008A6                     u448:
  4001  0008A6  90D8               	bcf	status,0,c
  4002  0008A8  341B               	rlcf	??_ReadFaults,w,c
  4003  0008AA  103F               	iorwf	_ByteHigh,w,c
  4004  0008AC  6E3F               	movwf	_ByteHigh,c
  4005                           
  4006                           ;Function.c: 15: ByteHigh = ByteHigh | ((PORTDbits.RD3 & 0x01) << 2);
  4007  0008AE  A683               	btfss	3971,3,c	;volatile
  4008  0008B0  D003               	goto	u450
  4009  0008B2  6A1B               	clrf	??_ReadFaults& (0+255),c
  4010  0008B4  2A1B               	incf	??_ReadFaults& (0+255),f,c
  4011  0008B6  D001               	goto	u458
  4012  0008B8                     u450:
  4013  0008B8  6A1B               	clrf	??_ReadFaults& (0+255),c
  4014  0008BA                     u458:
  4015  0008BA  90D8               	bcf	status,0,c
  4016  0008BC  361B               	rlcf	??_ReadFaults,f,c
  4017  0008BE  90D8               	bcf	status,0,c
  4018  0008C0  341B               	rlcf	??_ReadFaults,w,c
  4019  0008C2  103F               	iorwf	_ByteHigh,w,c
  4020  0008C4  6E3F               	movwf	_ByteHigh,c
  4021                           
  4022                           ;Function.c: 16: ByteHigh = ByteHigh | ((PORTDbits.RD2 & 0x01) << 3);
  4023  0008C6  A483               	btfss	3971,2,c	;volatile
  4024  0008C8  D003               	goto	u460
  4025  0008CA  6A1B               	clrf	??_ReadFaults& (0+255),c
  4026  0008CC  2A1B               	incf	??_ReadFaults& (0+255),f,c
  4027  0008CE  D001               	goto	u468
  4028  0008D0                     u460:
  4029  0008D0  6A1B               	clrf	??_ReadFaults& (0+255),c
  4030  0008D2                     u468:
  4031  0008D2  90D8               	bcf	status,0,c
  4032  0008D4  361B               	rlcf	??_ReadFaults,f,c
  4033  0008D6  90D8               	bcf	status,0,c
  4034  0008D8  361B               	rlcf	??_ReadFaults,f,c
  4035  0008DA  90D8               	bcf	status,0,c
  4036  0008DC  341B               	rlcf	??_ReadFaults,w,c
  4037  0008DE  103F               	iorwf	_ByteHigh,w,c
  4038  0008E0  6E3F               	movwf	_ByteHigh,c
  4039                           
  4040                           ;Function.c: 17: ByteHigh = ByteHigh | ((PORTDbits.RD1 & 0x01) << 4);
  4041  0008E2  A283               	btfss	3971,1,c	;volatile
  4042  0008E4  D003               	goto	u470
  4043  0008E6  6A1B               	clrf	??_ReadFaults& (0+255),c
  4044  0008E8  2A1B               	incf	??_ReadFaults& (0+255),f,c
  4045  0008EA  D001               	goto	u478
  4046  0008EC                     u470:
  4047  0008EC  6A1B               	clrf	??_ReadFaults& (0+255),c
  4048  0008EE                     u478:
  4049  0008EE  381B               	swapf	??_ReadFaults,w,c
  4050  0008F0  0BF0               	andlw	240
  4051  0008F2  103F               	iorwf	_ByteHigh,w,c
  4052  0008F4  6E3F               	movwf	_ByteHigh,c
  4053                           
  4054                           ;Function.c: 18: ByteHigh = ByteHigh | ((PORTDbits.RD0 & 0x01) << 5);
  4055  0008F6  A083               	btfss	3971,0,c	;volatile
  4056  0008F8  D003               	goto	u480
  4057  0008FA  0E20               	movlw	32
  4058  0008FC  6E1B               	movwf	??_ReadFaults& (0+255),c
  4059  0008FE  D001               	goto	u495
  4060  000900                     u480:
  4061  000900  6A1B               	clrf	??_ReadFaults& (0+255),c
  4062  000902                     u495:
  4063  000902  501B               	movf	??_ReadFaults,w,c
  4064  000904  103F               	iorwf	_ByteHigh,w,c
  4065  000906  6E3F               	movwf	_ByteHigh,c
  4066                           
  4067                           ;Function.c: 19: ByteHigh = ByteHigh | ((PORTCbits.RC3 & 0x01) << 6);
  4068  000908  A682               	btfss	3970,3,c	;volatile
  4069  00090A  D003               	goto	u500
  4070  00090C  0E40               	movlw	64
  4071  00090E  6E1B               	movwf	??_ReadFaults& (0+255),c
  4072  000910  D001               	goto	u515
  4073  000912                     u500:
  4074  000912  6A1B               	clrf	??_ReadFaults& (0+255),c
  4075  000914                     u515:
  4076  000914  501B               	movf	??_ReadFaults,w,c
  4077  000916  103F               	iorwf	_ByteHigh,w,c
  4078  000918  6E3F               	movwf	_ByteHigh,c
  4079                           
  4080                           ;Function.c: 20: ByteHigh = ByteHigh | ((PORTCbits.RC5 & 0x01) << 7);
  4081  00091A  AA82               	btfss	3970,5,c	;volatile
  4082  00091C  D003               	goto	u520
  4083  00091E  0E80               	movlw	128
  4084  000920  6E1B               	movwf	??_ReadFaults& (0+255),c
  4085  000922  D001               	goto	u535
  4086  000924                     u520:
  4087  000924  6A1B               	clrf	??_ReadFaults& (0+255),c
  4088  000926                     u535:
  4089  000926  501B               	movf	??_ReadFaults,w,c
  4090  000928  103F               	iorwf	_ByteHigh,w,c
  4091  00092A  6E3F               	movwf	_ByteHigh,c
  4092                           
  4093                           ;Function.c: 21: ByteLow = ByteLow | ((PORTCbits.RC2 & 0x01) << 0);
  4094  00092C  A482               	btfss	3970,2,c	;volatile
  4095  00092E  D002               	goto	u540
  4096  000930  0E01               	movlw	1
  4097  000932  D001               	goto	u546
  4098  000934                     u540:
  4099  000934  0E00               	movlw	0
  4100  000936                     u546:
  4101  000936  103E               	iorwf	_ByteLow,w,c
  4102  000938  6E3E               	movwf	_ByteLow,c
  4103                           
  4104                           ;Function.c: 22: ByteLow = ByteLow | ((PORTAbits.RA7 & 0x01) << 1);
  4105  00093A  AE80               	btfss	3968,7,c	;volatile
  4106  00093C  D003               	goto	u550
  4107  00093E  6A1B               	clrf	??_ReadFaults& (0+255),c
  4108  000940  2A1B               	incf	??_ReadFaults& (0+255),f,c
  4109  000942  D001               	goto	u558
  4110  000944                     u550:
  4111  000944  6A1B               	clrf	??_ReadFaults& (0+255),c
  4112  000946                     u558:
  4113  000946  90D8               	bcf	status,0,c
  4114  000948  341B               	rlcf	??_ReadFaults,w,c
  4115  00094A  103E               	iorwf	_ByteLow,w,c
  4116  00094C  6E3E               	movwf	_ByteLow,c
  4117                           
  4118                           ;Function.c: 23: ByteLow = ByteLow | ((PORTCbits.RC0 & 0x01) << 2);
  4119  00094E  A082               	btfss	3970,0,c	;volatile
  4120  000950  D003               	goto	u560
  4121  000952  6A1B               	clrf	??_ReadFaults& (0+255),c
  4122  000954  2A1B               	incf	??_ReadFaults& (0+255),f,c
  4123  000956  D001               	goto	u568
  4124  000958                     u560:
  4125  000958  6A1B               	clrf	??_ReadFaults& (0+255),c
  4126  00095A                     u568:
  4127  00095A  90D8               	bcf	status,0,c
  4128  00095C  361B               	rlcf	??_ReadFaults,f,c
  4129  00095E  90D8               	bcf	status,0,c
  4130  000960  341B               	rlcf	??_ReadFaults,w,c
  4131  000962  103E               	iorwf	_ByteLow,w,c
  4132  000964  6E3E               	movwf	_ByteLow,c
  4133  000966  0012               	return		;funcret
  4134  000968                     __end_of_ReadFaults:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           intcon	equ	0xFF2
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           indf1	equ	0xFE7
  4144                           postdec1	equ	0xFE5
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           plusw2	equ	0xFDB
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _INTERRUPT_InterruptManager *****************
  4156 ;; Defined at:
  4157 ;;		line 182 in file "Function.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4171 ;;      Params:         0       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0
  4173 ;;      Temps:         14       0       0       0       0       0       0
  4174 ;;      Totals:        14       0       0       0       0       0       0
  4175 ;;Total ram usage:       14 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    3
  4178 ;; This function calls:
  4179 ;;		_EUSART1_Receive_ISR
  4180 ;;		_EUSART1_Transmit_ISR
  4181 ;;		_TMR0_ISR
  4182 ;; This function is called by:
  4183 ;;		Interrupt level 2
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	intcode
  4188  000008                     __pintcode:
  4189                           	opt stack 0
  4190  000008                     _INTERRUPT_InterruptManager:
  4191                           	opt stack 21
  4192                           
  4193                           ;incstack = 0
  4194  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4195  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  4196  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4197  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4198  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4199  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4200  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4201  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4202  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4203  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4204  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4205  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4206  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4207  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4208  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4209                           
  4210                           ;Function.c: 185: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4211  000042  BA9D               	btfsc	3997,5,c	;volatile
  4212  000044  AA9E               	btfss	3998,5,c	;volatile
  4213  000046  D003               	goto	i2l262
  4214                           
  4215                           ;Function.c: 186: {
  4216                           ;Function.c: 187: EUSART1_Receive_ISR();
  4217  000048  ECA4  F006         	call	_EUSART1_Receive_ISR	;wreg free
  4218                           
  4219                           ;Function.c: 188: }
  4220  00004C  D00B               	goto	i2l268
  4221  00004E                     i2l262:
  4222                           
  4223                           ;Function.c: 189: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4224  00004E  B89D               	btfsc	3997,4,c	;volatile
  4225  000050  A89E               	btfss	3998,4,c	;volatile
  4226  000052  D003               	goto	i2l264
  4227                           
  4228                           ;Function.c: 190: {
  4229                           ;Function.c: 191: EUSART1_Transmit_ISR();
  4230  000054  EC15  F006         	call	_EUSART1_Transmit_ISR	;wreg free
  4231                           
  4232                           ;Function.c: 192: }
  4233  000058  D005               	goto	i2l268
  4234  00005A                     i2l264:
  4235                           
  4236                           ;Function.c: 193: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4237  00005A  BAF2               	btfsc	intcon,5,c	;volatile
  4238  00005C  A4F2               	btfss	intcon,2,c	;volatile
  4239  00005E  D002               	goto	i2l268
  4240                           
  4241                           ;Function.c: 194: {
  4242                           ;Function.c: 195: TMR0_ISR();
  4243  000060  ECBF  F006         	call	_TMR0_ISR	;wreg free
  4244  000064                     i2l268:
  4245  000064  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4246  000068  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4247  00006C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4248  000070  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4249  000074  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4250  000078  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4251  00007C  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4252  000080  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4253  000084  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4254  000088  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4255  00008C  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4256  000090  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4257  000094  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4258  000098  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4259  00009C  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4260  00009E  0011               	retfie		f
  4261  0000A0                     __end_of_INTERRUPT_InterruptManager:
  4262                           	opt stack 0
  4263                           pclatu	equ	0xFFB
  4264                           pclath	equ	0xFFA
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           prodh	equ	0xFF4
  4270                           prodl	equ	0xFF3
  4271                           intcon	equ	0xFF2
  4272                           postinc0	equ	0xFEE
  4273                           fsr0h	equ	0xFEA
  4274                           fsr0l	equ	0xFE9
  4275                           wreg	equ	0xFE8
  4276                           indf1	equ	0xFE7
  4277                           postdec1	equ	0xFE5
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           postinc2	equ	0xFDE
  4282                           postdec2	equ	0xFDD
  4283                           plusw2	equ	0xFDB
  4284                           fsr2h	equ	0xFDA
  4285                           fsr2l	equ	0xFD9
  4286                           status	equ	0xFD8
  4287                           
  4288 ;; *************** function _TMR0_ISR *****************
  4289 ;; Defined at:
  4290 ;;		line 82 in file "tmr0.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         0       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0
  4307 ;;      Totals:         0       0       0       0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_INTERRUPT_InterruptManager
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text28
  4318  000D7E                     __ptext28:
  4319                           	opt stack 0
  4320  000D7E                     _TMR0_ISR:
  4321                           	opt stack 23
  4322                           
  4323                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
  4324                           
  4325                           ;incstack = 0
  4326  000D7E  503D               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
  4327  000D80  6ED7               	movwf	4055,c	;volatile
  4328                           
  4329                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
  4330  000D82  C03C  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
  4331                           
  4332                           ;tmr0.c: 88: time++;
  4333  000D86  0E01               	movlw	1
  4334  000D88  262F               	addwf	_time,f,c
  4335  000D8A  0E00               	movlw	0
  4336  000D8C  2230               	addwfc	_time+1,f,c
  4337  000D8E  2231               	addwfc	_time+2,f,c
  4338  000D90  2232               	addwfc	_time+3,f,c
  4339                           
  4340                           ;tmr0.c: 90: INTCONbits.TMR0IF = 0;
  4341  000D92  94F2               	bcf	intcon,2,c	;volatile
  4342  000D94  0012               	return		;funcret
  4343  000D96                     __end_of_TMR0_ISR:
  4344                           	opt stack 0
  4345                           pclatu	equ	0xFFB
  4346                           pclath	equ	0xFFA
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           postinc0	equ	0xFEE
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           indf1	equ	0xFE7
  4359                           postdec1	equ	0xFE5
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           plusw2	equ	0xFDB
  4366                           fsr2h	equ	0xFDA
  4367                           fsr2l	equ	0xFD9
  4368                           status	equ	0xFD8
  4369                           
  4370 ;; *************** function _EUSART1_Transmit_ISR *****************
  4371 ;; Defined at:
  4372 ;;		line 149 in file "UART.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4386 ;;      Params:         0       0       0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    2
  4393 ;; This function calls:
  4394 ;;		i2_UART_buff_get
  4395 ;;		i2_UART_buff_size
  4396 ;; This function is called by:
  4397 ;;		_INTERRUPT_InterruptManager
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text29
  4402  000C2A                     __ptext29:
  4403                           	opt stack 0
  4404  000C2A                     _EUSART1_Transmit_ISR:
  4405                           	opt stack 21
  4406                           
  4407                           ;UART.c: 151: if (UART_buff_size(&output_buffer) > 0) {
  4408                           
  4409                           ;incstack = 0
  4410  000C2A  0E00               	movlw	low _output_buffer
  4411  000C2C  6E01               	movwf	i2UART_buff_size@_this,c
  4412  000C2E  0E01               	movlw	high _output_buffer
  4413  000C30  6E02               	movwf	i2UART_buff_size@_this+1,c
  4414  000C32  ECEC  F006         	call	i2_UART_buff_size	;wreg free
  4415  000C36  BE02               	btfsc	?i2_UART_buff_size+1,7,c
  4416  000C38  D00D               	goto	i2l1992
  4417  000C3A  5002               	movf	?i2_UART_buff_size+1,w,c
  4418  000C3C  E103               	bnz	i2u113_40
  4419  000C3E  0401               	decf	?i2_UART_buff_size,w,c
  4420  000C40  A0D8               	btfss	status,0,c
  4421  000C42  D008               	goto	i2l1992
  4422  000C44                     i2u113_40:
  4423                           
  4424                           ;UART.c: 152: TXREG1 = UART_buff_get(&output_buffer);
  4425  000C44  0E00               	movlw	low _output_buffer
  4426  000C46  6E07               	movwf	i2UART_buff_get@_this,c
  4427  000C48  0E01               	movlw	high _output_buffer
  4428  000C4A  6E08               	movwf	i2UART_buff_get@_this+1,c
  4429  000C4C  EC00  F005         	call	i2_UART_buff_get	;wreg free
  4430  000C50  6EAD               	movwf	4013,c	;volatile
  4431                           
  4432                           ;UART.c: 153: } else {
  4433  000C52  0012               	return	
  4434  000C54                     i2l1992:
  4435                           
  4436                           ;UART.c: 154: Transmit_stall = 1;
  4437  000C54  0E01               	movlw	1
  4438  000C56  6E44               	movwf	_Transmit_stall,c
  4439                           
  4440                           ;UART.c: 155: PIE1bits.TX1IE = 0;
  4441  000C58  989D               	bcf	3997,4,c	;volatile
  4442  000C5A  0012               	return	
  4443  000C5C                     __end_of_EUSART1_Transmit_ISR:
  4444                           	opt stack 0
  4445                           pclatu	equ	0xFFB
  4446                           pclath	equ	0xFFA
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon	equ	0xFF2
  4454                           postinc0	equ	0xFEE
  4455                           fsr0h	equ	0xFEA
  4456                           fsr0l	equ	0xFE9
  4457                           wreg	equ	0xFE8
  4458                           indf1	equ	0xFE7
  4459                           postdec1	equ	0xFE5
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           indf2	equ	0xFDF
  4463                           postinc2	equ	0xFDE
  4464                           postdec2	equ	0xFDD
  4465                           plusw2	equ	0xFDB
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function i2_UART_buff_size *****************
  4471 ;; Defined at:
  4472 ;;		line 101 in file "UART.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  4475 ;;		 -> output_buffer(106), input_buffer(106), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[COMRAM] int 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4487 ;;      Params:         2       0       0       0       0       0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0
  4490 ;;      Totals:         2       0       0       0       0       0       0
  4491 ;;Total ram usage:        2 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_EUSART1_Transmit_ISR
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text30
  4501  000DD8                     __ptext30:
  4502                           	opt stack 0
  4503  000DD8                     i2_UART_buff_size:
  4504                           	opt stack 22
  4505                           
  4506                           ;UART.c: 102: return (_this->count);
  4507                           
  4508                           ;incstack = 0
  4509  000DD8  EE20 F068          	lfsr	2,104
  4510  000DDC  5001               	movf	i2UART_buff_size@_this,w,c
  4511  000DDE  26D9               	addwf	fsr2l,f,c
  4512  000DE0  5002               	movf	i2UART_buff_size@_this+1,w,c
  4513  000DE2  22DA               	addwfc	fsr2h,f,c
  4514  000DE4  CFDE F001          	movff	postinc2,?i2_UART_buff_size
  4515  000DE8  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
  4516  000DEC  0012               	return	
  4517  000DEE                     __end_ofi2_UART_buff_size:
  4518                           	opt stack 0
  4519                           pclatu	equ	0xFFB
  4520                           pclath	equ	0xFFA
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           prodh	equ	0xFF4
  4526                           prodl	equ	0xFF3
  4527                           intcon	equ	0xFF2
  4528                           postinc0	equ	0xFEE
  4529                           fsr0h	equ	0xFEA
  4530                           fsr0l	equ	0xFE9
  4531                           wreg	equ	0xFE8
  4532                           indf1	equ	0xFE7
  4533                           postdec1	equ	0xFE5
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           indf2	equ	0xFDF
  4537                           postinc2	equ	0xFDE
  4538                           postdec2	equ	0xFDD
  4539                           plusw2	equ	0xFDB
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function i2_UART_buff_get *****************
  4545 ;; Defined at:
  4546 ;;		line 80 in file "UART.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  4549 ;;		 -> output_buffer(106), input_buffer(106), 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      unsigned char 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         2       0       0       0       0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0
  4563 ;;      Temps:          2       0       0       0       0       0       0
  4564 ;;      Totals:         5       0       0       0       0       0       0
  4565 ;;Total ram usage:        5 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    1
  4568 ;; This function calls:
  4569 ;;		i2_UART_buff_modulo_inc
  4570 ;; This function is called by:
  4571 ;;		_EUSART1_Transmit_ISR
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text31
  4576  000A00                     __ptext31:
  4577                           	opt stack 0
  4578  000A00                     i2_UART_buff_get:
  4579                           	opt stack 21
  4580                           
  4581                           ;UART.c: 81: unsigned char c;
  4582                           ;UART.c: 82: if (_this->count > 0) {
  4583                           
  4584                           ;incstack = 0
  4585  000A00  EE20 F068          	lfsr	2,104
  4586  000A04  5007               	movf	i2UART_buff_get@_this,w,c
  4587  000A06  26D9               	addwf	fsr2l,f,c
  4588  000A08  5008               	movf	i2UART_buff_get@_this+1,w,c
  4589  000A0A  22DA               	addwfc	fsr2h,f,c
  4590  000A0C  0E01               	movlw	1
  4591  000A0E  BEDB               	btfsc	plusw2,7,c
  4592  000A10  D03C               	goto	i2l1956
  4593  000A12  0E01               	movlw	1
  4594  000A14  50DB               	movf	plusw2,w,c
  4595  000A16  E103               	bnz	i2u110_40
  4596  000A18  04DE               	decf	postinc2,w,c
  4597  000A1A  A0D8               	btfss	status,0,c
  4598  000A1C  D036               	goto	i2l1956
  4599  000A1E                     i2u110_40:
  4600                           
  4601                           ;UART.c: 83: c = _this->buf[_this->tail];
  4602  000A1E  EE20 F066          	lfsr	2,102
  4603  000A22  5007               	movf	i2UART_buff_get@_this,w,c
  4604  000A24  26D9               	addwf	fsr2l,f,c
  4605  000A26  5008               	movf	i2UART_buff_get@_this+1,w,c
  4606  000A28  22DA               	addwfc	fsr2h,f,c
  4607  000A2A  CFDE F009          	movff	postinc2,??i2_UART_buff_get
  4608  000A2E  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
  4609  000A32  5009               	movf	??i2_UART_buff_get,w,c
  4610  000A34  2407               	addwf	i2UART_buff_get@_this,w,c
  4611  000A36  6ED9               	movwf	fsr2l,c
  4612  000A38  500A               	movf	??i2_UART_buff_get+1,w,c
  4613  000A3A  2008               	addwfc	i2UART_buff_get@_this+1,w,c
  4614  000A3C  6EDA               	movwf	fsr2h,c
  4615  000A3E  50DF               	movf	indf2,w,c
  4616  000A40  6E0B               	movwf	i2UART_buff_get@c,c
  4617                           
  4618                           ;UART.c: 84: _this->tail = UART_buff_modulo_inc(_this->tail, 100);
  4619  000A42  EE20 F066          	lfsr	2,102
  4620  000A46  5007               	movf	i2UART_buff_get@_this,w,c
  4621  000A48  26D9               	addwf	fsr2l,f,c
  4622  000A4A  5008               	movf	i2UART_buff_get@_this+1,w,c
  4623  000A4C  22DA               	addwfc	fsr2h,f,c
  4624  000A4E  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  4625  000A52  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  4626  000A56  0E00               	movlw	0
  4627  000A58  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  4628  000A5A  0E64               	movlw	100
  4629  000A5C  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  4630  000A5E  EC71  F006         	call	i2_UART_buff_modulo_inc	;wreg free
  4631  000A62  EE20 F066          	lfsr	2,102
  4632  000A66  5007               	movf	i2UART_buff_get@_this,w,c
  4633  000A68  26D9               	addwf	fsr2l,f,c
  4634  000A6A  5008               	movf	i2UART_buff_get@_this+1,w,c
  4635  000A6C  22DA               	addwfc	fsr2h,f,c
  4636  000A6E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  4637  000A72  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  4638                           
  4639                           ;UART.c: 85: --_this->count;
  4640  000A76  EE20 F068          	lfsr	2,104
  4641  000A7A  5007               	movf	i2UART_buff_get@_this,w,c
  4642  000A7C  26D9               	addwf	fsr2l,f,c
  4643  000A7E  5008               	movf	i2UART_buff_get@_this+1,w,c
  4644  000A80  22DA               	addwfc	fsr2h,f,c
  4645  000A82  06DE               	decf	postinc2,f,c
  4646  000A84  0E00               	movlw	0
  4647  000A86  5ADD               	subwfb	postdec2,f,c
  4648                           
  4649                           ;UART.c: 86: } else {
  4650  000A88  D002               	goto	i2l93
  4651  000A8A                     i2l1956:
  4652                           
  4653                           ;UART.c: 87: c = 0;
  4654  000A8A  0E00               	movlw	0
  4655  000A8C  6E0B               	movwf	i2UART_buff_get@c,c
  4656  000A8E                     i2l93:
  4657                           
  4658                           ;UART.c: 88: }
  4659                           ;UART.c: 89: return (c);
  4660  000A8E  500B               	movf	i2UART_buff_get@c,w,c
  4661  000A90  0012               	return	
  4662  000A92                     __end_ofi2_UART_buff_get:
  4663                           	opt stack 0
  4664                           pclatu	equ	0xFFB
  4665                           pclath	equ	0xFFA
  4666                           tblptru	equ	0xFF8
  4667                           tblptrh	equ	0xFF7
  4668                           tblptrl	equ	0xFF6
  4669                           tablat	equ	0xFF5
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           postinc0	equ	0xFEE
  4674                           fsr0h	equ	0xFEA
  4675                           fsr0l	equ	0xFE9
  4676                           wreg	equ	0xFE8
  4677                           indf1	equ	0xFE7
  4678                           postdec1	equ	0xFE5
  4679                           fsr1h	equ	0xFE2
  4680                           fsr1l	equ	0xFE1
  4681                           indf2	equ	0xFDF
  4682                           postinc2	equ	0xFDE
  4683                           postdec2	equ	0xFDD
  4684                           plusw2	equ	0xFDB
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _EUSART1_Receive_ISR *****************
  4690 ;; Defined at:
  4691 ;;		line 138 in file "UART.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  data            1   11[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         0       0       0       0       0       0       0
  4706 ;;      Locals:         1       0       0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0
  4708 ;;      Totals:         1       0       0       0       0       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		i2_UART_buff_put
  4714 ;; This function is called by:
  4715 ;;		_INTERRUPT_InterruptManager
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text32
  4720  000D48                     __ptext32:
  4721                           	opt stack 0
  4722  000D48                     _EUSART1_Receive_ISR:
  4723                           	opt stack 21
  4724                           
  4725                           ;UART.c: 139: if (1 == RC1STAbits.OERR) {
  4726                           
  4727                           ;incstack = 0
  4728  000D48  A2AB               	btfss	4011,1,c	;volatile
  4729  000D4A  D002               	goto	i2l124
  4730                           
  4731                           ;UART.c: 142: RC1STAbits.CREN = 0;
  4732  000D4C  98AB               	bcf	4011,4,c	;volatile
  4733                           
  4734                           ;UART.c: 143: RC1STAbits.CREN = 1;
  4735  000D4E  88AB               	bsf	4011,4,c	;volatile
  4736  000D50                     i2l124:
  4737                           
  4738                           ;UART.c: 144: }
  4739                           ;UART.c: 145: unsigned char data = RCREG1;
  4740  000D50  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  4741                           
  4742                           ;UART.c: 146: UART_buff_put(&input_buffer, data);
  4743  000D54  0E6A               	movlw	low _input_buffer
  4744  000D56  6E07               	movwf	i2UART_buff_put@_this,c
  4745  000D58  0E01               	movlw	high _input_buffer
  4746  000D5A  6E08               	movwf	i2UART_buff_put@_this+1,c
  4747  000D5C  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
  4748  000D60  EC41  F003         	call	i2_UART_buff_put	;wreg free
  4749  000D64  0012               	return		;funcret
  4750  000D66                     __end_of_EUSART1_Receive_ISR:
  4751                           	opt stack 0
  4752                           pclatu	equ	0xFFB
  4753                           pclath	equ	0xFFA
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           intcon	equ	0xFF2
  4761                           postinc0	equ	0xFEE
  4762                           fsr0h	equ	0xFEA
  4763                           fsr0l	equ	0xFE9
  4764                           wreg	equ	0xFE8
  4765                           indf1	equ	0xFE7
  4766                           postdec1	equ	0xFE5
  4767                           fsr1h	equ	0xFE2
  4768                           fsr1l	equ	0xFE1
  4769                           indf2	equ	0xFDF
  4770                           postinc2	equ	0xFDE
  4771                           postdec2	equ	0xFDD
  4772                           plusw2	equ	0xFDB
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function i2_UART_buff_put *****************
  4778 ;; Defined at:
  4779 ;;		line 67 in file "UART.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  4782 ;;		 -> output_buffer(106), input_buffer(106), 
  4783 ;;  c               1    8[COMRAM] const unsigned char 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4795 ;;      Params:         3       0       0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0
  4797 ;;      Temps:          2       0       0       0       0       0       0
  4798 ;;      Totals:         5       0       0       0       0       0       0
  4799 ;;Total ram usage:        5 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    1
  4802 ;; This function calls:
  4803 ;;		i2_UART_buff_modulo_inc
  4804 ;; This function is called by:
  4805 ;;		_EUSART1_Receive_ISR
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text33
  4810  000682                     __ptext33:
  4811                           	opt stack 0
  4812  000682                     i2_UART_buff_put:
  4813                           	opt stack 21
  4814                           
  4815                           ;UART.c: 68: if (_this->count < 100) {
  4816                           
  4817                           ;incstack = 0
  4818  000682  EE20 F068          	lfsr	2,104
  4819  000686  5007               	movf	i2UART_buff_put@_this,w,c
  4820  000688  26D9               	addwf	fsr2l,f,c
  4821  00068A  5008               	movf	i2UART_buff_put@_this+1,w,c
  4822  00068C  22DA               	addwfc	fsr2h,f,c
  4823  00068E  0E01               	movlw	1
  4824  000690  BEDB               	btfsc	plusw2,7,c
  4825  000692  D007               	goto	i2l1936
  4826  000694  0E01               	movlw	1
  4827  000696  50DB               	movf	plusw2,w,c
  4828  000698  E13A               	bnz	i2l1942
  4829  00069A  0E64               	movlw	100
  4830  00069C  5CDE               	subwf	postinc2,w,c
  4831  00069E  B0D8               	btfsc	status,0,c
  4832  0006A0  D036               	goto	i2l1942
  4833  0006A2                     i2l1936:
  4834                           
  4835                           ;UART.c: 69: _this->buf[_this->head] = c;
  4836  0006A2  EE20 F064          	lfsr	2,100
  4837  0006A6  5007               	movf	i2UART_buff_put@_this,w,c
  4838  0006A8  26D9               	addwf	fsr2l,f,c
  4839  0006AA  5008               	movf	i2UART_buff_put@_this+1,w,c
  4840  0006AC  22DA               	addwfc	fsr2h,f,c
  4841  0006AE  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  4842  0006B2  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  4843  0006B6  500A               	movf	??i2_UART_buff_put,w,c
  4844  0006B8  2407               	addwf	i2UART_buff_put@_this,w,c
  4845  0006BA  6ED9               	movwf	fsr2l,c
  4846  0006BC  500B               	movf	??i2_UART_buff_put+1,w,c
  4847  0006BE  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  4848  0006C0  6EDA               	movwf	fsr2h,c
  4849  0006C2  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  4850                           
  4851                           ;UART.c: 70: _this->head = UART_buff_modulo_inc(_this->head, 100);
  4852  0006C6  EE20 F064          	lfsr	2,100
  4853  0006CA  5007               	movf	i2UART_buff_put@_this,w,c
  4854  0006CC  26D9               	addwf	fsr2l,f,c
  4855  0006CE  5008               	movf	i2UART_buff_put@_this+1,w,c
  4856  0006D0  22DA               	addwfc	fsr2h,f,c
  4857  0006D2  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  4858  0006D6  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  4859  0006DA  0E00               	movlw	0
  4860  0006DC  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  4861  0006DE  0E64               	movlw	100
  4862  0006E0  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  4863  0006E2  EC71  F006         	call	i2_UART_buff_modulo_inc	;wreg free
  4864  0006E6  EE20 F064          	lfsr	2,100
  4865  0006EA  5007               	movf	i2UART_buff_put@_this,w,c
  4866  0006EC  26D9               	addwf	fsr2l,f,c
  4867  0006EE  5008               	movf	i2UART_buff_put@_this+1,w,c
  4868  0006F0  22DA               	addwfc	fsr2h,f,c
  4869  0006F2  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  4870  0006F6  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  4871                           
  4872                           ;UART.c: 71: ++_this->count;
  4873  0006FA  EE20 F068          	lfsr	2,104
  4874  0006FE  5007               	movf	i2UART_buff_put@_this,w,c
  4875  000700  26D9               	addwf	fsr2l,f,c
  4876  000702  5008               	movf	i2UART_buff_put@_this+1,w,c
  4877  000704  22DA               	addwfc	fsr2h,f,c
  4878  000706  2ADE               	incf	postinc2,f,c
  4879  000708  0E00               	movlw	0
  4880  00070A  22DD               	addwfc	postdec2,f,c
  4881                           
  4882                           ;UART.c: 72: } else {
  4883  00070C  0012               	return	
  4884  00070E                     i2l1942:
  4885                           
  4886                           ;UART.c: 73: _this->buf[_this->head] = c;
  4887  00070E  EE20 F064          	lfsr	2,100
  4888  000712  5007               	movf	i2UART_buff_put@_this,w,c
  4889  000714  26D9               	addwf	fsr2l,f,c
  4890  000716  5008               	movf	i2UART_buff_put@_this+1,w,c
  4891  000718  22DA               	addwfc	fsr2h,f,c
  4892  00071A  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  4893  00071E  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  4894  000722  500A               	movf	??i2_UART_buff_put,w,c
  4895  000724  2407               	addwf	i2UART_buff_put@_this,w,c
  4896  000726  6ED9               	movwf	fsr2l,c
  4897  000728  500B               	movf	??i2_UART_buff_put+1,w,c
  4898  00072A  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  4899  00072C  6EDA               	movwf	fsr2h,c
  4900  00072E  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  4901                           
  4902                           ;UART.c: 74: _this->head = UART_buff_modulo_inc(_this->head, 100);
  4903  000732  EE20 F064          	lfsr	2,100
  4904  000736  5007               	movf	i2UART_buff_put@_this,w,c
  4905  000738  26D9               	addwf	fsr2l,f,c
  4906  00073A  5008               	movf	i2UART_buff_put@_this+1,w,c
  4907  00073C  22DA               	addwfc	fsr2h,f,c
  4908  00073E  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  4909  000742  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  4910  000746  0E00               	movlw	0
  4911  000748  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  4912  00074A  0E64               	movlw	100
  4913  00074C  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  4914  00074E  EC71  F006         	call	i2_UART_buff_modulo_inc	;wreg free
  4915  000752  EE20 F064          	lfsr	2,100
  4916  000756  5007               	movf	i2UART_buff_put@_this,w,c
  4917  000758  26D9               	addwf	fsr2l,f,c
  4918  00075A  5008               	movf	i2UART_buff_put@_this+1,w,c
  4919  00075C  22DA               	addwfc	fsr2h,f,c
  4920  00075E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  4921  000762  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  4922                           
  4923                           ;UART.c: 75: _this->tail = UART_buff_modulo_inc(_this->tail, 100);
  4924  000766  EE20 F066          	lfsr	2,102
  4925  00076A  5007               	movf	i2UART_buff_put@_this,w,c
  4926  00076C  26D9               	addwf	fsr2l,f,c
  4927  00076E  5008               	movf	i2UART_buff_put@_this+1,w,c
  4928  000770  22DA               	addwfc	fsr2h,f,c
  4929  000772  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  4930  000776  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  4931  00077A  0E00               	movlw	0
  4932  00077C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  4933  00077E  0E64               	movlw	100
  4934  000780  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  4935  000782  EC71  F006         	call	i2_UART_buff_modulo_inc	;wreg free
  4936  000786  EE20 F066          	lfsr	2,102
  4937  00078A  5007               	movf	i2UART_buff_put@_this,w,c
  4938  00078C  26D9               	addwf	fsr2l,f,c
  4939  00078E  5008               	movf	i2UART_buff_put@_this+1,w,c
  4940  000790  22DA               	addwfc	fsr2h,f,c
  4941  000792  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  4942  000796  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  4943  00079A  0012               	return	
  4944  00079C                     __end_ofi2_UART_buff_put:
  4945                           	opt stack 0
  4946                           pclatu	equ	0xFFB
  4947                           pclath	equ	0xFFA
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           postinc0	equ	0xFEE
  4956                           fsr0h	equ	0xFEA
  4957                           fsr0l	equ	0xFE9
  4958                           wreg	equ	0xFE8
  4959                           indf1	equ	0xFE7
  4960                           postdec1	equ	0xFE5
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           plusw2	equ	0xFDB
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function i2_UART_buff_modulo_inc *****************
  4972 ;; Defined at:
  4973 ;;		line 105 in file "UART.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  value           2    0[COMRAM] const unsigned int 
  4976 ;;  modulus         2    2[COMRAM] const unsigned int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  2    0[COMRAM] unsigned int 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4988 ;;      Params:         4       0       0       0       0       0       0
  4989 ;;      Locals:         2       0       0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0
  4991 ;;      Totals:         6       0       0       0       0       0       0
  4992 ;;Total ram usage:        6 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		i2_UART_buff_put
  4998 ;;		i2_UART_buff_get
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text34
  5003  000CE2                     __ptext34:
  5004                           	opt stack 0
  5005  000CE2                     i2_UART_buff_modulo_inc:
  5006                           	opt stack 21
  5007                           
  5008                           ;UART.c: 106: unsigned int my_value = value + 1;
  5009                           
  5010                           ;incstack = 0
  5011  000CE2  0E01               	movlw	1
  5012  000CE4  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
  5013  000CE6  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  5014  000CE8  0E00               	movlw	0
  5015  000CEA  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
  5016  000CEC  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  5017                           
  5018                           ;UART.c: 107: if (my_value >= modulus) {
  5019  000CEE  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
  5020  000CF0  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
  5021  000CF2  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
  5022  000CF4  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
  5023  000CF6  A0D8               	btfss	status,0,c
  5024  000CF8  D004               	goto	i2l1888
  5025                           
  5026                           ;UART.c: 108: my_value = 0;
  5027  000CFA  0E00               	movlw	0
  5028  000CFC  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  5029  000CFE  0E00               	movlw	0
  5030  000D00  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  5031  000D02                     i2l1888:
  5032                           
  5033                           ;UART.c: 109: }
  5034                           ;UART.c: 110: return (my_value);
  5035  000D02  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
  5036  000D06  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
  5037  000D0A  0012               	return	
  5038  000D0C                     __end_ofi2_UART_buff_modulo_inc:
  5039                           	opt stack 0
  5040  0000                     pclatu	equ	0xFFB
  5041                           pclath	equ	0xFFA
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           postinc0	equ	0xFEE
  5050                           fsr0h	equ	0xFEA
  5051                           fsr0l	equ	0xFE9
  5052                           wreg	equ	0xFE8
  5053                           indf1	equ	0xFE7
  5054                           postdec1	equ	0xFE5
  5055                           fsr1h	equ	0xFE2
  5056                           fsr1l	equ	0xFE1
  5057                           indf2	equ	0xFDF
  5058                           postinc2	equ	0xFDE
  5059                           postdec2	equ	0xFDD
  5060                           plusw2	equ	0xFDB
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           pclatu	equ	0xFFB
  5065                           pclath	equ	0xFFA
  5066                           tblptru	equ	0xFF8
  5067                           tblptrh	equ	0xFF7
  5068                           tblptrl	equ	0xFF6
  5069                           tablat	equ	0xFF5
  5070                           prodh	equ	0xFF4
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           postinc0	equ	0xFEE
  5074                           fsr0h	equ	0xFEA
  5075                           fsr0l	equ	0xFE9
  5076                           wreg	equ	0xFE8
  5077                           indf1	equ	0xFE7
  5078                           postdec1	equ	0xFE5
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           indf2	equ	0xFDF
  5082                           postinc2	equ	0xFDE
  5083                           postdec2	equ	0xFDD
  5084                           plusw2	equ	0xFDB
  5085                           fsr2h	equ	0xFDA
  5086                           fsr2l	equ	0xFD9
  5087                           status	equ	0xFD8
  5088                           
  5089                           	psect	rparam
  5090  0000                     pclatu	equ	0xFFB
  5091                           pclath	equ	0xFFA
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           postinc0	equ	0xFEE
  5100                           fsr0h	equ	0xFEA
  5101                           fsr0l	equ	0xFE9
  5102                           wreg	equ	0xFE8
  5103                           indf1	equ	0xFE7
  5104                           postdec1	equ	0xFE5
  5105                           fsr1h	equ	0xFE2
  5106                           fsr1l	equ	0xFE1
  5107                           indf2	equ	0xFDF
  5108                           postinc2	equ	0xFDE
  5109                           postdec2	equ	0xFDD
  5110                           plusw2	equ	0xFDB
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115                           	psect	temp
  5116  000045                     btemp:
  5117                           	opt stack 0
  5118  000045                     	ds	1
  5119  0000                     int$flags	set	btemp
  5120                           pclatu	equ	0xFFB
  5121                           pclath	equ	0xFFA
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodh	equ	0xFF4
  5127                           prodl	equ	0xFF3
  5128                           intcon	equ	0xFF2
  5129                           postinc0	equ	0xFEE
  5130                           fsr0h	equ	0xFEA
  5131                           fsr0l	equ	0xFE9
  5132                           wreg	equ	0xFE8
  5133                           indf1	equ	0xFE7
  5134                           postdec1	equ	0xFE5
  5135                           fsr1h	equ	0xFE2
  5136                           fsr1l	equ	0xFE1
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           plusw2	equ	0xFDB
  5141                           fsr2h	equ	0xFDA
  5142                           fsr2l	equ	0xFD9
  5143                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         309
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      68
    BANK0           160     90     160
    BANK1           256      0     212
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    memset@p	PTR unsigned char  size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK0[30]), sendData@SendArray(BANK0[30]), 

    cobs_decode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK0[30]), 

    cobs_decode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK0[30]), 

    cobs_decode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> ProcessArray(BANK0[30]), 

    cobs_decode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK0[30]), 

    cobs_decode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> ReciveArray(BANK0[30]), 

    cobs_encode@dst_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_code_write_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_buf_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@dst_buf_end_ptr	PTR unsigned char  size(2) Largest target is 30
		 -> sendData@COBSArray(BANK0[30]), 

    cobs_encode@src_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK0[30]), 

    cobs_encode@src_end_ptr	PTR const unsigned char  size(2) Largest target is 30
		 -> sendData@SendArray(BANK0[30]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    sp__memset	PTR void  size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 106
		 -> output_buffer(BANK1[106]), input_buffer(BANK1[106]), 


Critical Paths under _main in COMRAM

    _sendData->_cobs_encode
    _Send_put->_UART_buff_get
    _UART_buff_put->_UART_buff_modulo_inc
    _receiveData->_cobs_decode
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _respondECU->_sendData
    _sendData->_cobs_encode
    _Send_put->_UART_buff_put
    _receiveData->_cobs_decode
    _Receive_get->_UART_buff_get

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11428
                         _ReadFaults
                            _SetTime
                              _Start
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   10702
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    6596
                              _Delay
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                            77    74      3    6398
                                             13 BANK0     77    74      3
                               _CRC8
                          _GetFaults
                           _Send_put
                        _cobs_encode
 ---------------------------------------------------------------------------------
 (4) _cobs_encode                                         23    15      8    1613
                                             26 COMRAM    10     2      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2913
                                              2 BANK0      1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1574
                                             32 COMRAM     3     0      3
                                              0 BANK0      2     2      0
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (4) _GetFaults                                            1     1      0      44
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     198
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         12    12      0    4106
                                             14 BANK0     12    12      0
                               _CRC8
                  _Receive_available
                        _Receive_get
                        _cobs_decode
 ---------------------------------------------------------------------------------
 (3) _cobs_decode                                         24    16      8    1783
                                             26 COMRAM    10     2      8
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1308
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1308
                                             32 COMRAM     4     2      2
                                              0 BANK0      1     1      0
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     850
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     176
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     176
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3     604
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (1) _Start                                                0     0      0     726
                           _ComStart
               _INTERRUPT_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ComStart                                             0     0      0     726
                 _EUSART1_Initialize
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   0     0      0     726
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (4) _UART_buff_init                                       2     0      2     726
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     552
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _SetTime                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadFaults                                           1     1      0       0
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1209
                                             12 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadFaults
   _SetTime
   _Start
     _ComStart
       _EUSART1_Initialize
         _UART_buff_init
           _memset
     _INTERRUPT_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
   _updateComms
     _receiveData
       _CRC8
       _Receive_available
         _UART_buff_size
       _Receive_get
         _UART_buff_get
           _UART_buff_modulo_inc
       _cobs_decode
     _respondECU
       _Delay
       _sendData
         _CRC8
         _GetFaults
         _Send_put
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _cobs_encode

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D4       6       82.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5A      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      44       1       72.3%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8       9        0.0%
DATA                 0      0     1B8      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Aug 11 16:24:17 2017

             i2_UART_buff_modulo_inc 0CE2             cobs_encode@dst_write_ptr 0068  
                                 l93 09FA                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                                  l342 0B6C  
                                l271 0C14                         __CFG_CPB$OFF 000000  
                                u500 0912                                  u430 0894  
                                u520 0924                                  u440 08A4  
                                u450 08B8                         __CFG_CPD$OFF 000000  
                                u515 0914                                  u540 0934  
                                u460 08D0                                  u436 0896  
                                u550 0944                                  u470 08EC  
                                u535 0926                                  u560 0958  
                                u480 0900                                  u448 08A6  
                                u546 0936                                  u458 08BA  
                                u468 08D2                                  u558 0946  
                                u478 08EE                                  u495 0902  
                                u568 095A                                  wreg 000FE8  
      i2UART_buff_modulo_inc@modulus 0003          _COBS_DECODE_DST_BUF_LEN_MAX 0040  
                       __CFG_LVP$OFF 000000                                 l2100 02E2  
                               l2104 02FC                                 l2050 05F0  
                               l2122 034A                                 l2210 04E6  
                               l2300 021C                                 l2044 0580  
                               l2038 0CD8                                 l2150 03C8  
                               l2142 039A                                 l2214 051A  
                               l2206 0498                                 l2064 09F4  
                               l2304 0230                                 l2240 00FC  
                               l2250 0126                                 l2242 0104  
                               l2234 00E8                                 l2218 0536  
                               l2164 0B56                                 l2172 0B72  
                               l2260 0166                                 l2316 07CA  
                               l2148 03BC                                 l2092 02C6  
                               l2158 0B40                                 l2174 0B78  
                               l2270 01A6                                 l2336 0888  
                               l2282 01D0                                 l2290 01E8  
                               l2098 02DA                                 l2268 01A2  
                               l1636 0DA2                                 l1750 0C00  
                               l2358 0DF4                                 l1584 0C96  
                               l1588 0CA6                                 _CRC8 0B3A  
                               u1230 0986                                 u1510 07B0  
                               u1567 0C06                                 u1577 07E8  
                               i2l93 0A8E                                 _main 0DEE  
                    _TMR0_StartTimer 0E3E                                 _time 002F  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0045                        __CFG_BORV$190 000000  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A0                        __CFG_IESO$OFF 000000  
                       ___param_bank 000000       i2UART_buff_modulo_inc@my_value 0005  
                              ?_CRC8 001B                      __end_of_SetTime 0E14  
            __end_of_TMR0_Initialize 0D2A                                ?_main 0001  
                              _T0CON 000FD5                       __CFG_DEBUG$OFF 000000  
                              i2l124 0D50                                i2l262 004E  
                              i2l264 005A                                i2l268 0064  
                              _TMR0H 000FD7                                _TMR0L 000FD6  
                              _Delay 0BF6                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 0C2A  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     __end_of_TMR0_ISR 0D96  
                              _Start 0A92                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                              pclath 000FFA                                tablat 000FF5  
                      ??_Receive_get 0025                        receiveData@CS 0073  
                              plusw2 000FDB                                status 000FD8  
                     __CFG_HFOFST$ON 000000                         ?_receiveData 0001  
                     __CFG_PBADEN$ON 000000                         __end_of_CRC8 0B84  
                   __end_of_ComStart 0E38                           _ReadFaults 088C  
                    __initialization 0AE8           __end_of_EUSART1_Initialize 0BC0  
                       __end_of_main 0E02                               ??_CRC8 001E  
        ?_INTERRUPT_InterruptManager 0001                   __size_of_GetFaults 0016  
                             ??_main 0025                        __activetblptr 000002  
                   __end_of_Send_put 0C8C            __size_ofi2_UART_buff_size 0016  
                             ?_Delay 001B                ?_EUSART1_Transmit_ISR 0001  
                             ?_Start 0001              __end_of_TMR0_StartTimer 0E42  
               __size_of_cobs_decode 01BE                 __size_of_cobs_encode 0198  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                      i2_UART_buff_get 0A00  
                             _RC1STA 000FAB                      i2_UART_buff_put 0682  
                     __CFG_WDTEN$OFF 000000                               Delay@x 001E  
                             i2l1942 070E                               i2l1936 06A2  
        UART_buff_modulo_inc@modulus 001D                               i2l1956 0A8A  
                             i2l1888 0D02                               i2l1992 0C54  
                             _RCREG1 000FAE                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TX1STA 000FAC  
                             _TXREG1 000FAD                            ??_SetTime 001B  
                     __CFG_XINST$OFF 000000                  __end_of_Receive_get 0E32  
                      _output_buffer 0100                            CRC8@tempI 0020  
                     __CFG_STVREN$ON 000000                     ?_TMR0_Initialize 0001  
                             _memset 0C8C                               clear_0 0B0E  
                             clear_1 0B1A                               clear_2 0B26  
                   __end_of_sendData 0560                         __pdataCOMRAM 0040  
             cobs_encode@dst_buf_len 001D               cobs_encode@dst_buf_ptr 001B  
                      Send_put@_data 0062                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
       __end_of_UART_buff_modulo_inc 0CE2        __size_of_INTERRUPT_Initialize 0018  
                         __accesstop 0060              __end_of__initialization 0B2C  
                      sendData@count 00B1                    __end_of_GetFaults 0DAC  
                      ___rparam_used 000001              ?i2_UART_buff_modulo_inc 0001  
                       ?_updateComms 0001                        __end_of_Delay 0C2A  
                        ?_ReadFaults 0001                       __pcstackCOMRAM 0001  
                      __end_of_Start 0AE8                            ?_TMR0_ISR 0001  
                 UART_buff_get@_this 0021                __end_of_UART_buff_get 0A00  
             ??_EUSART1_Transmit_ISR 000C                __end_of_UART_buff_put 0682  
                            ??_Delay 001D              __end_ofi2_UART_buff_get 0A92  
            __end_ofi2_UART_buff_put 079C          __end_of_EUSART1_Receive_ISR 0D66  
                            CRC8@crc 0021                              CRC8@len 001D  
                            ??_Start 0025                              CRC8@sum 001E  
                          ?_ComStart 0001                     ?_TMR0_StartTimer 0001  
             cobs_decode@dst_buf_len 001D                           __pbssBANK0 00BA  
                         __pbssBANK1 0100               cobs_decode@dst_buf_ptr 001B  
                    __CFG_PLLCFG$OFF 000000                          _Receive_get 0E24  
     __end_ofi2_UART_buff_modulo_inc 0D0C              __size_of_UART_buff_init 001E  
                        _ReciveArray 00E2              __size_of_UART_buff_size 0016  
                          ?_Send_put 0001                 __size_of_receiveData 00F0  
                 __CFG_CCP2MX$PORTC1 000000                           ??_TMR0_ISR 0001  
                 __CFG_CCP3MX$PORTB5 000000             cobs_decode@dst_write_ptr 0068  
         cobs_decode@remaining_bytes 0066                              ?_memset 001B  
                 UART_buff_put@_this 0021                      cobs_decode@F192 0036  
                   i2_UART_buff_size 0DD8          i2UART_buff_modulo_inc@value 0001  
                            _OSCCON2 000FD2                    _Receive_available 0DAC  
       UART_buff_modulo_inc@my_value 001F                    __CFG_PRICLKEN$OFF 000000  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                         ??_ComStart 0025                  sendData@whereToSend 00B0  
                __size_of_ReadFaults 00DC                   ?_Receive_available 001D  
                            _ByteLow 003E                  ??_Receive_available 001F  
                          ?_sendData 006D                      __CFG_PWRTEN$OFF 000000  
                         ??_Send_put 0025                              __Hparam 0000  
                            _SetTime 0E02                              __Lparam 0000  
             cobs_encode@src_end_ptr 0060                 _UART_buff_modulo_inc 0CB8  
                            __pcinit 0AE8                      __size_of_memset 002C  
                            __ramtop 0600                     i2UART_buff_get@c 000B  
                            __ptext0 0DEE                              __ptext1 0E14  
                            __ptext2 0BC0                              __ptext3 03FA  
                            __ptext4 0262                              __ptext5 0C5C  
                            __ptext6 0560                              __ptext7 0D96  
                            __ptext8 0BF6                              __ptext9 079C  
                          _T0CONbits 000FD5                     i2UART_buff_put@c 0009  
         cobs_encode@dst_buf_end_ptr 0063            __end_of_Receive_available 0DC2  
                cobs_encode@src_byte 0062                   _EUSART1_Initialize 0B84  
                   ?i2_UART_buff_get 0007                     ?i2_UART_buff_put 0007  
               end_of_initialization 0B2C                            Delay@wait 001B  
                ?_EUSART1_Initialize 0001                      cobs_encode@F180 0039  
                            memset@c 001D                              memset@n 001F  
                            memset@p 0021                        __Lmediumconst 0000  
                         ??_sendData 0070                      receiveData@Data 0079  
              ?_UART_buff_modulo_inc 001B                 __size_of_updateComms 0010  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                         _respondECU 0BC0                 ??_EUSART1_Initialize 0025  
                  cobs_decode@result 006B               cobs_decode@src_end_ptr 0060  
                          _PORTAbits 000F80                            _PORTCbits 000F82  
                          _PORTDbits 000F83                        ??_cobs_decode 0023  
                      ??_cobs_encode 0023                            _TRISAbits 000F92  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                     sendData@result 00B5                i2UART_buff_size@_this 0001  
                     _UART_buff_init 0D2A                       _UART_buff_size 0DC2  
                       ??_ReadFaults 001B                            _GetFaults 0D96  
               _timer0ReloadVal16bit 003C         __end_of_INTERRUPT_Initialize 0D7E  
                      __pidataCOMRAM 0E38                    __size_of_TMR0_ISR 0018  
                     __end_of_memset 0CB8                         receiveData@i 0077  
         __size_of_Receive_available 0016                  start_initialization 0AE8  
           __size_of_TMR0_Initialize 001E                   __end_of_ReadFaults 0968  
                __end_of_cobs_decode 0262                    __size_of_ComStart 0006  
             __end_of_UART_buff_init 0D48                       UART_buff_get@c 0060  
             __end_of_UART_buff_size 0DD8                  __end_of_cobs_encode 03FA  
                       ?_Receive_get 0001                       UART_buff_put@c 0023  
           __end_ofi2_UART_buff_size 0DEE               ??_UART_buff_modulo_inc 001F  
                         ?_GetFaults 0001                             CRC8@data 001B  
                  __size_of_Send_put 0030                          ?_respondECU 0001  
                           ??_memset 0021                          __pbssCOMRAM 0025  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 0060  
                UART_buff_init@_this 0023                      ?_UART_buff_init 0023  
                    ?_UART_buff_size 001B         __size_of_EUSART1_Receive_ISR 001E  
                      ??_receiveData 006E                           sendData@CS 00B4  
              cobs_encode@search_len 0065             __size_of_TMR0_StartTimer 0004  
             __size_of_UART_buff_get 0098               __size_of_UART_buff_put 0122  
                           ?_SetTime 0001                    __size_of_sendData 0166  
                       GetFaults@num 001B                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 000D                 i2UART_buff_get@_this 0007  
                           _BAUD1CON 000FB8                       __size_of_Delay 0034  
                        _cobs_decode 00A4                          _cobs_encode 0262  
             sendData@DataTableIndex 006F                       __size_of_Start 0056  
        _COBS_ENCODE_DST_BUF_LEN_MAX 0042                  __size_of_respondECU 0036  
               _INTERRUPT_Initialize 0D66                   cobs_encode@src_len 0021  
                 cobs_encode@src_ptr 001F                         _receiveArray 00BA  
                  ??_TMR0_Initialize 001B                             _LATAbits 000F89  
                           _LATDbits 000F8C                  UART_buff_size@_this 001B  
                           _IPR1bits 000F9F                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             i2u110_40 0A1E  
                           i2u113_40 0C44  __size_of_INTERRUPT_InterruptManager 0098  
                           _PIR1bits 000F9E                          ??_GetFaults 001B  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                __end_of_receiveData 088C                             _TMR0_ISR 0D7E  
                       _input_buffer 016A           cobs_decode@dst_buf_end_ptr 0062  
               i2UART_buff_put@_this 0007                        _UART_buff_get 0968  
                      _UART_buff_put 0560                    sendData@COBSArray 0074  
      cobs_encode@dst_code_write_ptr 0066                             _ComStart 0E32  
           ??i2_UART_buff_modulo_inc 0005                            copy_data0 0AFC  
              ?_INTERRUPT_Initialize 0001                   sendData@ComandByte 006D  
                           _ByteHigh 003F             __size_ofi2_UART_buff_get 0092  
           __size_ofi2_UART_buff_put 011A                        ??_updateComms 0025  
               __size_of_Receive_get 000E                             __Hrparam 0000  
                           _Send_put 0C5C                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                     __size_of_SetTime 0012  
                  __CFG_P2BMX$PORTD2 000000                    ??_TMR0_StartTimer 001B  
        __size_of_EUSART1_Initialize 003C                       ?_UART_buff_get 0021  
                     ?_UART_buff_put 0021                          CRC8@extract 001F  
                          sendData@i 00B8                             __ptext10 00A4  
                           __ptext11 0E24                             __ptext20 0D66  
                           __ptext12 0968                             __ptext21 0E32  
                           __ptext13 0CB8                             __ptext30 0DD8  
                           __ptext22 0B84                             __ptext14 0DAC  
                           __ptext31 0A00                             __ptext23 0D2A  
                           __ptext15 0DC2                             __ptext32 0D48  
                           __ptext24 0C8C                             __ptext16 0B3A  
                           __ptext33 0682                             __ptext25 0E02  
                           __ptext17 0A92                             __ptext34 0CE2  
                           __ptext26 088C                             __ptext18 0D0C  
                           __ptext19 0E3E                             __ptext28 0D7E  
                           __ptext29 0C2A                        __size_of_CRC8 004A  
            EUSART1_Receive_ISR@data 000C                        __size_of_main 0014  
                  cobs_encode@result 006A                          _receiveData 079C  
                     _Transmit_stall 0044                             _sendData 03FA  
                  ?i2_UART_buff_size 0001                    sendData@DataLenth 00B3  
                  sendData@DataTable 006E                           _RC1STAbits 000FAB  
                       ??_respondECU 0025                         _ProcessArray 00C4  
                 ??i2_UART_buff_size 0003                             int$flags 0045  
                __end_of_updateComms 0E24   __end_of_INTERRUPT_InterruptManager 00A0  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0D48  
                  receiveData@result 0074                           _INTCONbits 000FF2  
          UART_buff_modulo_inc@value 001B                     ??_UART_buff_init 0025  
                   ??_UART_buff_size 001D               ??_INTERRUPT_Initialize 001B  
                           memset@p1 001B      __size_ofi2_UART_buff_modulo_inc 002A  
                           intlevel2 0000                  cobs_decode@len_code 006A  
                 __end_of_respondECU 0BF6                 ?_EUSART1_Receive_ISR 0001  
                       cobs_decode@i 0065         __end_of_EUSART1_Transmit_ISR 0C5C  
                  sendData@SendArray 0092                    ??i2_UART_buff_get 0009  
                  ??i2_UART_buff_put 000A                  cobs_decode@src_byte 0064  
      __size_of_UART_buff_modulo_inc 002A                    _DataTableArrayOne 0025  
                    ??_UART_buff_get 0023                    _DataTableArrayTwo 0033  
                    ??_UART_buff_put 0060                      _TMR0_Initialize 0D0C  
                       ?_cobs_decode 001B                         ?_cobs_encode 001B  
                  __CFG_T3CMX$PORTC0 000000                   cobs_decode@src_len 0021  
                 cobs_decode@src_ptr 001F                ??_EUSART1_Receive_ISR 000C  
                  __CFG_FOSC$INTIO67 000000                          _updateComms 0E14  
